/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:41:27.042+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_03

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_03 > h2o_rf_03.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_03.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_03", algorithm="drf")
public class h2o_rf_03 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 13; }
  public int nclasses() { return 5; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_03.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X5 */ null,
    /* X12 */ null,
    /* X15 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X23 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* Label */ h2o_rf_03_ColInfo_13.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.27956989247311825,0.13978494623655913,0.15053763440860216,0.27956989247311825,0.15053763440860216};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.27956989247311825,0.13978494623655913,0.15053763440860216,0.27956989247311825,0.15053763440860216};

  public h2o_rf_03() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-4170571438851163152L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_03_Forest_0.score0(data,preds);
    h2o_rf_03_Forest_1.score0(data,preds);
    h2o_rf_03_Forest_2.score0(data,preds);
    h2o_rf_03_Forest_3.score0(data,preds);
    h2o_rf_03_Forest_4.score0(data,preds);
    h2o_rf_03_Forest_5.score0(data,preds);
    h2o_rf_03_Forest_6.score0(data,preds);
    h2o_rf_03_Forest_7.score0(data,preds);
    h2o_rf_03_Forest_8.score0(data,preds);
    h2o_rf_03_Forest_9.score0(data,preds);
    h2o_rf_03_Forest_10.score0(data,preds);
    h2o_rf_03_Forest_11.score0(data,preds);
    h2o_rf_03_Forest_12.score0(data,preds);
    h2o_rf_03_Forest_13.score0(data,preds);
    h2o_rf_03_Forest_14.score0(data,preds);
    h2o_rf_03_Forest_15.score0(data,preds);
    h2o_rf_03_Forest_16.score0(data,preds);
    h2o_rf_03_Forest_17.score0(data,preds);
    h2o_rf_03_Forest_18.score0(data,preds);
    h2o_rf_03_Forest_19.score0(data,preds);
    h2o_rf_03_Forest_20.score0(data,preds);
    h2o_rf_03_Forest_21.score0(data,preds);
    h2o_rf_03_Forest_22.score0(data,preds);
    h2o_rf_03_Forest_23.score0(data,preds);
    h2o_rf_03_Forest_24.score0(data,preds);
    h2o_rf_03_Forest_25.score0(data,preds);
    h2o_rf_03_Forest_26.score0(data,preds);
    h2o_rf_03_Forest_27.score0(data,preds);
    h2o_rf_03_Forest_28.score0(data,preds);
    h2o_rf_03_Forest_29.score0(data,preds);
    h2o_rf_03_Forest_30.score0(data,preds);
    h2o_rf_03_Forest_31.score0(data,preds);
    h2o_rf_03_Forest_32.score0(data,preds);
    h2o_rf_03_Forest_33.score0(data,preds);
    h2o_rf_03_Forest_34.score0(data,preds);
    h2o_rf_03_Forest_35.score0(data,preds);
    h2o_rf_03_Forest_36.score0(data,preds);
    h2o_rf_03_Forest_37.score0(data,preds);
    h2o_rf_03_Forest_38.score0(data,preds);
    h2o_rf_03_Forest_39.score0(data,preds);
    h2o_rf_03_Forest_40.score0(data,preds);
    h2o_rf_03_Forest_41.score0(data,preds);
    h2o_rf_03_Forest_42.score0(data,preds);
    h2o_rf_03_Forest_43.score0(data,preds);
    h2o_rf_03_Forest_44.score0(data,preds);
    h2o_rf_03_Forest_45.score0(data,preds);
    h2o_rf_03_Forest_46.score0(data,preds);
    h2o_rf_03_Forest_47.score0(data,preds);
    h2o_rf_03_Forest_48.score0(data,preds);
    h2o_rf_03_Forest_49.score0(data,preds);
    h2o_rf_03_Forest_50.score0(data,preds);
    h2o_rf_03_Forest_51.score0(data,preds);
    h2o_rf_03_Forest_52.score0(data,preds);
    h2o_rf_03_Forest_53.score0(data,preds);
    h2o_rf_03_Forest_54.score0(data,preds);
    h2o_rf_03_Forest_55.score0(data,preds);
    h2o_rf_03_Forest_56.score0(data,preds);
    h2o_rf_03_Forest_57.score0(data,preds);
    h2o_rf_03_Forest_58.score0(data,preds);
    h2o_rf_03_Forest_59.score0(data,preds);
    h2o_rf_03_Forest_60.score0(data,preds);
    h2o_rf_03_Forest_61.score0(data,preds);
    h2o_rf_03_Forest_62.score0(data,preds);
    h2o_rf_03_Forest_63.score0(data,preds);
    h2o_rf_03_Forest_64.score0(data,preds);
    h2o_rf_03_Forest_65.score0(data,preds);
    h2o_rf_03_Forest_66.score0(data,preds);
    h2o_rf_03_Forest_67.score0(data,preds);
    h2o_rf_03_Forest_68.score0(data,preds);
    h2o_rf_03_Forest_69.score0(data,preds);
    h2o_rf_03_Forest_70.score0(data,preds);
    h2o_rf_03_Forest_71.score0(data,preds);
    h2o_rf_03_Forest_72.score0(data,preds);
    h2o_rf_03_Forest_73.score0(data,preds);
    h2o_rf_03_Forest_74.score0(data,preds);
    h2o_rf_03_Forest_75.score0(data,preds);
    h2o_rf_03_Forest_76.score0(data,preds);
    h2o_rf_03_Forest_77.score0(data,preds);
    h2o_rf_03_Forest_78.score0(data,preds);
    h2o_rf_03_Forest_79.score0(data,preds);
    h2o_rf_03_Forest_80.score0(data,preds);
    h2o_rf_03_Forest_81.score0(data,preds);
    h2o_rf_03_Forest_82.score0(data,preds);
    h2o_rf_03_Forest_83.score0(data,preds);
    h2o_rf_03_Forest_84.score0(data,preds);
    h2o_rf_03_Forest_85.score0(data,preds);
    h2o_rf_03_Forest_86.score0(data,preds);
    h2o_rf_03_Forest_87.score0(data,preds);
    h2o_rf_03_Forest_88.score0(data,preds);
    h2o_rf_03_Forest_89.score0(data,preds);
    h2o_rf_03_Forest_90.score0(data,preds);
    h2o_rf_03_Forest_91.score0(data,preds);
    h2o_rf_03_Forest_92.score0(data,preds);
    h2o_rf_03_Forest_93.score0(data,preds);
    h2o_rf_03_Forest_94.score0(data,preds);
    h2o_rf_03_Forest_95.score0(data,preds);
    h2o_rf_03_Forest_96.score0(data,preds);
    h2o_rf_03_Forest_97.score0(data,preds);
    h2o_rf_03_Forest_98.score0(data,preds);
    h2o_rf_03_Forest_99.score0(data,preds);
    h2o_rf_03_Forest_100.score0(data,preds);
    h2o_rf_03_Forest_101.score0(data,preds);
    h2o_rf_03_Forest_102.score0(data,preds);
    h2o_rf_03_Forest_103.score0(data,preds);
    h2o_rf_03_Forest_104.score0(data,preds);
    h2o_rf_03_Forest_105.score0(data,preds);
    h2o_rf_03_Forest_106.score0(data,preds);
    h2o_rf_03_Forest_107.score0(data,preds);
    h2o_rf_03_Forest_108.score0(data,preds);
    h2o_rf_03_Forest_109.score0(data,preds);
    h2o_rf_03_Forest_110.score0(data,preds);
    h2o_rf_03_Forest_111.score0(data,preds);
    h2o_rf_03_Forest_112.score0(data,preds);
    h2o_rf_03_Forest_113.score0(data,preds);
    h2o_rf_03_Forest_114.score0(data,preds);
    h2o_rf_03_Forest_115.score0(data,preds);
    h2o_rf_03_Forest_116.score0(data,preds);
    h2o_rf_03_Forest_117.score0(data,preds);
    h2o_rf_03_Forest_118.score0(data,preds);
    h2o_rf_03_Forest_119.score0(data,preds);
    h2o_rf_03_Forest_120.score0(data,preds);
    h2o_rf_03_Forest_121.score0(data,preds);
    h2o_rf_03_Forest_122.score0(data,preds);
    h2o_rf_03_Forest_123.score0(data,preds);
    h2o_rf_03_Forest_124.score0(data,preds);
    h2o_rf_03_Forest_125.score0(data,preds);
    h2o_rf_03_Forest_126.score0(data,preds);
    h2o_rf_03_Forest_127.score0(data,preds);
    h2o_rf_03_Forest_128.score0(data,preds);
    h2o_rf_03_Forest_129.score0(data,preds);
    h2o_rf_03_Forest_130.score0(data,preds);
    h2o_rf_03_Forest_131.score0(data,preds);
    h2o_rf_03_Forest_132.score0(data,preds);
    h2o_rf_03_Forest_133.score0(data,preds);
    h2o_rf_03_Forest_134.score0(data,preds);
    h2o_rf_03_Forest_135.score0(data,preds);
    h2o_rf_03_Forest_136.score0(data,preds);
    h2o_rf_03_Forest_137.score0(data,preds);
    h2o_rf_03_Forest_138.score0(data,preds);
    h2o_rf_03_Forest_139.score0(data,preds);
    h2o_rf_03_Forest_140.score0(data,preds);
    h2o_rf_03_Forest_141.score0(data,preds);
    h2o_rf_03_Forest_142.score0(data,preds);
    h2o_rf_03_Forest_143.score0(data,preds);
    h2o_rf_03_Forest_144.score0(data,preds);
    h2o_rf_03_Forest_145.score0(data,preds);
    h2o_rf_03_Forest_146.score0(data,preds);
    h2o_rf_03_Forest_147.score0(data,preds);
    h2o_rf_03_Forest_148.score0(data,preds);
    h2o_rf_03_Forest_149.score0(data,preds);
    h2o_rf_03_Forest_150.score0(data,preds);
    h2o_rf_03_Forest_151.score0(data,preds);
    h2o_rf_03_Forest_152.score0(data,preds);
    h2o_rf_03_Forest_153.score0(data,preds);
    h2o_rf_03_Forest_154.score0(data,preds);
    h2o_rf_03_Forest_155.score0(data,preds);
    h2o_rf_03_Forest_156.score0(data,preds);
    h2o_rf_03_Forest_157.score0(data,preds);
    h2o_rf_03_Forest_158.score0(data,preds);
    h2o_rf_03_Forest_159.score0(data,preds);
    h2o_rf_03_Forest_160.score0(data,preds);
    h2o_rf_03_Forest_161.score0(data,preds);
    h2o_rf_03_Forest_162.score0(data,preds);
    h2o_rf_03_Forest_163.score0(data,preds);
    h2o_rf_03_Forest_164.score0(data,preds);
    h2o_rf_03_Forest_165.score0(data,preds);
    h2o_rf_03_Forest_166.score0(data,preds);
    h2o_rf_03_Forest_167.score0(data,preds);
    h2o_rf_03_Forest_168.score0(data,preds);
    h2o_rf_03_Forest_169.score0(data,preds);
    h2o_rf_03_Forest_170.score0(data,preds);
    h2o_rf_03_Forest_171.score0(data,preds);
    h2o_rf_03_Forest_172.score0(data,preds);
    h2o_rf_03_Forest_173.score0(data,preds);
    h2o_rf_03_Forest_174.score0(data,preds);
    h2o_rf_03_Forest_175.score0(data,preds);
    h2o_rf_03_Forest_176.score0(data,preds);
    h2o_rf_03_Forest_177.score0(data,preds);
    h2o_rf_03_Forest_178.score0(data,preds);
    h2o_rf_03_Forest_179.score0(data,preds);
    h2o_rf_03_Forest_180.score0(data,preds);
    h2o_rf_03_Forest_181.score0(data,preds);
    h2o_rf_03_Forest_182.score0(data,preds);
    h2o_rf_03_Forest_183.score0(data,preds);
    h2o_rf_03_Forest_184.score0(data,preds);
    h2o_rf_03_Forest_185.score0(data,preds);
    h2o_rf_03_Forest_186.score0(data,preds);
    h2o_rf_03_Forest_187.score0(data,preds);
    h2o_rf_03_Forest_188.score0(data,preds);
    h2o_rf_03_Forest_189.score0(data,preds);
    h2o_rf_03_Forest_190.score0(data,preds);
    h2o_rf_03_Forest_191.score0(data,preds);
    h2o_rf_03_Forest_192.score0(data,preds);
    h2o_rf_03_Forest_193.score0(data,preds);
    h2o_rf_03_Forest_194.score0(data,preds);
    h2o_rf_03_Forest_195.score0(data,preds);
    h2o_rf_03_Forest_196.score0(data,preds);
    h2o_rf_03_Forest_197.score0(data,preds);
    h2o_rf_03_Forest_198.score0(data,preds);
    h2o_rf_03_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_03 implements java.io.Serializable {
  public static final String[] VALUES = new String[13];
  static {
    NamesHolder_h2o_rf_03_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_03_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X5";
      sa[1] = "X12";
      sa[2] = "X15";
      sa[3] = "X17";
      sa[4] = "X18";
      sa[5] = "X19";
      sa[6] = "X20";
      sa[7] = "X21";
      sa[8] = "X23";
      sa[9] = "X27";
      sa[10] = "X28";
      sa[11] = "X34";
      sa[12] = "X35";
    }
  }
}
// The class representing column Label
class h2o_rf_03_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_rf_03_ColInfo_13_0.fill(VALUES);
  }
  static final class h2o_rf_03_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}

class h2o_rf_03_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_0_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06484889f ? 
                 (data[6 /* X20 */] <-0.38677096f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.016470527f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5076774f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.13187058f ? 
             (data[0 /* X5 */] <0.07878318f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[12 /* X35 */] <-0.24986508f ? 
             (data[6 /* X20 */] <-0.39302474f ? 
                 (data[11 /* X34 */] <-0.105771095f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2649659f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[9 /* X27 */] <-0.42757142f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004090309f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.021176025f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011544141f ? 
                 (data[3 /* X17 */] <-0.606144f ? 
                     (data[0 /* X5 */] <0.11587143f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <0.093711965f ? 
                         (data[1 /* X12 */] <-0.38929427f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.27703923f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18023323f ? 
                 (data[2 /* X15 */] <0.10494734f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.013401085f ? 
            1.0f : 
             (data[0 /* X5 */] <0.12509733f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.31229672f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3166634f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_1_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[3 /* X17 */] <-0.33570066f ? 
            1.0f : 
             (data[10 /* X28 */] <0.023735292f ? 
                 (data[7 /* X21 */] <0.17178585f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.10205764f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5377759f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X17 */] <-0.33570066f ? 
            0.0f : 
             (data[0 /* X5 */] <0.1173783f ? 
                 (data[7 /* X21 */] <0.22545187f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[4 /* X18 */] <-0.14724325f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.042719185f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16476905f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1488719f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17971377f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.010650877f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14724325f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.23804016f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15156256f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[9 /* X27 */] <0.08447273f ? 
             (data[1 /* X12 */] <-0.40235275f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.09692753f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44302458f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_2_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[6 /* X20 */] <-0.39406702f ? 
             (data[7 /* X21 */] <0.09494584f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <-0.051357023f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
        0.029850746f : 
         (data[6 /* X20 */] <-0.39406702f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_03_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18610634f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24277624f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09789701f ? 
            0.0f : 
             (data[5 /* X19 */] <0.058073815f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.034474667f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14783707f ? 
                     (data[5 /* X19 */] <0.29834586f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.2866309f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.272602f ? 
             (data[7 /* X21 */] <0.09128679f ? 
                 (data[5 /* X19 */] <0.09851565f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <0.38415176f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_3_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.053420663f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20080888f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.28616273f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.18415718f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.05123395f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.010723084f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.4013631f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.32936642f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[0 /* X5 */] <0.125373f ? 
             (data[3 /* X17 */] <-0.46733f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10719352f ? 
             (data[5 /* X19 */] <-0.09417778f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14007409f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <0.21850961f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2294904f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28507313f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
                     (data[6 /* X20 */] <-0.44513956f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18050891f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.062018152f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.02714771f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5507187f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_4_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19038399f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23886837f ? 
                 (data[9 /* X27 */] <-0.052106716f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.086915866f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.20348717f ? 
                 (data[10 /* X28 */] <-0.14283168f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19038399f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23886837f ? 
                 (data[6 /* X20 */] <-0.41178608f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0653651f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.115525275f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.20942275f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28996012f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24773915f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[9 /* X27 */] <-0.27351484f ? 
             (data[6 /* X20 */] <-0.030305482f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.11827637f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.35079548f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.15030989f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.35079548f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3080479f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_03_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_5_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.45410028f ? 
             (data[11 /* X34 */] <-0.6165357f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23155028f ? 
             (data[2 /* X15 */] <0.13007861f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0696848f ? 
                     (data[6 /* X20 */] <-0.39510933f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24687982f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08576727f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.4357589f ? 
             (data[11 /* X34 */] <-0.10081317f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17117593f ? 
             (data[2 /* X15 */] <0.12994643f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.4409704f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.38806933f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.01972476f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.6994232f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23947822f ? 
             (data[11 /* X34 */] <-0.46319222f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.046824474f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.07276741f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011544141f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23074f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[9 /* X27 */] <0.035706617f ? 
             (data[0 /* X5 */] <0.0981755f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.14739218f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.13286538f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[7 /* X21 */] <0.13793965f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_6_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.33570066f ? 
            1.0f : 
             (data[5 /* X19 */] <0.22697794f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.058197424f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11710262f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38612005f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13691348f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[12 /* X35 */] <-0.97655827f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.026442187f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53639776f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[0 /* X5 */] <0.090361714f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23337993f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.14966942f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13519098f ? 
             (data[11 /* X34 */] <-0.4338954f ? 
                 (data[12 /* X35 */] <0.49574095f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2707139f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16936839f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.11993899f ? 
                 (data[2 /* X15 */] <0.09495058f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.17965843f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (data[2 /* X15 */] <0.14493442f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0059195803f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.033009265f ? 
                 (data[2 /* X15 */] <0.114944115f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <1.7988282E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_7_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18311326f ? 
             (data[12 /* X35 */] <-0.45410028f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.31769076f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13760918f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19506288f ? 
                     (data[8 /* X23 */] <0.11060466f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.0785075f ? 
             (data[3 /* X17 */] <-0.283332f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90854174f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.034250107f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.34211892f ? 
                 (data[12 /* X35 */] <-0.25177383f ? 
                     (data[3 /* X17 */] <-0.3144701f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3730795f ? 
                             (data[5 /* X19 */] <0.06315973f ? 
                                1.0f : 
                                0.0f) : 
                             (data[7 /* X21 */] <0.14272286f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21074647f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06205477f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1382699f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X5 */] <0.10717817f ? 
             (data[12 /* X35 */] <-0.7518638f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15116024f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.18444866f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[7 /* X21 */] <0.09128679f ? 
            1.0f : 
             (data[2 /* X15 */] <0.09578364f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.28383562f ? 
                     (data[3 /* X17 */] <-0.5182833f ? 
                         (data[7 /* X21 */] <0.16868982f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.10717817f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15669659f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0025726364f ? 
                 (data[12 /* X35 */] <-0.1601543f ? 
                     (data[4 /* X18 */] <-0.2881342f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.044897635f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
        0.04411765f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.146876f ? 
             (data[2 /* X15 */] <0.15659732f ? 
                 (data[4 /* X18 */] <-0.0027729617f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22524819f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20184694f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_8_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
         (data[12 /* X35 */] <-0.88738436f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.119856924f ? 
                 (data[8 /* X23 */] <0.12886906f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.062534355f ? 
             (data[10 /* X28 */] <-0.06529188f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1499328f ? 
                    1.0f : 
                     (data[12 /* X35 */] <0.114704296f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X12 */] <-0.35935077f ? 
                     (data[0 /* X5 */] <0.16748372f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (data[6 /* X20 */] <-0.36175582f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18048586f ? 
                     (data[7 /* X21 */] <0.08610084f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.6666667f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14467058f ? 
             (data[6 /* X20 */] <0.013470979f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15428041f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20907652f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.064341016f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.02240033f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16812679f ? 
                     (data[10 /* X28 */] <0.006504227f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.062534355f ? 
             (data[10 /* X28 */] <-0.16867828f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[12 /* X35 */] <-0.08953091f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28507313f ? 
                 (data[8 /* X23 */] <0.11695749f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11513353f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.10131054f ? 
                    0.0f : 
                    1.0f))) : 
        0.75f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_9_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18825373f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0049831504f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12954307f ? 
                     (data[11 /* X34 */] <-0.50961643f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[4 /* X18 */] <-0.40168002f ? 
             (data[1 /* X12 */] <-0.3294073f ? 
                 (data[4 /* X18 */] <-0.517017f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X21 */] <0.069942355f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17583172f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.2058666f ? 
                         (data[7 /* X21 */] <0.11893061f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.39510933f ? 
             (data[3 /* X17 */] <-0.22333637f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08226256f ? 
            0.0f : 
             (data[10 /* X28 */] <0.250611f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.20214802f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5826282f ? 
             (data[3 /* X17 */] <-0.44327426f ? 
                 (data[12 /* X35 */] <-0.04562988f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.39462206f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[3 /* X17 */] <-0.33129853f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.22222567f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19110085f ? 
                             (data[11 /* X34 */] <-0.5384625f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.10194025f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17284206f ? 
             (data[10 /* X28 */] <0.31953526f ? 
                 (data[0 /* X5 */] <0.11228022f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.34422147f ? 
             (data[1 /* X12 */] <-0.404266f ? 
                 (data[3 /* X17 */] <0.086969554f ? 
                     (data[4 /* X18 */] <-0.24792175f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_10_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27625513f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.36954063f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1361245f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[3 /* X17 */] <-0.27625513f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.36954063f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1361245f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05687288f ? 
             (data[9 /* X27 */] <-0.42757142f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.014097276f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.17056616f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08710641f ? 
            0.0f : 
             (data[4 /* X18 */] <0.23728928f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09133248f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.097772576f ? 
                 (data[4 /* X18 */] <-0.48738503f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.16568743f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27931443f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06019909f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.48690838f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05687288f ? 
             (data[0 /* X5 */] <0.13943267f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.42846283f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02805971f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.29090852f ? 
                 (data[7 /* X21 */] <0.17910394f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_11_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23316038f ? 
             (data[5 /* X19 */] <0.06521061f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17859465f ? 
                    1.0f : 
                     (data[3 /* X17 */] <0.005403377f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3768506f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.25489885f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X17 */] <-0.22388647f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23197275f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.18206091f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.10146682f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53833f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.30314717f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.16316679f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2624389f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.1799231f ? 
                            0.0f : 
                            1.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[1 /* X12 */] <-0.2652427f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.08704099f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.15493119f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08698191f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06891707f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16354541f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09788231f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X5 */] <0.04728115f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[1 /* X12 */] <-0.32726848f ? 
             (data[5 /* X19 */] <-0.22264007f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.100837536f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.44499746f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.23557852f ? 
                     (data[5 /* X19 */] <0.30885828f ? 
                         (data[4 /* X18 */] <-0.08459409f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06740182f ? 
            0.0f : 
             (data[8 /* X23 */] <0.1177516f ? 
                 (data[3 /* X17 */] <-0.104995444f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.9285714f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_12_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.13534068f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.26586452f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20907362f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.22836812f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47105855f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.26776594f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4199394f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90854174f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0045799036f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.0241427f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <-0.16197732f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27294177f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.11378108f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03207713f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.39795753f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4243576f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.124107815f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26180404f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_13_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[9 /* X27 */] <0.07117288f ? 
            0.0f : 
             (data[0 /* X5 */] <0.116826944f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38920313f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.022725f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17178585f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31196374f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
             (data[12 /* X35 */] <-0.24795635f ? 
                 (data[5 /* X19 */] <0.22222008f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.29545718f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[0 /* X5 */] <0.111864716f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[9 /* X27 */] <-0.36883044f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <1.7988282E-4f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11462151f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1936729f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[1 /* X12 */] <-0.29411677f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3482537f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34357634f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15707615f ? 
                 (data[12 /* X35 */] <0.29794335f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16997324f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.069436036f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (data[9 /* X27 */] <-0.122783236f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27220494f ? 
                 (data[5 /* X19 */] <-0.058493815f ? 
                     (data[2 /* X15 */] <0.116610244f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5507187f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_14_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[10 /* X28 */] <-0.18590935f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[12 /* X35 */] <-0.45410028f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46191752f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07122362f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25489885f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20107809f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.17225337f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53833f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.84550005f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.28004542f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20963337f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07542849f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05991595f ? 
                 (data[6 /* X20 */] <0.005132606f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.18580478f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6141835f ? 
                 (data[6 /* X20 */] <0.030147726f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.605228f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15669659f ? 
                 (data[6 /* X20 */] <-0.12411218f ? 
                     (data[9 /* X27 */] <0.27288723f ? 
                         (data[10 /* X28 */] <-0.14921014f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06157438f ? 
                     (data[1 /* X12 */] <-0.6288421f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41045797f ? 
             (data[5 /* X19 */] <0.1936729f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25348285f ? 
             (data[9 /* X27 */] <-0.030792622f ? 
                 (data[11 /* X34 */] <-0.50961643f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_15_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19038399f ? 
             (data[6 /* X20 */] <-0.4055323f ? 
                 (data[7 /* X21 */] <0.15227091f ? 
                     (data[5 /* X19 */] <0.087744825f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <0.20417136f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.05093266f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19038399f ? 
             (data[6 /* X20 */] <-0.43471658f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47238496f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06205477f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <0.010344089f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1518981f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27178955f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6153352f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.11348329f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[2 /* X15 */] <0.09578364f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27423915f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06394111f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3974497f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.20124057f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2567199f ? 
             (data[6 /* X20 */] <-0.18281871f ? 
                 (data[8 /* X23 */] <0.14003867f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[1 /* X12 */] <-0.47172862f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20827952f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <-0.12167492f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24694544f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_16_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24936312f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17415057f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.3775755f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
        0.029850746f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24936312f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.3775755f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18717575f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.032201633f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06960492f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.008097095f ? 
                 (data[9 /* X27 */] <-0.081775375f ? 
                     (data[3 /* X17 */] <0.059508894f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22697794f ? 
             (data[3 /* X17 */] <-0.073857315f ? 
                 (data[4 /* X18 */] <0.010775377f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (data[5 /* X19 */] <-0.056114886f ? 
             (data[4 /* X18 */] <-0.31746846f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.12535742f ? 
             (data[10 /* X28 */] <0.36261293f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.42137656f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_17_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41027838f ? 
            0.0f : 
             (data[7 /* X21 */] <0.1608087f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.39406702f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.016131941f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.052453738f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.09293583f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.43471658f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.39406702f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.091123834f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17200899f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05724744f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.040570695f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16075915f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[8 /* X23 */] <0.14157474f ? 
             (data[6 /* X20 */] <-0.063658975f ? 
                 (data[4 /* X18 */] <-0.09099933f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.005290361f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17692508f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18373993f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[2 /* X15 */] <0.09953243f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2886373f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.053503387f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.50046146f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.49204293f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_18_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.052317943f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2875781f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23155028f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.3909669f ? 
                 (data[6 /* X20 */] <-0.3772271f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[4 /* X18 */] <-0.52354187f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16326182f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.24189171f ? 
             (data[4 /* X18 */] <-0.51416785f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[0 /* X5 */] <0.10056186f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17971377f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008259496f ? 
            0.0f : 
             (data[4 /* X18 */] <0.10719352f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21797915f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.49846813f ? 
                 (data[2 /* X15 */] <0.12827313f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[4 /* X18 */] <-0.14858238f ? 
             (data[2 /* X15 */] <0.081774905f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27821434f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1780278f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24639653f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.54575473f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.47215784f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_19_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.106488965f ? 
         (data[4 /* X18 */] <-0.315975f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
                 (data[12 /* X35 */] <-0.618252f ? 
                     (data[5 /* X19 */] <0.43156603f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47438678f ? 
             (data[12 /* X35 */] <-0.087622166f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.119856924f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3015965f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.032776743f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3294073f ? 
                     (data[6 /* X20 */] <-0.51184654f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3530613f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.10336309f ? 
             (data[10 /* X28 */] <-0.030158896f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.09417778f ? 
             (data[1 /* X12 */] <-0.4256542f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08226256f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16158383f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.101802416f ? 
         (data[11 /* X34 */] <-0.59074605f ? 
             (data[3 /* X17 */] <-0.46733f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39945045f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3857454f ? 
                 (data[10 /* X28 */] <-0.09113848f ? 
                     (data[8 /* X23 */] <0.15030989f ? 
                         (data[5 /* X19 */] <0.112256356f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.12877595f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44578528f ? 
                 (data[12 /* X35 */] <0.5724462f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4519242f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.269278f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04807586f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.05665804f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16159569f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <-0.015673053f ? 
             (data[6 /* X20 */] <-0.2471032f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_20_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[9 /* X27 */] <0.07117288f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.44918123f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <6.224999E-5f ? 
                     (data[11 /* X34 */] <0.15384375f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19338433f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.56590974f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[9 /* X27 */] <0.07449784f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05563831f ? 
                 (data[9 /* X27 */] <0.22579853f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.36945117f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23786105f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
         (data[9 /* X27 */] <-0.18817416f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.032201633f ? 
                 (data[11 /* X34 */] <-0.43750116f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.40838188f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18396752f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.40865508f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X27 */] <0.13323884f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[5 /* X19 */] <0.14133641f ? 
            0.0f : 
             (data[9 /* X27 */] <0.19174974f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.45913574f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.090733476f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.017991604f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[1 /* X12 */] <-0.34544843f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20312665f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[9 /* X27 */] <-0.11613332f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.14846078f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.272602f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24307123f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0820952f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_21_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[6 /* X20 */] <-0.20645362f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30170357f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.016470527f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21569441f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.25374553f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.2111748f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10726422f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.18398267f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16698608f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.22834185f ? 
                 (data[1 /* X12 */] <-0.15830168f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.15406895f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_03_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.4357589f ? 
            1.0f : 
             (data[8 /* X23 */] <0.11111939f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12706283f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.030303031f : 
         (data[4 /* X18 */] <-0.09233847f ? 
             (data[5 /* X19 */] <-0.08704099f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.046804354f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053236008f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18920544f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.54575473f ? 
                     (data[2 /* X15 */] <0.104129784f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.26771227f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.1581254f ? 
                                 (data[7 /* X21 */] <0.08010937f ? 
                                    0.0f : 
                                     (data[8 /* X23 */] <0.122001626f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14935713f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15826343f ? 
             (data[6 /* X20 */] <-0.07750567f ? 
                0.0f : 
                 (data[10 /* X28 */] <7.605382E-4f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.31342122f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12509733f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.1809851f ? 
                     (data[1 /* X12 */] <-0.42351538f ? 
                         (data[4 /* X18 */] <-0.31630388f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_03_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_22_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
             (data[1 /* X12 */] <-0.41068247f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.14609428f ? 
                     (data[3 /* X17 */] <-0.34843898f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48271304f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.46393925f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
        0.8f : 
        0.012820513f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_03_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.105854385f ? 
             (data[0 /* X5 */] <0.08429676f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18991986f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <-0.15603f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[12 /* X35 */] <-0.11243579f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
                 (data[1 /* X12 */] <-0.70583963f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.034474667f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08558179f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.114944115f ? 
                    1.0f : 
                    0.0f))) : 
         (data[8 /* X23 */] <0.10842087f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_23_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[3 /* X17 */] <-0.2875781f ? 
             (data[1 /* X12 */] <-0.4256542f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24850419f ? 
                 (data[2 /* X15 */] <0.16992633f ? 
                     (data[3 /* X17 */] <-0.11939159f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35951653f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22783658f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[12 /* X35 */] <-0.77285993f ? 
            1.0f : 
             (data[7 /* X21 */] <0.10958204f ? 
                 (data[9 /* X27 */] <-0.01084285f ? 
                     (data[3 /* X17 */] <-0.099333964f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.30456254f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25072083f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.118924096f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19850783f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14097916f ? 
             (data[1 /* X12 */] <-0.67236817f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.16554572f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29283702f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.1382699f ? 
                     (data[3 /* X17 */] <-0.17265679f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15229514f ? 
             (data[3 /* X17 */] <-0.23804016f ? 
                 (data[1 /* X12 */] <-0.35197446f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.119942494f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18483683f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.2691783f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27835923f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.61479425f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.36873692f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_24_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19412692f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23876445f ? 
                 (data[6 /* X20 */] <-0.4659855f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.14857537f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2225734f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17033097f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.37485275f ? 
                     (data[6 /* X20 */] <-0.2450186f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27350816f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16684635f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
         (data[0 /* X5 */] <0.09091307f ? 
             (data[7 /* X21 */] <0.14526972f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.009301793f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.08315129f ? 
                        0.0f : 
                        1.0f))) : 
             (data[8 /* X23 */] <0.1010754f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.090929314f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05991595f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.15769258f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05412055f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3189395f ? 
             (data[7 /* X21 */] <0.10697483f ? 
                 (data[6 /* X20 */] <-0.069912754f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17583172f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.40865508f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.361177f ? 
             (data[10 /* X28 */] <-0.030877493f ? 
                 (data[5 /* X19 */] <0.42680818f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22434194f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18050891f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
                 (data[9 /* X27 */] <-0.041875828f ? 
                     (data[6 /* X20 */] <-2.5774233E-4f ? 
                         (data[8 /* X23 */] <0.1257806f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X21 */] <0.1517723f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_25_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19041216f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3039202f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48557383f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35969138f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21657792f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.36297792f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
             (data[4 /* X18 */] <-0.32936642f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.23957685f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6366534f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.05177049f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
         (data[8 /* X23 */] <0.10127393f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2246051f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.19447039f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.79807734f ? 
                         (data[10 /* X28 */] <-0.119856924f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.36446175f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (data[8 /* X23 */] <0.16897134f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.27953717f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28645122f ? 
             (data[2 /* X15 */] <0.10328122f ? 
                 (data[11 /* X34 */] <-0.48798183f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.13602105f ? 
                 (data[11 /* X34 */] <-0.61778927f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06019909f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.8403145f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[7 /* X21 */] <0.16599235f ? 
             (data[2 /* X15 */] <0.10724763f ? 
                 (data[11 /* X34 */] <-0.48798183f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16343744f ? 
             (data[9 /* X27 */] <0.09555593f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.563642f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <0.06889453f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_26_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43689606f ? 
            0.0f : 
             (data[11 /* X34 */] <0.5126723f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.32936642f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.14857537f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25421652f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.8931106f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.73076564f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.26028296f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.02958205f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.32936642f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1416381f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.43509316f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X35 */] <-0.7556813f ? 
                     (data[2 /* X15 */] <0.1499328f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.6666667f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (data[11 /* X34 */] <-0.69351023f ? 
             (data[1 /* X12 */] <-0.67588115f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14935713f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.34811437f ? 
                 (data[9 /* X27 */] <-0.06404224f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.061416626f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33293408f ? 
             (data[6 /* X20 */] <-0.011544141f ? 
                 (data[4 /* X18 */] <-0.14456497f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.14935713f ? 
                         (data[10 /* X28 */] <0.3855877f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17659084f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.19605653f ? 
                 (data[11 /* X34 */] <-0.61057776f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[0 /* X5 */] <0.13391908f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20922737f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (data[1 /* X12 */] <-0.6149398f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2636222f ? 
                 (data[2 /* X15 */] <0.083287686f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4272482f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42866534f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_27_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[10 /* X28 */] <-0.08108702f ? 
             (data[1 /* X12 */] <-0.29090852f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.24098311f ? 
                     (data[5 /* X19 */] <0.20060764f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.46393925f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1842216f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
        0.8f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_03_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010691182f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1382699f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.14493442f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[6 /* X20 */] <-0.27878943f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.29090852f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15428309f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.17535502f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X35 */] <-0.13724941f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2836372f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <1.7988282E-4f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18950333f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_28_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (data[5 /* X19 */] <0.13155171f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25313002f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2973851f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13061091f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20963337f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22657467f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[5 /* X19 */] <-0.09298832f ? 
             (data[12 /* X35 */] <0.20250635f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.11048631f ? 
             (data[6 /* X20 */] <-0.024051702f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.065585814f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.14584516f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[5 /* X19 */] <-0.25594512f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3162814f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6198103f ? 
                     (data[10 /* X28 */] <-0.03944528f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.2782018f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.12473906f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.446155f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.10524841f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[5 /* X19 */] <0.27923873f ? 
                    0.0f : 
                    1.0f))) : 
         (data[5 /* X19 */] <0.19248344f ? 
             (data[1 /* X12 */] <-0.34865668f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.080410704f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_03_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (data[5 /* X19 */] <-0.056114886f ? 
             (data[12 /* X35 */] <0.06889453f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.40212718f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27758515f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_29_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[8 /* X23 */] <0.116361916f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.14609428f ? 
                     (data[3 /* X17 */] <-0.3761856f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[1 /* X12 */] <-0.40854365f ? 
             (data[10 /* X28 */] <0.29943234f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47105855f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.102165334f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20628995f ? 
            0.0f : 
             (data[10 /* X28 */] <0.2649702f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.024441559f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07951879f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.38341475f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[6 /* X20 */] <-0.2774336f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26088893f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.059187412f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2649702f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[1 /* X12 */] <-0.44383416f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_30_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16778019f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14079438f ? 
                 (data[11 /* X34 */] <-0.30769375f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48557538f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24653238f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.10368799f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16948402f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.5637028f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48271304f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.5228149f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.082608104f ? 
         (data[8 /* X23 */] <0.1102076f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.09179886f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.4149601f ? 
                     (data[7 /* X21 */] <0.19374013f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16296098f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.09615156f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[4 /* X18 */] <-0.15126067f ? 
             (data[11 /* X34 */] <-0.12740566f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.018181818f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32451412f ? 
             (data[8 /* X23 */] <0.1518981f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.12509733f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1800888f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22972076f ? 
                 (data[11 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29921648f ? 
                         (data[4 /* X18 */] <-0.17875586f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[5 /* X19 */] <0.09137885f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.45791778f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[9 /* X27 */] <-0.031900942f ? 
             (data[8 /* X23 */] <0.11753129f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X21 */] <0.14373314f ? 
             (data[0 /* X5 */] <0.20118487f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_31_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.106488965f ? 
         (data[12 /* X35 */] <-0.47700518f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X18 */] <-0.23696569f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0796511f ? 
                 (data[11 /* X34 */] <-0.5889432f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.11536928f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2605938f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.086915866f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20107809f ? 
                     (data[5 /* X19 */] <0.0810735f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12150019f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19884194f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.068358436f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.006818745f ? 
            0.0f : 
             (data[10 /* X28 */] <0.072556645f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.076925f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3189395f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2551541f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.27181354f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.062000785f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13899794f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[11 /* X34 */] <-0.7151448f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.030862492f ? 
             (data[10 /* X28 */] <-0.03082975f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13722722f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.27003372f ? 
                     (data[12 /* X35 */] <-0.63352185f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.3818688f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_03_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[5 /* X19 */] <0.025958244f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16242875f ? 
                 (data[10 /* X28 */] <-0.0017775754f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.124107815f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.026444336f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_32_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.106488965f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.009376071f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6144345f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4839025f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.21955685f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06529188f ? 
                 (data[6 /* X20 */] <-0.36175582f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3284832f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
             (data[6 /* X20 */] <-0.39302474f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90735227f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.21420029f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.27837208f ? 
                    1.0f : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.4083757f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.009376071f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.40829054f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08832105f ? 
            0.0f : 
             (data[10 /* X28 */] <0.13573723f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48467186f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.101802416f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24466187f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.04562988f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17274334f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.605228f ? 
                 (data[0 /* X5 */] <0.104323916f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <0.09998922f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40865508f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.269278f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.022725f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.22357428f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_33_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24073677f ? 
                 (data[5 /* X19 */] <0.079484195f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1709566f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.29090852f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41253564f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12564869f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5122845f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.161327f ? 
                 (data[5 /* X19 */] <0.22697794f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[11 /* X34 */] <-0.76923126f ? 
             (data[7 /* X21 */] <0.14158534f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16424382f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21818864f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06889453f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[4 /* X18 */] <-0.13519098f ? 
             (data[5 /* X19 */] <-0.06563061f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.38715544f ? 
                 (data[0 /* X5 */] <0.07988589f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06698579f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06153823f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.13327152f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15156256f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
         (data[9 /* X27 */] <-0.36883044f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_03_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_34_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[0 /* X5 */] <0.09587531f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                     (data[9 /* X27 */] <-0.0017017892f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.37591282f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.06963743f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41253564f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.1982505f ? 
                     (data[2 /* X15 */] <0.14666341f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[6 /* X20 */] <-0.47105855f ? 
            1.0f : 
             (data[8 /* X23 */] <0.10226656f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.241111f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28910357f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008399452f ? 
            0.0f : 
             (data[12 /* X35 */] <0.08798193f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19739917f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16490223f ? 
             (data[7 /* X21 */] <0.105313145f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44050428f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08564277f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.15035886f ? 
                         (data[1 /* X12 */] <-0.05915519f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[12 /* X35 */] <-0.20596406f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.34223074f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_35_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05388966f ? 
             (data[2 /* X15 */] <0.09578364f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23886837f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08380469f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.45410028f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22222008f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[0 /* X5 */] <0.05920993f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29283702f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25406578f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[0 /* X5 */] <0.08981036f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.087333545f ? 
                 (data[7 /* X21 */] <0.16812679f ? 
                     (data[12 /* X35 */] <-0.17542422f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.11613332f ? 
             (data[0 /* X5 */] <0.10194025f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[1 /* X12 */] <-0.35400373f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26640615f ? 
            0.0f : 
            1.0f) : 
        0.75f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_03_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_36_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[10 /* X28 */] <-0.18590935f ? 
             (data[6 /* X20 */] <-0.119943f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.012247915f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.054042142f ? 
                 (data[6 /* X20 */] <-0.35758665f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33150366f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23520933f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1549229f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18575455f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.64115685f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
        0.8f : 
        0.012820513f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_03_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
        0.025974026f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.269278f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.36772212f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[1 /* X12 */] <-0.29518616f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16589789f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.13160539f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.20218672f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.17261189f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5083062f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44158864f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.269278f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.36772212f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_37_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19041216f ? 
                 (data[3 /* X17 */] <-0.3257931f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.22222008f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[7 /* X21 */] <0.08610315f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2545361f ? 
            0.0f : 
             (data[0 /* X5 */] <0.16038431f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23155028f ? 
             (data[0 /* X5 */] <0.0865022f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18658762f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.07276741f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17881489f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.36772212f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1472246f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.22954795f ? 
                     (data[2 /* X15 */] <0.13993603f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11644301f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25348285f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16326182f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21070278f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_38_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03846154f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1828981f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3395759f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0696848f ? 
                     (data[9 /* X27 */] <0.12383813f ? 
                         (data[11 /* X34 */] <0.096149534f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.21175595f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.08030965f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2460094f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.6602442f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.10336309f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90854174f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[5 /* X19 */] <-0.014483588f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20250635f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.27884766f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.14770374f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5065024f ? 
             (data[5 /* X19 */] <0.055994585f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11434453f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.50046146f ? 
                        1.0f : 
                        0.0f))) : 
             (data[12 /* X35 */] <-0.04562988f ? 
                 (data[9 /* X27 */] <0.14875533f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[5 /* X19 */] <0.19605184f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.06895624f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.6737573f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3857454f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_39_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026521983f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.257514f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.25454858f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20384865f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0696848f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.31726003f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025218546f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.22208807f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1518981f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16492794f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07159643f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15561f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.27837208f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X21 */] <0.13519536f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.8197119f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17659084f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053236008f ? 
                 (data[2 /* X15 */] <0.15280947f ? 
                     (data[11 /* X34 */] <-0.7115391f ? 
                        1.0f : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.11164546f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3094838f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2836372f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06847123f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.114944115f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_40_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.046804354f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.39406702f ? 
            0.0f : 
             (data[5 /* X19 */] <9.794658E-4f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.091123834f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.5306079f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.39406702f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.81219506f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055162847f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.15603f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07288189f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08308899f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.21879093f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15371652f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.08698191f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.028636066f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4125256f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34830344f ? 
                 (data[10 /* X28 */] <-0.114113234f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.030307567f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012586438f ? 
            0.0f : 
             (data[2 /* X15 */] <0.09328445f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_41_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.38468635f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2815569f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21574485f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.36071354f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2815569f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.018181818f : 
         (data[6 /* X20 */] <0.024936242f ? 
            0.0f : 
             (data[2 /* X15 */] <0.16213216f ? 
                 (data[10 /* X28 */] <0.10450998f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.46093863f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15472308f ? 
                 (data[10 /* X28 */] <-0.04518897f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17134778f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3094838f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21463424f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <0.48323038f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_42_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[10 /* X28 */] <-0.07103557f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.115650125f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21081568f ? 
                        1.0f : 
                        0.0f))) : 
             (data[8 /* X23 */] <0.120133914f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.041880872f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.61538124f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.30733335f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.034250107f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17076603f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0773683f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.16619198f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17578399f ? 
                         (data[11 /* X34 */] <0.119589016f ? 
                             (data[9 /* X27 */] <0.07237326f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.069912754f ? 
                1.0f : 
                0.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07702651f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.048078906f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05687288f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.0021129434f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17881489f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14523454f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.007854995f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14358343f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.20332673f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.24511701f ? 
             (data[10 /* X28 */] <0.31379157f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2836372f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <-0.23146874f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.079484195f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23713571f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3855877f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_43_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1093836f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22625726f ? 
                 (data[4 /* X18 */] <-0.33740127f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.34651786f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (data[6 /* X20 */] <-0.36071354f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.24183676f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2906204f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[5 /* X19 */] <0.17226252f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12812361f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14160216f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1430165f ? 
             (data[6 /* X20 */] <0.005132606f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.060956627f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.07066961f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[6 /* X20 */] <-0.26794913f ? 
            0.0f : 
             (data[5 /* X19 */] <0.02714771f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012586438f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049581893f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.5384625f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_44_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.28847727f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06106927f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17159246f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2652427f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20349759f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <0.24584791f ? 
                     (data[5 /* X19 */] <0.10167031f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.118481025f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[12 /* X35 */] <-0.77285993f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.24991356f ? 
                 (data[5 /* X19 */] <0.012874123f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.015034606f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1173783f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.020190129f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.00733495f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X19 */] <-0.069199f ? 
             (data[12 /* X35 */] <-0.04562988f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[1 /* X12 */] <-0.35400373f ? 
            0.0f : 
             (data[5 /* X19 */] <0.1865361f ? 
                 (data[2 /* X15 */] <0.1082796f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.1258614f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[1 /* X12 */] <-0.74006075f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24639653f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.26986155f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <0.44589642f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_45_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.3409099f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.315975f ? 
             (data[9 /* X27 */] <0.07398668f ? 
                 (data[4 /* X18 */] <-0.5610835f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.24795635f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.099097066f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.43471658f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.315975f ? 
             (data[9 /* X27 */] <0.084031366f ? 
                 (data[12 /* X35 */] <-0.7556813f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.058289737f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
            0.0f : 
             (data[4 /* X18 */] <0.16112533f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06153823f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.013592482f ? 
                     (data[8 /* X23 */] <0.13919242f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[1 /* X12 */] <-0.6737573f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.030792622f ? 
                 (data[4 /* X18 */] <-0.55274856f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16075915f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23845549f ? 
                 (data[1 /* X12 */] <-0.6502303f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.1698836f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_46_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.039530437f ? 
             (data[9 /* X27 */] <0.12880555f ? 
                 (data[10 /* X28 */] <-0.14066212f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17859465f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.11879529f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06250519f ? 
             (data[9 /* X27 */] <0.108855784f ? 
                 (data[3 /* X17 */] <-0.3654234f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15830168f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.39143306f ? 
                 (data[5 /* X19 */] <0.33640876f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15179883f ? 
         (data[11 /* X34 */] <-0.69351023f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18824516f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12603903f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <-0.18817416f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04503372f ? 
            0.0f : 
             (data[3 /* X17 */] <0.06571691f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.46093863f ? 
             (data[10 /* X28 */] <0.012247915f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.025734752f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35544023f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33676633f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
         (data[9 /* X27 */] <-0.36883044f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_03_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_47_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.32936642f ? 
             (data[11 /* X34 */] <5.551115E-17f ? 
                 (data[9 /* X27 */] <-0.001976285f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[2 /* X15 */] <0.11077879f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.24047439f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[7 /* X21 */] <0.12177886f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15798894f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.050480794f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.27625513f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.3909669f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[4 /* X18 */] <-0.18875661f ? 
            0.0f : 
             (data[2 /* X15 */] <0.16159569f ? 
                 (data[10 /* X28 */] <0.41430613f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1488719f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.080410704f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.40865508f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27931443f ? 
                 (data[10 /* X28 */] <-0.08539479f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.12399461f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.921875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02939885f ? 
             (data[5 /* X19 */] <-0.058493815f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1730712f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <0.013641705f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.0068902806f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17572123f ? 
                         (data[1 /* X12 */] <-0.6630632f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17908408f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_03_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_48_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[11 /* X34 */] <-0.28245342f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.33711603f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.13988876f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.12669992f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17178585f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40699404f ? 
            0.0f : 
             (data[10 /* X28 */] <0.05030266f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2605938f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
             (data[8 /* X23 */] <0.08598742f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.5062133f ? 
                     (data[7 /* X21 */] <0.132756f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.013598683f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11409923f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.36175582f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.48863828f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.068358436f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (data[11 /* X34 */] <-0.69351023f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12509733f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.1451833f ? 
                     (data[12 /* X35 */] <0.38565406f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[9 /* X27 */] <-0.21477385f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09781954f ? 
            0.0f : 
             (data[12 /* X35 */] <0.045989648f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[4 /* X18 */] <-0.5811249f ? 
            1.0f : 
             (data[0 /* X5 */] <0.10524841f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.101807624f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06889453f ? 
             (data[9 /* X27 */] <0.1574136f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14473166f ? 
                1.0f : 
                 (data[12 /* X35 */] <0.8391379f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_03_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_49_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20000868f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1173783f ? 
                 (data[5 /* X19 */] <1.551789E-4f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4410238f ? 
                     (data[0 /* X5 */] <0.12128705f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.28616273f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22549136f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.08766574f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15509345f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13888131f ? 
                 (data[9 /* X27 */] <-0.055175677f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.10784828f ? 
                         (data[6 /* X20 */] <-0.32840234f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[2 /* X15 */] <0.13279705f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06205477f ? 
             (data[9 /* X27 */] <-0.18037263f ? 
                 (data[6 /* X20 */] <-0.07825113f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18294162f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3106286f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29048076f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.23666257f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[5 /* X19 */] <-0.25594512f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.23237869f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17889765f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13263583f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.13260329f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[2 /* X15 */] <0.11327799f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X18 */] <-0.2647692f ? 
                     (data[3 /* X17 */] <-0.021532875f ? 
                         (data[11 /* X34 */] <-0.27884766f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20492955f ? 
             (data[2 /* X15 */] <0.124934025f ? 
                 (data[10 /* X28 */] <0.31091973f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_03_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[7 /* X21 */] <0.095555685f ? 
             (data[11 /* X34 */] <-0.102165334f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16343744f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_50_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[1 /* X12 */] <-0.42030716f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38735962f ? 
             (data[10 /* X28 */] <-0.14283168f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.90838045f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.06933251f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (data[6 /* X20 */] <-0.43471658f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15762751f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.10782618f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08226256f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24088271f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15130252f ? 
             (data[6 /* X20 */] <0.005132606f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21051219f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.14813761f ? 
                        1.0f : 
                        0.0f))) : 
             (data[9 /* X27 */] <0.13545547f ? 
                 (data[11 /* X34 */] <-0.15625176f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[1 /* X12 */] <-0.30588028f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.10958986f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.084186256f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.50785124f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15770693f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[1 /* X12 */] <-0.4038775f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21820582f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33293408f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.024051702f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.18438269f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_51_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[2 /* X15 */] <0.11619371f ? 
             (data[1 /* X12 */] <-0.3529343f ? 
                 (data[3 /* X17 */] <-0.2918242f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2973851f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.11767524f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X5 */] <0.112767935f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6912431f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.40640482f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16139287f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.062420037f ? 
                        1.0f : 
                         (data[11 /* X34 */] <0.037191734f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_03_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28114036f ? 
             (data[1 /* X12 */] <-0.34651786f ? 
                 (data[2 /* X15 */] <0.16473861f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23490532f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23947822f ? 
             (data[5 /* X19 */] <0.008116259f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.01833028f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.07276741f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.209596f ? 
             (data[5 /* X19 */] <-0.15365107f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16617754f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (data[8 /* X23 */] <0.10192737f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <0.4220503f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.17516969f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.6541588f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.132756f ? 
                             (data[11 /* X34 */] <-0.223081f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[7 /* X21 */] <0.10073934f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25348285f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13281636f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19358858f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.2659602f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_52_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.38468635f ? 
             (data[7 /* X21 */] <0.086408064f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18048586f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.15808143f ? 
                        1.0f : 
                        0.0f))) : 
             (data[11 /* X34 */] <-0.5889432f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.43471658f ? 
             (data[1 /* X12 */] <-0.34437904f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.32936642f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3336429f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11517287f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.008259496f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.6737573f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <-0.18817416f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.10982974f ? 
                 (data[0 /* X5 */] <0.11407015f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.31763563f ? 
             (data[11 /* X34 */] <-0.50961643f ? 
                 (data[10 /* X28 */] <-0.033701595f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14872168f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.6117315f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[8 /* X23 */] <0.1252956f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (data[0 /* X5 */] <0.116275586f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[0 /* X5 */] <0.11462151f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.04814682f ? 
                 (data[0 /* X5 */] <0.11999131f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            0.0f : 
             (data[9 /* X27 */] <0.20632401f ? 
                 (data[10 /* X28 */] <0.43153718f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_53_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19412692f ? 
         (data[12 /* X35 */] <-0.41019925f ? 
             (data[6 /* X20 */] <-0.4639009f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.29323956f ? 
             (data[8 /* X23 */] <0.14249098f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (data[12 /* X35 */] <-0.7957648f ? 
             (data[6 /* X20 */] <-0.26169536f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13832995f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.06678046f ? 
            1.0f : 
             (data[8 /* X23 */] <0.16522239f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15179883f ? 
         (data[11 /* X34 */] <-0.6664671f ? 
             (data[2 /* X15 */] <0.12160862f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14074399f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.16767253f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.115933746f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.14903843f ? 
                            1.0f : 
                            0.0f))))) : 
        0.02173913f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.41055903f ? 
             (data[6 /* X20 */] <-0.101181656f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16485229f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.15584013f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21256351f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.22836699f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09099933f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0059195803f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.13977458f ? 
                     (data[4 /* X18 */] <-0.08564277f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.3505114f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22287033f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_54_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05388966f ? 
             (data[6 /* X20 */] <-0.37872508f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20827952f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.076925f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4356983f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.4722393f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.07390741f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13894859f ? 
                        1.0f : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.34339336f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.38572866f ? 
             (data[11 /* X34 */] <-0.102165334f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8383633f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09789701f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.15365107f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
             (data[6 /* X20 */] <-0.0011211743f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
             (data[5 /* X19 */] <-0.20026906f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17810354f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.019232813f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14884214f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[6 /* X20 */] <-0.32423314f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5535906f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4272482f ? 
             (data[5 /* X19 */] <0.19180274f ? 
                 (data[6 /* X20 */] <-0.18664998f ? 
                     (data[2 /* X15 */] <0.12993926f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.35977829f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_55_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17056616f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13005956f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.11434453f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7556813f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13988876f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.46393925f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.4163767f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.21539426f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.085547976f ? 
             (data[12 /* X35 */] <-0.63733935f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16690712f ? 
                     (data[12 /* X35 */] <-0.90650153f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15539497f ? 
                             (data[9 /* X27 */] <0.4108612f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.10336309f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.15992956f ? 
                        0.0f : 
                        1.0f))) : 
             (data[0 /* X5 */] <0.13832995f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23102826f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.030303031f : 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14274082f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3870205f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.15551175f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[3 /* X17 */] <-0.48895726f ? 
             (data[12 /* X35 */] <-0.13724941f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X17 */] <-0.29297465f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.03655926f ? 
                         (data[6 /* X20 */] <-0.43435276f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_03_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_56_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[9 /* X27 */] <0.108855784f ? 
             (data[1 /* X12 */] <-0.33582374f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11052705f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25656497f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.22972034f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30059525f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53148115f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17897813f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.112971455f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0021098363f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90735227f ? 
                     (data[0 /* X5 */] <0.100837536f ? 
                         (data[4 /* X18 */] <-0.51416785f ? 
                             (data[4 /* X18 */] <-0.5385137f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3614896f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.22595899f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12548059f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15179883f ? 
         (data[9 /* X27 */] <-0.10948339f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14974639f ? 
                 (data[6 /* X20 */] <-0.07825113f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.11635018f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09216611f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07183959f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.107453845f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X21 */] <0.10226394f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.021488644f ? 
             (data[11 /* X34 */] <-0.28245342f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.049066823f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <6.224999E-5f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
             (data[1 /* X12 */] <-0.4384871f ? 
                 (data[0 /* X5 */] <0.14494625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011544141f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[9 /* X27 */] <-0.031900942f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0483665f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.082907856f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.34223074f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_57_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[3 /* X17 */] <-0.27625513f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13017811f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.03944528f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15555319f ? 
                 (data[6 /* X20 */] <-0.22834185f ? 
                     (data[5 /* X19 */] <0.17826761f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2649185f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31196374f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43509316f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.13948041f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23186249f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90735227f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                     (data[8 /* X23 */] <0.086617835f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10719352f ? 
                             (data[5 /* X19 */] <0.1293982f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.39510933f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38721034f ? 
                1.0f : 
                0.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04220298f ? 
            0.0f : 
             (data[5 /* X19 */] <0.012874123f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010344089f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.6742007f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2707139f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.35184228f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
        0.05f : 
         (data[6 /* X20 */] <-0.25648385f ? 
            0.0f : 
             (data[5 /* X19 */] <0.1936729f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22251186f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.119856924f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.28605917f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.272602f ? 
             (data[5 /* X19 */] <-0.04659916f ? 
                 (data[10 /* X28 */] <7.605382E-4f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.108088985f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
         (data[1 /* X12 */] <-0.6737573f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.42483318f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.563642f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_58_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.45410028f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27483976f ? 
             (data[5 /* X19 */] <-0.09893565f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.013598683f ? 
                 (data[3 /* X17 */] <-0.22904325f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
        0.029850746f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27483976f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
                 (data[6 /* X20 */] <-0.39510933f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2783229f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17575778f ? 
                 (data[3 /* X17 */] <-0.27578908f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.26272842f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.1462072f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1505084f ? 
             (data[10 /* X28 */] <0.043838203f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[1 /* X12 */] <-0.37646133f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25791106f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.37426338f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <9.794658E-4f ? 
                 (data[3 /* X17 */] <-0.013318462f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.030147726f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.05107954f ? 
         (data[1 /* X12 */] <-0.6769656f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23726434f ? 
                 (data[5 /* X19 */] <0.0033583972f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24694544f ? 
                         (data[2 /* X15 */] <0.08700968f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.37426338f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_59_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1173783f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.10327351f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3061323f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21569441f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31457552f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <0.02583921f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16810334f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[9 /* X27 */] <-0.12943317f ? 
             (data[0 /* X5 */] <0.13447043f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.76037955f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49471778f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0073577277f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[9 /* X27 */] <0.19419648f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19103046f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49471778f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_60_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
         (data[7 /* X21 */] <0.13367076f ? 
             (data[10 /* X28 */] <-0.24621807f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16444096f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16299206f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45021856f ? 
                     (data[12 /* X35 */] <-0.38920313f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11434453f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5396603f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[7 /* X21 */] <0.08610315f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.6899045f ? 
                0.0f : 
                1.0f)) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.105854385f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.14493442f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[6 /* X20 */] <-0.25574082f ? 
             (data[2 /* X15 */] <0.13327152f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23051444f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4257935f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.1407691f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_61_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.039530437f ? 
             (data[6 /* X20 */] <-0.23005347f ? 
                 (data[4 /* X18 */] <-0.23026998f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23562655f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.096426666f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.4192874f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.1385239f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2225734f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.34651786f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.28605917f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.12684733f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (data[6 /* X20 */] <-0.47119698f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.84550005f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.3643895f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09789701f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.15365107f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X5 */] <0.090086035f ? 
            1.0f : 
             (data[8 /* X23 */] <0.12211917f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053236008f ? 
             (data[12 /* X35 */] <-0.087622166f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52196544f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.30374146f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2836372f ? 
            0.0f : 
             (data[12 /* X35 */] <0.045989648f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_62_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.013598683f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.079484195f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.29504883f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.112986974f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.08395887f ? 
             (data[3 /* X17 */] <0.11580219f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.07878318f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625176f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.084044024f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.50372756f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.116275586f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.32840234f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12313871f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15928158f ? 
                     (data[11 /* X34 */] <-0.22115546f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[9 /* X27 */] <0.072281204f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[0 /* X5 */] <0.11351879f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06205477f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.15440421f ? 
             (data[8 /* X23 */] <0.1268838f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05970362f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.14032157f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
         (data[2 /* X15 */] <0.09578364f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.45913574f ? 
                 (data[9 /* X27 */] <0.1044225f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21283472f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[9 /* X27 */] <0.13545547f ? 
             (data[4 /* X18 */] <-0.47128633f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.11052705f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.22222008f ? 
                     (data[6 /* X20 */] <-0.019882515f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2836372f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_03_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_63_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.39406702f ? 
             (data[7 /* X21 */] <0.086408064f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.502934f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39406702f ? 
             (data[7 /* X21 */] <0.086408064f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.502934f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (data[0 /* X5 */] <0.09394555f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20312665f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15652765f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.1002813f ? 
                    0.0f : 
                    1.0f))) : 
        0.02f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.7123607f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.45913574f ? 
                 (data[4 /* X18 */] <-0.18936446f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.43902263f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1579032f ? 
             (data[5 /* X19 */] <-0.06800954f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (data[4 /* X18 */] <-0.11644301f ? 
             (data[5 /* X19 */] <-0.05626821f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.07290881f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16242875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18822794f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <0.2866384f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_64_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.36071354f ? 
             (data[8 /* X23 */] <0.10226656f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25406578f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.36071354f ? 
             (data[8 /* X23 */] <0.10226656f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20753333f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23740451f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[0 /* X5 */] <0.089259f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069130555f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.1518981f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004090309f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20178965f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[3 /* X17 */] <-0.23804016f ? 
             (data[0 /* X5 */] <0.12784797f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.0671088f ? 
                     (data[6 /* X20 */] <-0.41898087f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.76860464f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2515582f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3080479f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.055320602f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11963742f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_65_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32837442f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.25335696f ? 
             (data[11 /* X34 */] <0.15384375f ? 
                 (data[1 /* X12 */] <-0.39357188f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5300176f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[12 /* X35 */] <-0.22696021f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47015467f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.13220918f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1695098f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14271577f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.04698223f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5637028f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.20963337f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.021176025f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24877885f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.034474667f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
                     (data[1 /* X12 */] <-0.70583963f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27404514f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15317194f ? 
                     (data[1 /* X12 */] <-0.6373974f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1044225f ? 
                         (data[10 /* X28 */] <0.36261293f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.47328156f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_66_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23155028f ? 
             (data[9 /* X27 */] <0.02240677f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.28616273f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06394111f ? 
                         (data[10 /* X28 */] <-0.13733065f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.3898956f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24854714f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.4013631f ? 
             (data[9 /* X27 */] <0.19973809f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11710262f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13330282f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.13327152f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09789701f ? 
            0.0f : 
             (data[8 /* X23 */] <0.17055956f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4356983f ? 
             (data[3 /* X17 */] <-0.022716034f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.52917993f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18078458f ? 
                 (data[8 /* X23 */] <0.14554526f ? 
                     (data[7 /* X21 */] <0.16207297f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
             (data[7 /* X21 */] <0.09128679f ? 
                 (data[9 /* X27 */] <0.19752143f ? 
                     (data[7 /* X21 */] <0.08269184f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_67_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.47119698f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1686695f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12712169f ? 
                     (data[8 /* X23 */] <0.11060466f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17469823f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.062242407f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.47119698f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14736775f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.33203667f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1708967f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15179883f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.058289737f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19069092f ? 
                1.0f : 
                0.0f)) : 
        0.02173913f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08242032f ? 
             (data[10 /* X28 */] <-0.07390741f ? 
                 (data[11 /* X34 */] <-0.61778927f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4123347f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17664701f ? 
                         (data[1 /* X12 */] <-0.45532727f ? 
                             (data[2 /* X15 */] <0.15459795f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06019909f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.2866309f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12186983f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27300286f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.42590904f ? 
                 (data[7 /* X21 */] <0.09372616f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.040966358f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.07635614f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24242601f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15104394f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[10 /* X28 */] <0.16158383f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_03_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_68_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[9 /* X27 */] <0.108855784f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.2459933f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.379809f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4810682f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25989723f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[3 /* X17 */] <-0.37391564f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29505366f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.14373314f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38613775f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
             (data[7 /* X21 */] <0.13946426f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.024441559f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22246628f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.08234953f ? 
             (data[8 /* X23 */] <0.11933981f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[6 /* X20 */] <-0.22998062f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27560118f ? 
                 (data[0 /* X5 */] <0.10524841f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                         (data[11 /* X34 */] <-0.78725636f ? 
                             (data[7 /* X21 */] <0.1324646f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[9 /* X27 */] <-0.03855087f ? 
             (data[7 /* X21 */] <0.09921473f ? 
                 (data[11 /* X34 */] <-0.5384625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19899979f ? 
            1.0f : 
             (data[8 /* X23 */] <0.14594232f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_69_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (data[5 /* X19 */] <0.096140005f ? 
                 (data[8 /* X23 */] <0.14198245f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23823757f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.3112566f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.25454858f ? 
                 (data[6 /* X20 */] <-0.48316634f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
             (data[8 /* X23 */] <0.08598742f ? 
                 (data[4 /* X18 */] <0.04291476f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17968988f ? 
                 (data[6 /* X20 */] <-0.365925f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4649432f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (data[12 /* X35 */] <-0.38538563f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.056205142f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.0057373284f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.101802416f ? 
         (data[11 /* X34 */] <-0.9729568f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1936729f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.38929427f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.10994573f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13241501f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
                     (data[6 /* X20 */] <-0.2805476f ? 
                         (data[6 /* X20 */] <-0.37023053f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[5 /* X19 */] <-0.04897809f ? 
             (data[8 /* X23 */] <0.11973686f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19899979f ? 
            1.0f : 
             (data[8 /* X23 */] <0.109413505f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_70_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11644301f ? 
             (data[0 /* X5 */] <0.10469705f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31722006f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13993603f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.7957648f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38735962f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47217864f ? 
                     (data[4 /* X18 */] <-0.44756222f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05722171f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.48266223f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.10336309f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18824516f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.030303031f : 
         (data[11 /* X34 */] <-0.6917074f ? 
             (data[1 /* X12 */] <-0.70370084f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X17 */] <-0.047272142f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053236008f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (data[1 /* X12 */] <-0.70583963f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[6 /* X20 */] <-0.055320602f ? 
             (data[1 /* X12 */] <-0.6267033f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11863293f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.9729568f ? 
             (data[1 /* X12 */] <-0.5325952f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_71_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[10 /* X28 */] <-0.16150147f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11052705f ? 
                 (data[6 /* X20 */] <-0.4659855f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <6.224999E-5f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3210307f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.20182054f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (data[7 /* X21 */] <0.07787029f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.47659996f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2460094f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.6602442f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.23525622f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2478563f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
        0.025974026f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6664671f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_03_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[10 /* X28 */] <-0.14857537f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1839753f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <6.224999E-5f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13995692f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[8 /* X23 */] <0.16936839f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[2 /* X15 */] <0.08661994f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19899979f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.34112242f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_72_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[9 /* X27 */] <0.08447273f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1814254f ? 
                 (data[6 /* X20 */] <-0.38677096f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.50961643f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X35 */] <-0.6640617f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.16471814f ? 
                 (data[4 /* X18 */] <-0.25169623f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.21539426f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.06853477f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
        0.025974026f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.8215148f ? 
            1.0f : 
             (data[0 /* X5 */] <0.11462151f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6325857f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19604595f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.15877947f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16242875f ? 
            1.0f : 
             (data[0 /* X5 */] <0.12564869f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_73_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.31163937f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.38468635f ? 
                 (data[0 /* X5 */] <0.06665328f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2093158f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.63543063f ? 
            1.0f : 
             (data[7 /* X21 */] <0.12529792f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26239643f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.10696999f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23459949f ? 
            0.0f : 
             (data[7 /* X21 */] <0.24488655f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.16909327f ? 
             (data[2 /* X15 */] <0.11261981f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27393425f ? 
             (data[0 /* X5 */] <0.09973482f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.02273f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.20124057f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.044897635f ? 
                            1.0f : 
                            0.0f) : 
                         (data[10 /* X28 */] <0.083664216f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.056362897f ? 
             (data[1 /* X12 */] <-0.34651786f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.056356676f ? 
            0.0f : 
             (data[10 /* X28 */] <0.25922653f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15826343f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26180404f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.40642378f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_74_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[5 /* X19 */] <0.06521061f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16899578f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31650162f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.42797703f ? 
                         (data[1 /* X12 */] <-0.23880191f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.10226394f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
            0.0f : 
             (data[9 /* X27 */] <0.5384556f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.027833646f ? 
                 (data[6 /* X20 */] <-0.48266223f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
            0.0f : 
             (data[8 /* X23 */] <0.17834282f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.07955873f ? 
            1.0f : 
             (data[0 /* X5 */] <0.13777858f ? 
                 (data[6 /* X20 */] <0.013470979f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.30905107f ? 
             (data[2 /* X15 */] <0.10244816f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.113289066f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15159787f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08532475f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.034474667f ? 
                 (data[10 /* X28 */] <-0.16580643f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.4498891f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15992956f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[5 /* X19 */] <-0.04897809f ? 
             (data[8 /* X23 */] <0.119917564f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.36883044f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_75_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19412692f ? 
         (data[4 /* X18 */] <-0.37087977f ? 
             (data[5 /* X19 */] <0.06521061f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.091799416f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18658762f ? 
                 (data[12 /* X35 */] <-0.90838045f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.3493256f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44135198f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.12299072f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X21 */] <0.08030965f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.14283168f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
             (data[5 /* X19 */] <0.21508329f ? 
                 (data[6 /* X20 */] <-0.31589478f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21074647f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15179883f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08698191f ? 
             (data[5 /* X19 */] <-0.09417778f ? 
                 (data[5 /* X19 */] <-0.19984508f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.03799492f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055162847f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13750324f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[7 /* X21 */] <0.09525076f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (data[4 /* X18 */] <-0.5744292f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28169337f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X17 */] <-0.48997593f ? 
                 (data[12 /* X35 */] <-0.06853477f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.027260138f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.027957905f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[6 /* X20 */] <-0.069912754f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.062534355f ? 
             (data[5 /* X19 */] <0.08899992f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.2746787f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16075915f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.062018152f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.04897809f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_76_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19041216f ? 
             (data[11 /* X34 */] <-0.5384625f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04518897f ? 
                     (data[9 /* X27 */] <0.12734729f ? 
                         (data[6 /* X20 */] <-0.37843257f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[11 /* X34 */] <0.6622561f ? 
                        0.0f : 
                         (data[3 /* X17 */] <0.22903174f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[2 /* X15 */] <0.13327152f ? 
             (data[7 /* X21 */] <0.21630424f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[9 /* X27 */] <-0.0241427f ? 
             (data[0 /* X5 */] <0.09422123f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6664671f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.11502499f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23408791f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.013598683f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2460094f ? 
                     (data[5 /* X19 */] <-0.25382638f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22491074f ? 
                        1.0f : 
                        0.0f))) : 
             (data[9 /* X27 */] <0.08932659f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.35079548f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20472759f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23615491f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6067197f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[1 /* X12 */] <-0.46201414f ? 
            1.0f : 
             (data[2 /* X15 */] <0.10494734f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.117790736f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26205873f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_77_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[6 /* X20 */] <-0.38468635f ? 
             (data[7 /* X21 */] <0.086408064f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.84157455f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.07677926f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11580219f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[6 /* X20 */] <-0.38468635f ? 
             (data[7 /* X21 */] <0.08610791f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.07390741f ? 
                     (data[3 /* X17 */] <0.059187412f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90735227f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.5457198f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07288189f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.09973482f ? 
             (data[6 /* X20 */] <-0.015713328f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12621938f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.027957905f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.101802416f ? 
         (data[6 /* X20 */] <-0.11264692f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.030481888f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7503148f ? 
             (data[12 /* X35 */] <-0.09065678f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20753333f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03207713f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.011662975f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26466447f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0052465997f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.6123449f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.31857973f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_78_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.086915866f ? 
             (data[11 /* X34 */] <-0.6141835f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.07201043f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.004306624f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25989723f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.16593136f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.086915866f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12915792f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39493448f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
         (data[8 /* X23 */] <0.15229514f ? 
             (data[9 /* X27 */] <-0.0241427f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.45913574f ? 
                     (data[6 /* X20 */] <0.055162847f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.61598635f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13005956f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27931443f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.17788632f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20492955f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48753816f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <0.019081809f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17135365f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.44918123f ? 
                 (data[2 /* X15 */] <0.17805846f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_79_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.4639009f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23407225f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.28616273f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.35853922f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.27998504f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.36071354f ? 
             (data[7 /* X21 */] <0.15227091f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[11 /* X34 */] <-0.87199545f ? 
            1.0f : 
             (data[2 /* X15 */] <0.13493764f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1611747f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24740128f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09685472f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1601543f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42191368f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.28281578f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[3 /* X17 */] <-0.21256351f ? 
                 (data[5 /* X19 */] <0.1175471f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.09688217f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3094838f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[4 /* X18 */] <-0.052164245f ? 
             (data[2 /* X15 */] <0.09661671f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05970362f ? 
                 (data[10 /* X28 */] <0.48323038f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44158864f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_80_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17869912f ? 
             (data[11 /* X34 */] <-0.38341475f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                     (data[1 /* X12 */] <-0.45464286f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11601028f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5000793f ? 
                                 (data[6 /* X20 */] <-0.44513956f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.042317126f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48152357f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.09059324f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1392084f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12860341f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.040966358f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23870759f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[0 /* X5 */] <0.1711358f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.0911491f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.120825686f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.13327152f ? 
                    1.0f : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.09615099f ? 
             (data[1 /* X12 */] <-0.38715544f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30761915f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3127868f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.27884766f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[4 /* X18 */] <-0.591838f ? 
            1.0f : 
             (data[0 /* X5 */] <0.100837536f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                     (data[1 /* X12 */] <-0.6357552f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26402068f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.34993362f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16343744f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28507313f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06749259f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.103483625f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X12 */] <-0.4268718f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_81_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07061005f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06484889f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23833382f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <0.20328656f ? 
                         (data[7 /* X21 */] <0.19259524f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.84157455f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31238025f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.22903174f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1173783f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2246195f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.3257931f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X18 */] <-0.5838032f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.22731997f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.018181818f : 
         (data[0 /* X5 */] <0.11048631f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5213993f ? 
                 (data[4 /* X18 */] <-0.13261732f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18366228f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[9 /* X27 */] <-0.2657566f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11976061f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.27165517f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3857454f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18298231f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.086704805f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.2770791f ? 
                             (data[7 /* X21 */] <0.12587418f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[1 /* X12 */] <-0.5953442f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <0.27312973f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2124126f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (data[7 /* X21 */] <0.09128679f ? 
             (data[12 /* X35 */] <0.114704296f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24073677f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.11083012f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.6149398f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_82_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.2566874f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[10 /* X28 */] <0.023735292f ? 
             (data[0 /* X5 */] <0.09366987f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.23649366f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.15532763f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.33653983f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[12 /* X35 */] <-0.24986508f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.055325583f ? 
                 (data[10 /* X28 */] <-0.10558498f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.08668937f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1800187f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08576727f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.16134503f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19248344f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1471517f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20907362f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1124542f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.6250008f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[12 /* X35 */] <-0.08953091f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3597411f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10719352f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23050809f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <0.40138283f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_83_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
         (data[9 /* X27 */] <-0.015276133f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.33145455f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21797676f ? 
                     (data[11 /* X34 */] <-0.27884766f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0696848f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.36629823f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.15597343f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90854174f ? 
             (data[6 /* X20 */] <-0.43471658f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[9 /* X27 */] <0.1631635f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2163629f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.011386386f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.22933371f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6153352f ? 
                         (data[10 /* X28 */] <-0.10729034f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.040666565f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X23 */] <0.15229514f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.009301793f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[5 /* X19 */] <-0.25553623f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.24653238f ? 
                 (data[7 /* X21 */] <0.11697981f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.28267345f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3855877f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[9 /* X27 */] <0.19419648f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23607318f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24694544f ? 
                     (data[7 /* X21 */] <0.09135057f ? 
                         (data[9 /* X27 */] <0.017798753f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.15826343f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_84_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16465208f ? 
             (data[6 /* X20 */] <-0.39302474f ? 
                 (data[7 /* X21 */] <0.09494584f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29636326f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[4 /* X18 */] <-0.3615058f ? 
             (data[6 /* X20 */] <-0.5326925f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22418879f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26169536f ? 
                     (data[11 /* X34 */] <0.024036327f ? 
                         (data[12 /* X35 */] <-0.5909106f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17284206f ? 
             (data[12 /* X35 */] <0.20250635f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.20349759f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07183959f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.601212f ? 
             (data[12 /* X35 */] <-0.65874183f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36111104f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08997828f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.55288553f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15400806f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[11 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.49376217f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2370658f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3080479f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02939885f ? 
             (data[2 /* X15 */] <0.082012445f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.097360194f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5751294f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X20 */] <-0.47328156f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_85_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.3286238f ? 
            1.0f : 
             (data[9 /* X27 */] <0.14653869f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.39510933f ? 
                     (data[10 /* X28 */] <-0.05093266f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[3 /* X17 */] <-0.24936312f ? 
             (data[9 /* X27 */] <0.12437227f ? 
                 (data[12 /* X35 */] <-0.7480016f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43471658f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.076318465f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04220298f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.048078906f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05687288f ? 
             (data[8 /* X23 */] <0.107825294f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16698608f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16576101f ? 
             (data[11 /* X34 */] <-0.2572131f ? 
                 (data[1 /* X12 */] <-0.5389248f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0053016753f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2008464f ? 
             (data[10 /* X28 */] <0.30517605f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24073677f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06847123f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.10714267f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[3 /* X17 */] <-0.3201316f ? 
             (data[10 /* X28 */] <0.20178965f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.68445146f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_86_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.39406702f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.17113459f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07308553f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25656497f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.376348f ? 
             (data[7 /* X21 */] <0.086408064f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2906204f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12408055f ? 
                 (data[1 /* X12 */] <-0.4123203f ? 
                     (data[4 /* X18 */] <-0.51416785f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.008259496f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6126449f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.21477385f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[6 /* X20 */] <-0.16163486f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2046296f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14974639f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.1341458f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42805213f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <0.2008464f ? 
             (data[1 /* X12 */] <-0.35079548f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14688495f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
             (data[7 /* X21 */] <0.09921473f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.12327475f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.084599875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[9 /* X27 */] <0.19419648f ? 
             (data[1 /* X12 */] <-0.404266f ? 
                 (data[4 /* X18 */] <-0.35347095f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_87_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.039530437f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.14609428f ? 
                     (data[3 /* X17 */] <-0.30314717f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.13325419f ? 
             (data[0 /* X5 */] <0.07878318f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15992956f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.13390741f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.33711603f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.42698827f ? 
                         (data[1 /* X12 */] <-0.4687003f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21032993f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[8 /* X23 */] <0.1481261f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05991595f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19033639f ? 
             (data[0 /* X5 */] <0.096426666f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.4163767f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12408055f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.030147726f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.24827498f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27931443f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1800888f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3538993f ? 
                 (data[1 /* X12 */] <-0.49160933f ? 
                     (data[11 /* X34 */] <-0.6646618f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[8 /* X23 */] <0.13581748f ? 
             (data[11 /* X34 */] <-0.33293408f ? 
                 (data[1 /* X12 */] <-0.18511212f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.54099685f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.116494425f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0025726364f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23478849f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1658549f ? 
                                 (data[12 /* X35 */] <-0.1204525f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16736592f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_03_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2836372f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.66466415f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_88_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18932027f ? 
         (data[0 /* X5 */] <0.08153997f ? 
             (data[11 /* X34 */] <-0.6141835f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23649366f ? 
                 (data[10 /* X28 */] <-0.1830375f ? 
                     (data[8 /* X23 */] <0.12655188f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.040966358f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18349434f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.05f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23186249f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                 (data[6 /* X20 */] <-0.53686166f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12541667f ? 
                     (data[7 /* X21 */] <0.12768766f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17094767f ? 
                        1.0f : 
                         (data[11 /* X34 */] <0.23136763f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[9 /* X27 */] <0.1953048f ? 
                0.0f : 
                1.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
             (data[9 /* X27 */] <-0.42757142f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09685472f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14767767f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12706283f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.046710048f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.05236858f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (data[0 /* X5 */] <0.10194025f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33293408f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.049066823f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14107628f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.012162762f ? 
            0.0f : 
             (data[9 /* X27 */] <0.049006466f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15471028f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.09555593f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22674392f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6024119f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_89_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06824888f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.257514f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20348717f ? 
                     (data[1 /* X12 */] <-0.39784953f ? 
                         (data[4 /* X18 */] <-0.51687443f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[5 /* X19 */] <0.29834586f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19461003f ? 
            0.0f : 
             (data[7 /* X21 */] <0.12787727f ? 
                 (data[10 /* X28 */] <0.5129809f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.47700518f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1173783f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.5838032f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022904014f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15272431f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15983294f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23947822f ? 
             (data[5 /* X19 */] <-0.09417778f ? 
                 (data[0 /* X5 */] <0.21441749f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17999725f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.18227464f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X18 */] <-0.037433695f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[4 /* X18 */] <-0.18741748f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1283582f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35068238f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.3450791f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2370658f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5535906f ? 
             (data[7 /* X21 */] <0.10775251f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.18838474f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.019077111f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24639653f ? 
            0.0f : 
             (data[0 /* X5 */] <0.15211391f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_90_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.106488965f ? 
         (data[12 /* X35 */] <-0.5228149f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14760758f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.25439927f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.24795635f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3728206f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5360545f ? 
                 (data[12 /* X35 */] <-0.43501288f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2605938f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44578528f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.801491f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2450186f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40321878f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.23623079f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
            1.0f) : 
        0.6666667f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38538563f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.315737f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11766409f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15082468f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.16778019f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15860532f ? 
             (data[11 /* X34 */] <-0.40865508f ? 
                 (data[6 /* X20 */] <-0.069912754f ? 
                     (data[6 /* X20 */] <-0.436567f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.8701926f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20195472f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16457658f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.034474667f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.076925f ? 
                 (data[5 /* X19 */] <0.1936729f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[9 /* X27 */] <0.08447273f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5550265f ? 
                 (data[7 /* X21 */] <0.098604895f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27196056f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18950333f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_91_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[12 /* X35 */] <-0.13534068f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26814076f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.1352219f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4338954f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.39510933f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28243616f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[9 /* X27 */] <0.1953048f ? 
             (data[9 /* X27 */] <0.024481501f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[9 /* X27 */] <-0.023034377f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.038465686f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19100775f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22852919f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18408842f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.29748568f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024042286f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15410045f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.122025155f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.3201316f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.18626423f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_92_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41027838f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.22886895f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.116275586f ? 
             (data[7 /* X21 */] <0.11910599f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.082256086f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.025914395f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.5243075f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2365039f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.2866309f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[4 /* X18 */] <-0.52354187f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.12920679f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12564869f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2390096f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[4 /* X18 */] <-0.2637485f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43155518f ? 
                 (data[4 /* X18 */] <-0.06892147f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.03432241f ? 
                        0.0f : 
                         (data[4 /* X18 */] <0.096624754f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.14393474f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.13327152f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13056406f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.18206091f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22606172f ? 
                 (data[12 /* X35 */] <-0.022725f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13986321f ? 
                         (data[4 /* X18 */] <0.05769628f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (data[5 /* X19 */] <-0.052546486f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15669659f ? 
                 (data[4 /* X18 */] <-0.40861386f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.126607f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20500892f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.47865298f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_93_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
         (data[3 /* X17 */] <-0.33145455f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17938264f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29090852f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <0.026607137f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.31667098f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.704711f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.46393925f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23186249f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
                 (data[12 /* X35 */] <-0.6640617f ? 
                     (data[5 /* X19 */] <0.22222008f ? 
                         (data[3 /* X17 */] <-0.4026055f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.28898156f ? 
                                 (data[3 /* X17 */] <-0.12882984f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <0.13220918f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.069912754f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14467058f ? 
             (data[4 /* X18 */] <-0.13385184f ? 
                 (data[11 /* X34 */] <-0.43750116f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21051219f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.20963337f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.02f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[3 /* X17 */] <-0.32437772f ? 
             (data[2 /* X15 */] <0.10994573f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <-0.2746232f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14739218f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <0.006504227f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4338954f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.17267497f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18050891f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28507313f ? 
                 (data[9 /* X27 */] <-0.041875828f ? 
                     (data[7 /* X21 */] <0.12055918f ? 
                         (data[5 /* X19 */] <-0.104460135f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.16324806f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.25274938f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_94_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.032554537f ? 
                 (data[11 /* X34 */] <0.13220918f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.28280607f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014215525f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.84157455f ? 
            1.0f : 
             (data[10 /* X28 */] <0.026023794f ? 
                 (data[7 /* X21 */] <0.09372616f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2384016f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1516584f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06484889f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.6666667f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.018181818f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055162847f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2707139f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.31852955f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18151021f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.022283249f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.030871812f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[0 /* X5 */] <0.10056186f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.098502874f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_95_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06106927f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23886837f ? 
                     (data[6 /* X20 */] <-0.39510933f ? 
                         (data[9 /* X27 */] <0.4222997f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.027957905f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17859465f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
             (data[9 /* X27 */] <0.12341158f ? 
                 (data[10 /* X28 */] <-0.12093626f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.28050125f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.84019846f ? 
                         (data[9 /* X27 */] <0.31451318f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.12620005f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.0911491f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08226256f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14767767f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X28 */] <-0.08970256f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.4338954f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16335407f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.024171328f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[2 /* X15 */] <0.10328122f ? 
             (data[0 /* X5 */] <0.13116229f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27850807f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023774436f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.03655926f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31379157f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28507313f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04954824f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.09616552f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.16324806f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_96_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[0 /* X5 */] <0.105799764f ? 
             (data[0 /* X5 */] <0.07314985f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.06733153f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[12 /* X35 */] <-0.13343193f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5138243f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.22625726f ? 
             (data[0 /* X5 */] <0.09366987f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14588803f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.004306624f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09688217f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.37357163f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90854174f ? 
             (data[6 /* X20 */] <-0.39302474f ? 
                 (data[0 /* X5 */] <0.06665328f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.34651786f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[5 /* X19 */] <-0.13105123f ? 
             (data[0 /* X5 */] <0.10905827f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <0.004090309f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[5 /* X19 */] <-0.25553623f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.29216757f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.21955685f ? 
                     (data[5 /* X19 */] <0.14101169f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.053264845f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[2 /* X15 */] <0.16576101f ? 
             (data[8 /* X23 */] <0.12489854f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.13343193f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (data[0 /* X5 */] <0.12840548f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.098037906f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10271719f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5603999f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.22388647f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024042286f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5460796f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.21398503f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_03_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_97_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.3711365f ? 
             (data[6 /* X20 */] <-0.4308841f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.36175582f ? 
             (data[7 /* X21 */] <0.086408064f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.035115648f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.34162077f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.4357589f ? 
             (data[6 /* X20 */] <-0.44211823f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.36175582f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.01972476f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18684953f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008259496f ? 
            0.0f : 
             (data[12 /* X35 */] <0.13565563f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
             (data[6 /* X20 */] <-0.20529862f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45791814f ? 
                     (data[12 /* X35 */] <-0.4516125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <1.7988282E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_98_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[5 /* X19 */] <0.21865168f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.045989648f ? 
                 (data[1 /* X12 */] <-0.3422402f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1719706f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18824516f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.090906546f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.3414846f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16044049f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.070167184f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2460094f ? 
            1.0f : 
             (data[5 /* X19 */] <0.55162376f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.36362842f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.22696021f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1818287f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010691182f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.013294122f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19739917f ? 
             (data[1 /* X12 */] <-0.6224257f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[6 /* X20 */] <-0.25574082f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27850807f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.2866309f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.15633681f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.38929427f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
         (data[12 /* X35 */] <1.7988282E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_03_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_99_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0049831504f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                 (data[6 /* X20 */] <-0.37872508f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30170357f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2746787f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.05236858f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15211391f ? 
                 (data[12 /* X35 */] <-0.45791778f ? 
                     (data[10 /* X28 */] <-0.109039105f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (data[3 /* X17 */] <-0.32437772f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.43471658f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.119856924f ? 
                     (data[0 /* X5 */] <0.15817887f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.6917074f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3468178f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09685472f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <0.48437744f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.6917074f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.04827132f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.034316912f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.19105391f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[3 /* X17 */] <-0.32437772f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.045989648f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15159893f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.0796511f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.4356983f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1925228f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06889453f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2836372f ? 
             (data[7 /* X21 */] <0.09128679f ? 
                 (data[10 /* X28 */] <-0.072912805f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.116133094f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[12 /* X35 */] <0.045989648f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_100_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.49991006f ? 
             (data[5 /* X19 */] <0.079484195f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.14953732f ? 
                 (data[3 /* X17 */] <-0.18416922f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (data[10 /* X28 */] <0.069707006f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22105573f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.035222672f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.040506743f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17873526f ? 
                             (data[12 /* X35 */] <-0.51799613f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[10 /* X28 */] <0.052453738f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (data[12 /* X35 */] <-0.18115044f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.46733f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.109112665f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04503372f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17056616f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0030888414f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.19105391f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.101802416f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1936729f ? 
                 (data[10 /* X28 */] <0.010838779f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16690712f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
         (data[10 /* X28 */] <0.5504783f ? 
             (data[3 /* X17 */] <-0.104995444f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_101_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3061323f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.22886895f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.39510933f ? 
            0.0f : 
             (data[9 /* X27 */] <0.017973488f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2521336f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[7 /* X21 */] <0.11994933f ? 
             (data[12 /* X35 */] <-0.27086124f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.39510933f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.030303031f : 
         (data[6 /* X20 */] <0.004090309f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_03_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.030147726f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.8400256f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35711962f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38661f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.1378342f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[12 /* X35 */] <-0.3129455f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (data[2 /* X15 */] <0.13493764f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43155518f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27240345f ? 
             (data[2 /* X15 */] <0.124107815f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43537265f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_102_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03846154f : 
         (data[3 /* X17 */] <-0.3286238f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.209596f ? 
                 (data[11 /* X34 */] <-0.3581744f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.06872267f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.9312854f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26442462f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.40703657f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15616286f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15911269f ? 
                     (data[6 /* X20 */] <-0.36175582f ? 
                         (data[8 /* X23 */] <0.10304879f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29834586f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06421652f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.35079548f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (data[4 /* X18 */] <-0.1686695f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.67803496f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2219006f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.65384686f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.02f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[4 /* X18 */] <-0.54898554f ? 
             (data[1 /* X12 */] <-0.34865668f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19466162f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23581918f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2746787f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25699708f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.026444336f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07091222f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.6160092f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.404266f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17909004f ? 
                 (data[2 /* X15 */] <0.1267157f ? 
                     (data[12 /* X35 */] <0.2521336f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_103_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.35967124f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16148703f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.23705412f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.84157455f ? 
            1.0f : 
             (data[0 /* X5 */] <0.046804354f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12860341f ? 
             (data[12 /* X35 */] <-0.27086124f ? 
                 (data[0 /* X5 */] <0.09973482f ? 
                     (data[9 /* X27 */] <0.028000917f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.35967124f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.43501288f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.030303031f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15130252f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.15584013f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.07437231f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42484388f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (data[8 /* X23 */] <0.14554526f ? 
                 (data[10 /* X28 */] <0.33963817f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.153768f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[1 /* X12 */] <-0.6769656f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2707139f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.1601543f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_104_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.08395887f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12849528f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.38468635f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
        0.029850746f : 
         (data[6 /* X20 */] <-0.36071354f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_03_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[9 /* X27 */] <-0.42757142f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <0.004090309f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[9 /* X27 */] <0.1099641f ? 
             (data[9 /* X27 */] <-0.21053107f ? 
                 (data[12 /* X35 */] <0.06889453f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08832105f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33533534f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[10 /* X28 */] <0.023735292f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X12 */] <-0.64381385f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5665139f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_105_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19412692f ? 
         (data[3 /* X17 */] <-0.33145455f ? 
             (data[11 /* X34 */] <-0.33293408f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.45913574f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.15227091f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.08953091f ? 
             (data[3 /* X17 */] <-0.3710849f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[1 /* X12 */] <-0.34651786f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.33052608f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24378589f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010691182f ? 
            0.0f : 
             (data[0 /* X5 */] <0.08319405f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.097291864f ? 
             (data[11 /* X34 */] <-0.8701926f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[6 /* X20 */] <-0.25574082f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.11434453f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16479518f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.2317358f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27300286f ? 
             (data[9 /* X27 */] <0.08890601f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1318207f ? 
                     (data[7 /* X21 */] <0.108362354f ? 
                         (data[4 /* X18 */] <-0.16389242f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.053525936f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.6141835f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_03_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_106_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.33882532f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.56716514f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.051017813f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.81219506f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13722722f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15711147f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.53686166f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19038399f ? 
             (data[5 /* X19 */] <0.24363045f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.13007839f ? 
                     (data[7 /* X21 */] <0.18187515f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.008259496f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.6117315f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05991595f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.06563061f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
             (data[1 /* X12 */] <-0.37646133f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2278724f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19369943f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.269278f ? 
             (data[7 /* X21 */] <0.09128679f ? 
                 (data[5 /* X19 */] <0.09851565f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.109413505f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_107_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19412692f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19419648f ? 
             (data[4 /* X18 */] <-0.30526188f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16997324f ? 
                     (data[12 /* X35 */] <-0.5724422f ? 
                         (data[7 /* X21 */] <0.1823013f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.061139688f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.38341475f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.086915866f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.24047439f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34901866f ? 
                 (data[6 /* X20 */] <-0.4368012f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.24125153f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.20947067f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <0.02858609f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (data[9 /* X27 */] <0.12991388f ? 
             (data[4 /* X18 */] <-0.29722703f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055162847f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1518981f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17031796f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26509154f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.34987646f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17492713f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.052193712f ? 
             (data[11 /* X34 */] <-0.3581744f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16810334f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17605473f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25348285f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_108_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.54099685f ? 
             (data[6 /* X20 */] <-0.20541133f ? 
                 (data[4 /* X18 */] <-0.23026998f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.030499278f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.062420037f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.11243579f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22697794f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14468947f ? 
                     (data[1 /* X12 */] <-0.27681807f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.19391282f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24496679f ? 
             (data[12 /* X35 */] <-0.24795635f ? 
                 (data[0 /* X5 */] <0.12178918f ? 
                     (data[5 /* X19 */] <-0.005476919f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.51416785f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[5 /* X19 */] <-0.13105123f ? 
             (data[8 /* X23 */] <0.13800126f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11338645f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10183696f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.6917074f ? 
             (data[6 /* X20 */] <0.007217199f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <-0.15127213f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1860372f ? 
             (data[6 /* X20 */] <-0.23251104f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2564632f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.33293408f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14935713f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.46093863f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15743037f ? 
             (data[6 /* X20 */] <-0.08242032f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.35079548f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_109_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
             (data[6 /* X20 */] <-0.39302474f ? 
                 (data[1 /* X12 */] <-0.34651786f ? 
                     (data[8 /* X23 */] <0.11354347f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.08395887f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[12 /* X35 */] <-0.24986508f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.055325583f ? 
                 (data[6 /* X20 */] <-0.39510933f ? 
                     (data[1 /* X12 */] <-0.34651786f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
            0.0f : 
             (data[8 /* X23 */] <0.1785006f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.079736255f ? 
             (data[6 /* X20 */] <0.005132606f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[12 /* X35 */] <0.06698579f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17029276f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17968988f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.13307405f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.005290361f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2428307f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04419539f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23740451f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27404514f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.010974144f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.11811981f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <0.3741003f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_110_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22105573f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23886837f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.12215563f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15363488f ? 
                     (data[7 /* X21 */] <0.20427933f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.36019364f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[7 /* X21 */] <0.11994933f ? 
             (data[5 /* X19 */] <-0.09179886f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.53686166f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.3286238f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24850419f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.1313443f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12041078f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27217764f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23459949f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[11 /* X34 */] <-0.7690499f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5231747f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2563605f ? 
                     (data[5 /* X19 */] <-0.22501901f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[5 /* X19 */] <0.1936729f ? 
                 (data[0 /* X5 */] <0.11112283f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44302458f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[7 /* X21 */] <0.09128679f ? 
             (data[5 /* X19 */] <0.09851565f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <1.7988282E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_111_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[6 /* X20 */] <-0.38468635f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <0.037059642f ? 
             (data[12 /* X35 */] <-0.49991006f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2605938f ? 
         (data[6 /* X20 */] <-0.38468635f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22019108f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.26858348f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.6666667f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.018181818f : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (data[2 /* X15 */] <0.12160862f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.107825294f ? 
                 (data[11 /* X34 */] <-0.66813695f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X27 */] <-0.18817416f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.101802416f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32689306f ? 
            0.0f : 
             (data[12 /* X35 */] <0.023084765f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[8 /* X23 */] <0.13363369f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46191752f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.25284126f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18080936f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[5 /* X19 */] <-0.056114886f ? 
             (data[2 /* X15 */] <0.08661994f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <0.48420218f ? 
             (data[8 /* X23 */] <0.109413505f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_112_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.051017813f ? 
             (data[6 /* X20 */] <-0.39510933f ? 
                 (data[8 /* X23 */] <0.11219287f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.05123395f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.4013631f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0696848f ? 
             (data[5 /* X19 */] <0.079484195f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.43501288f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[12 /* X35 */] <0.15860532f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12840548f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.12966317f ? 
                 (data[0 /* X5 */] <0.1361245f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.04347826f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (data[10 /* X28 */] <0.01511976f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3232246f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32213518f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11681964f ? 
             (data[9 /* X27 */] <-0.039659187f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.062479693f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.10171603f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <0.3741003f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_113_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.03226567f ? 
             (data[8 /* X23 */] <0.111398764f ? 
                 (data[6 /* X20 */] <-0.29504883f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <0.14875533f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47015467f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.31853408f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06824888f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13455826f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.36175582f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4147523f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.18200494f ? 
                 (data[5 /* X19 */] <0.2624607f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[0 /* X5 */] <0.09422123f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.3258105f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.27217764f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055162847f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34185928f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17939931f ? 
                 (data[9 /* X27 */] <-0.2758662f ? 
                     (data[10 /* X28 */] <0.027638298f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.1283582f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.17226252f ? 
             (data[6 /* X20 */] <-0.15329649f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.16193642f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.26794913f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
             (data[5 /* X19 */] <-0.056114886f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.14827462f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_114_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.3711365f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.56716514f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (data[6 /* X20 */] <-0.39302474f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47238496f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.091123834f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.4357589f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21984114f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12564869f ? 
             (data[6 /* X20 */] <-0.43888578f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <0.35937217f ? 
                 (data[11 /* X34 */] <0.28251228f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.055162847f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.15603f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13570043f ? 
            0.0f : 
             (data[12 /* X35 */] <0.386793f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3349532f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.03968615f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15817887f ? 
                 (data[12 /* X35 */] <-0.4511695f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14090985f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[7 /* X21 */] <0.09128679f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08558179f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <0.023084765f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_115_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21539426f ? 
            1.0f : 
             (data[5 /* X19 */] <0.20080969f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.35952902f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.08760492f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21539426f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4769567f ? 
                 (data[7 /* X21 */] <0.1254379f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[9 /* X27 */] <-0.3355808f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16224809f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17939931f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.38341475f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.010775377f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[2 /* X15 */] <0.15867996f ? 
            0.0f : 
             (data[5 /* X19 */] <0.18891504f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.16778019f ? 
                     (data[11 /* X34 */] <-0.23557852f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17450818f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14480036f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.14068393f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[9 /* X27 */] <-0.02746766f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
             (data[5 /* X19 */] <-0.023397317f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.068058304f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15542208f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14305088f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_116_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18564753f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.04518897f ? 
                 (data[1 /* X12 */] <-0.3249973f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22209774f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17134778f ? 
                 (data[9 /* X27 */] <0.06895624f ? 
                     (data[11 /* X34 */] <0.5096125f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.10194025f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.004306624f ? 
            0.0f : 
             (data[10 /* X28 */] <0.14148091f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.24189171f ? 
             (data[4 /* X18 */] <-0.58648145f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.030303031f : 
         (data[6 /* X20 */] <-0.0011211743f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20178965f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[8 /* X23 */] <0.14574379f ? 
             (data[7 /* X21 */] <0.107079186f ? 
                 (data[7 /* X21 */] <0.087273054f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08832105f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15715313f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.100837536f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27835923f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27404514f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49471778f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.19130076f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_117_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2567199f ? 
                 (data[5 /* X19 */] <0.093182504f ? 
                     (data[3 /* X17 */] <-0.3710849f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06394111f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31238025f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[5 /* X19 */] <0.08543152f ? 
             (data[4 /* X18 */] <-0.5628624f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X17 */] <-0.27483976f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20949547f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06394111f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[5 /* X19 */] <-0.09298832f ? 
             (data[2 /* X15 */] <0.16076262f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.76923126f ? 
             (data[2 /* X15 */] <0.12494088f ? 
                 (data[10 /* X28 */] <0.42004982f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15028726f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0792184f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[5 /* X19 */] <0.1449048f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17325859f ? 
                 (data[11 /* X34 */] <-0.379809f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.28919744f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14493442f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46599934f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (data[5 /* X19 */] <-0.056114886f ? 
             (data[2 /* X15 */] <0.13410458f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.272602f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21622056f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_118_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06419359f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2567199f ? 
                 (data[0 /* X5 */] <0.09100834f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.39885765f ? 
                        0.0f : 
                         (data[9 /* X27 */] <-0.04745805f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.31647024f ? 
                                1.0f : 
                                 (data[5 /* X19 */] <0.16512573f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16766836f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19279829f ? 
                                        1.0f : 
                                        0.0f)))))) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15509345f ? 
             (data[9 /* X27 */] <0.108855784f ? 
                 (data[0 /* X5 */] <0.12110478f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5156227f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.4882049f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3194995f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.20318863f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.3101003f ? 
                                 (data[4 /* X18 */] <-0.21848555f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[1 /* X12 */] <-0.42351538f ? 
             (data[0 /* X5 */] <0.105799764f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1365638f ? 
             (data[12 /* X35 */] <-0.70605403f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.023105368f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11600749f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.6899045f ? 
                 (data[2 /* X15 */] <0.14826667f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (data[0 /* X5 */] <0.10194025f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.12717907f ? 
                     (data[7 /* X21 */] <0.10806844f ? 
                         (data[1 /* X12 */] <-0.52670145f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <0.1797883f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[7 /* X21 */] <0.12086409f ? 
             (data[0 /* X5 */] <0.09808074f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18712522f ? 
             (data[1 /* X12 */] <-0.7101173f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.20164937f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_119_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06824888f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24171567f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0653651f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.19211209f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[3 /* X17 */] <-0.35410047f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08578889f ? 
             (data[7 /* X21 */] <0.115070604f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06824888f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3286238f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13467824f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[3 /* X17 */] <-0.020073274f ? 
             (data[7 /* X21 */] <0.14007409f ? 
                 (data[7 /* X21 */] <0.11955438f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.08213918f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15860532f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.09084175f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1471517f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02939885f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.18886635f ? 
            0.0f : 
             (data[7 /* X21 */] <0.14373314f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1179717f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44158864f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_120_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.039530437f ? 
             (data[11 /* X34 */] <-0.3581744f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.41178608f ? 
                     (data[11 /* X34 */] <-0.104137234f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.4311954f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13397568f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14853008f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.076925f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.41178608f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.34716368f ? 
                 (data[11 /* X34 */] <0.024036327f ? 
                     (data[8 /* X23 */] <0.08995794f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[5 /* X19 */] <-0.09298832f ? 
             (data[11 /* X34 */] <-0.25360733f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.76923126f ? 
             (data[6 /* X20 */] <0.055162847f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10740014f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.29670098f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3768506f ? 
             (data[11 /* X34 */] <-0.9711539f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <1.7988282E-4f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.07881154f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X21 */] <0.14373314f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16051406f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46093863f ? 
             (data[1 /* X12 */] <-0.39143306f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.26504084f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2836372f ? 
             (data[2 /* X15 */] <0.094117515f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <1.7988282E-4f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.236429f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.40212718f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.4366987f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_121_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
         (data[3 /* X17 */] <-0.33145455f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3381358f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.010726839f ? 
             (data[0 /* X5 */] <0.07878318f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23730667f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11434453f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.2746787f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
             (data[6 /* X20 */] <-0.36175582f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24877885f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.17578399f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13061091f ? 
                 (data[3 /* X17 */] <0.23162228f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.0760704f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21491179f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.011386386f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.122891895f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.02f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[2 /* X15 */] <0.10619694f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.049066823f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2150294f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3895629f ? 
                     (data[10 /* X28 */] <-0.09688217f ? 
                         (data[5 /* X19 */] <0.2213232f ? 
                             (data[10 /* X28 */] <-0.1057794f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[11 /* X34 */] <-0.20673242f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X5 */] <0.102238044f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X28 */] <-0.010726839f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.15633681f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17416827f ? 
                 (data[8 /* X23 */] <0.16860071f ? 
                     (data[10 /* X28 */] <0.05446821f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_03_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[3 /* X17 */] <-0.17717928f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.049066823f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13283959f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.14347377f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3999469f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_122_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27625513f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.4659855f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.22855441f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12564869f ? 
             (data[6 /* X20 */] <-0.5326925f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (data[7 /* X21 */] <0.1772744f ? 
             (data[12 /* X35 */] <-0.31667098f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05724744f ? 
            0.0f : 
             (data[2 /* X15 */] <0.126607f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3157533f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[0 /* X5 */] <0.09973482f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.08997828f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.07338952f ? 
                     (data[6 /* X20 */] <-0.0865895f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.11219287f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2714988f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.044897635f ? 
                                1.0f : 
                                0.0f)))))) : 
         (data[1 /* X12 */] <-0.36683664f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19899979f ? 
            1.0f : 
             (data[4 /* X18 */] <0.026250806f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_123_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.22196211f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.70414525f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.36954063f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15996934f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.27003372f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
             (data[12 /* X35 */] <-0.77476865f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.50345474f ? 
                     (data[0 /* X5 */] <0.108299345f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.3909669f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.0911491f ? 
             (data[10 /* X28 */] <0.3166634f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.18420206f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22282588f ? 
             (data[0 /* X5 */] <0.08995654f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.034316912f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[5 /* X19 */] <-0.25553623f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.54898554f ? 
                 (data[5 /* X19 */] <0.002152808f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.1499328f ? 
                     (data[1 /* X12 */] <-0.26096505f ? 
                         (data[4 /* X18 */] <-0.19045837f ? 
                             (data[3 /* X17 */] <-0.53187084f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.13534068f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2644817f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1843899f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19358858f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.60959154f ? 
                 (data[2 /* X15 */] <0.083287686f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18822794f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49758962f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_124_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[9 /* X27 */] <0.08003945f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.45913574f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.46459565f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40699404f ? 
            0.0f : 
             (data[9 /* X27 */] <0.4369382f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.4357589f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.21760301f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.08172852f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.2510692f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.030303031f : 
         (data[9 /* X27 */] <-0.14827462f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.6899045f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24068476f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012586438f ? 
             (data[7 /* X21 */] <0.13336584f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                     (data[5 /* X19 */] <0.18745777f ? 
                         (data[3 /* X17 */] <-0.65331626f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[9 /* X27 */] <-0.03855087f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5384625f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.09237967f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_125_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[2 /* X15 */] <0.13910297f ? 
             (data[12 /* X35 */] <-0.45410028f ? 
                 (data[6 /* X20 */] <-0.30338722f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06816373f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17489874f ? 
                         (data[2 /* X15 */] <0.16423246f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.28847727f ? 
             (data[4 /* X18 */] <-0.13117878f ? 
                 (data[6 /* X20 */] <-0.09265665f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24877885f ? 
             (data[7 /* X21 */] <0.086408064f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38189164f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.23159699f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22455865f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[9 /* X27 */] <-0.1748743f ? 
            1.0f : 
             (data[8 /* X23 */] <0.12642616f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12339031f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.08234953f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16409488f ? 
             (data[6 /* X20 */] <-0.16964751f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2296089f ? 
                     (data[7 /* X21 */] <0.10592299f ? 
                         (data[6 /* X20 */] <-0.34583923f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.29090852f ? 
                     (data[7 /* X21 */] <0.14495282f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11052705f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[2 /* X15 */] <0.09953243f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18398267f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.59889865f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.32527545f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_126_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21525458f ? 
             (data[3 /* X17 */] <-0.36825415f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1714267f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17377079f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.35967124f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.60240436f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.28267345f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.08395887f ? 
             (data[8 /* X23 */] <0.16698608f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34714472f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.69110227f ? 
                 (data[4 /* X18 */] <-0.46259716f ? 
                     (data[5 /* X19 */] <0.06304916f ? 
                         (data[4 /* X18 */] <-0.56103545f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24534808f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.20669971f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.3075564f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.14609428f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16500081f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[9 /* X27 */] <-0.102833465f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
             (data[11 /* X34 */] <-0.8197119f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12478211f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3590086f ? 
             (data[4 /* X18 */] <-0.21420029f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.26978815f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.12215563f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23294827f ? 
                 (data[5 /* X19 */] <0.4065374f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41430613f ? 
             (data[6 /* X20 */] <-0.22834185f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2644817f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.2746787f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[2 /* X15 */] <0.090368725f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28507313f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.6610584f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_127_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[4 /* X18 */] <-0.5610378f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.5814126f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13336772f ? 
                 (data[1 /* X12 */] <-0.47056943f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.3909669f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26045597f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24378589f ? 
                 (data[12 /* X35 */] <-0.25177383f ? 
                     (data[6 /* X20 */] <-0.39510933f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1767696f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <0.4273842f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.29986143f ? 
                1.0f : 
                0.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (data[0 /* X5 */] <0.125373f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13626029f ? 
                 (data[9 /* X27 */] <-0.10394179f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.02f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[4 /* X18 */] <-0.5811249f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1407691f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.0667396f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17939302f ? 
                     (data[9 /* X27 */] <0.08287951f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.28074166f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.16685696f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15108822f ? 
                                     (data[11 /* X34 */] <-0.9076925f ? 
                                        0.0f : 
                                         (data[6 /* X20 */] <-0.15162882f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.4356983f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11124763f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.31722006f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_03_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.095016755f ? 
            0.0f : 
             (data[10 /* X28 */] <0.48323038f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (data[11 /* X34 */] <-0.79447156f ? 
                 (data[1 /* X12 */] <-0.74006075f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_128_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19041216f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16534783f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34162077f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19098124f ? 
                         (data[5 /* X19 */] <0.050937023f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21657792f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.4357589f ? 
             (data[1 /* X12 */] <-0.34437904f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[7 /* X21 */] <0.1431233f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.39302474f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.008259496f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18286817f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23551425f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055162847f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.15098578f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <0.25615725f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
             (data[12 /* X35 */] <-0.56862473f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49471778f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27300286f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27776366f ? 
                 (data[1 /* X12 */] <-0.43284765f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4048328f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[8 /* X23 */] <0.11378108f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_129_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[3 /* X17 */] <-0.40222302f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.35079268f ? 
                 (data[7 /* X21 */] <0.11446077f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17609352f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.19611049f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16798975f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.027957905f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.4013631f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.24936312f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.38025376f ? 
                 (data[7 /* X21 */] <0.19252044f ? 
                     (data[4 /* X18 */] <-0.5854282f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.01972476f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14160216f ? 
                0.0f : 
                1.0f)) : 
        0.04347826f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025218546f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03207713f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.132756f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012586438f ? 
            0.0f : 
             (data[2 /* X15 */] <0.11244492f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.105799764f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_130_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.28847727f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.051017813f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3710849f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.13327152f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.34422442f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20865509f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[9 /* X27 */] <-0.07069217f ? 
             (data[12 /* X35 */] <-0.1792417f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06824888f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.37391564f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.13327152f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02856549f ? 
             (data[12 /* X35 */] <0.023084765f ? 
                 (data[2 /* X15 */] <0.15159893f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23734377f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.32048848f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[1 /* X12 */] <-0.35507312f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24862583f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.31667098f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02638753f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[9 /* X27 */] <0.035706617f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.7409465f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_131_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (data[9 /* X27 */] <-0.004192926f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.14609428f ? 
                     (data[6 /* X20 */] <-0.3309492f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.3414846f ? 
             (data[8 /* X23 */] <0.13403074f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (data[6 /* X20 */] <-0.4357589f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15762751f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.11219287f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.10803138f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.09143965f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16953048f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19899979f ? 
             (data[9 /* X27 */] <-0.21477385f ? 
                 (data[6 /* X20 */] <-0.082119025f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13800126f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <0.023084765f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29845026f ? 
                 (data[7 /* X21 */] <0.09128679f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26783583f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16479518f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2079465f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15502235f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.45913458f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17325859f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15175512f ? 
                     (data[11 /* X34 */] <-0.68269295f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046656977f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[7 /* X21 */] <0.09128679f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11348766f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_132_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19412692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.05334469f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23766138f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23932429f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.22223514f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.102165334f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24496679f ? 
             (data[9 /* X27 */] <-0.06968432f ? 
                 (data[12 /* X35 */] <-0.18305919f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.35161218f ? 
                0.0f : 
                1.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (data[11 /* X34 */] <0.10336309f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.32560593f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.013598683f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.017640166f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
         (data[11 /* X34 */] <-0.46093863f ? 
             (data[10 /* X28 */] <0.3482537f ? 
                 (data[8 /* X23 */] <0.10981055f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4334639f ? 
             (data[11 /* X34 */] <-0.33293408f ? 
                 (data[4 /* X18 */] <-0.15633403f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.24653238f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[9 /* X27 */] <-0.030792622f ? 
             (data[9 /* X27 */] <-0.1874728f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.25292775f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44302458f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_133_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (data[9 /* X27 */] <0.07117288f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14974639f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07122362f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <-0.102165334f ? 
             (data[1 /* X12 */] <-0.17327341f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.84550005f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.16822438f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <-0.14770374f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.38341475f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
            0.0f : 
             (data[5 /* X19 */] <0.1936729f ? 
                 (data[1 /* X12 */] <-0.34651786f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[10 /* X28 */] <0.25348285f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <0.08447273f ? 
             (data[1 /* X12 */] <-0.42993185f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.1590613f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20673242f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.42590904f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_134_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[11 /* X34 */] <-0.4356983f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2291765f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6658901f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31034142f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.29123667f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.13318467f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                 (data[5 /* X19 */] <-0.04780896f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <-0.076925f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90854174f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[11 /* X34 */] <-0.9477165f ? 
             (data[8 /* X23 */] <0.13873257f ? 
                 (data[4 /* X18 */] <-0.10249287f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1518981f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.209596f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[11 /* X34 */] <-0.4356983f ? 
            1.0f : 
             (data[5 /* X19 */] <0.09137885f ? 
                 (data[11 /* X34 */] <-0.28047448f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <0.024472095f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.11510387f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.026463922f ? 
                     (data[9 /* X27 */] <-0.26797324f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_135_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[4 /* X18 */] <-0.43783683f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.1830375f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.11243579f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17134778f ? 
                     (data[4 /* X18 */] <-0.5214959f ? 
                         (data[10 /* X28 */] <-0.07390741f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.51416785f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.047571853f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19506288f ? 
                         (data[6 /* X20 */] <-0.39510933f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.388949f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17370908f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23050809f ? 
                 (data[4 /* X18 */] <-0.4085373f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15272431f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.40865508f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13777858f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1777065f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6899045f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.048181627f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.3228673f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[1 /* X12 */] <-0.30160263f ? 
             (data[0 /* X5 */] <0.12895684f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49471778f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35096288f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16343744f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16424382f ? 
                 (data[2 /* X15 */] <0.083287686f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44302458f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_136_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[3 /* X17 */] <-0.40222302f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.3615058f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.053906586f ? 
                     (data[0 /* X5 */] <0.13082883f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <0.07631987f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5366676f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[11 /* X34 */] <-0.9477165f ? 
             (data[9 /* X27 */] <0.12880555f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <-0.1488932f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14373314f ? 
            1.0f : 
             (data[0 /* X5 */] <0.11465219f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[8 /* X23 */] <0.121722125f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03139623f ? 
                 (data[9 /* X27 */] <-0.0241427f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27240345f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2126452f ? 
                 (data[9 /* X27 */] <-0.041875828f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.07772308f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.02714771f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15992956f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_137_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19412692f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19308816f ? 
             (data[10 /* X28 */] <-0.013598683f ? 
                 (data[2 /* X15 */] <0.1380484f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.10524841f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14188206f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.58653516f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25076726f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22740774f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.04562988f ? 
                 (data[4 /* X18 */] <-0.11242559f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1392084f ? 
             (data[6 /* X20 */] <-0.47015467f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.84730077f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.90814185f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.6666667f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05764531f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07183959f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02285165f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.017980121f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.055325583f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.073924184f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (data[2 /* X15 */] <0.10328122f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.023735292f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.40865028f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39885733f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14974639f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.12969495f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.052613195f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.8197119f ? 
                    0.0f : 
                    1.0f))) : 
         (data[2 /* X15 */] <0.1511824f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.75222355f ? 
                 (data[4 /* X18 */] <-0.23562655f ? 
                     (data[1 /* X12 */] <-0.1925228f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_03_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.34422147f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.272602f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011544141f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04525741f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.0340925f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_138_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13033524f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.086915866f ? 
                 (data[6 /* X20 */] <-0.41178608f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.008775217f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.06529188f ? 
                 (data[5 /* X19 */] <0.20318863f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38613775f ? 
            1.0f : 
            0.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_03_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.105854385f ? 
             (data[8 /* X23 */] <0.12648675f ? 
                 (data[5 /* X19 */] <-0.015673053f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <0.35678554f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1518981f ? 
            1.0f : 
             (data[6 /* X20 */] <0.16548446f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.51340705f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.02829006f ? 
                    0.0f : 
                    1.0f)) : 
             (data[10 /* X28 */] <0.09395142f ? 
                 (data[6 /* X20 */] <-0.015713328f ? 
                     (data[10 /* X28 */] <-0.04364836f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44158864f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.123167574f ? 
            0.0f : 
             (data[10 /* X28 */] <0.3023042f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_139_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.30456254f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14188668f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1686878f ? 
                 (data[10 /* X28 */] <-0.20470534f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23186249f ? 
             (data[6 /* X20 */] <-0.39302474f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24125153f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38721034f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <0.044573184f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.017956812f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.08443569f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069755f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11580219f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08698191f ? 
            0.0f : 
             (data[10 /* X28 */] <0.029478982f ? 
                 (data[5 /* X19 */] <0.08899992f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
        0.114285715f : 
         (data[9 /* X27 */] <0.06563128f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0073749544f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.45059747f ? 
                     (data[6 /* X20 */] <-0.2665667f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4102478f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08809714f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <-0.047828406f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[2 /* X15 */] <0.094117515f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.3355808f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_140_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03846154f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
             (data[11 /* X34 */] <-0.38341475f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.22222008f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1931401f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.334751f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5228149f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.33052608f ? 
                0.0f : 
                1.0f)) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.105854385f ? 
             (data[11 /* X34 */] <-0.92067325f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.042719185f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <0.32666355f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.209596f ? 
             (data[5 /* X19 */] <-0.15603f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27850807f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.38283765f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.60221565f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44158864f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.050825104f ? 
                 (data[5 /* X19 */] <-0.04897809f ? 
                     (data[2 /* X15 */] <0.13327152f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <0.60384786f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_141_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[12 /* X35 */] <-0.49991006f ? 
             (data[0 /* X5 */] <0.10359433f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.310224f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.055325583f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.27503848f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.32726848f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.025279097f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.21358073f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53833f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25810957f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23186249f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.04274742f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3469762f ? 
                         (data[7 /* X21 */] <0.113241084f ? 
                             (data[4 /* X18 */] <-0.4927416f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17178585f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20499441f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (data[9 /* X27 */] <0.19583464f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[9 /* X27 */] <-0.3258105f ? 
            1.0f : 
             (data[0 /* X5 */] <0.09311851f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02856549f ? 
            0.0f : 
             (data[7 /* X21 */] <0.13397568f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.5432893f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15860532f ? 
             (data[10 /* X28 */] <-0.062420037f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09031379f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1797883f ? 
                 (data[10 /* X28 */] <0.008894483f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13116229f ? 
             (data[1 /* X12 */] <-0.28235325f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.15980034f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[12 /* X35 */] <-0.36248076f ? 
            0.0f : 
             (data[10 /* X28 */] <0.043838203f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20073552f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39707506f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_142_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.041735977f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.055325583f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.28616273f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.39510933f ? 
                         (data[11 /* X34 */] <-0.105771095f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19038399f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.055325583f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34070173f ? 
                     (data[1 /* X12 */] <-0.4154039f ? 
                         (data[10 /* X28 */] <-0.027449474f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4659855f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05991595f ? 
            0.0f : 
             (data[3 /* X17 */] <0.10447924f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15182327f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18991986f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18259232f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23408791f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0021072528f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.76923126f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17881489f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011544141f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[2 /* X15 */] <0.1799231f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39707506f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11681964f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21567653f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <0.5665139f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_143_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23649366f ? 
             (data[4 /* X18 */] <-0.32936642f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.100837536f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.08668937f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <0.05030266f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.30031642f ? 
                 (data[2 /* X15 */] <0.15715413f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1757124f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21508329f ? 
             (data[6 /* X20 */] <-0.31381017f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[5 /* X19 */] <-0.10131458f ? 
             (data[10 /* X28 */] <0.48358005f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004090309f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.209596f ? 
                1.0f : 
                 (data[3 /* X17 */] <0.009893963f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52672327f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011544141f ? 
                 (data[4 /* X18 */] <-0.54630727f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.12730277f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1565215f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.100547574f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[6 /* X20 */] <-0.27187473f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.07158875f ? 
                                0.0f : 
                                 (data[5 /* X19 */] <0.18917936f ? 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.161339f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f))))) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.017002376f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[5 /* X19 */] <-0.056114886f ? 
             (data[4 /* X18 */] <-0.20080888f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <0.48420218f ? 
             (data[7 /* X21 */] <0.17544489f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_144_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13005956f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.59809124f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.22836699f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.15958902f ? 
                    1.0f : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.047907073f ? 
            1.0f : 
             (data[7 /* X21 */] <0.06872267f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6658619f ? 
                     (data[6 /* X20 */] <-0.27003372f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.24289875f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014674051f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[6 /* X20 */] <-0.47105855f ? 
            1.0f : 
             (data[5 /* X19 */] <0.2460094f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29283702f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21066183f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010691182f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.013294122f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11462151f ? 
            1.0f : 
             (data[10 /* X28 */] <0.121378005f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17710441f ? 
             (data[0 /* X5 */] <0.11973868f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                     (data[10 /* X28 */] <0.14136164f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24684148f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.117153846f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.25177383f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[6 /* X20 */] <-0.065743566f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11963742f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18023323f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49758962f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_145_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[12 /* X35 */] <-0.4311954f ? 
             (data[8 /* X23 */] <0.17691238f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.38729438f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19038399f ? 
                 (data[6 /* X20 */] <-0.46164927f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.070178814f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17141148f ? 
                     (data[11 /* X34 */] <0.024036327f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1173783f ? 
                 (data[1 /* X12 */] <-0.4699094f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.16934648f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.18878119f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.6666667f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.123167574f ? 
             (data[2 /* X15 */] <0.114944115f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.056205142f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
         (data[3 /* X17 */] <-0.5027143f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16936839f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4334639f ? 
             (data[6 /* X20 */] <-0.12775503f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04249091f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18822794f ? 
             (data[2 /* X15 */] <0.09328445f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20192668f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.3566104f ? 
                        1.0f : 
                         (data[4 /* X18 */] <0.08576727f ? 
                            0.0f : 
                             (data[10 /* X28 */] <0.20178965f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_146_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.29465494f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39302474f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26539487f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[3 /* X17 */] <-0.28050125f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39302474f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.27696624f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16953048f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15272431f ? 
            0.0f : 
             (data[7 /* X21 */] <0.17971377f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.034316912f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.13937747f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.601212f ? 
             (data[7 /* X21 */] <0.23459949f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.13641505f ? 
                 (data[11 /* X34 */] <-0.379809f ? 
                     (data[10 /* X28 */] <0.07542849f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012586438f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39707506f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02805971f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011544141f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.10470331f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.18825155f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_147_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (data[5 /* X19 */] <0.06283168f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.035222672f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.2255569f ? 
                        1.0f : 
                         (data[11 /* X34 */] <0.37019062f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3186533f ? 
             (data[5 /* X19 */] <0.06521061f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <0.035222672f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11517287f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (data[4 /* X18 */] <-0.1686695f ? 
            0.0f : 
             (data[10 /* X28 */] <0.16445567f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.096475355f ? 
                     (data[10 /* X28 */] <0.3138813f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.272935f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.064341016f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.6065686f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2052371f ? 
                 (data[10 /* X28 */] <-0.062420037f ? 
                     (data[1 /* X12 */] <-0.2352992f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.33653983f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.21256351f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.19248344f ? 
             (data[0 /* X5 */] <0.11572423f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.18068913f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (data[4 /* X18 */] <-0.11644301f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.10249161f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23726434f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.50620514f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_148_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[9 /* X27 */] <0.12658891f ? 
             (data[10 /* X28 */] <-0.1847651f ? 
                 (data[11 /* X34 */] <0.05288242f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19038399f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.27847907f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.4519242f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.06872267f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31057015f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.87020564f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.84550005f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.25169623f ? 
                 (data[1 /* X12 */] <-0.30091336f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.31557527f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.32710072f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17393328f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <-0.43840712f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f) : 
                     (data[12 /* X35 */] <-0.84730077f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
        0.6666667f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15179883f ? 
         (data[9 /* X27 */] <-0.102833465f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.026845068f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46262223f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X21 */] <0.106227905f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13584472f ? 
             (data[10 /* X28 */] <-0.26632097f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16086632f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3895629f ? 
                     (data[1 /* X12 */] <-0.22659065f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.15159893f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X21 */] <0.14068393f ? 
            1.0f : 
             (data[5 /* X19 */] <0.1936729f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.09143965f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[5 /* X19 */] <-0.052546486f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.048193656f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.086582996f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_149_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (data[6 /* X20 */] <-0.40970147f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.101939976f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.4013631f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.315975f ? 
             (data[6 /* X20 */] <-0.5076774f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22443458f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1830667f ? 
             (data[6 /* X20 */] <0.05724744f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.007220202f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.019709416f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10719352f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055162847f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.115634315f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17394999f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[11 /* X34 */] <-0.7690499f ? 
             (data[4 /* X18 */] <-0.20884374f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011544141f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.251268f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (data[7 /* X21 */] <0.1031787f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27404514f ? 
                 (data[2 /* X15 */] <0.13160539f ? 
                     (data[10 /* X28 */] <0.33963817f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.272602f ? 
             (data[8 /* X23 */] <0.1457605f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13997327f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_150_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.40970147f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3846125f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.25454858f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53833f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.116275586f ? 
                 (data[6 /* X20 */] <-0.41178608f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1283582f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.018181818f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.041303817f ? 
             (data[8 /* X23 */] <0.09670783f ? 
                 (data[5 /* X19 */] <0.008116259f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.56430334f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16568248f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11958374f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20492955f ? 
             (data[1 /* X12 */] <-0.56467754f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19466162f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27404514f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.146876f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12194173f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.67685014f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.093757786f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_151_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.39406702f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.05093266f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.096426666f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.39406702f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20753333f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.10965928f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09789701f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.7273372f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22282588f ? 
             (data[0 /* X5 */] <0.08319405f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.15443467f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15919434f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20753333f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.23021011f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.24633968f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X18 */] <-0.18741748f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.21256351f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26253387f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025218546f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12966317f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.061812613f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12909696f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.34275782f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.34422147f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.013895592f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.08516933f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_152_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.106488965f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38729438f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16161022f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29821816f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <0.09998922f ? 
             (data[3 /* X17 */] <-0.37391564f ? 
                 (data[3 /* X17 */] <-0.49508643f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08344164f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.38920313f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2605938f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (data[6 /* X20 */] <-0.29921803f ? 
                 (data[11 /* X34 */] <-0.076925f ? 
                     (data[6 /* X20 */] <-0.5313896f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.068358436f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.24986508f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.03655926f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055162847f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.68445146f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
             (data[6 /* X20 */] <-0.101181656f ? 
                 (data[2 /* X15 */] <0.15326506f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                         (data[10 /* X28 */] <-0.06265383f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.5967598f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
             (data[9 /* X27 */] <0.05407513f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10304297f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.16076262f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[5 /* X19 */] <-0.039462365f ? 
             (data[6 /* X20 */] <0.036401507f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.74006075f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.47328156f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_153_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.08395887f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1682941f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23155028f ? 
             (data[6 /* X20 */] <-0.3450791f ? 
                 (data[8 /* X23 */] <0.10186951f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08578889f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.05123395f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.045989648f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13474612f ? 
             (data[6 /* X20 */] <-0.34716368f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.0911491f ? 
             (data[8 /* X23 */] <0.08591776f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13832995f ? 
             (data[6 /* X20 */] <-0.030305482f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22179282f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33474752f ? 
                     (data[10 /* X28 */] <-0.032226603f ? 
                         (data[12 /* X35 */] <-0.32812345f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.055288855f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.272602f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15701385f ? 
             (data[8 /* X23 */] <0.1010754f ? 
                 (data[1 /* X12 */] <-0.70583963f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.67969143f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_154_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10832748f ? 
             (data[11 /* X34 */] <-0.22836699f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.09366987f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.5508368f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2706706f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (data[6 /* X20 */] <-0.4357589f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21032993f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16953048f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21254964f ? 
             (data[8 /* X23 */] <0.14633936f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23988178f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.060089674f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.08798193f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05262677f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17055956f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26783583f ? 
             (data[11 /* X34 */] <-0.5889432f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.35524023f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.073857315f ? 
             (data[12 /* X35 */] <0.06889453f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19129397f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.22190079f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_03_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_155_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.032350827f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17159246f ? 
                 (data[9 /* X27 */] <0.12233147f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22057314f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.2460094f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.11065692f ? 
                         (data[9 /* X27 */] <0.24623193f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05388966f ? 
             (data[9 /* X27 */] <0.111472115f ? 
                 (data[10 /* X28 */] <-0.1682863f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.81219506f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.053942494f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17755106f ? 
             (data[9 /* X27 */] <-0.21466614f ? 
                 (data[2 /* X15 */] <0.126607f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22490855f ? 
             (data[8 /* X23 */] <0.084696986f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2917216f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.8125004f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14803895f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.4143901f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[8 /* X23 */] <0.18260252f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36487785f ? 
             (data[9 /* X27 */] <-0.2742227f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14739218f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.23291154f ? 
                     (data[11 /* X34 */] <-0.35096288f ? 
                         (data[5 /* X19 */] <0.14609428f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3768506f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4305502f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23607318f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2836372f ? 
            0.0f : 
             (data[8 /* X23 */] <0.109413505f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_156_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[11 /* X34 */] <-0.4356983f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2557319f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3270253f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.44513956f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.27646402f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.20332673f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21326113f ? 
                 (data[8 /* X23 */] <0.112986974f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <0.02583921f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90854174f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2246051f ? 
            0.0f : 
             (data[0 /* X5 */] <0.09422123f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.29758358f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[5 /* X19 */] <-0.15484053f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27296972f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.3793069f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[5 /* X19 */] <0.1936729f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1725142f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.45791778f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
         (data[5 /* X19 */] <-0.115588166f ? 
             (data[0 /* X5 */] <0.10965928f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_157_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[1 /* X12 */] <-0.31122732f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.39234596f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20874318f ? 
                 (data[6 /* X20 */] <-0.40761688f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47397342f ? 
                     (data[11 /* X34 */] <0.28365117f ? 
                         (data[4 /* X18 */] <-0.08564277f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90854174f ? 
         (data[6 /* X20 */] <-0.47119698f ? 
            1.0f : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_03_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04161299f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.13328859f ? 
                0.0f : 
                1.0f)) : 
        0.02f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1916767f ? 
             (data[1 /* X12 */] <-0.2943426f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.48997593f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3083535f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16176723f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.4356983f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21583429f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.25504074f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (data[1 /* X12 */] <-0.6031763f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.13994236f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (data[5 /* X19 */] <0.19180274f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4774867f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_158_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.28847727f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3414846f ? 
             (data[9 /* X27 */] <-0.015276133f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.1410905f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.11440662f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[7 /* X21 */] <0.08610315f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3478514f ? 
                1.0f : 
                0.0f)) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23947822f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.35410047f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.209596f ? 
             (data[7 /* X21 */] <0.10901828f ? 
                 (data[7 /* X21 */] <0.09538997f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07527268f ? 
             (data[12 /* X35 */] <0.023084765f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.13327152f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08564277f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.020277837f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48118243f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[9 /* X27 */] <-0.031900942f ? 
             (data[0 /* X5 */] <0.09808074f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19320735f ? 
                     (data[12 /* X35 */] <0.068182185f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18519546f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.1741322f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_159_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.08395887f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25323272f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.051017813f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.254995f ? 
                 (data[9 /* X27 */] <-0.006409568f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11754392f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.37843257f ? 
                             (data[8 /* X23 */] <0.103515215f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <-0.102165334f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[11 /* X34 */] <-0.9477165f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18575455f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.08981036f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.08722586f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.269278f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.36772212f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2836372f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022904014f ? 
                 (data[2 /* X15 */] <0.13525386f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13121118f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44158864f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
             (data[2 /* X15 */] <0.124230474f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_160_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.39406702f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38472238f ? 
                 (data[7 /* X21 */] <0.09128679f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22240935f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.47119698f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2690285f ? 
                 (data[5 /* X19 */] <0.22697794f ? 
                     (data[3 /* X17 */] <-0.35976195f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21679933f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.070797294f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.11502499f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16238853f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[8 /* X23 */] <0.15229514f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16424382f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1936729f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17582236f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.43917596f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2572629f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17422521f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.23562655f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31379157f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27300286f ? 
             (data[9 /* X27 */] <0.08890601f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14535813f ? 
                     (data[4 /* X18 */] <-0.20348717f ? 
                         (data[3 /* X17 */] <0.034916047f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[10 /* X28 */] <0.35112554f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X15 */] <0.12418131f ? 
                     (data[4 /* X18 */] <-0.19277404f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.37467957f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (data[10 /* X28 */] <0.40138283f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_03_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_161_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[11 /* X34 */] <-0.33293408f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.066258885f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26545504f ? 
                    1.0f : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.5610378f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.013598683f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.22834185f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31321332f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18757032f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20956784f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.39406702f ? 
             (data[0 /* X5 */] <0.06334513f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.058197424f ? 
                     (data[6 /* X20 */] <-0.44373897f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90735227f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.030303031f : 
         (data[9 /* X27 */] <0.13323884f ? 
             (data[6 /* X20 */] <0.005132606f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24308181f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.00763248f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[6 /* X20 */] <-0.01779792f ? 
             (data[9 /* X27 */] <0.12880555f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18993193f ? 
                     (data[4 /* X18 */] <-0.70700413f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17278989f ? 
             (data[12 /* X35 */] <-0.09143965f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (data[1 /* X12 */] <-0.571094f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26290327f ? 
                 (data[8 /* X23 */] <0.11933981f ? 
                     (data[2 /* X15 */] <0.13327152f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18023323f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49758962f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.47432387f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_162_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.39406702f ? 
             (data[3 /* X17 */] <-0.22388647f ? 
                 (data[7 /* X21 */] <0.124218225f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24001898f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.39406702f ? 
             (data[3 /* X17 */] <-0.22388647f ? 
                 (data[9 /* X27 */] <0.41918558f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1995001f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.025505926f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36797443f ? 
                 (data[0 /* X5 */] <0.060036972f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07720883f ? 
             (data[9 /* X27 */] <-0.19925736f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                     (data[1 /* X12 */] <-0.4656604f ? 
                         (data[12 /* X35 */] <-0.11164546f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.068311095f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06019909f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.236429f ? 
                 (data[10 /* X28 */] <0.20178965f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[6 /* X20 */] <-0.07720883f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19101201f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.069573075f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12509733f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.29090852f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_163_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
         (data[9 /* X27 */] <-0.015276133f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.32936642f ? 
                 (data[4 /* X18 */] <-0.5454242f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.05288242f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.078733824f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.26096505f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20408195f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2460094f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3395759f ? 
                 (data[4 /* X18 */] <-0.23620959f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29283702f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24906741f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[5 /* X19 */] <-0.16554572f ? 
            1.0f : 
             (data[8 /* X23 */] <0.12658684f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11065692f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-8.097951E-5f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.38341475f ? 
             (data[2 /* X15 */] <0.12244169f ? 
                 (data[0 /* X5 */] <0.18170996f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1800888f ? 
             (data[11 /* X34 */] <-0.2572131f ? 
                 (data[6 /* X20 */] <-0.44080752f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.49991006f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0858925f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.12312297f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[9 /* X27 */] <0.08447273f ? 
             (data[4 /* X18 */] <-0.11510387f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15826343f ? 
                     (data[3 /* X17 */] <-0.43902263f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14920312f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26125285f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_164_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11710262f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19466162f ? 
                 (data[7 /* X21 */] <0.11956702f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.1772938f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.15972681f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1521904f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13557315f ? 
             (data[7 /* X21 */] <0.116290286f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23520589f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.30408517f ? 
                        0.0f : 
                        1.0f))) : 
             (data[10 /* X28 */] <-0.053804506f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11537503f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[11 /* X34 */] <-0.6917074f ? 
             (data[10 /* X28 */] <0.098403245f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.119802915f ? 
             (data[8 /* X23 */] <0.1010754f ? 
                 (data[11 /* X34 */] <-0.9711539f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.224956f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.31392157f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.36733487f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[2 /* X15 */] <0.09578364f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2567199f ? 
                 (data[7 /* X21 */] <0.103483625f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.099708065f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.029191233f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.06157438f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[8 /* X23 */] <0.2690744f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.3614896f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.46201414f ? 
            1.0f : 
             (data[10 /* X28 */] <0.5660245f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_165_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[12 /* X35 */] <1.7988282E-4f ? 
             (data[5 /* X19 */] <0.079484195f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.42176715f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0993619f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.35079268f ? 
                 (data[6 /* X20 */] <-0.37843257f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.13955365f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2691783f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[9 /* X27 */] <0.072281204f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
             (data[6 /* X20 */] <0.007217199f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[12 /* X35 */] <0.021176025f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08564277f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46314105f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.10326625f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
             (data[9 /* X27 */] <-0.039659187f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.31410074f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.22000349f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_166_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.3286238f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.032350827f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20475042f ? 
                     (data[6 /* X20 */] <-0.38677096f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.26726997f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08618595f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.50077647f ? 
                 (data[6 /* X20 */] <-0.4368012f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3615058f ? 
             (data[6 /* X20 */] <-0.47432387f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14871854f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.20966947f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18396752f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09648039f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15669659f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.028575981f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.1785006f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2172132f ? 
             (data[10 /* X28 */] <-0.062420037f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.056391247f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.041190624f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16685696f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26902613f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31379157f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41430613f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.050254986f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.099948965f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_167_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
             (data[3 /* X17 */] <-0.3654234f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2686621f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.2815569f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12564869f ? 
             (data[5 /* X19 */] <0.0810735f ? 
                 (data[2 /* X15 */] <0.12327475f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2567828f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.35126972f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.97655827f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (data[0 /* X5 */] <0.09394555f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14737295f ? 
                 (data[3 /* X17 */] <-0.590433f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21407872f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.034316912f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.11329848f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[5 /* X19 */] <0.27808604f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16424382f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[5 /* X19 */] <-0.22501901f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34359407f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.42762974f ? 
                     (data[3 /* X17 */] <-0.35976195f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025218546f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38271585f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07353687f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18740089f ? 
             (data[5 /* X19 */] <-0.08620085f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.0315287f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20161584f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.119942494f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2515582f ? 
                 (data[5 /* X19 */] <0.17243844f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_03_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_168_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.051017813f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13385184f ? 
                 (data[1 /* X12 */] <-0.4002231f ? 
                     (data[0 /* X5 */] <0.12486873f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <-0.055175677f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2368178f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.22461388f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[7 /* X21 */] <0.11994933f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029914498f ? 
                 (data[12 /* X35 */] <-0.25177383f ? 
                     (data[8 /* X23 */] <0.11243792f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13116229f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.34811437f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.15318862f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.28998125f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20449848f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05898445f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13570043f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06205477f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.11744594f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3166634f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.032201633f ? 
                     (data[12 /* X35 */] <0.28977624f ? 
                         (data[9 /* X27 */] <0.015756845f ? 
                             (data[8 /* X23 */] <0.14459233f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.21420029f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[7 /* X21 */] <0.14800203f ? 
             (data[1 /* X12 */] <-0.49195763f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.13123606f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5105129f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_169_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3061323f ? 
            0.0f : 
             (data[8 /* X23 */] <0.18247111f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.1385239f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.41354597f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34339336f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.461535f ? 
                         (data[5 /* X19 */] <0.08899992f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[4 /* X18 */] <-0.58246404f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.34792277f ? 
                 (data[3 /* X17 */] <-0.22367872f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.60298204f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.012820513f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.105854385f ? 
            0.0f : 
             (data[8 /* X23 */] <0.2158235f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20035373f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.22671722f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.11609495f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.24087091f ? 
                     (data[2 /* X15 */] <0.12715942f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12301145f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25348285f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1021647f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.0845397f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5105129f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_170_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[10 /* X28 */] <-0.16150147f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.38538563f ? 
                 (data[8 /* X23 */] <0.11541916f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <6.224999E-5f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X28 */] <-0.14971912f ? 
                     (data[5 /* X19 */] <0.5838176f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.079058856f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15070693f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.07787029f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2605938f ? 
         (data[6 /* X20 */] <-0.39406702f ? 
             (data[0 /* X5 */] <0.05908839f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.086408064f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26572868f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.3926896f ? 
                    1.0f : 
                    0.0f))) : 
        0.6666667f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.070797294f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.025505926f ? 
             (data[0 /* X5 */] <0.11326223f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05991595f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.8197119f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.14396529f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.12370611f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.102223955f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.12494088f ? 
                     (data[3 /* X17 */] <-0.48431444f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.14456497f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.076925f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.236429f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.1682602f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.025093999f ? 
            0.0f : 
             (data[8 /* X23 */] <0.1177516f ? 
                 (data[8 /* X23 */] <0.10001143f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.100837536f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_171_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07183959f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22972076f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.30880862f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20107809f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16258974f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.20332673f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3305199f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.43681875f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[6 /* X20 */] <-0.39406702f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3530613f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07183959f ? 
             (data[5 /* X19 */] <-0.13699855f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <-0.11497354f ? 
                 (data[9 /* X27 */] <-0.3418683f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[5 /* X19 */] <0.3257036f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0084172515f ? 
             (data[11 /* X34 */] <-0.2572131f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
        0.012658228f : 
         (data[5 /* X19 */] <-0.115588166f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.15607576f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_172_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23316038f ? 
             (data[10 /* X28 */] <-0.022214217f ? 
                 (data[11 /* X34 */] <-0.30769375f ? 
                     (data[1 /* X12 */] <-0.3452312f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.5522522f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2803481f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.1772938f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.77858615f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17744404f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48152357f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90854174f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[5 /* X19 */] <-0.014483588f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.020979185f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.269278f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.5384625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
             (data[10 /* X28 */] <-0.07677926f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21354268f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.2761206f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.35969138f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12499765f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[1 /* X12 */] <-0.7111867f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.056114886f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3870205f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <0.44158864f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_173_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.40829054f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.115525275f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.15444888f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29696858f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3846125f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.07988589f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.22886895f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <0.02583921f ? 
            0.0f : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_03_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0045799036f ? 
            0.0f : 
             (data[5 /* X19 */] <0.06996847f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49758962f ? 
                 (data[12 /* X35 */] <-0.45791778f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012586438f ? 
            0.0f : 
             (data[8 /* X23 */] <0.1177516f ? 
                 (data[11 /* X34 */] <-0.48798183f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_174_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03846154f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2973851f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.06456208f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07122362f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1166244f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.36175582f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[5 /* X19 */] <0.1982089f ? 
                 (data[12 /* X35 */] <-0.8806819f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.010650877f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.50035536f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.7674284f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[11 /* X34 */] <-0.9224761f ? 
            1.0f : 
             (data[2 /* X15 */] <0.13077232f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.17968547f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.23596306f ? 
                 (data[0 /* X5 */] <0.10546589f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
         (data[5 /* X19 */] <-0.22501901f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25960296f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.27396694f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.37669528f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
             (data[12 /* X35 */] <0.3857454f ? 
                 (data[10 /* X28 */] <-0.09104866f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.3710849f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.704505f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.052453738f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.056725454f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18408842f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1416381f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_175_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[11 /* X34 */] <-0.4356983f ? 
            0.0f : 
             (data[5 /* X19 */] <0.1318207f ? 
                 (data[6 /* X20 */] <-0.3325715f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.126607f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.27546728f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31167847f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.70605403f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1361245f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <-0.20492955f ? 
             (data[5 /* X19 */] <0.35544023f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[9 /* X27 */] <-0.021926057f ? 
             (data[12 /* X35 */] <0.11088682f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13391908f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.11502499f ? 
             (data[12 /* X35 */] <-0.04562988f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (data[1 /* X12 */] <-0.37646133f ? 
                 (data[12 /* X35 */] <0.29794335f ? 
                     (data[0 /* X5 */] <0.085399486f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.38920313f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[7 /* X21 */] <0.09128679f ? 
             (data[5 /* X19 */] <0.0033583972f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_176_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[2 /* X15 */] <0.13410458f ? 
             (data[3 /* X17 */] <-0.47016075f ? 
                 (data[7 /* X21 */] <0.16809683f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.665463f ? 
                     (data[3 /* X17 */] <-0.02448776f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.022725f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45021856f ? 
                     (data[6 /* X20 */] <-0.53686166f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X21 */] <0.11319354f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29696858f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22903174f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.39632344f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <7.605382E-4f ? 
                    0.0f : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.32048848f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.13327152f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06205477f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13914086f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16159569f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15893097f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.114113234f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5889432f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.046309114f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[4 /* X18 */] <-0.591838f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.3257931f ? 
                 (data[11 /* X34 */] <-0.30769375f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.029889343f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.3414846f ? 
            0.0f : 
             (data[7 /* X21 */] <0.08482122f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
        0.04411765f : 
         (data[2 /* X15 */] <0.126607f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.159233f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5218364f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_177_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19412692f ? 
         (data[11 /* X34 */] <-0.46093863f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3395759f ? 
                 (data[6 /* X20 */] <-0.47015467f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.11243579f ? 
             (data[7 /* X21 */] <0.11446077f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <-0.102165334f ? 
             (data[12 /* X35 */] <-0.70605403f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05687288f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.04592588f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.13452111f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18408842f ? 
                 (data[12 /* X35 */] <-0.38192222f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <6.224999E-5f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.5955801f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
             (data[2 /* X15 */] <0.08661994f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21325505f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14688495f ? 
                        0.0f : 
                        1.0f))) : 
             (data[12 /* X35 */] <-0.06853477f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_178_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19412692f ? 
         (data[1 /* X12 */] <-0.41589898f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.29587007f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16479518f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.20476829f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23520933f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46281254f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22557178f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
         (data[6 /* X20 */] <-0.25648385f ? 
             (data[7 /* X21 */] <0.11446077f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.12827465f ? 
                     (data[8 /* X23 */] <0.12278385f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47105855f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.41802242f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010691182f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.13054149f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <0.175228f ? 
            1.0f : 
             (data[0 /* X5 */] <0.088156275f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[6 /* X20 */] <-0.20422041f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13760918f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12730277f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.29325178f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16920605f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20349759f ? 
                         (data[6 /* X20 */] <-0.16897254f ? 
                             (data[7 /* X21 */] <0.17934792f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.119019724f ? 
                     (data[11 /* X34 */] <-0.30769375f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27300286f ? 
             (data[2 /* X15 */] <0.082012445f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.43083537f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16063465f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_179_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14974639f ? 
             (data[9 /* X27 */] <0.07117288f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.58514035f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3184444f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.13164902f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[11 /* X34 */] <0.15354806f ? 
                 (data[1 /* X12 */] <-0.065214306f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19038399f ? 
             (data[9 /* X27 */] <0.07560616f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5889462f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19982415f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.3645464f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.30023938f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15179883f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11659468f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07237586f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03139623f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17856748f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3108956f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42484388f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (data[4 /* X18 */] <-0.20348717f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.40505376f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21324566f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20312665f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[11 /* X34 */] <-0.41045797f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.033009265f ? 
                 (data[11 /* X34 */] <-0.07776061f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16532622f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23834579f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27517673f ? 
                         (data[2 /* X15 */] <0.29243892f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_180_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.29465494f ? 
            1.0f : 
             (data[0 /* X5 */] <0.08705356f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.3294073f ? 
                     (data[7 /* X21 */] <0.15227091f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08578889f ? 
             (data[3 /* X17 */] <-0.08778252f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.05123395f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.37426338f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.118756704f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.47700518f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.0911491f ? 
             (data[3 /* X17 */] <-0.23957212f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.13327152f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07183959f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.20228758f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14246514f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1264516f ? 
                 (data[6 /* X20 */] <0.005132606f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19374013f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.16266024f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15919434f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2568506f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.22954795f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.16324806f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.25023654f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[5 /* X19 */] <-0.069199f ? 
            0.0f : 
             (data[8 /* X23 */] <0.1443541f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13978276f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
        0.0f : 
         (data[12 /* X35 */] <0.15954758f ? 
             (data[0 /* X5 */] <0.09256715f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.8701926f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.56467754f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20198064f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33653983f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_181_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[2 /* X15 */] <0.10411428f ? 
            0.0f : 
             (data[0 /* X5 */] <0.111864716f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.24385448f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.54190236f ? 
                             (data[11 /* X34 */] <0.43269077f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))) : 
         (data[10 /* X28 */] <-0.08395887f ? 
             (data[8 /* X23 */] <0.1668317f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3846125f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3075564f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (data[6 /* X20 */] <-0.4722393f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13998403f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18032362f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.009613281f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.08458913f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.056205142f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16445567f ? 
             (data[3 /* X17 */] <-0.13613357f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18227194f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
         (data[9 /* X27 */] <-0.2114489f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18783133f ? 
             (data[3 /* X17 */] <-0.2776705f ? 
                 (data[11 /* X34 */] <-0.30769375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.63139623f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23505338f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26784205f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_182_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06824888f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13117355f ? 
                 (data[3 /* X17 */] <-0.30880862f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23276997f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.3409099f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
        0.029850746f : 
         (data[4 /* X18 */] <-0.35079268f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.3767464f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.51912844f ? 
             (data[3 /* X17 */] <-0.04838066f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10719352f ? 
             (data[5 /* X19 */] <-0.09417778f ? 
                 (data[6 /* X20 */] <0.13026363f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17409165f ? 
                 (data[3 /* X17 */] <-0.25785533f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[3 /* X17 */] <-0.21256351f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.049066823f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.10161509f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0012768909f ? 
             (data[6 /* X20 */] <-0.28254128f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7948421f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[9 /* X27 */] <-0.03855087f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.07492964f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_183_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[3 /* X17 */] <-0.24936312f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32760087f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.3107433f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.39510933f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.22674392f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.36418408f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.4357589f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.3286238f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
                 (data[6 /* X20 */] <-0.4409704f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12868117f ? 
             (data[3 /* X17 */] <-0.093672484f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.026845068f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23947822f ? 
            0.0f : 
             (data[11 /* X34 */] <0.100959376f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.01672633f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16372041f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13709989f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[6 /* X20 */] <-0.065743566f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11863293f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.30769375f ? 
             (data[6 /* X20 */] <-0.16997324f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15045984f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.60384786f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_184_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.01790645f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.24098311f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.25240976f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.08395887f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6658619f ? 
                 (data[7 /* X21 */] <0.06933251f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.5724422f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.084044024f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24496679f ? 
                 (data[4 /* X18 */] <-0.524881f ? 
                     (data[5 /* X19 */] <-0.07276741f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.14792757f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.20793018f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23337993f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.030303031f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4356983f ? 
             (data[7 /* X21 */] <0.09189664f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22888274f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.010650877f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20351489f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                 (data[1 /* X12 */] <-0.5603999f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.021488504f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25360733f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27776366f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_03_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_185_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.022725f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17056616f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0049831504f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                     (data[9 /* X27 */] <0.17535502f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46249214f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.20596406f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.4659855f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.38417336f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13943267f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08226256f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20776647f ? 
                 (data[10 /* X28 */] <0.49471778f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <0.02910543f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.124008544f ? 
                 (data[7 /* X21 */] <0.14495282f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4334639f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3149984f ? 
                 (data[9 /* X27 */] <-0.24595141f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.47924945f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40585902f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15542208f ? 
                 (data[1 /* X12 */] <-0.5996759f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[1 /* X12 */] <-0.6769656f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18825155f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.033009265f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4774867f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[6 /* X20 */] <-0.47328156f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_186_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3088915f ? 
             (data[3 /* X17 */] <-0.39656153f ? 
                 (data[3 /* X17 */] <-0.47358155f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3186533f ? 
                 (data[6 /* X20 */] <-0.41178608f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.01790645f ? 
             (data[11 /* X34 */] <-0.38341475f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.36629823f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.031323384f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X21 */] <0.08249299f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <-0.102165334f ? 
             (data[3 /* X17 */] <-0.21539426f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26239643f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[0 /* X5 */] <0.090086035f ? 
             (data[5 /* X19 */] <-0.06087275f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17881489f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19317411f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.22954795f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.04838066f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049581893f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.11510387f ? 
                 (data[0 /* X5 */] <0.07988589f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_187_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.33293408f ? 
            0.0f : 
             (data[9 /* X27 */] <0.07117288f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.3280482f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.1949511f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.20596406f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07051037f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2126452f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.09075869f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[0 /* X5 */] <0.09091307f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.14283168f ? 
                     (data[2 /* X15 */] <0.22410929f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.030303031f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13777858f ? 
             (data[10 /* X28 */] <-0.08539479f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20837632f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[2 /* X15 */] <0.124107815f ? 
                 (data[10 /* X28 */] <0.50046146f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18050891f ? 
             (data[9 /* X27 */] <-0.039659187f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.09179886f ? 
                    0.0f : 
                     (data[1 /* X12 */] <0.012803937f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.125373f ? 
            0.0f : 
             (data[2 /* X15 */] <0.15683368f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10326625f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_188_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[11 /* X34 */] <-0.4356983f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.32936642f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06484889f ? 
                     (data[5 /* X19 */] <-0.015673053f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.07988589f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.16032106f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18525049f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <-0.20492955f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15266527f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23307277f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.3101579f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010691182f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.09650322f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <-0.11502499f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12621938f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[11 /* X34 */] <-0.4356983f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02939885f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.116275586f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2235506f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.13358851f ? 
                     (data[2 /* X15 */] <0.2852725f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[2 /* X15 */] <0.12452435f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11881617f ? 
                 (data[5 /* X19 */] <0.017631985f ? 
                     (data[4 /* X18 */] <-0.3748972f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.6480915f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.08668937f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.07898863f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.083705045f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.22357428f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_03_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_189_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22578847f ? 
         (data[1 /* X12 */] <-0.31229672f ? 
             (data[12 /* X35 */] <-0.31667098f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1828981f ? 
             (data[9 /* X27 */] <0.19308816f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.540509f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13391908f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.027957905f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.26273394f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (data[6 /* X20 */] <-0.38468635f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17019935f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23842934f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.16684635f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17285725f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.070797294f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.76754296f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.065585814f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858565f ? 
         (data[5 /* X19 */] <-0.22508289f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3857454f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14312984f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.15196197f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.07498114f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.17710032f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[1 /* X12 */] <-0.3685109f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X21 */] <0.14342822f ? 
            1.0f : 
             (data[9 /* X27 */] <0.18643823f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5410666f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17204744f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.50961643f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_03_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (data[1 /* X12 */] <-0.4038775f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.44303447f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_190_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03846154f : 
         (data[11 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.4384871f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.07632047f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.36175582f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[6 /* X20 */] <-0.36071354f ? 
             (data[1 /* X12 */] <-0.34651786f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[6 /* X20 */] <0.005132606f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.6224257f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43155518f ? 
                 (data[6 /* X20 */] <0.055162847f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
        0.05f : 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[11 /* X34 */] <-0.82112396f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35544023f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.43501288f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12431608f ? 
         (data[6 /* X20 */] <-0.060532086f ? 
             (data[1 /* X12 */] <-0.64167506f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.92067325f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5460796f ? 
            0.0f : 
             (data[12 /* X35 */] <0.6593663f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_03_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_191_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.3286238f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.22491342f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04518897f ? 
                     (data[3 /* X17 */] <-0.22472684f ? 
                         (data[6 /* X20 */] <-0.29504883f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.3217923f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[11 /* X34 */] <-0.076925f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15266527f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26239643f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.10592563f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
            0.0f : 
             (data[0 /* X5 */] <0.09587531f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19556047f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09380212f ? 
            1.0f : 
             (data[10 /* X28 */] <0.48323038f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[4 /* X18 */] <-0.18741748f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.24087091f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055162847f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.35079548f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31379157f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6128855f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15817887f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.6737573f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48323038f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_192_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03846154f : 
         (data[10 /* X28 */] <-0.07247149f ? 
             (data[8 /* X23 */] <0.11219287f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22388647f ? 
                 (data[0 /* X5 */] <0.10304297f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17134778f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44913793f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1454976f ? 
             (data[6 /* X20 */] <-0.4659855f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.087494805f ? 
                 (data[6 /* X20 */] <-0.38677096f ? 
                     (data[8 /* X23 */] <0.1010754f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[10 /* X28 */] <0.23050809f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[0 /* X5 */] <0.10249161f ? 
            1.0f : 
             (data[10 /* X28 */] <0.1730712f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09789701f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.605228f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08450491f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11434453f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.003041761f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.5099265f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41430613f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.025734752f ? 
                 (data[3 /* X17 */] <-0.6459252f ? 
                     (data[11 /* X34 */] <-0.25000155f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[0 /* X5 */] <0.10249161f ? 
            0.0f : 
             (data[10 /* X28 */] <0.19030227f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44158864f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_03_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_193_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03846154f : 
         (data[10 /* X28 */] <-0.026521983f ? 
             (data[11 /* X34 */] <-0.45913574f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18032362f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.094672196f ? 
                        0.0f : 
                        1.0f))) : 
             (data[3 /* X17 */] <-0.33711603f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16992633f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2605938f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53810173f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.32006395f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.6666667f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.09218157f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15826343f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.070797294f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (data[4 /* X18 */] <-0.591838f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (data[6 /* X20 */] <-0.053236008f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14435275f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[9 /* X27 */] <0.06563128f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.073857315f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.21760619f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[9 /* X27 */] <0.08447273f ? 
             (data[2 /* X15 */] <0.15826343f ? 
                 (data[3 /* X17 */] <-0.5182833f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.21878757f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.33368492f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.3440368f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_03_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_194_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[1 /* X12 */] <-0.31229672f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.111398764f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.40447307f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4502828f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22238687f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31167847f ? 
            0.0f : 
             (data[5 /* X19 */] <0.24125153f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.46634728f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_03_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.39406702f ? 
             (data[6 /* X20 */] <-0.47073206f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.2460094f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22813213f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09789701f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.27884766f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1701625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004090309f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06260024f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.61778927f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16617754f ? 
             (data[3 /* X17 */] <-0.48895726f ? 
                 (data[1 /* X12 */] <-0.37259176f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.66826993f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2089039f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6033418f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13977458f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.17083202f ? 
                                 (data[6 /* X20 */] <-0.0899538f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.5637028f ? 
                 (data[11 /* X34 */] <-0.6919284f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.34223074f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_03_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_195_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.053420663f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.40222302f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.043838203f ? 
                 (data[5 /* X19 */] <0.22697794f ? 
                     (data[3 /* X17 */] <-0.3274265f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7187476f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08578889f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.24795635f ? 
                 (data[8 /* X23 */] <0.13213776f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.3286238f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25076726f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.3827236f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24245691f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.0965093f ? 
             (data[3 /* X17 */] <-0.23989785f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16112645f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07183959f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.4356983f ? 
             (data[3 /* X17 */] <-0.021611841f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <-0.15127213f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[8 /* X23 */] <0.11556781f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022904014f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49471778f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18000059f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.14643255f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[7 /* X21 */] <0.09128679f ? 
             (data[3 /* X17 */] <0.0054033753f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <0.02714771f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16158383f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.33890578f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24329714f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2147463f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17908408f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_03_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_196_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.090485275f ? 
         (data[5 /* X19 */] <0.22578847f ? 
             (data[1 /* X12 */] <-0.31229672f ? 
                 (data[6 /* X20 */] <-0.41178608f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.15772162f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22985554f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16936839f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.17345175f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[9 /* X27 */] <0.07449784f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06847123f ? 
                 (data[4 /* X18 */] <-0.36954063f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.25169837f ? 
                         (data[0 /* X5 */] <0.12730277f ? 
                             (data[8 /* X23 */] <0.15475687f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09284283f ? 
         (data[5 /* X19 */] <0.08424206f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08832105f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23948717f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05724744f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20228004f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28526175f ? 
             (data[4 /* X18 */] <-0.68825614f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023774436f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.10661347f ? 
                         (data[5 /* X19 */] <0.05089985f ? 
                            0.0f : 
                            1.0f) : 
                         (data[6 /* X20 */] <-0.07825113f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[10 /* X28 */] <0.058197424f ? 
                 (data[11 /* X34 */] <-0.379809f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.008584265f ? 
                     (data[12 /* X35 */] <-0.3391509f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.3614896f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_03_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1798197f ? 
         (data[9 /* X27 */] <0.087797694f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.050825104f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08558179f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.058512345f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.27884766f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6067197f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.124107815f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_197_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[0 /* X5 */] <0.09587531f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.06932333f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21929531f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43509316f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.4149323f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.39406702f ? 
         (data[1 /* X12 */] <-0.36042017f ? 
             (data[8 /* X23 */] <0.17691238f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_03_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07027615f ? 
         (data[0 /* X5 */] <0.08981036f ? 
             (data[9 /* X27 */] <0.013540205f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.08234953f ? 
             (data[8 /* X23 */] <0.11933981f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_03_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01779792f ? 
         (data[1 /* X12 */] <-0.2983944f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38538563f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.45913574f ? 
                     (data[3 /* X17 */] <-0.4627712f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.068903506f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18023323f ? 
             (data[9 /* X27 */] <-0.039659187f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.062405616f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.45913574f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0919056f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14365895f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_03_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_198_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[8 /* X23 */] <0.11596487f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.06895624f ? 
                     (data[9 /* X27 */] <-0.0151786655f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.15594874f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[0 /* X5 */] <0.046804354f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4601132f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21813378f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_03_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026764236f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3881526f ? 
                     (data[6 /* X20 */] <-0.41178608f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.27438793f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16684635f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05991595f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.06563061f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055162847f ? 
             (data[5 /* X19 */] <-0.13699855f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <-0.097291864f ? 
                 (data[6 /* X20 */] <0.17574789f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_03_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.30160263f ? 
         (data[4 /* X18 */] <-0.6065686f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012586438f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.6737573f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27404514f ? 
                 (data[2 /* X15 */] <0.083287686f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4889741f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_03_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_03_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_03_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_03_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_03_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_03_Tree_199_class_4.score0(fdata);
  }
}
class h2o_rf_03_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009290917f ? 
         (data[11 /* X34 */] <-0.46093863f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.06800954f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.257514f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19857869f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.2951109f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[3 /* X17 */] <-0.36259267f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06157438f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_03_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.32367003f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
             (data[8 /* X23 */] <0.08598742f ? 
                 (data[10 /* X28 */] <0.12712169f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22697794f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20748541f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_03_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13077232f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.15428041f ? 
                     (data[4 /* X18 */] <-0.03207713f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17790502f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6899045f ? 
                 (data[6 /* X20 */] <0.030147726f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_03_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16424382f ? 
                 (data[5 /* X19 */] <0.14609428f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_03_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28291926f ? 
         (data[7 /* X21 */] <0.09128679f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.082872234f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.100837536f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}



