/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:07:35.854+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_05

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_05 > h2o_nn_32x6_Tanh_05.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_05.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_05", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_05 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_05_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_05_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_05_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_05_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_05_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_05_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_05_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_05_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_05_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_05.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_05_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.29347826086956524,0.13043478260869565,0.14130434782608695,0.29347826086956524,0.14130434782608695};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_05() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(4806441063001484528L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_05_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_05_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_05_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_05_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_05_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_05_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_05_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_05_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_05_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.033372475033076;
      sa[1] = 0.04619671546218244;
      sa[2] = -0.07300286279778281;
      sa[3] = -0.10072069352755583;
      sa[4] = 0.017731452732439174;
      sa[5] = 0.05082615081624244;
      sa[6] = 0.1722213896612308;
      sa[7] = -0.13551540242711627;
      sa[8] = -0.024029368752305873;
      sa[9] = 0.07027649850338223;
      sa[10] = 0.004863590326193882;
      sa[11] = 0.040861314126375434;
      sa[12] = 0.022432060875860336;
      sa[13] = 0.07849064448686349;
      sa[14] = -0.08545127644717565;
      sa[15] = 0.04282795063426161;
      sa[16] = 0.08044974244978675;
      sa[17] = -0.015690409419527783;
      sa[18] = -0.12186762224428936;
      sa[19] = 0.0486612289924629;
      sa[20] = 0.08132359860623875;
      sa[21] = -0.02433007455416701;
      sa[22] = -0.05345599873654001;
      sa[23] = 0.015850219461747007;
      sa[24] = -0.07468283616193853;
      sa[25] = 0.07248451011046748;
      sa[26] = -0.01620536310403112;
      sa[27] = 0.08272897780944743;
      sa[28] = -0.1026204476951295;
      sa[29] = -0.030370936979235874;
      sa[30] = 0.07685855822430523;
      sa[31] = -0.04696152156602767;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_05_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_05_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.066151836115753;
      sa[1] = -0.0672980733599109;
      sa[2] = -0.09481171707013054;
      sa[3] = -0.010210843533903294;
      sa[4] = -0.03294007598453609;
    }
  }
}
class h2o_nn_32x6_Tanh_05_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_05_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_05_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.09899517f;
      sa[1] = 0.22669703f;
      sa[2] = 0.086215876f;
      sa[3] = 0.19283795f;
      sa[4] = -0.20102413f;
      sa[5] = -0.15819974f;
      sa[6] = -0.067756124f;
      sa[7] = 0.14954919f;
      sa[8] = 0.23789233f;
      sa[9] = -0.19676714f;
      sa[10] = -0.09887613f;
      sa[11] = -0.12534083f;
      sa[12] = 0.056373622f;
      sa[13] = -0.23743671f;
      sa[14] = -0.19062665f;
      sa[15] = -0.09878808f;
      sa[16] = 0.06403541f;
      sa[17] = 0.115990676f;
      sa[18] = -0.25021532f;
      sa[19] = 0.24456756f;
      sa[20] = 0.17378148f;
      sa[21] = -0.3625605f;
      sa[22] = 0.17047612f;
      sa[23] = -0.2646309f;
      sa[24] = 0.17436388f;
      sa[25] = 0.1715239f;
      sa[26] = -0.25672418f;
      sa[27] = 0.22042736f;
      sa[28] = 0.21246278f;
      sa[29] = -0.29036298f;
      sa[30] = -0.15057687f;
      sa[31] = 0.07427867f;
      sa[32] = 0.2064806f;
      sa[33] = -0.2429733f;
      sa[34] = 0.030456321f;
      sa[35] = -0.13984331f;
      sa[36] = 0.061964683f;
      sa[37] = 0.23150147f;
      sa[38] = -0.15469941f;
      sa[39] = 0.04320124f;
      sa[40] = 0.0010310315f;
      sa[41] = -0.09177149f;
      sa[42] = -0.20564304f;
      sa[43] = -0.0048905304f;
      sa[44] = 0.19741555f;
      sa[45] = -0.2691813f;
      sa[46] = 0.05746739f;
      sa[47] = -0.036897007f;
      sa[48] = 0.20137522f;
      sa[49] = 0.23601012f;
      sa[50] = 0.13362457f;
      sa[51] = -0.31770843f;
      sa[52] = -0.11703791f;
      sa[53] = 0.17011257f;
      sa[54] = 0.19960985f;
      sa[55] = 0.08488799f;
      sa[56] = -0.17911348f;
      sa[57] = -0.2986721f;
      sa[58] = 0.20819087f;
      sa[59] = -0.1942725f;
      sa[60] = -0.2474198f;
      sa[61] = 0.15462568f;
      sa[62] = 0.17287911f;
      sa[63] = 0.095333986f;
      sa[64] = 0.15363537f;
      sa[65] = 0.1418894f;
      sa[66] = 0.045892842f;
      sa[67] = 0.17772266f;
      sa[68] = -0.19516438f;
      sa[69] = 0.07767085f;
      sa[70] = -0.0466069f;
      sa[71] = 0.34792817f;
      sa[72] = -0.08611298f;
      sa[73] = 0.2922691f;
      sa[74] = -0.12611344f;
      sa[75] = 0.14041089f;
      sa[76] = -0.1882968f;
      sa[77] = -0.034842756f;
      sa[78] = -0.0074147168f;
      sa[79] = 0.16049634f;
      sa[80] = -0.13726343f;
      sa[81] = -0.15652512f;
      sa[82] = -0.052932546f;
      sa[83] = 0.13556533f;
      sa[84] = 0.022083573f;
      sa[85] = -0.123941906f;
      sa[86] = 0.21650344f;
      sa[87] = 0.30577087f;
      sa[88] = 0.35769188f;
      sa[89] = 0.04030042f;
      sa[90] = -0.16567433f;
      sa[91] = 0.19448511f;
      sa[92] = 0.1355561f;
      sa[93] = -0.1849062f;
      sa[94] = -0.11653608f;
      sa[95] = -0.2079523f;
      sa[96] = 0.094700746f;
      sa[97] = 0.07468834f;
      sa[98] = 0.115912296f;
      sa[99] = -0.15505022f;
      sa[100] = -0.04582774f;
      sa[101] = -0.2002924f;
      sa[102] = -0.24371807f;
      sa[103] = -0.11066439f;
      sa[104] = -0.06657516f;
      sa[105] = -0.26889494f;
      sa[106] = -0.116748326f;
      sa[107] = 0.19990773f;
      sa[108] = 0.13378073f;
      sa[109] = -0.13373053f;
      sa[110] = -0.06135084f;
      sa[111] = 0.14129126f;
      sa[112] = 0.13691732f;
      sa[113] = 0.04385263f;
      sa[114] = -0.12041418f;
      sa[115] = 0.02554324f;
      sa[116] = -0.24623178f;
      sa[117] = 0.023886085f;
      sa[118] = -0.25139034f;
      sa[119] = -0.1979352f;
      sa[120] = 0.24190255f;
      sa[121] = 0.24064615f;
      sa[122] = 0.3277038f;
      sa[123] = 0.3495037f;
      sa[124] = 0.3678912f;
      sa[125] = 0.31723717f;
      sa[126] = -0.30190724f;
      sa[127] = -0.14649886f;
      sa[128] = 0.119171925f;
      sa[129] = 0.19018248f;
      sa[130] = -0.070588246f;
      sa[131] = 0.40283838f;
      sa[132] = 0.2706154f;
      sa[133] = -0.25796583f;
      sa[134] = 0.028005932f;
      sa[135] = -0.16899703f;
      sa[136] = -0.22471038f;
      sa[137] = 2.0363108E-4f;
      sa[138] = 0.13299686f;
      sa[139] = -0.009678227f;
      sa[140] = -0.11640099f;
      sa[141] = -0.23099059f;
      sa[142] = 0.23255466f;
      sa[143] = -0.19807434f;
      sa[144] = 0.25086328f;
      sa[145] = -0.09647272f;
      sa[146] = -0.18276459f;
      sa[147] = 0.14185685f;
      sa[148] = 0.17421246f;
      sa[149] = 0.20688358f;
      sa[150] = 0.2694825f;
      sa[151] = -0.19663139f;
      sa[152] = 0.01667494f;
      sa[153] = 0.2970967f;
      sa[154] = 0.2820248f;
      sa[155] = -0.19178349f;
      sa[156] = 0.13881242f;
      sa[157] = -0.15374678f;
      sa[158] = 0.07447101f;
      sa[159] = 0.1340818f;
      sa[160] = 0.14749947f;
      sa[161] = 0.28041583f;
      sa[162] = -0.22351263f;
      sa[163] = 0.101038784f;
      sa[164] = 0.24129517f;
      sa[165] = -0.018508159f;
      sa[166] = -0.08024658f;
      sa[167] = -0.032685623f;
      sa[168] = 0.23343888f;
      sa[169] = 0.29646483f;
      sa[170] = 0.027051723f;
      sa[171] = 0.036027167f;
      sa[172] = -0.008807014f;
      sa[173] = -0.063978285f;
      sa[174] = 0.0404944f;
      sa[175] = -0.11573205f;
      sa[176] = 0.015373819f;
      sa[177] = -0.019497937f;
      sa[178] = -0.08276353f;
      sa[179] = 0.033396404f;
      sa[180] = -0.11174556f;
      sa[181] = -0.2884824f;
      sa[182] = -0.073123485f;
      sa[183] = -0.0113644125f;
      sa[184] = 0.3063609f;
      sa[185] = 0.16233683f;
      sa[186] = -0.31465554f;
      sa[187] = 0.1244795f;
      sa[188] = -0.15113585f;
      sa[189] = 0.29600364f;
      sa[190] = 0.09220294f;
      sa[191] = -0.10153613f;
      sa[192] = -0.12882979f;
      sa[193] = 0.20318127f;
      sa[194] = 0.034622945f;
      sa[195] = 0.27425706f;
      sa[196] = 0.21850698f;
      sa[197] = 0.10403701f;
      sa[198] = 0.14878464f;
      sa[199] = -0.062468614f;
      sa[200] = 0.039574247f;
      sa[201] = -0.22421443f;
      sa[202] = 0.11248782f;
      sa[203] = 0.05087331f;
      sa[204] = -0.09707381f;
      sa[205] = 0.2030455f;
      sa[206] = 0.2645767f;
      sa[207] = 0.2460074f;
      sa[208] = -0.21294022f;
      sa[209] = -0.008391706f;
      sa[210] = -0.23570167f;
      sa[211] = -0.14740947f;
      sa[212] = 0.3270268f;
      sa[213] = -0.15369616f;
      sa[214] = -0.20181167f;
      sa[215] = -0.016982855f;
      sa[216] = 0.058806125f;
      sa[217] = 0.055953678f;
      sa[218] = -0.26582924f;
      sa[219] = 0.11628607f;
      sa[220] = -0.17148127f;
      sa[221] = 0.037146114f;
      sa[222] = 0.2192842f;
      sa[223] = 0.054759614f;
      sa[224] = 0.05335508f;
      sa[225] = 0.26880398f;
      sa[226] = -0.23486952f;
      sa[227] = 0.2296719f;
      sa[228] = 0.119982205f;
      sa[229] = 0.07347982f;
      sa[230] = 0.24133074f;
      sa[231] = -0.27166042f;
      sa[232] = -0.39262608f;
      sa[233] = 0.017058412f;
      sa[234] = 0.28310853f;
      sa[235] = -0.422464f;
      sa[236] = -0.013375196f;
      sa[237] = -0.1726982f;
      sa[238] = -0.18805782f;
      sa[239] = 0.15960714f;
      sa[240] = -0.022361606f;
      sa[241] = -0.26115707f;
      sa[242] = 0.013705411f;
      sa[243] = -0.20017822f;
      sa[244] = -0.1882091f;
      sa[245] = -0.09375069f;
      sa[246] = -0.25294593f;
      sa[247] = -0.027637295f;
      sa[248] = 0.30055016f;
      sa[249] = 0.27911845f;
      sa[250] = -0.23702824f;
      sa[251] = -0.14253654f;
      sa[252] = -0.26037782f;
      sa[253] = -0.25657305f;
      sa[254] = -0.20991425f;
      sa[255] = 0.32017815f;
      sa[256] = -0.1758674f;
      sa[257] = 0.23209526f;
      sa[258] = -0.16491205f;
      sa[259] = -0.11801452f;
      sa[260] = -0.17462325f;
      sa[261] = -0.10735572f;
      sa[262] = -0.23847374f;
      sa[263] = 0.34556895f;
      sa[264] = -0.1570983f;
      sa[265] = 0.023326224f;
      sa[266] = -0.20213422f;
      sa[267] = -0.20878167f;
      sa[268] = 0.11863955f;
      sa[269] = -0.19711538f;
      sa[270] = 0.042343248f;
      sa[271] = 0.05081888f;
      sa[272] = -0.09870726f;
      sa[273] = -0.12052334f;
      sa[274] = 0.16361427f;
      sa[275] = -0.014455198f;
      sa[276] = 0.011866968f;
      sa[277] = -0.21140938f;
      sa[278] = -0.16978677f;
      sa[279] = 0.10754016f;
      sa[280] = -0.22981572f;
      sa[281] = 0.20283847f;
      sa[282] = -0.15725192f;
      sa[283] = -0.11456646f;
      sa[284] = 0.028578375f;
      sa[285] = -0.14209054f;
      sa[286] = 0.25631228f;
      sa[287] = 0.13776861f;
      sa[288] = -0.2573415f;
      sa[289] = -0.15597662f;
      sa[290] = -0.06734697f;
      sa[291] = -0.06936569f;
      sa[292] = 0.12982953f;
      sa[293] = -0.1006216f;
      sa[294] = 0.030159626f;
      sa[295] = 0.14154951f;
      sa[296] = 0.115441814f;
      sa[297] = 0.22781001f;
      sa[298] = 0.007827624f;
      sa[299] = -0.11330848f;
      sa[300] = -8.425859E-4f;
      sa[301] = -0.067450345f;
      sa[302] = 0.116165504f;
      sa[303] = 0.054693304f;
      sa[304] = -0.18043903f;
      sa[305] = 0.012081148f;
      sa[306] = 0.2045501f;
      sa[307] = -0.11667108f;
      sa[308] = 0.10215371f;
      sa[309] = 0.17415445f;
      sa[310] = 0.2664834f;
      sa[311] = 0.3435375f;
      sa[312] = -0.13175754f;
      sa[313] = -0.16363348f;
      sa[314] = -0.12692034f;
      sa[315] = 0.09208765f;
      sa[316] = 0.018975364f;
      sa[317] = -0.028456258f;
      sa[318] = 0.11907788f;
      sa[319] = 0.34212294f;
      sa[320] = -0.12360153f;
      sa[321] = 0.08861143f;
      sa[322] = 0.28605443f;
      sa[323] = -0.09397742f;
      sa[324] = 0.0506484f;
      sa[325] = 0.25371188f;
      sa[326] = -0.38043246f;
      sa[327] = 0.028234182f;
      sa[328] = -0.09660313f;
      sa[329] = 0.23928744f;
      sa[330] = -0.2198335f;
      sa[331] = -0.08170468f;
      sa[332] = -0.16459535f;
      sa[333] = 0.056664787f;
      sa[334] = -0.024702985f;
      sa[335] = 0.2745636f;
      sa[336] = -0.17628233f;
      sa[337] = -0.14446692f;
      sa[338] = 0.2176101f;
      sa[339] = -0.28243628f;
      sa[340] = -0.33854297f;
      sa[341] = -0.28834024f;
      sa[342] = 0.117286436f;
      sa[343] = -0.02892418f;
      sa[344] = -0.20837969f;
      sa[345] = 0.13038662f;
      sa[346] = 0.1348859f;
      sa[347] = -0.2507172f;
      sa[348] = 0.17928559f;
      sa[349] = -0.26831138f;
      sa[350] = -0.20477925f;
      sa[351] = 0.0841663f;
      sa[352] = 0.18345305f;
      sa[353] = -0.04540495f;
      sa[354] = 0.105792426f;
      sa[355] = 0.06766137f;
      sa[356] = -0.13356143f;
      sa[357] = 0.22068606f;
      sa[358] = -0.28663996f;
      sa[359] = 0.008480673f;
      sa[360] = 0.12713417f;
      sa[361] = -0.04660392f;
      sa[362] = -0.24682139f;
      sa[363] = 0.1234509f;
      sa[364] = -0.14976674f;
      sa[365] = -0.21117704f;
      sa[366] = -0.025846431f;
      sa[367] = -0.32492632f;
      sa[368] = -0.098693654f;
      sa[369] = 0.18252476f;
      sa[370] = -0.1918708f;
      sa[371] = 0.09482f;
      sa[372] = -0.019707184f;
      sa[373] = 0.27939135f;
      sa[374] = -0.14080387f;
      sa[375] = -0.31643477f;
      sa[376] = -0.30771345f;
      sa[377] = -0.29247656f;
      sa[378] = 0.27696064f;
      sa[379] = 0.10202666f;
      sa[380] = -0.13352013f;
      sa[381] = -0.12798181f;
      sa[382] = -0.057503257f;
      sa[383] = -0.16588087f;
      sa[384] = -0.19944903f;
      sa[385] = 0.09969122f;
      sa[386] = -0.21914682f;
      sa[387] = -0.15215476f;
      sa[388] = 0.072695106f;
      sa[389] = -0.01976498f;
      sa[390] = 0.0021391702f;
      sa[391] = -0.11998559f;
      sa[392] = 0.07574666f;
      sa[393] = 0.088613585f;
      sa[394] = 0.085741356f;
      sa[395] = 0.3781487f;
      sa[396] = 0.2902312f;
      sa[397] = -0.2956121f;
      sa[398] = 0.041450366f;
      sa[399] = -0.056805573f;
      sa[400] = 0.15506706f;
      sa[401] = 0.23012938f;
      sa[402] = -0.17288904f;
      sa[403] = 0.039570253f;
      sa[404] = 0.22570586f;
      sa[405] = -0.2686742f;
      sa[406] = -0.048231088f;
      sa[407] = 0.10203548f;
      sa[408] = -0.2259475f;
      sa[409] = -0.24170735f;
      sa[410] = -0.14726284f;
      sa[411] = 0.11435987f;
      sa[412] = -0.19312766f;
      sa[413] = 0.04251043f;
      sa[414] = 0.15885799f;
      sa[415] = 0.31720802f;
      sa[416] = -0.19379506f;
      sa[417] = 0.003569867f;
      sa[418] = -0.04191492f;
      sa[419] = 0.24993566f;
      sa[420] = 0.2009438f;
      sa[421] = 0.23206998f;
      sa[422] = 0.28621367f;
      sa[423] = 0.066290036f;
      sa[424] = 0.11522259f;
      sa[425] = -0.040981352f;
      sa[426] = -0.24804685f;
      sa[427] = 0.23060484f;
      sa[428] = -0.1359079f;
      sa[429] = -0.17425412f;
      sa[430] = 0.20309332f;
      sa[431] = 0.018826306f;
      sa[432] = 0.022587053f;
      sa[433] = 0.11671666f;
      sa[434] = 0.15557528f;
      sa[435] = 0.08966155f;
      sa[436] = -0.2757759f;
      sa[437] = -0.23648372f;
      sa[438] = 0.013034079f;
      sa[439] = -0.06381349f;
      sa[440] = 0.4128674f;
      sa[441] = -0.3838406f;
      sa[442] = 0.059595447f;
      sa[443] = 0.07673258f;
      sa[444] = -0.21056451f;
      sa[445] = 0.070316955f;
      sa[446] = 0.2383662f;
      sa[447] = 0.021335281f;
      sa[448] = 0.15062426f;
      sa[449] = 0.13166372f;
      sa[450] = -0.093439035f;
      sa[451] = 0.06826854f;
      sa[452] = 0.14645939f;
      sa[453] = -0.08679963f;
      sa[454] = -0.15705913f;
      sa[455] = -0.11044725f;
      sa[456] = -0.1348775f;
      sa[457] = 0.0981522f;
      sa[458] = -0.2218262f;
      sa[459] = 0.19268163f;
      sa[460] = 0.18042198f;
      sa[461] = 0.22350079f;
      sa[462] = 0.029494837f;
      sa[463] = 0.14969255f;
      sa[464] = -0.37649256f;
      sa[465] = 0.15344755f;
      sa[466] = 0.08641216f;
      sa[467] = 0.16833267f;
      sa[468] = 0.14677258f;
      sa[469] = 0.2703274f;
      sa[470] = 0.10378365f;
      sa[471] = -0.04810399f;
      sa[472] = -0.0032345438f;
      sa[473] = -0.085305005f;
      sa[474] = -0.042419057f;
      sa[475] = 0.063080765f;
      sa[476] = 0.29018995f;
      sa[477] = -0.24873562f;
      sa[478] = 0.10913377f;
      sa[479] = -0.17889132f;
      sa[480] = -0.28374073f;
      sa[481] = -0.17558032f;
      sa[482] = -0.26509348f;
      sa[483] = 0.16763328f;
      sa[484] = 0.19246003f;
      sa[485] = 0.050244134f;
      sa[486] = -0.03393994f;
      sa[487] = -0.1261185f;
      sa[488] = -0.19884376f;
      sa[489] = 0.054875817f;
      sa[490] = -0.03417677f;
      sa[491] = -0.2643594f;
      sa[492] = 0.19162627f;
      sa[493] = 0.21395695f;
      sa[494] = -0.17921874f;
      sa[495] = 0.18098801f;
      sa[496] = 0.018267674f;
      sa[497] = 0.07879452f;
      sa[498] = 0.19621561f;
      sa[499] = 0.17590074f;
      sa[500] = -0.1668971f;
      sa[501] = 0.0038360779f;
      sa[502] = 0.29539043f;
      sa[503] = 0.06842545f;
      sa[504] = -0.21371317f;
      sa[505] = -0.20940092f;
      sa[506] = 0.25362355f;
      sa[507] = -0.074709244f;
      sa[508] = 0.10098875f;
      sa[509] = 0.18885294f;
      sa[510] = 0.19160211f;
      sa[511] = 0.056127626f;
      sa[512] = -0.008709547f;
      sa[513] = -0.05544625f;
      sa[514] = 0.18278216f;
      sa[515] = -0.27665123f;
      sa[516] = 0.02976414f;
      sa[517] = 0.06606025f;
      sa[518] = 0.16452274f;
      sa[519] = -0.032514516f;
      sa[520] = 0.23786557f;
      sa[521] = 0.14487764f;
      sa[522] = 0.13207747f;
      sa[523] = 0.1455372f;
      sa[524] = 0.20438497f;
      sa[525] = 0.19141029f;
      sa[526] = 0.04051336f;
      sa[527] = -0.007850011f;
      sa[528] = 0.040185276f;
      sa[529] = 0.10952037f;
      sa[530] = -0.19264749f;
      sa[531] = 0.08195484f;
      sa[532] = 0.10884368f;
      sa[533] = 0.0919649f;
      sa[534] = 0.072788775f;
      sa[535] = -0.085116565f;
      sa[536] = 0.066279866f;
      sa[537] = -0.24041545f;
      sa[538] = 0.25950152f;
      sa[539] = 0.31941414f;
      sa[540] = -0.21476597f;
      sa[541] = -0.14032125f;
      sa[542] = -0.026336962f;
      sa[543] = -0.1490699f;
      sa[544] = 0.15945058f;
      sa[545] = 0.121643506f;
      sa[546] = 0.12178209f;
      sa[547] = 0.18216725f;
      sa[548] = 0.122493654f;
      sa[549] = 0.17257436f;
      sa[550] = -0.013805316f;
      sa[551] = -0.054627642f;
      sa[552] = 0.05125991f;
      sa[553] = -0.036823615f;
      sa[554] = -0.10042576f;
      sa[555] = -0.13687405f;
      sa[556] = -0.1666907f;
      sa[557] = -0.1814987f;
      sa[558] = -0.20150828f;
      sa[559] = 0.095916204f;
      sa[560] = -0.28844428f;
      sa[561] = -0.08774224f;
      sa[562] = 0.20279123f;
      sa[563] = -0.10824597f;
      sa[564] = 0.22712326f;
      sa[565] = 0.044828773f;
      sa[566] = 0.22842348f;
      sa[567] = -0.12583247f;
      sa[568] = -0.08583506f;
      sa[569] = 0.003035023f;
      sa[570] = -0.033439647f;
      sa[571] = -0.11875079f;
      sa[572] = -0.0065894304f;
      sa[573] = 0.16854866f;
      sa[574] = 0.13257256f;
      sa[575] = -0.3338495f;
      sa[576] = -0.07734808f;
      sa[577] = 0.022990562f;
      sa[578] = 0.080046944f;
      sa[579] = -0.13901892f;
      sa[580] = 0.103395514f;
      sa[581] = -0.111634575f;
      sa[582] = 0.06574063f;
      sa[583] = 0.002635989f;
      sa[584] = 0.11626271f;
      sa[585] = 0.20280506f;
      sa[586] = -0.16165058f;
      sa[587] = -0.14757438f;
      sa[588] = 0.06417815f;
      sa[589] = 0.13241133f;
      sa[590] = -0.05023271f;
      sa[591] = -0.00908395f;
      sa[592] = -0.33301762f;
      sa[593] = -0.14906284f;
      sa[594] = -0.085171916f;
      sa[595] = 0.049527127f;
      sa[596] = 0.24489644f;
      sa[597] = -0.02571292f;
      sa[598] = 0.16273537f;
      sa[599] = 0.007955241f;
      sa[600] = -0.25792697f;
      sa[601] = 0.19818158f;
      sa[602] = -0.036860395f;
      sa[603] = 0.32922032f;
      sa[604] = 0.2805647f;
      sa[605] = 0.24233668f;
      sa[606] = 0.26565745f;
      sa[607] = 0.14222108f;
      sa[608] = -5.8828556E-4f;
      sa[609] = 0.14280857f;
      sa[610] = 0.06112837f;
      sa[611] = -0.1134191f;
      sa[612] = -0.03915234f;
      sa[613] = 0.0665123f;
      sa[614] = -0.034643166f;
      sa[615] = 0.017662793f;
      sa[616] = 8.1016E-4f;
      sa[617] = -0.30557644f;
      sa[618] = -0.18985757f;
      sa[619] = -0.23737383f;
      sa[620] = 0.04681102f;
      sa[621] = -0.31299636f;
      sa[622] = -0.28514454f;
      sa[623] = -0.27258167f;
      sa[624] = -0.075190425f;
      sa[625] = 0.22174183f;
      sa[626] = -0.03355797f;
      sa[627] = 0.17765644f;
      sa[628] = -0.3091165f;
      sa[629] = -0.14867117f;
      sa[630] = -0.14742473f;
      sa[631] = 0.21117924f;
      sa[632] = 0.048260063f;
      sa[633] = -0.21606754f;
      sa[634] = -0.24417388f;
      sa[635] = 0.077946186f;
      sa[636] = -0.2648557f;
      sa[637] = -0.024676241f;
      sa[638] = -0.0898018f;
      sa[639] = -0.09094571f;
      sa[640] = -0.17116892f;
      sa[641] = -0.32577154f;
      sa[642] = 0.16009487f;
      sa[643] = -0.36740437f;
      sa[644] = -0.19884981f;
      sa[645] = -0.27165592f;
      sa[646] = 0.38514015f;
      sa[647] = -0.16928066f;
      sa[648] = -0.008974452f;
      sa[649] = 0.018956423f;
      sa[650] = 0.13499306f;
      sa[651] = -0.009977273f;
      sa[652] = 0.065371916f;
      sa[653] = -0.1452789f;
      sa[654] = -0.11348633f;
      sa[655] = -0.14757492f;
      sa[656] = 0.13685803f;
      sa[657] = 0.11697001f;
      sa[658] = -0.26584548f;
      sa[659] = -0.17293675f;
      sa[660] = -0.22661279f;
      sa[661] = -0.09681999f;
      sa[662] = -0.23042665f;
      sa[663] = 0.20244654f;
      sa[664] = -0.04990081f;
      sa[665] = 0.27908972f;
      sa[666] = -0.08169501f;
      sa[667] = -0.20646197f;
      sa[668] = 0.2716044f;
      sa[669] = -0.1306337f;
      sa[670] = 0.15603055f;
      sa[671] = 0.032917812f;
      sa[672] = -0.28643402f;
      sa[673] = 0.1939523f;
      sa[674] = 0.15304989f;
      sa[675] = -0.38513637f;
      sa[676] = -0.11818784f;
      sa[677] = -0.2527608f;
      sa[678] = 0.15884918f;
      sa[679] = -0.14057012f;
      sa[680] = 0.021975795f;
      sa[681] = 0.040642727f;
      sa[682] = 0.10401788f;
      sa[683] = -0.06214431f;
      sa[684] = -0.08001251f;
      sa[685] = -0.020261222f;
      sa[686] = -0.14200902f;
      sa[687] = -0.25908476f;
      sa[688] = -0.2519863f;
      sa[689] = -0.24486268f;
      sa[690] = -0.031141784f;
      sa[691] = 0.13992243f;
      sa[692] = -0.25039813f;
      sa[693] = -0.14772382f;
      sa[694] = 0.23912515f;
      sa[695] = -0.0936467f;
      sa[696] = -0.07792046f;
      sa[697] = -0.14826728f;
      sa[698] = -0.17150576f;
      sa[699] = 0.31945112f;
      sa[700] = 0.0913316f;
      sa[701] = 0.12355116f;
      sa[702] = 0.26756784f;
      sa[703] = -0.098188706f;
      sa[704] = -0.23754011f;
      sa[705] = 6.1024126E-4f;
      sa[706] = -0.114121094f;
      sa[707] = 0.06916924f;
      sa[708] = 0.0654526f;
      sa[709] = -0.3009205f;
      sa[710] = 0.29442856f;
      sa[711] = -0.04034826f;
      sa[712] = 0.047376316f;
      sa[713] = 0.16334626f;
      sa[714] = 0.18101653f;
      sa[715] = 0.14051093f;
      sa[716] = 0.07747235f;
      sa[717] = 0.2022724f;
      sa[718] = -0.08173363f;
      sa[719] = 0.07546697f;
      sa[720] = -0.20920363f;
      sa[721] = 0.13375291f;
      sa[722] = -0.2331839f;
      sa[723] = 0.08171251f;
      sa[724] = 0.06506684f;
      sa[725] = -0.29960245f;
      sa[726] = -0.17313561f;
      sa[727] = -0.3118027f;
      sa[728] = -0.09741359f;
      sa[729] = -0.04565207f;
      sa[730] = 0.03395517f;
      sa[731] = -0.21184191f;
      sa[732] = 0.14685446f;
      sa[733] = 0.18175541f;
      sa[734] = -0.12053766f;
      sa[735] = 0.23202224f;
      sa[736] = -0.1762526f;
      sa[737] = 0.10435939f;
      sa[738] = -0.051746547f;
      sa[739] = -0.43945682f;
      sa[740] = -0.29288486f;
      sa[741] = -0.2879989f;
      sa[742] = 0.103478394f;
      sa[743] = -0.018720735f;
      sa[744] = -0.013773252f;
      sa[745] = -0.24772805f;
      sa[746] = 0.11651263f;
      sa[747] = -0.19549187f;
      sa[748] = -0.19685337f;
      sa[749] = -0.22496864f;
      sa[750] = 0.13380368f;
      sa[751] = 0.15906374f;
      sa[752] = 0.009120676f;
      sa[753] = 0.22594726f;
      sa[754] = -0.03974161f;
      sa[755] = 0.1493033f;
      sa[756] = -0.32388762f;
      sa[757] = 0.24174917f;
      sa[758] = -0.06261743f;
      sa[759] = -0.18169153f;
      sa[760] = -0.061231222f;
      sa[761] = 0.033135474f;
      sa[762] = -0.088945284f;
      sa[763] = 0.20948018f;
      sa[764] = -0.052784592f;
      sa[765] = 0.023759264f;
      sa[766] = -0.22268945f;
      sa[767] = 0.06655408f;
      sa[768] = -0.1626355f;
      sa[769] = -0.28336594f;
      sa[770] = -0.009503294f;
      sa[771] = 0.06198065f;
      sa[772] = 0.056561954f;
      sa[773] = -0.15666935f;
      sa[774] = 0.038449783f;
      sa[775] = 0.25527135f;
      sa[776] = -0.031064758f;
      sa[777] = 0.1046835f;
      sa[778] = 0.18955062f;
      sa[779] = -0.060008932f;
      sa[780] = 0.10597898f;
      sa[781] = -0.07797065f;
      sa[782] = 0.14829849f;
      sa[783] = -0.10920556f;
      sa[784] = -0.12345028f;
      sa[785] = -0.08489331f;
      sa[786] = -0.08535375f;
      sa[787] = -0.16637301f;
      sa[788] = -0.1479368f;
      sa[789] = 0.2153897f;
      sa[790] = -0.17310007f;
      sa[791] = -0.107906096f;
      sa[792] = 0.24867284f;
      sa[793] = -0.08989251f;
      sa[794] = -0.12025947f;
      sa[795] = 0.121560745f;
      sa[796] = 0.2392526f;
      sa[797] = -0.1709475f;
      sa[798] = -0.2063592f;
      sa[799] = -0.14039035f;
      sa[800] = 0.26698232f;
      sa[801] = 0.04992713f;
      sa[802] = 0.2427512f;
      sa[803] = 0.105105184f;
      sa[804] = 0.24528033f;
      sa[805] = 0.3128068f;
      sa[806] = 0.3372663f;
      sa[807] = 0.26032266f;
      sa[808] = 0.05507312f;
      sa[809] = -0.18944313f;
      sa[810] = 0.025121188f;
      sa[811] = 0.24100474f;
      sa[812] = 0.17947215f;
      sa[813] = -0.27261165f;
      sa[814] = 0.11893947f;
      sa[815] = -0.14940625f;
      sa[816] = -0.105118096f;
      sa[817] = -0.12718585f;
      sa[818] = -0.0685745f;
      sa[819] = -0.2135627f;
      sa[820] = -0.28282487f;
      sa[821] = -0.21301647f;
      sa[822] = -0.2731374f;
      sa[823] = 0.032408174f;
      sa[824] = 0.15210496f;
      sa[825] = 0.28567702f;
      sa[826] = -0.27647594f;
      sa[827] = -0.32257563f;
      sa[828] = 0.14668967f;
      sa[829] = -0.065919556f;
      sa[830] = 0.20065093f;
      sa[831] = 0.23638356f;
      sa[832] = 0.14122409f;
      sa[833] = 0.07654879f;
      sa[834] = 0.22809991f;
      sa[835] = -0.09632689f;
      sa[836] = 0.2611263f;
      sa[837] = -0.14540304f;
      sa[838] = 0.13808683f;
      sa[839] = -0.20543861f;
      sa[840] = 0.19095905f;
      sa[841] = 0.11128123f;
      sa[842] = 0.1965792f;
      sa[843] = 0.029058725f;
      sa[844] = 0.054488756f;
      sa[845] = 0.1650994f;
      sa[846] = -0.2605696f;
      sa[847] = -0.07090226f;
      sa[848] = 0.1957543f;
      sa[849] = 0.22947651f;
      sa[850] = 0.0032790035f;
      sa[851] = 0.07278344f;
      sa[852] = 0.22965357f;
      sa[853] = 0.16972141f;
      sa[854] = 0.20127186f;
      sa[855] = 0.04362143f;
      sa[856] = 0.06469553f;
      sa[857] = -0.18440036f;
      sa[858] = 0.11400904f;
      sa[859] = 0.011598456f;
      sa[860] = 0.3468286f;
      sa[861] = -0.19828139f;
      sa[862] = -0.16990118f;
      sa[863] = -0.029453225f;
      sa[864] = -0.27520773f;
      sa[865] = 0.23663476f;
      sa[866] = -0.12235632f;
      sa[867] = -0.061720572f;
      sa[868] = -0.18178223f;
      sa[869] = 0.18670575f;
      sa[870] = -0.09970847f;
      sa[871] = 0.18249124f;
      sa[872] = 0.11090499f;
      sa[873] = 0.020987686f;
      sa[874] = 0.046800874f;
      sa[875] = -0.2742048f;
      sa[876] = -0.22423214f;
      sa[877] = -0.21922679f;
      sa[878] = -0.01923992f;
      sa[879] = 0.22160016f;
      sa[880] = -0.05132928f;
      sa[881] = 0.021721687f;
      sa[882] = 0.14642452f;
      sa[883] = 0.28592807f;
      sa[884] = -0.10926174f;
      sa[885] = -0.10673552f;
      sa[886] = 0.07332315f;
      sa[887] = -0.007833066f;
      sa[888] = -0.018232793f;
      sa[889] = 0.030024974f;
      sa[890] = -0.26912183f;
      sa[891] = 0.4257726f;
      sa[892] = 0.22206871f;
      sa[893] = 0.32251132f;
      sa[894] = 0.09187804f;
      sa[895] = 0.32041746f;
      sa[896] = -0.2015255f;
      sa[897] = 0.20093346f;
      sa[898] = -0.008541193f;
      sa[899] = 0.22190735f;
      sa[900] = -0.09624158f;
      sa[901] = 0.09932318f;
      sa[902] = -0.36206225f;
      sa[903] = -0.13643593f;
      sa[904] = 0.14352354f;
      sa[905] = 0.15744582f;
      sa[906] = -0.27605352f;
      sa[907] = -0.32310942f;
      sa[908] = -0.20462939f;
      sa[909] = 0.016767975f;
      sa[910] = 0.003462221f;
      sa[911] = -0.110479616f;
      sa[912] = -0.04295999f;
      sa[913] = 0.02640386f;
      sa[914] = -0.21386132f;
      sa[915] = -0.032103475f;
      sa[916] = 0.12441652f;
      sa[917] = -0.057686225f;
      sa[918] = 0.22284043f;
      sa[919] = -0.09178847f;
      sa[920] = 0.09927557f;
      sa[921] = -0.11629085f;
      sa[922] = -0.16485775f;
      sa[923] = -0.21548568f;
      sa[924] = -0.20621774f;
      sa[925] = -0.21434323f;
      sa[926] = 0.15650594f;
      sa[927] = -0.09846904f;
      sa[928] = 0.20422688f;
      sa[929] = 0.098907694f;
      sa[930] = 0.12498156f;
      sa[931] = -0.062426727f;
      sa[932] = 0.19941883f;
      sa[933] = 0.015935224f;
      sa[934] = 0.21762024f;
      sa[935] = -0.18428293f;
      sa[936] = -0.033577763f;
      sa[937] = 0.19668649f;
      sa[938] = -0.051198885f;
      sa[939] = -0.105867274f;
      sa[940] = -0.01290672f;
      sa[941] = -0.29527017f;
      sa[942] = -0.25957733f;
      sa[943] = -0.11263357f;
      sa[944] = -0.37998804f;
      sa[945] = 0.13625985f;
      sa[946] = 0.083228126f;
      sa[947] = 0.20035079f;
      sa[948] = 0.10383722f;
      sa[949] = -0.1770529f;
      sa[950] = 0.058511466f;
      sa[951] = -0.0385673f;
      sa[952] = -0.17132598f;
      sa[953] = -0.06958181f;
      sa[954] = -0.22960044f;
      sa[955] = 0.08363682f;
      sa[956] = 0.022634916f;
      sa[957] = 0.09758318f;
      sa[958] = 0.107167386f;
      sa[959] = -0.08582707f;
      sa[960] = 0.39006665f;
      sa[961] = -0.14244868f;
      sa[962] = 0.005596787f;
      sa[963] = 0.022873523f;
      sa[964] = -0.12946428f;
      sa[965] = 0.30461f;
      sa[966] = -0.051598027f;
      sa[967] = -0.17396758f;
      sa[968] = 0.140069f;
      sa[969] = 0.08245609f;
      sa[970] = 0.2618339f;
      sa[971] = 0.012780108f;
      sa[972] = -0.0985545f;
      sa[973] = -0.23323427f;
      sa[974] = -0.44670904f;
      sa[975] = -0.2043625f;
      sa[976] = -0.108742826f;
      sa[977] = 0.03788851f;
      sa[978] = -0.08809413f;
      sa[979] = 0.051171545f;
      sa[980] = 0.21226215f;
      sa[981] = -0.2729622f;
      sa[982] = 0.13347378f;
      sa[983] = -0.050290316f;
      sa[984] = -0.30235112f;
      sa[985] = 0.044687886f;
      sa[986] = -0.26483682f;
      sa[987] = -0.017102884f;
      sa[988] = 0.052197285f;
      sa[989] = 0.1319114f;
      sa[990] = 0.28861278f;
      sa[991] = -0.24624367f;
      sa[992] = -0.25107718f;
      sa[993] = -0.10177826f;
      sa[994] = -0.18342139f;
      sa[995] = -0.3550298f;
      sa[996] = 0.045942463f;
      sa[997] = 0.18379341f;
      sa[998] = 0.10794791f;
      sa[999] = 0.16141482f;
      sa[1000] = -0.028687494f;
      sa[1001] = 0.16354553f;
      sa[1002] = 0.21599326f;
      sa[1003] = -0.1835557f;
      sa[1004] = 0.15864578f;
      sa[1005] = -0.24523152f;
      sa[1006] = -0.063522704f;
      sa[1007] = 0.059936885f;
      sa[1008] = 0.161255f;
      sa[1009] = 0.056731597f;
      sa[1010] = 0.0692948f;
      sa[1011] = 0.43784866f;
      sa[1012] = -0.057859078f;
      sa[1013] = 0.14050466f;
      sa[1014] = 0.32828847f;
      sa[1015] = -0.23890592f;
      sa[1016] = 0.24814835f;
      sa[1017] = 0.072460495f;
      sa[1018] = -0.05628477f;
      sa[1019] = 0.11390916f;
      sa[1020] = -0.21818508f;
      sa[1021] = 0.0721143f;
      sa[1022] = 0.27665803f;
      sa[1023] = 0.12805544f;
      sa[1024] = 0.00881794f;
      sa[1025] = 0.10498495f;
      sa[1026] = 0.1572864f;
      sa[1027] = 0.21058783f;
      sa[1028] = 0.30900174f;
      sa[1029] = -0.0077529266f;
      sa[1030] = -0.1083385f;
      sa[1031] = 0.0381978f;
      sa[1032] = -0.22475658f;
      sa[1033] = 0.05889722f;
      sa[1034] = -0.097974315f;
      sa[1035] = -0.34185913f;
      sa[1036] = 0.21869981f;
      sa[1037] = -0.020133656f;
      sa[1038] = -0.2555948f;
      sa[1039] = 0.18491025f;
      sa[1040] = -2.03086E-4f;
      sa[1041] = 0.07649178f;
      sa[1042] = -0.24975958f;
      sa[1043] = -0.06346715f;
      sa[1044] = 0.23065534f;
      sa[1045] = 0.20106578f;
      sa[1046] = -0.29616272f;
      sa[1047] = -0.15635112f;
      sa[1048] = 0.1286359f;
      sa[1049] = -0.112750836f;
      sa[1050] = 0.041734032f;
      sa[1051] = -0.23838037f;
      sa[1052] = 0.21309818f;
      sa[1053] = 0.19134554f;
      sa[1054] = 0.21434271f;
      sa[1055] = -0.012252642f;
      sa[1056] = 0.24209844f;
      sa[1057] = -0.2068731f;
      sa[1058] = 0.219499f;
      sa[1059] = -0.21994627f;
      sa[1060] = -0.32633784f;
      sa[1061] = -0.045011073f;
      sa[1062] = 0.2590736f;
      sa[1063] = -0.09257627f;
      sa[1064] = 0.06126886f;
      sa[1065] = -0.07692589f;
      sa[1066] = 0.17035116f;
      sa[1067] = -0.3677649f;
      sa[1068] = -0.38058993f;
      sa[1069] = 0.22371525f;
      sa[1070] = 0.13530245f;
      sa[1071] = 0.15924399f;
      sa[1072] = -0.28268534f;
      sa[1073] = 0.0484819f;
      sa[1074] = 0.0781536f;
      sa[1075] = -0.24334526f;
      sa[1076] = -0.2148064f;
      sa[1077] = 0.09057392f;
      sa[1078] = 0.053501166f;
      sa[1079] = 0.122949734f;
      sa[1080] = 0.19297382f;
      sa[1081] = 0.21461612f;
      sa[1082] = -0.30140996f;
      sa[1083] = -0.19677328f;
      sa[1084] = 0.25690058f;
      sa[1085] = -0.20289165f;
      sa[1086] = -0.2590521f;
      sa[1087] = -0.21931921f;
      sa[1088] = -0.22864962f;
      sa[1089] = 0.13213648f;
      sa[1090] = -0.24002813f;
      sa[1091] = 0.14849372f;
      sa[1092] = -0.25453728f;
      sa[1093] = -0.26573637f;
      sa[1094] = -0.013107271f;
      sa[1095] = -0.23598444f;
      sa[1096] = 0.04085398f;
      sa[1097] = -0.06340525f;
      sa[1098] = 0.009734853f;
      sa[1099] = -0.08888089f;
      sa[1100] = -0.12575497f;
      sa[1101] = 0.15335682f;
      sa[1102] = -0.14936794f;
      sa[1103] = 0.22777894f;
      sa[1104] = -0.2510136f;
      sa[1105] = -0.14221466f;
      sa[1106] = -0.08984607f;
      sa[1107] = 0.2167992f;
      sa[1108] = -0.18087962f;
      sa[1109] = 0.26434696f;
      sa[1110] = 0.1760442f;
      sa[1111] = -0.2164235f;
      sa[1112] = 0.21696176f;
      sa[1113] = 0.32506597f;
      sa[1114] = -0.019677205f;
      sa[1115] = 0.123314686f;
      sa[1116] = -0.07540455f;
      sa[1117] = -0.23412308f;
      sa[1118] = -0.19880237f;
      sa[1119] = -0.026780762f;
      sa[1120] = 0.19301982f;
      sa[1121] = 0.056943297f;
      sa[1122] = 0.2931852f;
      sa[1123] = 0.25306973f;
      sa[1124] = 0.040257283f;
      sa[1125] = -0.11267862f;
      sa[1126] = 0.16862172f;
      sa[1127] = 0.1866958f;
      sa[1128] = 0.011877074f;
      sa[1129] = -0.12759115f;
      sa[1130] = 0.2570676f;
      sa[1131] = 0.28254598f;
      sa[1132] = -0.24563858f;
      sa[1133] = -0.23866124f;
      sa[1134] = 0.34069398f;
      sa[1135] = -0.4162801f;
      sa[1136] = -0.042616367f;
      sa[1137] = 0.19809555f;
      sa[1138] = -0.008405116f;
      sa[1139] = 0.12718186f;
      sa[1140] = 0.17487705f;
      sa[1141] = -0.2541821f;
      sa[1142] = 0.103034504f;
      sa[1143] = -0.13136815f;
      sa[1144] = -0.3791665f;
      sa[1145] = 0.059810244f;
      sa[1146] = 0.14153986f;
      sa[1147] = -0.21130279f;
      sa[1148] = -0.008942416f;
      sa[1149] = -0.025705172f;
      sa[1150] = -0.23225877f;
      sa[1151] = -0.21003632f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_05_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_05_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2381439f;
      sa[1] = -0.101628765f;
      sa[2] = -0.5905876f;
      sa[3] = -1.093536f;
      sa[4] = 0.089447044f;
      sa[5] = 0.28764352f;
      sa[6] = 1.3325363f;
      sa[7] = -0.7174977f;
      sa[8] = -0.9437303f;
      sa[9] = 0.8293044f;
      sa[10] = -0.05164242f;
      sa[11] = 0.3955205f;
      sa[12] = 0.16183205f;
      sa[13] = -0.005248603f;
      sa[14] = -1.4380312f;
      sa[15] = 1.1418687f;
      sa[16] = 1.5625175f;
      sa[17] = -0.5334268f;
      sa[18] = 0.085582316f;
      sa[19] = -0.3838719f;
      sa[20] = 1.1685363f;
      sa[21] = 0.050196335f;
      sa[22] = -0.9052944f;
      sa[23] = 0.757868f;
      sa[24] = -1.391134f;
      sa[25] = 0.5007551f;
      sa[26] = -0.26028413f;
      sa[27] = 1.5561843f;
      sa[28] = -1.327429f;
      sa[29] = -0.38402823f;
      sa[30] = 0.46264443f;
      sa[31] = -0.58779174f;
      sa[32] = -1.134972f;
      sa[33] = -1.5330136f;
      sa[34] = 0.050836418f;
      sa[35] = 1.3775917f;
      sa[36] = -0.3234749f;
      sa[37] = -0.026797622f;
      sa[38] = 0.26320228f;
      sa[39] = 0.7966347f;
      sa[40] = -0.76397187f;
      sa[41] = -1.3358635f;
      sa[42] = -1.0142955f;
      sa[43] = -1.4846852f;
      sa[44] = 0.010942861f;
      sa[45] = -1.369194f;
      sa[46] = 1.1603389f;
      sa[47] = 1.279157f;
      sa[48] = -1.3472328f;
      sa[49] = -1.073807f;
      sa[50] = 0.4567285f;
      sa[51] = -0.3763829f;
      sa[52] = 0.7877328f;
      sa[53] = 0.8951169f;
      sa[54] = -0.15870592f;
      sa[55] = 1.1471827f;
      sa[56] = -1.0677768f;
      sa[57] = -1.1692928f;
      sa[58] = 0.12043103f;
      sa[59] = -0.31850654f;
      sa[60] = 1.4769318f;
      sa[61] = -0.6978136f;
      sa[62] = -0.36355636f;
      sa[63] = 0.69175935f;
      sa[64] = 1.606935f;
      sa[65] = -0.58796275f;
      sa[66] = 0.76522434f;
      sa[67] = 1.6486236f;
      sa[68] = 0.7785607f;
      sa[69] = -1.1393054f;
      sa[70] = -1.6480038f;
      sa[71] = -0.37680927f;
      sa[72] = -1.3548479f;
      sa[73] = 1.0980608f;
      sa[74] = 1.2671709f;
      sa[75] = -0.070025206f;
      sa[76] = 1.0955901f;
      sa[77] = 0.67336047f;
      sa[78] = -1.2207147f;
      sa[79] = 0.9294784f;
      sa[80] = -0.8366425f;
      sa[81] = 0.33946443f;
      sa[82] = 0.7440784f;
      sa[83] = -0.7694163f;
      sa[84] = -1.6605189f;
      sa[85] = -1.2827083f;
      sa[86] = 0.19596557f;
      sa[87] = 1.2376308f;
      sa[88] = -1.5175362f;
      sa[89] = -0.5640545f;
      sa[90] = -0.9934958f;
      sa[91] = 1.4689889f;
      sa[92] = -0.33241937f;
      sa[93] = 0.14682242f;
      sa[94] = -1.5584875f;
      sa[95] = -0.35917166f;
      sa[96] = -1.154817f;
      sa[97] = 0.22716269f;
      sa[98] = -0.07506672f;
      sa[99] = 0.32338682f;
      sa[100] = -1.3533823f;
      sa[101] = -0.44986418f;
      sa[102] = 1.2743341f;
      sa[103] = 0.15288551f;
      sa[104] = -0.11830022f;
      sa[105] = -0.5873302f;
      sa[106] = 1.5643451f;
      sa[107] = 1.2441846f;
      sa[108] = 0.7391461f;
      sa[109] = 0.13460526f;
      sa[110] = 0.7384463f;
      sa[111] = -0.7391357f;
      sa[112] = -1.1112398f;
      sa[113] = 0.25757295f;
      sa[114] = 0.20397131f;
      sa[115] = -0.34851697f;
      sa[116] = 1.2224747f;
      sa[117] = 0.04312645f;
      sa[118] = -1.3811636f;
      sa[119] = -0.9147347f;
      sa[120] = -0.29541457f;
      sa[121] = 1.0889786f;
      sa[122] = -0.04864758f;
      sa[123] = 0.40960783f;
      sa[124] = -0.82802325f;
      sa[125] = 0.8765432f;
      sa[126] = -0.8936446f;
      sa[127] = 0.47098252f;
      sa[128] = -0.7960403f;
      sa[129] = 0.6760172f;
      sa[130] = -0.35878205f;
      sa[131] = 0.9102987f;
      sa[132] = 0.6204149f;
      sa[133] = 0.62778604f;
      sa[134] = 0.58539313f;
      sa[135] = -1.1454936f;
      sa[136] = 0.50940806f;
      sa[137] = -0.6553851f;
      sa[138] = -0.23343658f;
      sa[139] = 1.1861637f;
      sa[140] = -0.3911723f;
      sa[141] = 0.11138603f;
      sa[142] = 0.34352824f;
      sa[143] = -0.7690382f;
      sa[144] = 0.98208094f;
      sa[145] = -0.874907f;
      sa[146] = -0.017044278f;
      sa[147] = -0.22488846f;
      sa[148] = -0.77057755f;
      sa[149] = 1.1097296f;
      sa[150] = -1.1660292f;
      sa[151] = -1.5166256f;
      sa[152] = 1.7277877f;
      sa[153] = -0.57309973f;
      sa[154] = 1.3962383f;
      sa[155] = -1.5168779f;
      sa[156] = -1.5385884f;
      sa[157] = -1.1817597f;
      sa[158] = -0.2169586f;
      sa[159] = -0.71819186f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_05 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_05_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_05_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_05_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_05_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


