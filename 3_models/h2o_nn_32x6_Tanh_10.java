/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:08:57.083+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_10

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_10 > h2o_nn_32x6_Tanh_10.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_10.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_10", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_10 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_10_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_10_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_10_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_10_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_10_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_10_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_10_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_10_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_10_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_10.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_10_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24761904761904763,0.18571428571428572,0.06190476190476191,0.12857142857142856,0.24761904761904763,0.12857142857142856};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_10() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-3232773286749010632L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_10_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_10_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_10_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_10_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_10_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_10_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_10_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_10_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_10_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.04387861770164491;
      sa[1] = 0.006747635973507611;
      sa[2] = -0.022228871135740624;
      sa[3] = -0.15714259173259673;
      sa[4] = -0.03356929887091597;
      sa[5] = 3.9836355955195874E-4;
      sa[6] = 0.17187958731734196;
      sa[7] = -0.06028774011029819;
      sa[8] = -0.0408862442417673;
      sa[9] = -0.06232163515319128;
      sa[10] = 0.0733601440772278;
      sa[11] = 0.06482507331314426;
      sa[12] = 0.06355944754545313;
      sa[13] = -0.09883623162925512;
      sa[14] = -0.0069279341107692256;
      sa[15] = -0.023099806851396537;
      sa[16] = 0.03377869885461174;
      sa[17] = 0.09265877357432864;
      sa[18] = -0.09836672277667348;
      sa[19] = -0.013413585977097771;
      sa[20] = 0.14180985176793912;
      sa[21] = -0.012653102736624849;
      sa[22] = -0.16058367094204698;
      sa[23] = 0.00980123203551353;
      sa[24] = -0.06375817668697464;
      sa[25] = 0.2649969663035448;
      sa[26] = -0.03095964066395553;
      sa[27] = 0.050333515648848214;
      sa[28] = -0.05097499165891936;
      sa[29] = 0.003132780169921398;
      sa[30] = 0.013388493109540076;
      sa[31] = 0.010185012233969943;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_10_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_10_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.054807466391003014;
      sa[1] = -0.0794477705581671;
      sa[2] = -0.10437328778417833;
      sa[3] = 0.05044087409977936;
      sa[4] = -0.06569051260612951;
      sa[5] = -0.007457380344755992;
    }
  }
}
class h2o_nn_32x6_Tanh_10_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_10_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_10_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.031122478f;
      sa[1] = 0.09348494f;
      sa[2] = 0.066410765f;
      sa[3] = 0.19630101f;
      sa[4] = -0.14600986f;
      sa[5] = -0.16710226f;
      sa[6] = -0.021404479f;
      sa[7] = 0.20470181f;
      sa[8] = 0.05590099f;
      sa[9] = -0.19996275f;
      sa[10] = -0.15870534f;
      sa[11] = -0.07425368f;
      sa[12] = 0.01443701f;
      sa[13] = -0.28627446f;
      sa[14] = -0.185579f;
      sa[15] = -0.099845946f;
      sa[16] = 0.039809316f;
      sa[17] = 0.09730243f;
      sa[18] = -0.09390918f;
      sa[19] = 0.14167829f;
      sa[20] = 0.15064451f;
      sa[21] = -0.33596224f;
      sa[22] = 0.2080783f;
      sa[23] = -0.16013761f;
      sa[24] = 0.2530663f;
      sa[25] = 0.19597268f;
      sa[26] = -0.14628428f;
      sa[27] = 0.20618525f;
      sa[28] = 0.14598894f;
      sa[29] = -0.30854404f;
      sa[30] = -0.20771311f;
      sa[31] = 0.048406404f;
      sa[32] = 0.22583777f;
      sa[33] = -0.13965222f;
      sa[34] = 0.02423445f;
      sa[35] = -0.090190314f;
      sa[36] = 0.0241019f;
      sa[37] = 0.1731346f;
      sa[38] = -0.086481735f;
      sa[39] = 0.15484586f;
      sa[40] = -5.3790305E-4f;
      sa[41] = -0.09952456f;
      sa[42] = -0.14073367f;
      sa[43] = -0.03475692f;
      sa[44] = 0.2766777f;
      sa[45] = -0.25101697f;
      sa[46] = 0.09143468f;
      sa[47] = 0.026500585f;
      sa[48] = 0.2594626f;
      sa[49] = 0.26204345f;
      sa[50] = 0.23705882f;
      sa[51] = -0.2826684f;
      sa[52] = -0.13020965f;
      sa[53] = 0.14831144f;
      sa[54] = 0.17493665f;
      sa[55] = 0.28636584f;
      sa[56] = -0.12583385f;
      sa[57] = -0.27080777f;
      sa[58] = 0.28146687f;
      sa[59] = -0.15950456f;
      sa[60] = -0.24922948f;
      sa[61] = 0.08220905f;
      sa[62] = 0.060192477f;
      sa[63] = -0.1762194f;
      sa[64] = 0.15382834f;
      sa[65] = 0.11411645f;
      sa[66] = 0.007261825f;
      sa[67] = 0.12716961f;
      sa[68] = -0.080677815f;
      sa[69] = -0.010777839f;
      sa[70] = -0.023511956f;
      sa[71] = 0.23627296f;
      sa[72] = -0.09124325f;
      sa[73] = 0.22690672f;
      sa[74] = -0.18281914f;
      sa[75] = 0.013473523f;
      sa[76] = -0.15746082f;
      sa[77] = -0.08380359f;
      sa[78] = -0.10386531f;
      sa[79] = 0.16979025f;
      sa[80] = -0.25818607f;
      sa[81] = -0.030102158f;
      sa[82] = -0.012665336f;
      sa[83] = 0.0812766f;
      sa[84] = -0.10311671f;
      sa[85] = -0.2504149f;
      sa[86] = 0.021435522f;
      sa[87] = 0.21302041f;
      sa[88] = 0.23073941f;
      sa[89] = 0.116820455f;
      sa[90] = -0.10804615f;
      sa[91] = 0.024117751f;
      sa[92] = 0.06935614f;
      sa[93] = -0.17124207f;
      sa[94] = -0.20608221f;
      sa[95] = -0.21091092f;
      sa[96] = 0.11008884f;
      sa[97] = 0.08349486f;
      sa[98] = 0.18973279f;
      sa[99] = 0.023462513f;
      sa[100] = -0.0711745f;
      sa[101] = -0.15725943f;
      sa[102] = -0.25084686f;
      sa[103] = -0.060543012f;
      sa[104] = -0.06828668f;
      sa[105] = -0.08434079f;
      sa[106] = -0.22798258f;
      sa[107] = 0.21570063f;
      sa[108] = 0.23378526f;
      sa[109] = -0.09607924f;
      sa[110] = -0.13029288f;
      sa[111] = -0.054470267f;
      sa[112] = 0.052882418f;
      sa[113] = -0.045960397f;
      sa[114] = -0.23744887f;
      sa[115] = -0.059159607f;
      sa[116] = -0.16748857f;
      sa[117] = 0.07992966f;
      sa[118] = -0.2602008f;
      sa[119] = -0.17299291f;
      sa[120] = 0.14069106f;
      sa[121] = 0.13969271f;
      sa[122] = 0.20063357f;
      sa[123] = 0.26260495f;
      sa[124] = 0.2882193f;
      sa[125] = 0.2901142f;
      sa[126] = -0.26337206f;
      sa[127] = -0.2979823f;
      sa[128] = 0.089528635f;
      sa[129] = 0.15358117f;
      sa[130] = -0.19347855f;
      sa[131] = 0.21204874f;
      sa[132] = 0.09154875f;
      sa[133] = -0.31000298f;
      sa[134] = 0.035953853f;
      sa[135] = -0.19014971f;
      sa[136] = -0.21095535f;
      sa[137] = 0.016227644f;
      sa[138] = 0.0821818f;
      sa[139] = 0.06921298f;
      sa[140] = -0.14543387f;
      sa[141] = -0.10019145f;
      sa[142] = 0.13305558f;
      sa[143] = -0.2632746f;
      sa[144] = 0.28995705f;
      sa[145] = -0.2818677f;
      sa[146] = -0.29617286f;
      sa[147] = 0.13022181f;
      sa[148] = 0.23639655f;
      sa[149] = 0.14744583f;
      sa[150] = 0.26474202f;
      sa[151] = -0.18790759f;
      sa[152] = -0.033182535f;
      sa[153] = 0.2254608f;
      sa[154] = 0.23387073f;
      sa[155] = -0.18397759f;
      sa[156] = 0.038265668f;
      sa[157] = -0.2501698f;
      sa[158] = 0.035996057f;
      sa[159] = 0.054207906f;
      sa[160] = -0.108238265f;
      sa[161] = -0.013610154f;
      sa[162] = 0.28098756f;
      sa[163] = -0.3300911f;
      sa[164] = 0.1634994f;
      sa[165] = 0.018370401f;
      sa[166] = -0.10060002f;
      sa[167] = -0.023028525f;
      sa[168] = 0.12794603f;
      sa[169] = 0.32986638f;
      sa[170] = 0.19164559f;
      sa[171] = -0.01892215f;
      sa[172] = -0.108435184f;
      sa[173] = -0.081679605f;
      sa[174] = -0.06368967f;
      sa[175] = -0.11937788f;
      sa[176] = -0.024157997f;
      sa[177] = 0.06980553f;
      sa[178] = -0.16028373f;
      sa[179] = 0.117709175f;
      sa[180] = -0.12510109f;
      sa[181] = -0.31414893f;
      sa[182] = -0.113857836f;
      sa[183] = 0.14122689f;
      sa[184] = 0.27561343f;
      sa[185] = 0.17701127f;
      sa[186] = -0.26106027f;
      sa[187] = 0.090723f;
      sa[188] = -0.11195503f;
      sa[189] = 0.14029187f;
      sa[190] = 0.12628457f;
      sa[191] = -0.16537906f;
      sa[192] = -0.09338527f;
      sa[193] = 0.24205168f;
      sa[194] = 0.14071858f;
      sa[195] = 0.2742552f;
      sa[196] = 0.22218455f;
      sa[197] = -0.10040104f;
      sa[198] = 0.21219786f;
      sa[199] = 0.017875137f;
      sa[200] = 0.031060822f;
      sa[201] = -0.26810554f;
      sa[202] = 0.14363258f;
      sa[203] = -0.007741206f;
      sa[204] = -0.16175215f;
      sa[205] = 0.21425594f;
      sa[206] = 0.32496715f;
      sa[207] = 0.074730255f;
      sa[208] = -0.24000433f;
      sa[209] = -0.050159167f;
      sa[210] = -0.26484138f;
      sa[211] = -0.21100906f;
      sa[212] = 0.27588895f;
      sa[213] = -0.40180996f;
      sa[214] = 0.07526899f;
      sa[215] = -0.015676936f;
      sa[216] = 0.028589234f;
      sa[217] = 0.12605783f;
      sa[218] = -0.16374026f;
      sa[219] = 0.3286431f;
      sa[220] = -0.16702607f;
      sa[221] = 0.10549709f;
      sa[222] = 0.2843801f;
      sa[223] = 0.07557196f;
      sa[224] = 0.09175551f;
      sa[225] = 0.25342262f;
      sa[226] = -0.24930394f;
      sa[227] = 0.09399807f;
      sa[228] = 0.18739869f;
      sa[229] = 0.15338083f;
      sa[230] = 0.32004073f;
      sa[231] = -0.20723444f;
      sa[232] = -0.23824877f;
      sa[233] = 0.09654426f;
      sa[234] = 0.07993897f;
      sa[235] = -0.06187461f;
      sa[236] = 0.004672941f;
      sa[237] = -0.19373967f;
      sa[238] = -0.12427976f;
      sa[239] = 0.18395925f;
      sa[240] = 0.07784362f;
      sa[241] = -0.24091172f;
      sa[242] = -0.069684766f;
      sa[243] = -0.13551192f;
      sa[244] = -0.1836255f;
      sa[245] = -0.13314389f;
      sa[246] = -0.20608395f;
      sa[247] = -0.112360075f;
      sa[248] = 0.22910392f;
      sa[249] = 0.091451176f;
      sa[250] = -0.008763348f;
      sa[251] = -0.06835055f;
      sa[252] = -0.26249385f;
      sa[253] = -0.12961444f;
      sa[254] = -0.20728235f;
      sa[255] = 0.24098267f;
      sa[256] = -0.20865083f;
      sa[257] = 0.2718453f;
      sa[258] = -0.25998065f;
      sa[259] = -0.13335736f;
      sa[260] = -0.12016212f;
      sa[261] = -0.056693587f;
      sa[262] = -0.21126191f;
      sa[263] = 0.29049903f;
      sa[264] = -0.12427016f;
      sa[265] = 0.10417109f;
      sa[266] = -0.26061496f;
      sa[267] = -0.20008495f;
      sa[268] = 0.26241508f;
      sa[269] = -0.046899106f;
      sa[270] = -0.1244585f;
      sa[271] = 0.09790707f;
      sa[272] = -0.08798611f;
      sa[273] = -0.15817273f;
      sa[274] = 0.093342446f;
      sa[275] = -0.105880685f;
      sa[276] = 0.07985187f;
      sa[277] = -0.31442827f;
      sa[278] = -0.16633153f;
      sa[279] = 0.19251864f;
      sa[280] = -0.14365268f;
      sa[281] = 0.23447376f;
      sa[282] = -0.06476155f;
      sa[283] = -0.06341586f;
      sa[284] = 0.050481785f;
      sa[285] = -0.12150087f;
      sa[286] = 0.17633393f;
      sa[287] = 0.04252929f;
      sa[288] = -0.17578132f;
      sa[289] = -0.122059666f;
      sa[290] = -0.038598377f;
      sa[291] = -0.037009407f;
      sa[292] = 0.124579795f;
      sa[293] = -0.13365345f;
      sa[294] = 0.041238736f;
      sa[295] = 0.13754703f;
      sa[296] = 0.13629279f;
      sa[297] = 0.22299875f;
      sa[298] = 0.035165306f;
      sa[299] = -0.18620768f;
      sa[300] = -0.04354117f;
      sa[301] = -0.12342244f;
      sa[302] = 0.104112834f;
      sa[303] = 0.018370662f;
      sa[304] = -0.1996295f;
      sa[305] = -0.029126575f;
      sa[306] = 0.17026371f;
      sa[307] = -0.06494853f;
      sa[308] = 0.089886464f;
      sa[309] = 0.18203244f;
      sa[310] = 0.27564308f;
      sa[311] = 0.34082082f;
      sa[312] = -0.16798387f;
      sa[313] = -0.12390371f;
      sa[314] = -0.19514059f;
      sa[315] = 0.116196215f;
      sa[316] = -0.028156482f;
      sa[317] = -0.056986086f;
      sa[318] = 0.062328458f;
      sa[319] = 0.30111864f;
      sa[320] = -0.14472035f;
      sa[321] = -0.0104212575f;
      sa[322] = 0.37138098f;
      sa[323] = -0.019672664f;
      sa[324] = -0.04169954f;
      sa[325] = 0.17579752f;
      sa[326] = -0.33241916f;
      sa[327] = 0.046690017f;
      sa[328] = -0.073368326f;
      sa[329] = 0.23192622f;
      sa[330] = -0.15857427f;
      sa[331] = -0.09127711f;
      sa[332] = -0.2364491f;
      sa[333] = 0.06325031f;
      sa[334] = -0.07839884f;
      sa[335] = 0.37060198f;
      sa[336] = -0.16236845f;
      sa[337] = -0.1459903f;
      sa[338] = 0.2806032f;
      sa[339] = -0.26165432f;
      sa[340] = -0.32876843f;
      sa[341] = -0.33625764f;
      sa[342] = 0.22286168f;
      sa[343] = 0.06621759f;
      sa[344] = -0.20364866f;
      sa[345] = 0.12583731f;
      sa[346] = 0.17078955f;
      sa[347] = -0.18461604f;
      sa[348] = 0.25892705f;
      sa[349] = -0.26673084f;
      sa[350] = -0.20619583f;
      sa[351] = -0.05648535f;
      sa[352] = 0.13236886f;
      sa[353] = -0.09618937f;
      sa[354] = 0.045240484f;
      sa[355] = 0.019873533f;
      sa[356] = -0.04473541f;
      sa[357] = 0.3220946f;
      sa[358] = -0.34867013f;
      sa[359] = -0.0637544f;
      sa[360] = 0.12589458f;
      sa[361] = -0.1181962f;
      sa[362] = -0.18587272f;
      sa[363] = -0.06616111f;
      sa[364] = -0.10111483f;
      sa[365] = -0.21869583f;
      sa[366] = -0.001947239f;
      sa[367] = -0.3111896f;
      sa[368] = -0.08736997f;
      sa[369] = 0.39132482f;
      sa[370] = -0.1976602f;
      sa[371] = 0.27561763f;
      sa[372] = 0.001692919f;
      sa[373] = 0.2789527f;
      sa[374] = -0.13864698f;
      sa[375] = -0.2892406f;
      sa[376] = -0.30811507f;
      sa[377] = -0.11659256f;
      sa[378] = 0.20066962f;
      sa[379] = 0.23987322f;
      sa[380] = -0.05967967f;
      sa[381] = -0.03997012f;
      sa[382] = 0.0058860155f;
      sa[383] = -0.002726218f;
      sa[384] = -0.1360191f;
      sa[385] = 0.09365335f;
      sa[386] = -0.31940103f;
      sa[387] = -0.17466208f;
      sa[388] = 0.10433993f;
      sa[389] = -0.022107128f;
      sa[390] = -4.3262893E-4f;
      sa[391] = -0.15545046f;
      sa[392] = 0.09326102f;
      sa[393] = 0.14197196f;
      sa[394] = -0.028308019f;
      sa[395] = 0.4073236f;
      sa[396] = 0.25133136f;
      sa[397] = -0.35087916f;
      sa[398] = 0.11440549f;
      sa[399] = 0.05676312f;
      sa[400] = 0.18442826f;
      sa[401] = 0.23147358f;
      sa[402] = -0.11315935f;
      sa[403] = 0.02773882f;
      sa[404] = 0.23967321f;
      sa[405] = -0.2260463f;
      sa[406] = -0.021325318f;
      sa[407] = 0.13721758f;
      sa[408] = -0.17498305f;
      sa[409] = -0.22526205f;
      sa[410] = -0.07785671f;
      sa[411] = 0.14629133f;
      sa[412] = -0.21056964f;
      sa[413] = 0.06651465f;
      sa[414] = 0.115462296f;
      sa[415] = 0.4557117f;
      sa[416] = -0.12679583f;
      sa[417] = 0.06563716f;
      sa[418] = 0.042697407f;
      sa[419] = 0.35919842f;
      sa[420] = 0.22469556f;
      sa[421] = 0.26536626f;
      sa[422] = 0.19326024f;
      sa[423] = -0.14988382f;
      sa[424] = 0.12098392f;
      sa[425] = -0.05211666f;
      sa[426] = -0.2754033f;
      sa[427] = 0.175619f;
      sa[428] = -0.046764027f;
      sa[429] = -0.27786422f;
      sa[430] = 0.24093594f;
      sa[431] = 0.018978633f;
      sa[432] = -0.005438257f;
      sa[433] = 0.14740004f;
      sa[434] = 0.24795094f;
      sa[435] = 0.0014974821f;
      sa[436] = -0.22218288f;
      sa[437] = -0.2218328f;
      sa[438] = 0.012412487f;
      sa[439] = 0.008239204f;
      sa[440] = 0.2975666f;
      sa[441] = -0.21071537f;
      sa[442] = 0.05902442f;
      sa[443] = 0.081330135f;
      sa[444] = -0.2137294f;
      sa[445] = 0.064784124f;
      sa[446] = 0.18383151f;
      sa[447] = 0.072585285f;
      sa[448] = 0.20086004f;
      sa[449] = 0.33948395f;
      sa[450] = -0.22734128f;
      sa[451] = 0.09116135f;
      sa[452] = 0.17463468f;
      sa[453] = -0.02394333f;
      sa[454] = -0.1375181f;
      sa[455] = -0.031902723f;
      sa[456] = -0.026507694f;
      sa[457] = 0.11037503f;
      sa[458] = -0.28949207f;
      sa[459] = 0.35155132f;
      sa[460] = 0.20707543f;
      sa[461] = 0.25179416f;
      sa[462] = 0.063786f;
      sa[463] = 0.1805354f;
      sa[464] = -0.29976144f;
      sa[465] = 0.23275681f;
      sa[466] = -0.0055739265f;
      sa[467] = 0.19921146f;
      sa[468] = 0.12632746f;
      sa[469] = 0.1564995f;
      sa[470] = 0.13693367f;
      sa[471] = -0.03343996f;
      sa[472] = 0.027381709f;
      sa[473] = -0.15418984f;
      sa[474] = -0.04281938f;
      sa[475] = 0.033531908f;
      sa[476] = 0.19861694f;
      sa[477] = -0.110980004f;
      sa[478] = 0.11824755f;
      sa[479] = -0.13004829f;
      sa[480] = -0.38276446f;
      sa[481] = -0.2924114f;
      sa[482] = -0.33169827f;
      sa[483] = 0.1043608f;
      sa[484] = 0.13209957f;
      sa[485] = 0.15319942f;
      sa[486] = -0.019957887f;
      sa[487] = -0.061164122f;
      sa[488] = -0.23884277f;
      sa[489] = 0.09287708f;
      sa[490] = -0.047276024f;
      sa[491] = -0.1597857f;
      sa[492] = 0.23387559f;
      sa[493] = 0.28874758f;
      sa[494] = -0.22258058f;
      sa[495] = 0.23476228f;
      sa[496] = -0.13898525f;
      sa[497] = 0.0095760785f;
      sa[498] = 0.044663977f;
      sa[499] = 0.051888436f;
      sa[500] = -0.15315628f;
      sa[501] = 0.043871634f;
      sa[502] = 0.3182534f;
      sa[503] = 0.15450612f;
      sa[504] = -0.14657056f;
      sa[505] = -0.05191873f;
      sa[506] = 0.25533745f;
      sa[507] = -0.11948134f;
      sa[508] = 0.04923553f;
      sa[509] = 0.17885214f;
      sa[510] = 0.108837195f;
      sa[511] = 0.057808653f;
      sa[512] = 0.10125115f;
      sa[513] = -0.018616851f;
      sa[514] = 0.25544629f;
      sa[515] = -0.4122647f;
      sa[516] = 0.04030081f;
      sa[517] = 0.07593197f;
      sa[518] = 0.10061981f;
      sa[519] = -0.04289637f;
      sa[520] = 0.24718033f;
      sa[521] = 0.20716278f;
      sa[522] = -0.0143728275f;
      sa[523] = 0.09930734f;
      sa[524] = 0.25586197f;
      sa[525] = 0.18631983f;
      sa[526] = -0.0072389855f;
      sa[527] = -0.14499484f;
      sa[528] = 0.0058471453f;
      sa[529] = 0.11040474f;
      sa[530] = -0.2327444f;
      sa[531] = 0.30830377f;
      sa[532] = 0.20718908f;
      sa[533] = 0.14358439f;
      sa[534] = 0.1469468f;
      sa[535] = 0.03525373f;
      sa[536] = 0.0037316661f;
      sa[537] = -0.2935415f;
      sa[538] = 0.24379702f;
      sa[539] = 0.3441032f;
      sa[540] = -0.25840136f;
      sa[541] = -0.15480404f;
      sa[542] = -0.13165785f;
      sa[543] = -0.15029612f;
      sa[544] = 0.16428648f;
      sa[545] = 0.1504454f;
      sa[546] = 0.11471252f;
      sa[547] = 0.21553011f;
      sa[548] = 0.013694212f;
      sa[549] = 0.09076339f;
      sa[550] = -0.05854632f;
      sa[551] = -0.028288499f;
      sa[552] = 0.005966118f;
      sa[553] = -0.040294945f;
      sa[554] = -0.14211118f;
      sa[555] = -0.14960763f;
      sa[556] = -0.14037076f;
      sa[557] = -0.24711506f;
      sa[558] = -0.10159674f;
      sa[559] = -0.150531f;
      sa[560] = -0.36787578f;
      sa[561] = -0.14675774f;
      sa[562] = 0.1474459f;
      sa[563] = -0.14334752f;
      sa[564] = 0.22238067f;
      sa[565] = 0.036107957f;
      sa[566] = 0.3699797f;
      sa[567] = -0.030162787f;
      sa[568] = -0.13217609f;
      sa[569] = -0.008208452f;
      sa[570] = -0.022060014f;
      sa[571] = -0.08925483f;
      sa[572] = -0.018283326f;
      sa[573] = 0.31373698f;
      sa[574] = 0.09992246f;
      sa[575] = -0.3802996f;
      sa[576] = -0.15218997f;
      sa[577] = -0.07941079f;
      sa[578] = 0.07027447f;
      sa[579] = 0.033862904f;
      sa[580] = 0.11672515f;
      sa[581] = -0.10561821f;
      sa[582] = 0.15283623f;
      sa[583] = -0.0020282434f;
      sa[584] = 0.08208033f;
      sa[585] = 0.12231872f;
      sa[586] = -0.16829996f;
      sa[587] = -0.096901916f;
      sa[588] = 0.111605875f;
      sa[589] = 0.15436296f;
      sa[590] = 0.06842873f;
      sa[591] = 0.030171419f;
      sa[592] = -0.34472707f;
      sa[593] = -0.27070835f;
      sa[594] = 0.04042469f;
      sa[595] = 0.14507717f;
      sa[596] = 0.2712789f;
      sa[597] = -0.006767411f;
      sa[598] = 0.2633559f;
      sa[599] = 0.121005364f;
      sa[600] = -0.2764815f;
      sa[601] = 0.23091781f;
      sa[602] = -0.019931272f;
      sa[603] = -0.024210736f;
      sa[604] = 0.21982898f;
      sa[605] = 0.18445653f;
      sa[606] = 0.19892058f;
      sa[607] = 0.06418753f;
      sa[608] = 0.06298319f;
      sa[609] = 0.089588836f;
      sa[610] = 0.13648887f;
      sa[611] = -0.12253639f;
      sa[612] = -0.1066451f;
      sa[613] = 0.04646205f;
      sa[614] = 0.06637556f;
      sa[615] = -0.13289973f;
      sa[616] = 0.07265237f;
      sa[617] = -0.27361232f;
      sa[618] = -0.1265922f;
      sa[619] = -0.18531662f;
      sa[620] = 0.010595956f;
      sa[621] = -0.13150138f;
      sa[622] = -0.2749124f;
      sa[623] = -0.18559478f;
      sa[624] = -0.028915223f;
      sa[625] = 0.2512277f;
      sa[626] = -6.750641E-4f;
      sa[627] = 0.24257731f;
      sa[628] = -0.27662387f;
      sa[629] = 0.06570342f;
      sa[630] = -0.2370277f;
      sa[631] = 0.44415703f;
      sa[632] = 0.120760895f;
      sa[633] = -0.11827326f;
      sa[634] = -0.15595387f;
      sa[635] = 0.22746691f;
      sa[636] = -0.14877953f;
      sa[637] = -0.008213508f;
      sa[638] = -0.17749766f;
      sa[639] = -0.004572267f;
      sa[640] = -0.1282576f;
      sa[641] = -0.31312487f;
      sa[642] = 0.18532671f;
      sa[643] = -0.36723316f;
      sa[644] = -0.14133199f;
      sa[645] = -0.3570682f;
      sa[646] = 0.37951633f;
      sa[647] = -0.090445265f;
      sa[648] = 0.019973524f;
      sa[649] = -0.0373149f;
      sa[650] = 0.05718873f;
      sa[651] = -0.15070212f;
      sa[652] = 0.04038247f;
      sa[653] = -0.18080966f;
      sa[654] = -0.19318934f;
      sa[655] = -0.19461033f;
      sa[656] = 0.21680619f;
      sa[657] = 0.13065562f;
      sa[658] = -0.26746082f;
      sa[659] = -0.1806176f;
      sa[660] = -0.23076317f;
      sa[661] = -0.11465004f;
      sa[662] = -0.29490188f;
      sa[663] = 0.14543854f;
      sa[664] = -0.16526803f;
      sa[665] = 0.23270625f;
      sa[666] = 0.004942929f;
      sa[667] = -0.29319632f;
      sa[668] = 0.2604556f;
      sa[669] = -0.15050887f;
      sa[670] = 0.09412936f;
      sa[671] = 0.009517934f;
      sa[672] = -0.28921565f;
      sa[673] = 0.12895319f;
      sa[674] = 0.22195472f;
      sa[675] = -0.3290271f;
      sa[676] = -0.07747919f;
      sa[677] = -0.20557518f;
      sa[678] = 0.18028186f;
      sa[679] = -0.070706956f;
      sa[680] = 0.09915048f;
      sa[681] = 0.24984494f;
      sa[682] = -0.23473707f;
      sa[683] = -0.20140205f;
      sa[684] = 0.008488236f;
      sa[685] = 0.13325201f;
      sa[686] = -0.0741188f;
      sa[687] = -0.22365673f;
      sa[688] = -0.27994198f;
      sa[689] = -0.2592811f;
      sa[690] = -0.07136612f;
      sa[691] = 0.145469f;
      sa[692] = -0.1933221f;
      sa[693] = -0.17192613f;
      sa[694] = 0.28911418f;
      sa[695] = -0.20283496f;
      sa[696] = -0.11822861f;
      sa[697] = -0.18097332f;
      sa[698] = -0.22165765f;
      sa[699] = 0.29511473f;
      sa[700] = 0.16701111f;
      sa[701] = 0.115322724f;
      sa[702] = 0.14649916f;
      sa[703] = -0.10572014f;
      sa[704] = -0.25907063f;
      sa[705] = -0.004626144f;
      sa[706] = -0.15810673f;
      sa[707] = 0.020672537f;
      sa[708] = 0.0049692923f;
      sa[709] = -0.25077096f;
      sa[710] = 0.23105669f;
      sa[711] = 0.037971366f;
      sa[712] = 0.04668814f;
      sa[713] = 0.17663264f;
      sa[714] = 0.18190607f;
      sa[715] = 0.13553897f;
      sa[716] = -0.014341286f;
      sa[717] = 0.073662676f;
      sa[718] = 0.036117923f;
      sa[719] = 0.16388862f;
      sa[720] = -0.3590288f;
      sa[721] = 0.26688695f;
      sa[722] = -0.10553876f;
      sa[723] = 0.15461414f;
      sa[724] = 0.0567979f;
      sa[725] = -0.14298639f;
      sa[726] = -0.11669751f;
      sa[727] = -0.2834805f;
      sa[728] = -0.07668857f;
      sa[729] = -0.056107007f;
      sa[730] = 0.09582685f;
      sa[731] = -0.23426498f;
      sa[732] = 0.30610225f;
      sa[733] = 0.38434824f;
      sa[734] = 0.0107010165f;
      sa[735] = 0.3828354f;
      sa[736] = 0.06521459f;
      sa[737] = 0.22517157f;
      sa[738] = -0.34382167f;
      sa[739] = -0.2772214f;
      sa[740] = -0.2392047f;
      sa[741] = -0.34849253f;
      sa[742] = 0.14630848f;
      sa[743] = -0.032764237f;
      sa[744] = 0.089423075f;
      sa[745] = -0.2514048f;
      sa[746] = 0.03813328f;
      sa[747] = -0.1874037f;
      sa[748] = -0.089446254f;
      sa[749] = -0.25577855f;
      sa[750] = 0.30770558f;
      sa[751] = 0.15969144f;
      sa[752] = 0.036566135f;
      sa[753] = 0.10772885f;
      sa[754] = 0.029886423f;
      sa[755] = 0.08992847f;
      sa[756] = -0.22088903f;
      sa[757] = 0.30936313f;
      sa[758] = -0.111505f;
      sa[759] = -0.11416672f;
      sa[760] = -0.11652588f;
      sa[761] = 0.03442539f;
      sa[762] = -0.11398429f;
      sa[763] = 0.15719736f;
      sa[764] = 0.08126846f;
      sa[765] = -0.073081866f;
      sa[766] = -0.1645011f;
      sa[767] = 0.0016006002f;
      sa[768] = -0.13585615f;
      sa[769] = -0.25391337f;
      sa[770] = 0.018105036f;
      sa[771] = 0.03967098f;
      sa[772] = 0.075554095f;
      sa[773] = -0.27968073f;
      sa[774] = -0.027683066f;
      sa[775] = 0.29487985f;
      sa[776] = -0.030355578f;
      sa[777] = 0.05944762f;
      sa[778] = 0.16808431f;
      sa[779] = -0.158002f;
      sa[780] = -0.019079039f;
      sa[781] = -0.12632121f;
      sa[782] = 0.11850623f;
      sa[783] = -0.17954002f;
      sa[784] = -0.10593737f;
      sa[785] = -0.093400516f;
      sa[786] = -0.074675955f;
      sa[787] = -0.18821277f;
      sa[788] = -0.2746909f;
      sa[789] = -0.017041596f;
      sa[790] = 0.062314004f;
      sa[791] = -0.11268866f;
      sa[792] = 0.19857305f;
      sa[793] = -0.083720095f;
      sa[794] = -0.22215825f;
      sa[795] = -0.054177564f;
      sa[796] = 0.21525533f;
      sa[797] = -0.25290588f;
      sa[798] = -0.3236758f;
      sa[799] = -0.12482388f;
      sa[800] = 0.109476335f;
      sa[801] = 0.044155035f;
      sa[802] = 0.1668776f;
      sa[803] = 0.09708535f;
      sa[804] = 0.1201684f;
      sa[805] = 0.19515152f;
      sa[806] = 0.17950761f;
      sa[807] = 0.16428219f;
      sa[808] = -0.011503545f;
      sa[809] = -0.22493373f;
      sa[810] = 0.17952186f;
      sa[811] = -0.115561575f;
      sa[812] = 0.061534718f;
      sa[813] = -0.32278544f;
      sa[814] = -0.008998697f;
      sa[815] = -0.1967666f;
      sa[816] = -0.14457555f;
      sa[817] = -0.17605352f;
      sa[818] = 0.049275625f;
      sa[819] = 0.06647571f;
      sa[820] = -0.36137414f;
      sa[821] = -0.2204854f;
      sa[822] = -0.32757926f;
      sa[823] = 0.06131381f;
      sa[824] = 0.10971546f;
      sa[825] = 0.47580752f;
      sa[826] = -0.3827302f;
      sa[827] = -0.23006198f;
      sa[828] = 0.09979316f;
      sa[829] = -0.0851577f;
      sa[830] = 0.14821348f;
      sa[831] = 0.20830293f;
      sa[832] = 0.14902611f;
      sa[833] = 0.12600909f;
      sa[834] = 0.22299078f;
      sa[835] = -0.06538127f;
      sa[836] = 0.20234878f;
      sa[837] = -0.18310091f;
      sa[838] = 0.11362036f;
      sa[839] = -0.12879132f;
      sa[840] = 0.19046043f;
      sa[841] = 0.15072624f;
      sa[842] = 0.17753638f;
      sa[843] = 0.050830275f;
      sa[844] = 0.07002647f;
      sa[845] = 0.15568076f;
      sa[846] = -0.20396534f;
      sa[847] = -0.2506447f;
      sa[848] = 0.15824103f;
      sa[849] = 0.19298913f;
      sa[850] = -0.02778898f;
      sa[851] = 0.046262406f;
      sa[852] = 0.2557634f;
      sa[853] = 0.15854695f;
      sa[854] = 0.30651227f;
      sa[855] = 0.106923915f;
      sa[856] = 0.06109426f;
      sa[857] = -0.18695892f;
      sa[858] = 0.15440348f;
      sa[859] = 0.04083017f;
      sa[860] = 0.33277103f;
      sa[861] = -0.028947446f;
      sa[862] = -0.23227365f;
      sa[863] = -0.07590416f;
      sa[864] = -0.13086477f;
      sa[865] = 0.21999982f;
      sa[866] = -0.1445535f;
      sa[867] = -0.019242983f;
      sa[868] = -0.19100875f;
      sa[869] = 0.13558373f;
      sa[870] = -0.09110033f;
      sa[871] = 0.14731894f;
      sa[872] = 0.20226869f;
      sa[873] = -0.0744479f;
      sa[874] = 0.017049909f;
      sa[875] = -0.3237808f;
      sa[876] = -0.27530888f;
      sa[877] = -0.2970817f;
      sa[878] = -0.029696684f;
      sa[879] = 0.15084872f;
      sa[880] = -0.16300903f;
      sa[881] = -0.16451752f;
      sa[882] = 0.2199545f;
      sa[883] = 0.22347498f;
      sa[884] = -0.12663434f;
      sa[885] = -0.09469081f;
      sa[886] = 0.0785523f;
      sa[887] = -0.027635427f;
      sa[888] = -0.11165672f;
      sa[889] = 0.048393928f;
      sa[890] = -0.31078815f;
      sa[891] = 0.3977584f;
      sa[892] = 0.15547073f;
      sa[893] = 0.2816329f;
      sa[894] = -0.002770524f;
      sa[895] = 0.24391297f;
      sa[896] = -0.22233345f;
      sa[897] = 0.1420307f;
      sa[898] = 0.041401867f;
      sa[899] = 0.2847895f;
      sa[900] = -0.20142524f;
      sa[901] = 0.047585506f;
      sa[902] = -0.23917122f;
      sa[903] = -0.08473844f;
      sa[904] = 0.25064844f;
      sa[905] = 0.2537915f;
      sa[906] = -0.1574712f;
      sa[907] = -0.2284025f;
      sa[908] = -0.20965025f;
      sa[909] = 0.08181969f;
      sa[910] = 0.048274864f;
      sa[911] = -0.1252814f;
      sa[912] = 0.069428526f;
      sa[913] = 0.14641388f;
      sa[914] = -0.1199703f;
      sa[915] = 0.07224704f;
      sa[916] = 0.18157494f;
      sa[917] = 0.15157111f;
      sa[918] = 0.0517725f;
      sa[919] = 0.14741403f;
      sa[920] = 0.18126579f;
      sa[921] = -0.026454762f;
      sa[922] = -0.03861309f;
      sa[923] = 0.037232425f;
      sa[924] = -0.0031463476f;
      sa[925] = -0.1502811f;
      sa[926] = 0.028947236f;
      sa[927] = 8.751313E-4f;
      sa[928] = 0.2429692f;
      sa[929] = 0.07224331f;
      sa[930] = 0.19717918f;
      sa[931] = -0.116792485f;
      sa[932] = 0.19441354f;
      sa[933] = -0.18162821f;
      sa[934] = 0.32250163f;
      sa[935] = -0.099748895f;
      sa[936] = 0.0687609f;
      sa[937] = 0.18888544f;
      sa[938] = -0.07994558f;
      sa[939] = -0.02643131f;
      sa[940] = -0.07080124f;
      sa[941] = -0.32601064f;
      sa[942] = -0.2519809f;
      sa[943] = -0.17597196f;
      sa[944] = -0.22665565f;
      sa[945] = 0.017564809f;
      sa[946] = 0.105370454f;
      sa[947] = 0.17673832f;
      sa[948] = 0.09866578f;
      sa[949] = -0.19173512f;
      sa[950] = 0.09765743f;
      sa[951] = -0.08246466f;
      sa[952] = -0.22520243f;
      sa[953] = -0.24111286f;
      sa[954] = -0.20423305f;
      sa[955] = 0.12466464f;
      sa[956] = 0.009736885f;
      sa[957] = 0.046045195f;
      sa[958] = 0.0984345f;
      sa[959] = -0.14883572f;
      sa[960] = 0.311124f;
      sa[961] = -0.13559012f;
      sa[962] = -0.06594446f;
      sa[963] = -0.08548825f;
      sa[964] = -0.14603414f;
      sa[965] = 0.27100328f;
      sa[966] = -0.09312164f;
      sa[967] = -0.230039f;
      sa[968] = 0.101554215f;
      sa[969] = -0.10219195f;
      sa[970] = 0.40260622f;
      sa[971] = 0.018498342f;
      sa[972] = -0.2354766f;
      sa[973] = -0.25527322f;
      sa[974] = -0.35088614f;
      sa[975] = -0.203089f;
      sa[976] = -0.069916f;
      sa[977] = 0.088806406f;
      sa[978] = -0.034762956f;
      sa[979] = 0.12541513f;
      sa[980] = 0.12344916f;
      sa[981] = -0.19674143f;
      sa[982] = 0.11539835f;
      sa[983] = 0.07979715f;
      sa[984] = -0.23468034f;
      sa[985] = 0.11812786f;
      sa[986] = -0.21195866f;
      sa[987] = 0.086960666f;
      sa[988] = 0.16315907f;
      sa[989] = 0.24303241f;
      sa[990] = 0.25700784f;
      sa[991] = -0.214037f;
      sa[992] = -0.21165234f;
      sa[993] = -0.074734814f;
      sa[994] = -0.13201076f;
      sa[995] = -0.2842696f;
      sa[996] = 0.17357367f;
      sa[997] = 0.15533938f;
      sa[998] = 0.14257164f;
      sa[999] = 0.108306706f;
      sa[1000] = 0.013323089f;
      sa[1001] = 0.18119343f;
      sa[1002] = 0.27390674f;
      sa[1003] = -0.13175651f;
      sa[1004] = 0.23880665f;
      sa[1005] = -0.12269559f;
      sa[1006] = -0.18181571f;
      sa[1007] = -0.037639532f;
      sa[1008] = 0.2227598f;
      sa[1009] = 0.14561053f;
      sa[1010] = 0.016102154f;
      sa[1011] = 0.24684794f;
      sa[1012] = -0.083923414f;
      sa[1013] = 0.14288934f;
      sa[1014] = 0.2358867f;
      sa[1015] = -0.22241297f;
      sa[1016] = 0.27310225f;
      sa[1017] = 0.09039964f;
      sa[1018] = -0.05776318f;
      sa[1019] = 0.047006704f;
      sa[1020] = -0.25649026f;
      sa[1021] = 0.064390354f;
      sa[1022] = 0.18743563f;
      sa[1023] = 0.096907474f;
      sa[1024] = 0.061795663f;
      sa[1025] = 0.15499257f;
      sa[1026] = 0.14231488f;
      sa[1027] = -0.044725742f;
      sa[1028] = 0.26500472f;
      sa[1029] = -0.05327449f;
      sa[1030] = -0.19827616f;
      sa[1031] = -0.089609146f;
      sa[1032] = -0.22974376f;
      sa[1033] = 0.03645744f;
      sa[1034] = -0.02320643f;
      sa[1035] = -0.00402902f;
      sa[1036] = 0.24536495f;
      sa[1037] = 0.008913572f;
      sa[1038] = -0.20439623f;
      sa[1039] = 0.24924189f;
      sa[1040] = -0.04306851f;
      sa[1041] = 0.19965096f;
      sa[1042] = -0.29806304f;
      sa[1043] = -0.022563027f;
      sa[1044] = 0.18766603f;
      sa[1045] = 0.25445932f;
      sa[1046] = -0.19172469f;
      sa[1047] = -0.20386867f;
      sa[1048] = 0.13864768f;
      sa[1049] = -0.082063116f;
      sa[1050] = 0.047340084f;
      sa[1051] = -0.21770597f;
      sa[1052] = 0.21943524f;
      sa[1053] = 0.33350486f;
      sa[1054] = 0.16165772f;
      sa[1055] = 0.08471973f;
      sa[1056] = 0.29369453f;
      sa[1057] = -0.15285558f;
      sa[1058] = 0.23395629f;
      sa[1059] = -0.15883848f;
      sa[1060] = -0.21318778f;
      sa[1061] = 0.14724395f;
      sa[1062] = -0.02307938f;
      sa[1063] = 0.09919618f;
      sa[1064] = 0.12087552f;
      sa[1065] = -0.03140838f;
      sa[1066] = 0.19256675f;
      sa[1067] = -0.31224594f;
      sa[1068] = -0.28299075f;
      sa[1069] = 0.17168763f;
      sa[1070] = -0.04065453f;
      sa[1071] = 0.16886233f;
      sa[1072] = -0.22010377f;
      sa[1073] = 0.068463326f;
      sa[1074] = 0.13447218f;
      sa[1075] = -0.23601235f;
      sa[1076] = -0.11370678f;
      sa[1077] = 0.11000182f;
      sa[1078] = -0.10362271f;
      sa[1079] = 0.019772887f;
      sa[1080] = 0.14125097f;
      sa[1081] = 0.20798369f;
      sa[1082] = -0.3249017f;
      sa[1083] = -0.07522462f;
      sa[1084] = 0.23483655f;
      sa[1085] = -0.16009061f;
      sa[1086] = -0.19714843f;
      sa[1087] = -0.23977825f;
      sa[1088] = -0.2154139f;
      sa[1089] = -0.047771662f;
      sa[1090] = -0.24047554f;
      sa[1091] = 0.09740642f;
      sa[1092] = -0.18016747f;
      sa[1093] = -0.18219817f;
      sa[1094] = 0.114957504f;
      sa[1095] = -0.18779175f;
      sa[1096] = 0.10710913f;
      sa[1097] = -0.19583282f;
      sa[1098] = 0.02390552f;
      sa[1099] = -1.3493476E-4f;
      sa[1100] = -0.12402926f;
      sa[1101] = 0.10522396f;
      sa[1102] = -0.10674351f;
      sa[1103] = 0.22006637f;
      sa[1104] = -0.2571654f;
      sa[1105] = -0.13626373f;
      sa[1106] = -0.034320273f;
      sa[1107] = 0.1330717f;
      sa[1108] = -0.18897901f;
      sa[1109] = 0.23337328f;
      sa[1110] = 0.18600586f;
      sa[1111] = -0.23456433f;
      sa[1112] = 0.2022662f;
      sa[1113] = 0.14584143f;
      sa[1114] = 0.14013267f;
      sa[1115] = 0.17324518f;
      sa[1116] = -0.11052069f;
      sa[1117] = -0.098602004f;
      sa[1118] = -0.15909153f;
      sa[1119] = -0.0651897f;
      sa[1120] = 0.13497488f;
      sa[1121] = 0.08672298f;
      sa[1122] = 0.23854099f;
      sa[1123] = 0.24989958f;
      sa[1124] = 0.11580438f;
      sa[1125] = -0.024392737f;
      sa[1126] = 0.2052315f;
      sa[1127] = 0.19260485f;
      sa[1128] = 0.08129773f;
      sa[1129] = -0.03640081f;
      sa[1130] = 0.24676666f;
      sa[1131] = 0.33922806f;
      sa[1132] = -0.080144525f;
      sa[1133] = -0.02428115f;
      sa[1134] = 0.12413975f;
      sa[1135] = -0.37621626f;
      sa[1136] = -0.0039949184f;
      sa[1137] = 0.15640496f;
      sa[1138] = -0.068489425f;
      sa[1139] = 0.09294927f;
      sa[1140] = 0.2384627f;
      sa[1141] = -0.29476172f;
      sa[1142] = 0.027723258f;
      sa[1143] = -0.03280802f;
      sa[1144] = -0.23237132f;
      sa[1145] = 0.1329646f;
      sa[1146] = 0.24815322f;
      sa[1147] = -0.08318776f;
      sa[1148] = 0.040276445f;
      sa[1149] = -0.0048471447f;
      sa[1150] = -0.37481287f;
      sa[1151] = -0.3042672f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_10_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_10_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.200905f;
      sa[1] = -0.08235682f;
      sa[2] = -0.54053223f;
      sa[3] = -0.8667345f;
      sa[4] = 0.068253934f;
      sa[5] = 0.30738056f;
      sa[6] = 1.2887523f;
      sa[7] = -0.6101411f;
      sa[8] = -0.9488386f;
      sa[9] = 0.71038103f;
      sa[10] = -0.12882528f;
      sa[11] = 0.5233801f;
      sa[12] = 1.1304986E-4f;
      sa[13] = -0.03474642f;
      sa[14] = -1.308969f;
      sa[15] = 1.1742185f;
      sa[16] = 1.5263833f;
      sa[17] = -0.36554444f;
      sa[18] = 0.025812807f;
      sa[19] = -0.5259444f;
      sa[20] = 1.1422157f;
      sa[21] = 0.053113617f;
      sa[22] = -0.91537434f;
      sa[23] = 0.7988587f;
      sa[24] = -1.4898065f;
      sa[25] = 0.49108467f;
      sa[26] = -0.19942927f;
      sa[27] = 1.4643593f;
      sa[28] = -1.3409779f;
      sa[29] = -0.6017241f;
      sa[30] = 0.3383012f;
      sa[31] = -0.5717653f;
      sa[32] = -1.0802833f;
      sa[33] = -1.4643731f;
      sa[34] = 0.0848968f;
      sa[35] = 1.4082068f;
      sa[36] = -0.27735993f;
      sa[37] = -0.053365186f;
      sa[38] = 0.18539384f;
      sa[39] = 0.76865935f;
      sa[40] = -0.7773176f;
      sa[41] = -1.3050032f;
      sa[42] = -1.1278414f;
      sa[43] = -1.7013124f;
      sa[44] = 0.12760511f;
      sa[45] = -1.2041241f;
      sa[46] = 1.1554825f;
      sa[47] = 1.2845807f;
      sa[48] = -1.3530638f;
      sa[49] = -1.061324f;
      sa[50] = 0.4554508f;
      sa[51] = -0.24940033f;
      sa[52] = 1.0631799f;
      sa[53] = 0.7704748f;
      sa[54] = -0.25080717f;
      sa[55] = 1.154664f;
      sa[56] = -0.9505716f;
      sa[57] = -1.0785856f;
      sa[58] = 0.10308507f;
      sa[59] = -0.08131618f;
      sa[60] = 1.3424225f;
      sa[61] = -0.5732943f;
      sa[62] = -0.3083902f;
      sa[63] = 0.68016773f;
      sa[64] = 1.3386714f;
      sa[65] = -0.6367097f;
      sa[66] = 0.62486815f;
      sa[67] = 1.4792091f;
      sa[68] = 0.69038403f;
      sa[69] = -1.1028367f;
      sa[70] = -1.4598017f;
      sa[71] = -0.40981194f;
      sa[72] = -1.3161029f;
      sa[73] = 1.2717899f;
      sa[74] = 1.4396183f;
      sa[75] = -0.13110988f;
      sa[76] = 0.8874186f;
      sa[77] = 0.45167166f;
      sa[78] = -1.3766102f;
      sa[79] = 0.98795915f;
      sa[80] = -0.816232f;
      sa[81] = 0.1352582f;
      sa[82] = 0.89564514f;
      sa[83] = -0.52811956f;
      sa[84] = -1.6273593f;
      sa[85] = -1.1384497f;
      sa[86] = 0.38696393f;
      sa[87] = 1.1360415f;
      sa[88] = -1.5518337f;
      sa[89] = -0.59095305f;
      sa[90] = -1.0255853f;
      sa[91] = 1.5192331f;
      sa[92] = -0.2419675f;
      sa[93] = 0.34703818f;
      sa[94] = -1.4320784f;
      sa[95] = -0.19477881f;
      sa[96] = -0.8688089f;
      sa[97] = 0.18513122f;
      sa[98] = -0.046667635f;
      sa[99] = 0.4308077f;
      sa[100] = -1.2794098f;
      sa[101] = -0.4420676f;
      sa[102] = 1.2239761f;
      sa[103] = 0.08950983f;
      sa[104] = -0.17726362f;
      sa[105] = -0.7697832f;
      sa[106] = 1.3882523f;
      sa[107] = 1.2011311f;
      sa[108] = 0.9626844f;
      sa[109] = 0.23687759f;
      sa[110] = 0.8679148f;
      sa[111] = -0.8735244f;
      sa[112] = -1.0863179f;
      sa[113] = 0.4091939f;
      sa[114] = 0.08057047f;
      sa[115] = -0.44321758f;
      sa[116] = 1.1758771f;
      sa[117] = 0.11057307f;
      sa[118] = -1.526903f;
      sa[119] = -0.7424329f;
      sa[120] = -0.3210603f;
      sa[121] = 1.0240598f;
      sa[122] = 0.023588058f;
      sa[123] = 0.22687683f;
      sa[124] = -0.7203673f;
      sa[125] = 0.75838643f;
      sa[126] = -1.0346698f;
      sa[127] = 0.21212865f;
      sa[128] = -0.8573909f;
      sa[129] = 0.66313654f;
      sa[130] = -0.38272974f;
      sa[131] = 0.8335705f;
      sa[132] = 0.42757028f;
      sa[133] = 0.58569723f;
      sa[134] = 0.6121828f;
      sa[135] = -1.1180254f;
      sa[136] = 0.5809886f;
      sa[137] = -0.6460565f;
      sa[138] = -0.09723104f;
      sa[139] = 1.3183339f;
      sa[140] = -0.47800398f;
      sa[141] = 0.004022773f;
      sa[142] = 0.32401955f;
      sa[143] = -0.75320476f;
      sa[144] = 0.99053496f;
      sa[145] = -0.66711926f;
      sa[146] = 0.076047234f;
      sa[147] = -0.23411965f;
      sa[148] = -0.96439534f;
      sa[149] = 1.1063173f;
      sa[150] = -1.0881656f;
      sa[151] = -1.5712062f;
      sa[152] = 1.5876203f;
      sa[153] = -0.5378625f;
      sa[154] = 1.345224f;
      sa[155] = -1.5295787f;
      sa[156] = -1.4381187f;
      sa[157] = -1.1165301f;
      sa[158] = -0.22157925f;
      sa[159] = -0.6522324f;
      sa[160] = 1.3637722f;
      sa[161] = -1.1507546f;
      sa[162] = 1.5264202f;
      sa[163] = -0.7941127f;
      sa[164] = 0.78123504f;
      sa[165] = -0.5008271f;
      sa[166] = 1.3097305f;
      sa[167] = -1.3429615f;
      sa[168] = 1.0007323f;
      sa[169] = -1.5114628f;
      sa[170] = 1.1331869f;
      sa[171] = 0.86794174f;
      sa[172] = 1.5375332f;
      sa[173] = 1.5988504f;
      sa[174] = -0.09053954f;
      sa[175] = -0.008118184f;
      sa[176] = -0.7918629f;
      sa[177] = 0.1046473f;
      sa[178] = -1.0703806f;
      sa[179] = -0.22506365f;
      sa[180] = -1.3792821f;
      sa[181] = -0.98284864f;
      sa[182] = 0.2782471f;
      sa[183] = -0.9978355f;
      sa[184] = 1.5459145f;
      sa[185] = 1.1976204f;
      sa[186] = -0.49451265f;
      sa[187] = -0.95045865f;
      sa[188] = -0.5454154f;
      sa[189] = -0.69008446f;
      sa[190] = -1.3567718f;
      sa[191] = -1.0866729f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_10_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_10_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_10_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


