/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:08:38.305+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_09

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_09 > h2o_nn_32x6_ReLU_09.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_09.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_09", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_09 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_09_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_09_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_09_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_09_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_09_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_09_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_09_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_09_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_09_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_09.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_09_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_09() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(7319687548615433704L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_09_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_09_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_09_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_09_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_09_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_09_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_09_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_09_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_09_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.3699471333650091;
      sa[1] = 0.524415824015085;
      sa[2] = 0.5183470496502978;
      sa[3] = 0.3717409961507252;
      sa[4] = 0.5063880690780379;
      sa[5] = 0.5934544010524594;
      sa[6] = 0.3748820192015459;
      sa[7] = 0.4067641629795156;
      sa[8] = 0.5033475205433956;
      sa[9] = 0.5608491448828579;
      sa[10] = 0.24584131645797735;
      sa[11] = 0.559755934364978;
      sa[12] = 0.5802600977318518;
      sa[13] = 0.44166162170907464;
      sa[14] = 0.6118710330420553;
      sa[15] = 0.5395494050963361;
      sa[16] = 0.5521600153793018;
      sa[17] = 0.5283925689268872;
      sa[18] = 0.4842867675118086;
      sa[19] = 0.6342918216180264;
      sa[20] = 0.41517873593199156;
      sa[21] = 0.5684144577238623;
      sa[22] = 0.44971643915748455;
      sa[23] = 0.5188388573116774;
      sa[24] = 0.5044640732100464;
      sa[25] = 0.5323915324682769;
      sa[26] = 0.4531225856244551;
      sa[27] = 0.507270990346312;
      sa[28] = 0.42871193724955425;
      sa[29] = 0.488306608274685;
      sa[30] = 0.7138852807440488;
      sa[31] = 0.43534024384103276;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_09_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_09_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0340585382887243;
      sa[1] = -0.033483288701201985;
      sa[2] = -0.09023200583686977;
      sa[3] = -0.01570207921866032;
      sa[4] = -0.021733715580337445;
      sa[5] = 0.009273249522873435;
    }
  }
}
class h2o_nn_32x6_ReLU_09_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_09_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_09_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.09443688f;
      sa[1] = 0.2210081f;
      sa[2] = 0.083001815f;
      sa[3] = 9.682774E-4f;
      sa[4] = -0.2359463f;
      sa[5] = -0.23649673f;
      sa[6] = -0.17374519f;
      sa[7] = 0.1865255f;
      sa[8] = 0.030187171f;
      sa[9] = -0.13639797f;
      sa[10] = -0.15939194f;
      sa[11] = -0.27506834f;
      sa[12] = 0.058174584f;
      sa[13] = -0.30460957f;
      sa[14] = -0.2684528f;
      sa[15] = -0.025546208f;
      sa[16] = 0.008085427f;
      sa[17] = 0.16065407f;
      sa[18] = -0.17626788f;
      sa[19] = 0.14796335f;
      sa[20] = 0.20226829f;
      sa[21] = -0.34310976f;
      sa[22] = 0.14230545f;
      sa[23] = -0.16361582f;
      sa[24] = 0.25833878f;
      sa[25] = -0.021490008f;
      sa[26] = -0.12536974f;
      sa[27] = 0.42186964f;
      sa[28] = 0.23901387f;
      sa[29] = -0.26425922f;
      sa[30] = -0.17493057f;
      sa[31] = 0.21608944f;
      sa[32] = 0.2272081f;
      sa[33] = -0.19051948f;
      sa[34] = 0.032424435f;
      sa[35] = -0.11110352f;
      sa[36] = 0.21736705f;
      sa[37] = 0.2047505f;
      sa[38] = -0.24424364f;
      sa[39] = 0.18808989f;
      sa[40] = -0.051601063f;
      sa[41] = -0.09397167f;
      sa[42] = -0.18432333f;
      sa[43] = -0.098451346f;
      sa[44] = 0.34270802f;
      sa[45] = -0.3839389f;
      sa[46] = 0.06844294f;
      sa[47] = 0.041783925f;
      sa[48] = 0.16878042f;
      sa[49] = 0.2373803f;
      sa[50] = 0.1545418f;
      sa[51] = -0.3917852f;
      sa[52] = -0.16157581f;
      sa[53] = 0.06733048f;
      sa[54] = 0.19775712f;
      sa[55] = 0.06999828f;
      sa[56] = -0.24726588f;
      sa[57] = -0.37966758f;
      sa[58] = 0.19041616f;
      sa[59] = -0.3491592f;
      sa[60] = -0.39922103f;
      sa[61] = 0.23171425f;
      sa[62] = 0.12988189f;
      sa[63] = -0.01253766f;
      sa[64] = 0.05292512f;
      sa[65] = 0.0024281442f;
      sa[66] = -0.040949024f;
      sa[67] = 0.010487456f;
      sa[68] = -0.17400788f;
      sa[69] = 0.05808769f;
      sa[70] = 0.0058345348f;
      sa[71] = 0.3477326f;
      sa[72] = -0.3216243f;
      sa[73] = 0.24916573f;
      sa[74] = -0.08395057f;
      sa[75] = -0.047213368f;
      sa[76] = -0.13473536f;
      sa[77] = -0.038108747f;
      sa[78] = -0.06250841f;
      sa[79] = 0.3342205f;
      sa[80] = -0.40471917f;
      sa[81] = 0.08876756f;
      sa[82] = -0.037730917f;
      sa[83] = 0.076246575f;
      sa[84] = 0.069774695f;
      sa[85] = -0.09123216f;
      sa[86] = 0.18586607f;
      sa[87] = 0.3926718f;
      sa[88] = 0.28212866f;
      sa[89] = 0.16603768f;
      sa[90] = -0.2033372f;
      sa[91] = 0.105599284f;
      sa[92] = 0.1685946f;
      sa[93] = -0.12088468f;
      sa[94] = -0.123725235f;
      sa[95] = -0.09677341f;
      sa[96] = 0.20824482f;
      sa[97] = -0.032935414f;
      sa[98] = 0.2092638f;
      sa[99] = 0.04205415f;
      sa[100] = 0.08143579f;
      sa[101] = -0.037662696f;
      sa[102] = -0.10210816f;
      sa[103] = 0.112211764f;
      sa[104] = -0.063385904f;
      sa[105] = -0.1210298f;
      sa[106] = -0.19749892f;
      sa[107] = 0.14190662f;
      sa[108] = 0.12481733f;
      sa[109] = -0.09262242f;
      sa[110] = -0.116448656f;
      sa[111] = 0.18794115f;
      sa[112] = 0.1344534f;
      sa[113] = 0.026213033f;
      sa[114] = -0.046844397f;
      sa[115] = 0.0029154066f;
      sa[116] = -0.2434494f;
      sa[117] = -0.05187224f;
      sa[118] = -0.32793078f;
      sa[119] = 0.075274214f;
      sa[120] = 0.25986263f;
      sa[121] = 0.27447602f;
      sa[122] = 0.41400075f;
      sa[123] = 0.3884244f;
      sa[124] = 0.31383964f;
      sa[125] = 0.19895993f;
      sa[126] = -0.29868588f;
      sa[127] = -0.39210975f;
      sa[128] = 0.10915535f;
      sa[129] = 0.18361637f;
      sa[130] = -0.013088463f;
      sa[131] = 0.3456284f;
      sa[132] = 0.16138405f;
      sa[133] = -0.23866515f;
      sa[134] = -0.03660025f;
      sa[135] = -0.39106598f;
      sa[136] = -0.31348792f;
      sa[137] = -0.10435564f;
      sa[138] = 0.026522087f;
      sa[139] = -0.17214954f;
      sa[140] = -0.09080889f;
      sa[141] = -0.11952075f;
      sa[142] = 0.18932505f;
      sa[143] = -0.24165505f;
      sa[144] = 0.09464463f;
      sa[145] = -0.21033004f;
      sa[146] = -0.36845967f;
      sa[147] = -0.012630349f;
      sa[148] = 0.16434163f;
      sa[149] = 0.14595345f;
      sa[150] = 0.24361566f;
      sa[151] = -0.22368091f;
      sa[152] = -0.07366288f;
      sa[153] = 0.27500215f;
      sa[154] = 0.17210725f;
      sa[155] = -0.12705728f;
      sa[156] = 0.13630396f;
      sa[157] = -0.20330203f;
      sa[158] = 0.06614358f;
      sa[159] = 0.12469896f;
      sa[160] = -0.02705674f;
      sa[161] = 0.1600566f;
      sa[162] = -0.013724348f;
      sa[163] = -0.293305f;
      sa[164] = 0.2241484f;
      sa[165] = -0.03206766f;
      sa[166] = -0.07775812f;
      sa[167] = -0.036699478f;
      sa[168] = 0.15437411f;
      sa[169] = 0.21031453f;
      sa[170] = 0.20393954f;
      sa[171] = 0.021733211f;
      sa[172] = -0.06525799f;
      sa[173] = -0.13920416f;
      sa[174] = -0.048028428f;
      sa[175] = -0.17811619f;
      sa[176] = 0.027057445f;
      sa[177] = 0.06459923f;
      sa[178] = -0.10105429f;
      sa[179] = 0.1029101f;
      sa[180] = -0.112431526f;
      sa[181] = -0.38433105f;
      sa[182] = -0.21044312f;
      sa[183] = 0.13656487f;
      sa[184] = 0.29661188f;
      sa[185] = 0.12965445f;
      sa[186] = -0.29821885f;
      sa[187] = -0.003957984f;
      sa[188] = -0.1145922f;
      sa[189] = 0.17772755f;
      sa[190] = 0.020762073f;
      sa[191] = -0.16955279f;
      sa[192] = -0.1631767f;
      sa[193] = 0.12543333f;
      sa[194] = 0.035717692f;
      sa[195] = 0.13163765f;
      sa[196] = 0.17328152f;
      sa[197] = -0.04367829f;
      sa[198] = 0.31663597f;
      sa[199] = -0.088696145f;
      sa[200] = -0.006546578f;
      sa[201] = -0.28224406f;
      sa[202] = 0.096769795f;
      sa[203] = -0.088834986f;
      sa[204] = -0.30466595f;
      sa[205] = 0.22632779f;
      sa[206] = 0.4047095f;
      sa[207] = 0.12615855f;
      sa[208] = -0.31548208f;
      sa[209] = -0.111964345f;
      sa[210] = -0.34972247f;
      sa[211] = -0.37812704f;
      sa[212] = 0.2755132f;
      sa[213] = -0.264788f;
      sa[214] = -0.046354637f;
      sa[215] = 0.097314484f;
      sa[216] = 0.08228678f;
      sa[217] = 0.103803314f;
      sa[218] = -0.17555675f;
      sa[219] = 0.2555248f;
      sa[220] = -0.26712543f;
      sa[221] = -0.032448687f;
      sa[222] = 0.13669214f;
      sa[223] = 0.0047124256f;
      sa[224] = 0.07720856f;
      sa[225] = 0.34347f;
      sa[226] = -0.15536037f;
      sa[227] = 0.17167744f;
      sa[228] = 0.031281207f;
      sa[229] = 0.003996861f;
      sa[230] = 0.1536568f;
      sa[231] = -0.31862828f;
      sa[232] = -0.23626956f;
      sa[233] = 0.17970708f;
      sa[234] = 0.23489472f;
      sa[235] = -0.18148287f;
      sa[236] = -0.114724964f;
      sa[237] = -0.2838278f;
      sa[238] = -0.28994703f;
      sa[239] = 0.06525403f;
      sa[240] = -0.035322387f;
      sa[241] = -0.12686779f;
      sa[242] = -0.003642104f;
      sa[243] = -0.16157138f;
      sa[244] = -0.25589353f;
      sa[245] = -0.16370647f;
      sa[246] = -0.3084712f;
      sa[247] = -0.116797574f;
      sa[248] = 0.26702046f;
      sa[249] = 0.1974523f;
      sa[250] = -0.13548751f;
      sa[251] = -0.06619682f;
      sa[252] = -0.1072151f;
      sa[253] = -0.2234956f;
      sa[254] = -0.13148022f;
      sa[255] = 0.32280228f;
      sa[256] = -0.19843052f;
      sa[257] = 0.28582102f;
      sa[258] = -0.19328919f;
      sa[259] = -0.1378354f;
      sa[260] = -0.09854374f;
      sa[261] = -0.10389954f;
      sa[262] = -0.11008809f;
      sa[263] = 0.34995192f;
      sa[264] = -0.16879806f;
      sa[265] = 0.072384834f;
      sa[266] = -0.2273465f;
      sa[267] = -0.22815293f;
      sa[268] = 0.18328041f;
      sa[269] = -0.15020862f;
      sa[270] = -0.12631564f;
      sa[271] = 0.34463668f;
      sa[272] = -0.12865737f;
      sa[273] = -0.16958277f;
      sa[274] = 0.1038428f;
      sa[275] = -0.069449574f;
      sa[276] = 0.07037714f;
      sa[277] = -0.12958647f;
      sa[278] = -0.25699148f;
      sa[279] = 0.13726711f;
      sa[280] = -0.23127043f;
      sa[281] = 0.18708958f;
      sa[282] = -0.14306712f;
      sa[283] = -0.15463817f;
      sa[284] = 0.030826814f;
      sa[285] = -0.15436816f;
      sa[286] = 0.24360949f;
      sa[287] = 0.084685765f;
      sa[288] = -0.29416755f;
      sa[289] = -0.18087715f;
      sa[290] = -0.12786008f;
      sa[291] = -0.11136404f;
      sa[292] = 0.12939067f;
      sa[293] = -0.12266166f;
      sa[294] = 0.02306178f;
      sa[295] = 0.10808812f;
      sa[296] = 0.08743569f;
      sa[297] = 0.20966625f;
      sa[298] = -0.050915327f;
      sa[299] = -0.179305f;
      sa[300] = -0.008204236f;
      sa[301] = -0.088533156f;
      sa[302] = 0.106221266f;
      sa[303] = -0.005680601f;
      sa[304] = -0.18664367f;
      sa[305] = 7.3856744E-4f;
      sa[306] = 0.3082344f;
      sa[307] = -0.11183215f;
      sa[308] = 0.08892244f;
      sa[309] = 0.15788193f;
      sa[310] = 0.24677621f;
      sa[311] = 0.3288245f;
      sa[312] = -0.15501402f;
      sa[313] = -0.1876578f;
      sa[314] = -0.06876394f;
      sa[315] = 0.15288223f;
      sa[316] = 0.0074852086f;
      sa[317] = -0.041351173f;
      sa[318] = 0.11871658f;
      sa[319] = 0.33043462f;
      sa[320] = -0.15553464f;
      sa[321] = 0.043630578f;
      sa[322] = 0.3471683f;
      sa[323] = -0.022134578f;
      sa[324] = 0.09238473f;
      sa[325] = 0.1938078f;
      sa[326] = -0.40655005f;
      sa[327] = 0.041503485f;
      sa[328] = -0.15281753f;
      sa[329] = 0.26003167f;
      sa[330] = -0.18752053f;
      sa[331] = -0.0118704755f;
      sa[332] = -0.10071176f;
      sa[333] = 0.036343854f;
      sa[334] = -0.029160537f;
      sa[335] = 0.3909418f;
      sa[336] = -0.16167684f;
      sa[337] = -0.114565484f;
      sa[338] = 0.2731139f;
      sa[339] = -0.17614165f;
      sa[340] = -0.42778668f;
      sa[341] = -0.38112223f;
      sa[342] = 0.063420646f;
      sa[343] = -0.19411385f;
      sa[344] = -0.2142214f;
      sa[345] = 0.11027524f;
      sa[346] = 0.17718357f;
      sa[347] = -0.2603572f;
      sa[348] = 0.16607232f;
      sa[349] = -0.2075628f;
      sa[350] = -0.30387253f;
      sa[351] = 0.054554053f;
      sa[352] = 0.10887147f;
      sa[353] = -0.15164845f;
      sa[354] = 0.007859788f;
      sa[355] = 0.017133167f;
      sa[356] = -0.075583525f;
      sa[357] = 0.3673194f;
      sa[358] = -0.39004177f;
      sa[359] = -0.056085322f;
      sa[360] = 0.05867527f;
      sa[361] = 0.04601225f;
      sa[362] = -0.18254967f;
      sa[363] = 0.16263501f;
      sa[364] = -0.21808246f;
      sa[365] = -0.25917003f;
      sa[366] = -0.08585322f;
      sa[367] = -0.30312398f;
      sa[368] = -0.19464517f;
      sa[369] = 0.26625526f;
      sa[370] = -0.13417086f;
      sa[371] = 0.25552303f;
      sa[372] = -0.048344478f;
      sa[373] = 0.26115292f;
      sa[374] = -0.17402646f;
      sa[375] = -0.24533026f;
      sa[376] = -0.24561398f;
      sa[377] = -0.24729645f;
      sa[378] = 0.1745966f;
      sa[379] = 0.060822036f;
      sa[380] = -0.15728772f;
      sa[381] = -0.16812545f;
      sa[382] = -0.08374342f;
      sa[383] = -0.15307921f;
      sa[384] = -0.121821016f;
      sa[385] = 0.13863191f;
      sa[386] = -0.37296498f;
      sa[387] = -0.15707134f;
      sa[388] = 0.034470677f;
      sa[389] = -0.07307401f;
      sa[390] = -0.042007666f;
      sa[391] = -0.120623365f;
      sa[392] = 0.20582022f;
      sa[393] = 0.28433084f;
      sa[394] = -0.030784076f;
      sa[395] = 0.2501557f;
      sa[396] = 0.39593792f;
      sa[397] = -0.2953873f;
      sa[398] = -0.02572622f;
      sa[399] = -0.13337186f;
      sa[400] = 0.13226114f;
      sa[401] = 0.25243834f;
      sa[402] = -0.1914999f;
      sa[403] = 0.002297166f;
      sa[404] = 0.35316575f;
      sa[405] = -0.39594117f;
      sa[406] = -0.045925967f;
      sa[407] = -0.034598626f;
      sa[408] = -0.23550981f;
      sa[409] = -0.20851901f;
      sa[410] = -0.171313f;
      sa[411] = 0.078897506f;
      sa[412] = -0.15331633f;
      sa[413] = -0.017159991f;
      sa[414] = 0.14884211f;
      sa[415] = 0.44808897f;
      sa[416] = -0.21336475f;
      sa[417] = -0.02412665f;
      sa[418] = -0.05508474f;
      sa[419] = 0.19121687f;
      sa[420] = 0.18578368f;
      sa[421] = 0.20378068f;
      sa[422] = 0.30783582f;
      sa[423] = 0.12004342f;
      sa[424] = 0.101900846f;
      sa[425] = -0.062246334f;
      sa[426] = -0.2281399f;
      sa[427] = 0.2022635f;
      sa[428] = -0.13978551f;
      sa[429] = -0.34936482f;
      sa[430] = 0.28445685f;
      sa[431] = 0.026443798f;
      sa[432] = 0.043735873f;
      sa[433] = 0.15690471f;
      sa[434] = 0.3285549f;
      sa[435] = -0.046599768f;
      sa[436] = -0.21440563f;
      sa[437] = -0.15016504f;
      sa[438] = 0.017659536f;
      sa[439] = 0.14096071f;
      sa[440] = 0.34992778f;
      sa[441] = -0.24056414f;
      sa[442] = 0.110217795f;
      sa[443] = 0.041435238f;
      sa[444] = -0.15183248f;
      sa[445] = 0.18286404f;
      sa[446] = 0.2527825f;
      sa[447] = 0.21623243f;
      sa[448] = 0.23903035f;
      sa[449] = 0.2843132f;
      sa[450] = -0.23729925f;
      sa[451] = 0.20018935f;
      sa[452] = 0.22161946f;
      sa[453] = -0.003791157f;
      sa[454] = -0.12101758f;
      sa[455] = 0.044825267f;
      sa[456] = 0.031015927f;
      sa[457] = 0.042493694f;
      sa[458] = -0.24719144f;
      sa[459] = 0.33528724f;
      sa[460] = 0.30845916f;
      sa[461] = 0.3925097f;
      sa[462] = 0.20259334f;
      sa[463] = 0.3759874f;
      sa[464] = -0.292272f;
      sa[465] = 0.2169751f;
      sa[466] = -0.052535374f;
      sa[467] = 0.07648959f;
      sa[468] = -0.0025828965f;
      sa[469] = 0.29879317f;
      sa[470] = 0.16030274f;
      sa[471] = -0.04970396f;
      sa[472] = -0.016355174f;
      sa[473] = -0.07707156f;
      sa[474] = -0.062082592f;
      sa[475] = 0.15835248f;
      sa[476] = 0.119432546f;
      sa[477] = -0.10245466f;
      sa[478] = 0.10195127f;
      sa[479] = -0.18544067f;
      sa[480] = -0.29205155f;
      sa[481] = -0.1635514f;
      sa[482] = -0.28265396f;
      sa[483] = 0.24595533f;
      sa[484] = 0.26036102f;
      sa[485] = 0.16084926f;
      sa[486] = -0.06528445f;
      sa[487] = -0.13598911f;
      sa[488] = -0.20068105f;
      sa[489] = 0.05836952f;
      sa[490] = -0.040972784f;
      sa[491] = -0.17393206f;
      sa[492] = 0.24176575f;
      sa[493] = 0.16764337f;
      sa[494] = -0.18762422f;
      sa[495] = 0.2626175f;
      sa[496] = 0.024204088f;
      sa[497] = 0.1019671f;
      sa[498] = 0.22709787f;
      sa[499] = 0.26529968f;
      sa[500] = -0.086633705f;
      sa[501] = 0.0865661f;
      sa[502] = 0.28818902f;
      sa[503] = 0.05939078f;
      sa[504] = -0.14484859f;
      sa[505] = -0.10668444f;
      sa[506] = 0.29912096f;
      sa[507] = -0.010670451f;
      sa[508] = 0.22865482f;
      sa[509] = 0.27135745f;
      sa[510] = 0.27703217f;
      sa[511] = 0.05684704f;
      sa[512] = 0.058863807f;
      sa[513] = -0.076806396f;
      sa[514] = 0.13021195f;
      sa[515] = -0.36184543f;
      sa[516] = 0.08663964f;
      sa[517] = 0.12669645f;
      sa[518] = 0.21605986f;
      sa[519] = -0.07492848f;
      sa[520] = 0.34253606f;
      sa[521] = 0.19544779f;
      sa[522] = 0.10204581f;
      sa[523] = 0.27540645f;
      sa[524] = 0.27044392f;
      sa[525] = 0.26079452f;
      sa[526] = 0.0980257f;
      sa[527] = 0.02575742f;
      sa[528] = 0.09431346f;
      sa[529] = 0.11599f;
      sa[530] = -0.20209879f;
      sa[531] = 0.029986605f;
      sa[532] = 0.2316593f;
      sa[533] = 0.23792426f;
      sa[534] = 0.21713102f;
      sa[535] = -0.03401875f;
      sa[536] = 0.0023155515f;
      sa[537] = -0.402014f;
      sa[538] = 0.30040273f;
      sa[539] = 0.33245227f;
      sa[540] = -0.33964446f;
      sa[541] = -0.16925818f;
      sa[542] = -0.028175721f;
      sa[543] = -0.14860883f;
      sa[544] = 0.18836723f;
      sa[545] = 0.09435359f;
      sa[546] = 0.09716884f;
      sa[547] = 0.19824643f;
      sa[548] = -0.015287517f;
      sa[549] = 0.24738203f;
      sa[550] = -0.045744054f;
      sa[551] = -0.08962255f;
      sa[552] = 0.041488275f;
      sa[553] = -0.11372753f;
      sa[554] = -0.14851078f;
      sa[555] = -0.16002074f;
      sa[556] = -0.22101817f;
      sa[557] = -0.15495293f;
      sa[558] = -0.12547117f;
      sa[559] = -0.03833525f;
      sa[560] = -0.26209995f;
      sa[561] = -0.046544585f;
      sa[562] = 0.19468251f;
      sa[563] = -0.038245246f;
      sa[564] = 0.22328377f;
      sa[565] = 0.006128341f;
      sa[566] = 0.28336135f;
      sa[567] = -0.1106654f;
      sa[568] = -0.07164337f;
      sa[569] = 0.032596376f;
      sa[570] = -0.07181452f;
      sa[571] = -0.09031261f;
      sa[572] = 0.07119283f;
      sa[573] = 0.2758887f;
      sa[574] = 0.00706372f;
      sa[575] = -0.3612264f;
      sa[576] = -0.16320796f;
      sa[577] = -0.06612727f;
      sa[578] = -0.047042433f;
      sa[579] = -0.03746736f;
      sa[580] = 0.04899615f;
      sa[581] = -0.16595463f;
      sa[582] = 0.0076173577f;
      sa[583] = -0.15028715f;
      sa[584] = 0.05651814f;
      sa[585] = 0.12347368f;
      sa[586] = -0.19170256f;
      sa[587] = -0.15308286f;
      sa[588] = 0.019004917f;
      sa[589] = 0.046461523f;
      sa[590] = -0.083923995f;
      sa[591] = -0.17570348f;
      sa[592] = -0.42346433f;
      sa[593] = -0.2253806f;
      sa[594] = 0.029763848f;
      sa[595] = -0.10848404f;
      sa[596] = 0.19909899f;
      sa[597] = -0.075973295f;
      sa[598] = 0.15139584f;
      sa[599] = -0.07722804f;
      sa[600] = -0.44397435f;
      sa[601] = 0.21498118f;
      sa[602] = 0.063151464f;
      sa[603] = 0.27461848f;
      sa[604] = 0.12721075f;
      sa[605] = 0.0849569f;
      sa[606] = 0.11130886f;
      sa[607] = -0.07534642f;
      sa[608] = 0.0030777296f;
      sa[609] = 0.12314025f;
      sa[610] = 0.11103281f;
      sa[611] = -0.033309333f;
      sa[612] = 0.0816921f;
      sa[613] = 0.122470595f;
      sa[614] = 0.092573024f;
      sa[615] = -0.07896033f;
      sa[616] = 0.028451057f;
      sa[617] = -0.25275865f;
      sa[618] = -0.17304334f;
      sa[619] = -0.1063011f;
      sa[620] = 0.095003285f;
      sa[621] = -0.2559268f;
      sa[622] = -0.26211926f;
      sa[623] = -0.24397847f;
      sa[624] = -0.022312043f;
      sa[625] = 0.30035484f;
      sa[626] = -0.008427946f;
      sa[627] = 0.31309235f;
      sa[628] = -0.23629947f;
      sa[629] = -0.057410896f;
      sa[630] = -0.31702802f;
      sa[631] = 0.29049504f;
      sa[632] = 0.109335914f;
      sa[633] = -0.15224567f;
      sa[634] = -0.1962715f;
      sa[635] = 0.18357646f;
      sa[636] = -0.109131925f;
      sa[637] = -0.041821245f;
      sa[638] = -0.24193259f;
      sa[639] = 0.0073801205f;
      sa[640] = -0.075626634f;
      sa[641] = -0.23202859f;
      sa[642] = 0.27386636f;
      sa[643] = -0.19408636f;
      sa[644] = -0.11162357f;
      sa[645] = -0.23558813f;
      sa[646] = 0.27445093f;
      sa[647] = -0.24576178f;
      sa[648] = 0.099984f;
      sa[649] = -0.047521733f;
      sa[650] = 0.092148915f;
      sa[651] = -0.046531856f;
      sa[652] = 0.08423981f;
      sa[653] = -0.08958107f;
      sa[654] = -0.0031440381f;
      sa[655] = -0.10911827f;
      sa[656] = 0.23418148f;
      sa[657] = 0.032125317f;
      sa[658] = -0.28947842f;
      sa[659] = -0.053143155f;
      sa[660] = -0.20564508f;
      sa[661] = -0.022480542f;
      sa[662] = -0.16516325f;
      sa[663] = 0.22211897f;
      sa[664] = -0.21949068f;
      sa[665] = 0.11088392f;
      sa[666] = -0.22134632f;
      sa[667] = -0.38732943f;
      sa[668] = 0.2637499f;
      sa[669] = -0.11446402f;
      sa[670] = 0.19936013f;
      sa[671] = 0.044967763f;
      sa[672] = -0.2839444f;
      sa[673] = 0.18506378f;
      sa[674] = 0.09013795f;
      sa[675] = -0.38403985f;
      sa[676] = -0.14449927f;
      sa[677] = -0.26536503f;
      sa[678] = 0.13660407f;
      sa[679] = -0.13282879f;
      sa[680] = 0.070794985f;
      sa[681] = 0.16745354f;
      sa[682] = -0.11811724f;
      sa[683] = -0.19951965f;
      sa[684] = -0.12311416f;
      sa[685] = -0.07329667f;
      sa[686] = -0.103079006f;
      sa[687] = -0.21313433f;
      sa[688] = -0.17454241f;
      sa[689] = -0.22766173f;
      sa[690] = -0.03749743f;
      sa[691] = 0.104083195f;
      sa[692] = -0.27164948f;
      sa[693] = -0.11623891f;
      sa[694] = 0.20594269f;
      sa[695] = -0.2599496f;
      sa[696] = -0.09087545f;
      sa[697] = -0.17429803f;
      sa[698] = -0.22034968f;
      sa[699] = 0.24443607f;
      sa[700] = 0.1908264f;
      sa[701] = 0.22425453f;
      sa[702] = 0.394524f;
      sa[703] = 0.04776666f;
      sa[704] = -0.21829432f;
      sa[705] = 0.036069576f;
      sa[706] = -0.15053804f;
      sa[707] = 0.12734038f;
      sa[708] = 0.050713535f;
      sa[709] = -0.34741908f;
      sa[710] = 0.3762399f;
      sa[711] = -0.047186386f;
      sa[712] = 0.14663102f;
      sa[713] = 0.28384575f;
      sa[714] = 0.25466087f;
      sa[715] = 0.18465124f;
      sa[716] = -4.1578527E-4f;
      sa[717] = 0.07228274f;
      sa[718] = 0.05965865f;
      sa[719] = 0.17043935f;
      sa[720] = -0.25320458f;
      sa[721] = 0.3636063f;
      sa[722] = -0.058798794f;
      sa[723] = 0.041976053f;
      sa[724] = 0.01072224f;
      sa[725] = -0.35256356f;
      sa[726] = -0.26520908f;
      sa[727] = -0.3743775f;
      sa[728] = -0.10977009f;
      sa[729] = 0.0014226699f;
      sa[730] = 0.16821188f;
      sa[731] = -0.24335587f;
      sa[732] = 0.13030572f;
      sa[733] = 0.14655529f;
      sa[734] = -0.19614983f;
      sa[735] = 0.196038f;
      sa[736] = 0.057577044f;
      sa[737] = 0.23623972f;
      sa[738] = -0.18837298f;
      sa[739] = -0.21293043f;
      sa[740] = -0.29196176f;
      sa[741] = -0.30915776f;
      sa[742] = 0.04066785f;
      sa[743] = -0.031543937f;
      sa[744] = 0.053816315f;
      sa[745] = -0.12750494f;
      sa[746] = 0.068428315f;
      sa[747] = -0.14176723f;
      sa[748] = -0.16472116f;
      sa[749] = -0.21327436f;
      sa[750] = 0.1341833f;
      sa[751] = 0.14501612f;
      sa[752] = -0.009879719f;
      sa[753] = 0.16203529f;
      sa[754] = 0.006620593f;
      sa[755] = 0.18604803f;
      sa[756] = -0.21322371f;
      sa[757] = 0.1979782f;
      sa[758] = -0.18588704f;
      sa[759] = -0.0152745405f;
      sa[760] = -0.057413504f;
      sa[761] = 0.0521876f;
      sa[762] = -0.046574395f;
      sa[763] = 0.11445792f;
      sa[764] = 0.036861397f;
      sa[765] = -0.05652292f;
      sa[766] = -0.22047985f;
      sa[767] = 0.056899082f;
      sa[768] = -0.18381397f;
      sa[769] = -0.29368013f;
      sa[770] = 0.010132411f;
      sa[771] = -0.05071323f;
      sa[772] = 0.024771126f;
      sa[773] = -0.24855725f;
      sa[774] = 0.12385849f;
      sa[775] = 0.25103953f;
      sa[776] = -0.06488089f;
      sa[777] = 0.07203601f;
      sa[778] = 0.17487983f;
      sa[779] = -0.19019006f;
      sa[780] = -0.08250084f;
      sa[781] = 0.002937534f;
      sa[782] = 0.1974562f;
      sa[783] = -0.27082253f;
      sa[784] = -0.18033457f;
      sa[785] = -0.14655216f;
      sa[786] = -0.16642104f;
      sa[787] = -0.33342418f;
      sa[788] = -0.2442367f;
      sa[789] = 0.10950818f;
      sa[790] = -0.05666447f;
      sa[791] = -0.04394675f;
      sa[792] = 0.071974136f;
      sa[793] = -0.011435133f;
      sa[794] = -0.13267261f;
      sa[795] = -0.09127697f;
      sa[796] = 0.24581972f;
      sa[797] = -0.20922895f;
      sa[798] = -0.2409461f;
      sa[799] = -0.12689176f;
      sa[800] = 0.08761023f;
      sa[801] = 0.098091215f;
      sa[802] = 0.16412869f;
      sa[803] = 0.26784158f;
      sa[804] = 0.323732f;
      sa[805] = 0.33331504f;
      sa[806] = 0.355078f;
      sa[807] = 0.31383446f;
      sa[808] = -4.7354389E-4f;
      sa[809] = -0.22572723f;
      sa[810] = 0.07237764f;
      sa[811] = 0.09492158f;
      sa[812] = 0.2992317f;
      sa[813] = -0.20337406f;
      sa[814] = 0.14735785f;
      sa[815] = -0.046715055f;
      sa[816] = 0.07333545f;
      sa[817] = -0.36478978f;
      sa[818] = 0.035487678f;
      sa[819] = -0.14626418f;
      sa[820] = -0.14491493f;
      sa[821] = -0.09893194f;
      sa[822] = -0.21989278f;
      sa[823] = 0.18739916f;
      sa[824] = 0.24536143f;
      sa[825] = 0.43028584f;
      sa[826] = -0.3911781f;
      sa[827] = -0.39662898f;
      sa[828] = 0.11954459f;
      sa[829] = -0.04873612f;
      sa[830] = 0.24266763f;
      sa[831] = 0.24987525f;
      sa[832] = 0.16453925f;
      sa[833] = 0.079974554f;
      sa[834] = 0.22845279f;
      sa[835] = -0.047846604f;
      sa[836] = 0.22207202f;
      sa[837] = -0.101299606f;
      sa[838] = 0.14755599f;
      sa[839] = -0.1660918f;
      sa[840] = 0.20388755f;
      sa[841] = 0.10358863f;
      sa[842] = 0.19614862f;
      sa[843] = 0.087477945f;
      sa[844] = 0.04148128f;
      sa[845] = 0.1757908f;
      sa[846] = -0.27932468f;
      sa[847] = -0.10809972f;
      sa[848] = 0.23277155f;
      sa[849] = 0.2750757f;
      sa[850] = 0.029494375f;
      sa[851] = 0.13218044f;
      sa[852] = 0.24886017f;
      sa[853] = 0.16748972f;
      sa[854] = 0.17590138f;
      sa[855] = -0.010436475f;
      sa[856] = 0.08718743f;
      sa[857] = -0.15650088f;
      sa[858] = 0.11391951f;
      sa[859] = 0.045848977f;
      sa[860] = 0.4171852f;
      sa[861] = -0.12604925f;
      sa[862] = -0.3007064f;
      sa[863] = -0.10312351f;
      sa[864] = -0.28718585f;
      sa[865] = 0.17342374f;
      sa[866] = -0.24936278f;
      sa[867] = -0.071439736f;
      sa[868] = -0.18022892f;
      sa[869] = 0.17730212f;
      sa[870] = -0.06205234f;
      sa[871] = 0.13886657f;
      sa[872] = 0.12907355f;
      sa[873] = -0.09177681f;
      sa[874] = -0.06617078f;
      sa[875] = -0.28422886f;
      sa[876] = -0.22049049f;
      sa[877] = -0.2214368f;
      sa[878] = 0.01469028f;
      sa[879] = 0.17290568f;
      sa[880] = -0.14370726f;
      sa[881] = -0.1412162f;
      sa[882] = 0.28216243f;
      sa[883] = 0.09795908f;
      sa[884] = -0.126219f;
      sa[885] = -0.12689933f;
      sa[886] = 0.079441614f;
      sa[887] = -0.032053623f;
      sa[888] = -0.09900298f;
      sa[889] = -0.0045774197f;
      sa[890] = -0.20619929f;
      sa[891] = 0.44434443f;
      sa[892] = 0.17571852f;
      sa[893] = 0.27150548f;
      sa[894] = 0.043198783f;
      sa[895] = 0.24784069f;
      sa[896] = -0.2184908f;
      sa[897] = 0.22024776f;
      sa[898] = 0.011677785f;
      sa[899] = 0.27407068f;
      sa[900] = -0.028815385f;
      sa[901] = 0.15555687f;
      sa[902] = -0.22272035f;
      sa[903] = -0.15315048f;
      sa[904] = 0.1393389f;
      sa[905] = 0.20079842f;
      sa[906] = -0.31810483f;
      sa[907] = -0.23579371f;
      sa[908] = -0.16804962f;
      sa[909] = 0.0890279f;
      sa[910] = 0.09572832f;
      sa[911] = -0.24071622f;
      sa[912] = -0.044133525f;
      sa[913] = 0.0670255f;
      sa[914] = -0.26072812f;
      sa[915] = 0.023221118f;
      sa[916] = 0.25173792f;
      sa[917] = 0.08532206f;
      sa[918] = 0.073397726f;
      sa[919] = 0.22318976f;
      sa[920] = 0.10839307f;
      sa[921] = -0.11606181f;
      sa[922] = -0.19971251f;
      sa[923] = -0.13818592f;
      sa[924] = -0.07986317f;
      sa[925] = -0.19274403f;
      sa[926] = 0.079462f;
      sa[927] = 0.1050118f;
      sa[928] = 0.2807013f;
      sa[929] = 0.17420322f;
      sa[930] = 0.22292104f;
      sa[931] = 0.07468542f;
      sa[932] = 0.18160763f;
      sa[933] = -0.047696054f;
      sa[934] = 0.2558799f;
      sa[935] = -0.19380805f;
      sa[936] = 0.03201741f;
      sa[937] = 0.14059488f;
      sa[938] = -0.20579283f;
      sa[939] = -0.012323616f;
      sa[940] = -0.07710855f;
      sa[941] = -0.33135703f;
      sa[942] = -0.24360639f;
      sa[943] = -0.26412615f;
      sa[944] = -0.25524104f;
      sa[945] = -0.022486594f;
      sa[946] = 0.0065118643f;
      sa[947] = 0.23307793f;
      sa[948] = 0.049784094f;
      sa[949] = -0.21960147f;
      sa[950] = 0.07035591f;
      sa[951] = -0.16174597f;
      sa[952] = -0.2400594f;
      sa[953] = -0.2538411f;
      sa[954] = -0.11166314f;
      sa[955] = 0.031294383f;
      sa[956] = -0.068369895f;
      sa[957] = -0.012797032f;
      sa[958] = 0.057604313f;
      sa[959] = -0.25365725f;
      sa[960] = 0.23923314f;
      sa[961] = -0.1220863f;
      sa[962] = 0.080163665f;
      sa[963] = -0.016410578f;
      sa[964] = -0.2426684f;
      sa[965] = 0.17344601f;
      sa[966] = -0.18308593f;
      sa[967] = -0.3794037f;
      sa[968] = 0.06275435f;
      sa[969] = -0.008042849f;
      sa[970] = 0.39128947f;
      sa[971] = 0.09665264f;
      sa[972] = -0.0635801f;
      sa[973] = -0.18361157f;
      sa[974] = -0.29388458f;
      sa[975] = -0.20884964f;
      sa[976] = -0.1128167f;
      sa[977] = 0.05718732f;
      sa[978] = -0.09569883f;
      sa[979] = 0.14165716f;
      sa[980] = 0.2091661f;
      sa[981] = -0.18102024f;
      sa[982] = 0.21575579f;
      sa[983] = -0.01591017f;
      sa[984] = -0.2890187f;
      sa[985] = 0.067576334f;
      sa[986] = -0.2656096f;
      sa[987] = 0.08674557f;
      sa[988] = 0.14781809f;
      sa[989] = 0.23664488f;
      sa[990] = 0.16688912f;
      sa[991] = -0.1479133f;
      sa[992] = -0.22465837f;
      sa[993] = -0.07426781f;
      sa[994] = -0.17433062f;
      sa[995] = -0.31641087f;
      sa[996] = 0.14187033f;
      sa[997] = 0.2161892f;
      sa[998] = 0.010920405f;
      sa[999] = 0.1856231f;
      sa[1000] = 0.004298674f;
      sa[1001] = 0.18289293f;
      sa[1002] = 0.24812673f;
      sa[1003] = -0.1102429f;
      sa[1004] = 0.20369063f;
      sa[1005] = -0.20917866f;
      sa[1006] = -0.1283535f;
      sa[1007] = -0.0048343935f;
      sa[1008] = 0.12834458f;
      sa[1009] = 0.12674882f;
      sa[1010] = 0.1327448f;
      sa[1011] = 0.33751172f;
      sa[1012] = -0.0108938385f;
      sa[1013] = 0.14198554f;
      sa[1014] = 0.34226248f;
      sa[1015] = -0.217579f;
      sa[1016] = 0.21696022f;
      sa[1017] = 0.19344932f;
      sa[1018] = -0.06958855f;
      sa[1019] = 0.06612936f;
      sa[1020] = -0.19316678f;
      sa[1021] = 0.067172855f;
      sa[1022] = 0.2947228f;
      sa[1023] = 0.12536524f;
      sa[1024] = 0.057374507f;
      sa[1025] = 0.20095734f;
      sa[1026] = 0.15199591f;
      sa[1027] = 0.26802078f;
      sa[1028] = 0.36796746f;
      sa[1029] = 0.06329724f;
      sa[1030] = -0.077849664f;
      sa[1031] = 0.096136965f;
      sa[1032] = -0.12988122f;
      sa[1033] = 0.030865956f;
      sa[1034] = -0.14808314f;
      sa[1035] = -0.31578302f;
      sa[1036] = 0.29276004f;
      sa[1037] = 0.06499314f;
      sa[1038] = -0.2111792f;
      sa[1039] = 0.26052567f;
      sa[1040] = 0.020780541f;
      sa[1041] = 0.1304143f;
      sa[1042] = -0.30243438f;
      sa[1043] = -0.085917294f;
      sa[1044] = 0.37963808f;
      sa[1045] = 0.30262133f;
      sa[1046] = -0.10629341f;
      sa[1047] = -0.11990777f;
      sa[1048] = 0.13699545f;
      sa[1049] = -0.045996122f;
      sa[1050] = 0.07708044f;
      sa[1051] = -0.12603956f;
      sa[1052] = 0.29788128f;
      sa[1053] = 0.24990319f;
      sa[1054] = 0.3062129f;
      sa[1055] = 0.061303034f;
      sa[1056] = 0.2846416f;
      sa[1057] = -0.11814751f;
      sa[1058] = 0.26934928f;
      sa[1059] = -0.07614801f;
      sa[1060] = -0.19951315f;
      sa[1061] = 0.037334062f;
      sa[1062] = 0.02355023f;
      sa[1063] = 0.19148563f;
      sa[1064] = 0.10592221f;
      sa[1065] = -0.033617765f;
      sa[1066] = 0.2004462f;
      sa[1067] = -0.31068382f;
      sa[1068] = -0.21997724f;
      sa[1069] = 0.2702634f;
      sa[1070] = -0.06429112f;
      sa[1071] = 0.14699194f;
      sa[1072] = -0.20760594f;
      sa[1073] = 0.1316976f;
      sa[1074] = 0.18530838f;
      sa[1075] = -0.14288077f;
      sa[1076] = -0.1681596f;
      sa[1077] = 0.091169775f;
      sa[1078] = -0.02293596f;
      sa[1079] = -0.014158668f;
      sa[1080] = 0.16495067f;
      sa[1081] = 0.10284659f;
      sa[1082] = -0.36641914f;
      sa[1083] = -0.10024278f;
      sa[1084] = 0.29569608f;
      sa[1085] = -0.15700902f;
      sa[1086] = -0.2272344f;
      sa[1087] = -0.29693735f;
      sa[1088] = -0.23197843f;
      sa[1089] = 0.06265117f;
      sa[1090] = -0.23977838f;
      sa[1091] = 0.034956187f;
      sa[1092] = -0.24983853f;
      sa[1093] = -0.2686946f;
      sa[1094] = -0.0065689264f;
      sa[1095] = -0.31090495f;
      sa[1096] = -0.014029363f;
      sa[1097] = -0.12087032f;
      sa[1098] = 0.121244125f;
      sa[1099] = -0.10392732f;
      sa[1100] = -0.1354026f;
      sa[1101] = 0.13627972f;
      sa[1102] = -0.15408815f;
      sa[1103] = 0.17907341f;
      sa[1104] = -0.3494003f;
      sa[1105] = -0.12388191f;
      sa[1106] = 0.034890532f;
      sa[1107] = 0.07482889f;
      sa[1108] = -0.20208438f;
      sa[1109] = 0.2370422f;
      sa[1110] = 0.16244124f;
      sa[1111] = -0.28969795f;
      sa[1112] = 0.20328873f;
      sa[1113] = 0.19336513f;
      sa[1114] = 0.06304553f;
      sa[1115] = 0.20613119f;
      sa[1116] = 0.1076393f;
      sa[1117] = -0.06964997f;
      sa[1118] = -0.050808463f;
      sa[1119] = 0.091085285f;
      sa[1120] = 0.22166783f;
      sa[1121] = 0.11406581f;
      sa[1122] = 0.32259038f;
      sa[1123] = 0.2949363f;
      sa[1124] = 0.12542494f;
      sa[1125] = -0.071650624f;
      sa[1126] = 0.23902792f;
      sa[1127] = 0.19431694f;
      sa[1128] = 0.021021353f;
      sa[1129] = -0.0717642f;
      sa[1130] = 0.26140723f;
      sa[1131] = 0.3088636f;
      sa[1132] = -0.05809468f;
      sa[1133] = -0.10911169f;
      sa[1134] = 0.14505741f;
      sa[1135] = -0.15604053f;
      sa[1136] = -0.0111500705f;
      sa[1137] = 0.23398817f;
      sa[1138] = -0.027124023f;
      sa[1139] = 0.16693442f;
      sa[1140] = 0.25463864f;
      sa[1141] = -0.16784805f;
      sa[1142] = -0.043770976f;
      sa[1143] = -0.20841666f;
      sa[1144] = -0.26570207f;
      sa[1145] = 0.15534128f;
      sa[1146] = 0.21572492f;
      sa[1147] = -0.13742858f;
      sa[1148] = 0.0010490433f;
      sa[1149] = -0.059647206f;
      sa[1150] = -0.2727931f;
      sa[1151] = -0.2820525f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_09_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_09_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2428039f;
      sa[1] = -0.063100874f;
      sa[2] = -0.57745856f;
      sa[3] = -0.9763438f;
      sa[4] = 0.14856465f;
      sa[5] = 0.29977152f;
      sa[6] = 1.230939f;
      sa[7] = -0.71548784f;
      sa[8] = -0.898496f;
      sa[9] = 0.71806693f;
      sa[10] = -0.11922942f;
      sa[11] = 0.44809207f;
      sa[12] = 0.1447663f;
      sa[13] = -0.0011065768f;
      sa[14] = -1.2868558f;
      sa[15] = 1.1522647f;
      sa[16] = 1.5982459f;
      sa[17] = -0.43268198f;
      sa[18] = 0.10139416f;
      sa[19] = -0.42053375f;
      sa[20] = 1.1558431f;
      sa[21] = 0.03823844f;
      sa[22] = -0.9539287f;
      sa[23] = 0.7804257f;
      sa[24] = -1.2847791f;
      sa[25] = 0.49173126f;
      sa[26] = -0.278725f;
      sa[27] = 1.5394561f;
      sa[28] = -1.3486191f;
      sa[29] = -0.39933264f;
      sa[30] = 0.45072103f;
      sa[31] = -0.62063307f;
      sa[32] = -1.1533817f;
      sa[33] = -1.5651916f;
      sa[34] = 0.09138517f;
      sa[35] = 1.3524513f;
      sa[36] = -0.3498508f;
      sa[37] = -0.055730667f;
      sa[38] = 0.19607636f;
      sa[39] = 0.776432f;
      sa[40] = -0.7570619f;
      sa[41] = -1.3679575f;
      sa[42] = -1.0428526f;
      sa[43] = -1.5302144f;
      sa[44] = -0.018839456f;
      sa[45] = -1.3628985f;
      sa[46] = 1.2137158f;
      sa[47] = 1.248766f;
      sa[48] = -1.3545625f;
      sa[49] = -1.1086514f;
      sa[50] = 0.4209354f;
      sa[51] = -0.33729887f;
      sa[52] = 0.7252094f;
      sa[53] = 0.8234698f;
      sa[54] = -0.24778199f;
      sa[55] = 1.140515f;
      sa[56] = -1.1410313f;
      sa[57] = -1.0916841f;
      sa[58] = 0.042245384f;
      sa[59] = -0.26227304f;
      sa[60] = 1.3890961f;
      sa[61] = -0.6575909f;
      sa[62] = -0.46004292f;
      sa[63] = 0.6626366f;
      sa[64] = 1.3305637f;
      sa[65] = -0.6971108f;
      sa[66] = 0.53987795f;
      sa[67] = 1.5718231f;
      sa[68] = 0.6278321f;
      sa[69] = -1.1595701f;
      sa[70] = -1.4601706f;
      sa[71] = -0.51355696f;
      sa[72] = -1.3205003f;
      sa[73] = 1.254039f;
      sa[74] = 1.3415277f;
      sa[75] = -0.3028705f;
      sa[76] = 0.88592f;
      sa[77] = 0.3977651f;
      sa[78] = -1.5327169f;
      sa[79] = 0.8867871f;
      sa[80] = -0.822292f;
      sa[81] = 0.1736405f;
      sa[82] = 0.8307387f;
      sa[83] = -0.8890224f;
      sa[84] = -1.573175f;
      sa[85] = -1.2814621f;
      sa[86] = 0.37993595f;
      sa[87] = 1.1293119f;
      sa[88] = -1.6005136f;
      sa[89] = -0.7601043f;
      sa[90] = -1.0535874f;
      sa[91] = 1.3779472f;
      sa[92] = -0.33621624f;
      sa[93] = 0.21474282f;
      sa[94] = -1.5409962f;
      sa[95] = -0.1848392f;
      sa[96] = -1.004949f;
      sa[97] = 0.1734742f;
      sa[98] = -0.09462759f;
      sa[99] = 0.35068822f;
      sa[100] = -1.2558262f;
      sa[101] = -0.49805814f;
      sa[102] = 1.1617332f;
      sa[103] = 0.058505923f;
      sa[104] = -0.21124041f;
      sa[105] = -0.7283531f;
      sa[106] = 1.3708671f;
      sa[107] = 1.220805f;
      sa[108] = 0.8516794f;
      sa[109] = 0.237918f;
      sa[110] = 0.7328641f;
      sa[111] = -0.85811764f;
      sa[112] = -1.1548686f;
      sa[113] = 0.21912417f;
      sa[114] = 0.091277994f;
      sa[115] = -0.41289663f;
      sa[116] = 1.1215385f;
      sa[117] = 0.024943415f;
      sa[118] = -1.4084646f;
      sa[119] = -0.7396225f;
      sa[120] = -0.35212454f;
      sa[121] = 1.0154252f;
      sa[122] = -0.072772555f;
      sa[123] = 0.26655853f;
      sa[124] = -0.6925991f;
      sa[125] = 0.7737248f;
      sa[126] = -1.0651537f;
      sa[127] = 0.39389467f;
      sa[128] = -0.99804497f;
      sa[129] = 0.7846004f;
      sa[130] = -0.4155149f;
      sa[131] = 0.86144125f;
      sa[132] = 0.42983082f;
      sa[133] = 0.65896636f;
      sa[134] = 0.60731786f;
      sa[135] = -1.055775f;
      sa[136] = 0.5628165f;
      sa[137] = -0.59464496f;
      sa[138] = -0.11607664f;
      sa[139] = 1.1577368f;
      sa[140] = -0.6202959f;
      sa[141] = -0.10292635f;
      sa[142] = 0.26092452f;
      sa[143] = -0.7855288f;
      sa[144] = 0.98800915f;
      sa[145] = -0.77963203f;
      sa[146] = 0.06925493f;
      sa[147] = -0.25038546f;
      sa[148] = -0.84101117f;
      sa[149] = 1.1159574f;
      sa[150] = -1.185962f;
      sa[151] = -1.6280884f;
      sa[152] = 1.5692952f;
      sa[153] = -0.5673051f;
      sa[154] = 1.3686026f;
      sa[155] = -1.4978851f;
      sa[156] = -1.485833f;
      sa[157] = -1.1076275f;
      sa[158] = -0.15207843f;
      sa[159] = -0.6351617f;
      sa[160] = 1.3525423f;
      sa[161] = -1.1762726f;
      sa[162] = 1.5942096f;
      sa[163] = -0.73884326f;
      sa[164] = 0.73194724f;
      sa[165] = -0.54862314f;
      sa[166] = 1.1902131f;
      sa[167] = -1.416872f;
      sa[168] = 1.0538886f;
      sa[169] = -1.5597024f;
      sa[170] = 1.0476224f;
      sa[171] = 0.88613456f;
      sa[172] = 1.4995768f;
      sa[173] = 1.5045265f;
      sa[174] = -0.08562317f;
      sa[175] = 0.025896415f;
      sa[176] = -0.7944914f;
      sa[177] = 0.07788261f;
      sa[178] = -1.2490548f;
      sa[179] = -0.1255256f;
      sa[180] = -1.3616593f;
      sa[181] = -0.9863746f;
      sa[182] = 0.24281886f;
      sa[183] = -0.96900815f;
      sa[184] = 1.4899471f;
      sa[185] = 1.2890109f;
      sa[186] = -0.4986696f;
      sa[187] = -0.9452418f;
      sa[188] = -0.7348063f;
      sa[189] = -0.77735543f;
      sa[190] = -1.464107f;
      sa[191] = -1.0399356f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_09 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_09_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_09_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_09_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_09_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


