/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:09:12.477+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_11

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_11 > h2o_nn_32x6_ReLU_11.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_11.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_11", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_11 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_11_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_11_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_11_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_11_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_11_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_11_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_11_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_11_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_11_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_11.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_11_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2548076923076923,0.18269230769230768,0.057692307692307696,0.125,0.2548076923076923,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_11() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-9143181306315552624L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_11_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_11_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_11_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_11_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_11_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_11_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_11_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_11_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_11_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.4709014516905422;
      sa[1] = 0.46016285742145224;
      sa[2] = 0.5839840611148265;
      sa[3] = 0.40773958828435414;
      sa[4] = 0.5514246007785801;
      sa[5] = 0.5537399611374202;
      sa[6] = 0.546886570974995;
      sa[7] = 0.4204956260063514;
      sa[8] = 0.5251407951536252;
      sa[9] = 0.6130661487226665;
      sa[10] = 0.4465236345336478;
      sa[11] = 0.6528187419262808;
      sa[12] = 0.5873968490315229;
      sa[13] = 0.4234386148859723;
      sa[14] = 0.6402915695278533;
      sa[15] = 0.6477378944913263;
      sa[16] = 0.5078662316896225;
      sa[17] = 0.700371137421369;
      sa[18] = 0.5216914553553038;
      sa[19] = 0.630920128293637;
      sa[20] = 0.3972401994862275;
      sa[21] = 0.5492892183509618;
      sa[22] = 0.47195823887483884;
      sa[23] = 0.5836667627954926;
      sa[24] = 0.5608957827025789;
      sa[25] = 0.5070724171702814;
      sa[26] = 0.3742488684158342;
      sa[27] = 0.37161582616237937;
      sa[28] = 0.47903545218965354;
      sa[29] = 0.45454198118541733;
      sa[30] = 0.5463677281480153;
      sa[31] = 0.4470459814873336;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_11_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_11_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.02295427569466331;
      sa[1] = -5.979387583186032E-4;
      sa[2] = -0.08248227530276465;
      sa[3] = -0.0334465004518303;
      sa[4] = -0.04222256805510413;
      sa[5] = 0.011351681146703353;
    }
  }
}
class h2o_nn_32x6_ReLU_11_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_11_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_11_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 6.048953E-4f;
      sa[1] = 0.32347617f;
      sa[2] = 0.099285394f;
      sa[3] = 0.19049853f;
      sa[4] = -0.2361492f;
      sa[5] = -0.20773335f;
      sa[6] = -0.19710557f;
      sa[7] = 0.07508121f;
      sa[8] = 0.12643354f;
      sa[9] = -0.04263852f;
      sa[10] = -0.19872658f;
      sa[11] = -0.1256703f;
      sa[12] = 0.049116783f;
      sa[13] = -0.2683109f;
      sa[14] = -0.311713f;
      sa[15] = -0.06640249f;
      sa[16] = 0.07254728f;
      sa[17] = 0.22369708f;
      sa[18] = -0.08016509f;
      sa[19] = 0.046118643f;
      sa[20] = 0.18110949f;
      sa[21] = -0.33769512f;
      sa[22] = 0.08621371f;
      sa[23] = -0.2087746f;
      sa[24] = 0.2678521f;
      sa[25] = 0.109795235f;
      sa[26] = -3.0128183E-4f;
      sa[27] = 0.40744582f;
      sa[28] = 0.22836734f;
      sa[29] = -0.2500146f;
      sa[30] = -0.13167018f;
      sa[31] = 0.13574366f;
      sa[32] = 0.19927502f;
      sa[33] = -0.23757422f;
      sa[34] = -0.003776367f;
      sa[35] = -0.012179454f;
      sa[36] = 0.19633588f;
      sa[37] = 0.13207218f;
      sa[38] = -0.29584572f;
      sa[39] = 0.13412406f;
      sa[40] = -0.0778796f;
      sa[41] = -0.10252982f;
      sa[42] = -0.13710605f;
      sa[43] = -0.07856799f;
      sa[44] = 0.35822725f;
      sa[45] = -0.35527095f;
      sa[46] = 0.09398421f;
      sa[47] = -0.02690572f;
      sa[48] = 0.26813558f;
      sa[49] = 0.26661572f;
      sa[50] = 0.26197928f;
      sa[51] = -0.26696482f;
      sa[52] = -0.21530035f;
      sa[53] = 0.10285177f;
      sa[54] = 0.041309636f;
      sa[55] = 0.2998306f;
      sa[56] = -0.13185738f;
      sa[57] = -0.34199953f;
      sa[58] = 0.2911154f;
      sa[59] = -0.14273879f;
      sa[60] = -0.34998325f;
      sa[61] = 0.17743555f;
      sa[62] = 0.009736172f;
      sa[63] = -0.08258372f;
      sa[64] = 0.14673679f;
      sa[65] = 0.07615204f;
      sa[66] = -0.0032183244f;
      sa[67] = 0.12369835f;
      sa[68] = -0.19267341f;
      sa[69] = -0.018061552f;
      sa[70] = 0.13278067f;
      sa[71] = 0.23580627f;
      sa[72] = -0.13615176f;
      sa[73] = 0.26959047f;
      sa[74] = -0.12908243f;
      sa[75] = -0.0015611086f;
      sa[76] = -0.13729586f;
      sa[77] = -0.13284472f;
      sa[78] = -0.16099918f;
      sa[79] = 0.14706858f;
      sa[80] = -0.29932934f;
      sa[81] = 0.012552174f;
      sa[82] = -0.019537775f;
      sa[83] = 0.04614595f;
      sa[84] = -0.15517265f;
      sa[85] = -0.30712774f;
      sa[86] = -0.056734696f;
      sa[87] = 0.17347547f;
      sa[88] = 0.37759796f;
      sa[89] = 0.068613105f;
      sa[90] = -0.10345768f;
      sa[91] = -0.009957192f;
      sa[92] = 0.102319606f;
      sa[93] = -0.1335321f;
      sa[94] = -0.18462323f;
      sa[95] = -0.2219584f;
      sa[96] = 0.19334503f;
      sa[97] = 0.038356602f;
      sa[98] = 0.2832183f;
      sa[99] = -2.4866295E-4f;
      sa[100] = -0.02769816f;
      sa[101] = -0.09826426f;
      sa[102] = -0.21544379f;
      sa[103] = -0.059484992f;
      sa[104] = -0.046437304f;
      sa[105] = -0.1900816f;
      sa[106] = -0.2552073f;
      sa[107] = 0.19998445f;
      sa[108] = 0.19115143f;
      sa[109] = -0.062085055f;
      sa[110] = -0.0626938f;
      sa[111] = -0.0022151163f;
      sa[112] = 0.06308293f;
      sa[113] = -0.07710717f;
      sa[114] = -0.1375402f;
      sa[115] = 0.10538389f;
      sa[116] = -0.1836623f;
      sa[117] = 0.009274151f;
      sa[118] = -0.4470337f;
      sa[119] = -0.1959922f;
      sa[120] = 0.20561114f;
      sa[121] = 0.15023328f;
      sa[122] = 0.36263472f;
      sa[123] = 0.36009187f;
      sa[124] = 0.31542027f;
      sa[125] = 0.15431571f;
      sa[126] = -0.38812765f;
      sa[127] = -0.38402712f;
      sa[128] = 0.23279478f;
      sa[129] = 0.21277978f;
      sa[130] = 0.06563839f;
      sa[131] = 0.27627352f;
      sa[132] = 0.13777262f;
      sa[133] = -0.3517101f;
      sa[134] = -0.116242744f;
      sa[135] = -0.25474647f;
      sa[136] = -0.2775548f;
      sa[137] = -0.045905408f;
      sa[138] = -0.018780896f;
      sa[139] = -0.011226328f;
      sa[140] = -0.14858624f;
      sa[141] = -0.10665996f;
      sa[142] = 0.08368758f;
      sa[143] = -0.38759226f;
      sa[144] = 0.21649937f;
      sa[145] = -0.21415365f;
      sa[146] = -0.3120154f;
      sa[147] = 0.13531545f;
      sa[148] = 0.16770405f;
      sa[149] = 0.12573677f;
      sa[150] = 0.16642544f;
      sa[151] = -0.24048252f;
      sa[152] = -0.0054456834f;
      sa[153] = 0.2110398f;
      sa[154] = 0.19092266f;
      sa[155] = -0.193203f;
      sa[156] = 0.061604574f;
      sa[157] = -0.25332868f;
      sa[158] = 0.005789569f;
      sa[159] = 0.03834447f;
      sa[160] = 0.010406845f;
      sa[161] = 0.034980312f;
      sa[162] = 0.032737356f;
      sa[163] = -0.3249533f;
      sa[164] = 0.17473172f;
      sa[165] = -0.014410272f;
      sa[166] = -0.15008974f;
      sa[167] = -0.06069001f;
      sa[168] = 0.23028849f;
      sa[169] = 0.2532357f;
      sa[170] = 0.26847833f;
      sa[171] = -0.039235827f;
      sa[172] = -0.050205268f;
      sa[173] = 0.026466906f;
      sa[174] = -0.009506961f;
      sa[175] = -0.11991205f;
      sa[176] = 0.12956135f;
      sa[177] = 0.13230805f;
      sa[178] = -0.22524935f;
      sa[179] = -0.0028426033f;
      sa[180] = -0.11213072f;
      sa[181] = -0.43805677f;
      sa[182] = -0.21679544f;
      sa[183] = 0.08926663f;
      sa[184] = 0.31244963f;
      sa[185] = 0.23102681f;
      sa[186] = -0.24442644f;
      sa[187] = 0.14697854f;
      sa[188] = -0.04713289f;
      sa[189] = 0.10628259f;
      sa[190] = 0.10556366f;
      sa[191] = -0.14239594f;
      sa[192] = -0.09624488f;
      sa[193] = 0.29059044f;
      sa[194] = 0.15867752f;
      sa[195] = 0.2794149f;
      sa[196] = 0.19935235f;
      sa[197] = 0.012458894f;
      sa[198] = 0.33184886f;
      sa[199] = 0.051229294f;
      sa[200] = 0.0026917977f;
      sa[201] = -0.28364336f;
      sa[202] = 0.08204946f;
      sa[203] = -0.0071468577f;
      sa[204] = -0.3102188f;
      sa[205] = 0.2696711f;
      sa[206] = 0.30192515f;
      sa[207] = 0.13138416f;
      sa[208] = -0.19629732f;
      sa[209] = 0.013666375f;
      sa[210] = -0.20256223f;
      sa[211] = -0.131216f;
      sa[212] = 0.27270138f;
      sa[213] = -0.19414859f;
      sa[214] = -0.028076548f;
      sa[215] = 0.04932822f;
      sa[216] = 0.06540974f;
      sa[217] = 0.13072959f;
      sa[218] = -0.21816626f;
      sa[219] = 0.290136f;
      sa[220] = -0.14828575f;
      sa[221] = 0.14692776f;
      sa[222] = 0.2672133f;
      sa[223] = 0.06414962f;
      sa[224] = 0.0770701f;
      sa[225] = 0.33212882f;
      sa[226] = -0.18300684f;
      sa[227] = 0.1925919f;
      sa[228] = 0.20127502f;
      sa[229] = 0.17651224f;
      sa[230] = 0.28202045f;
      sa[231] = -0.22927432f;
      sa[232] = -0.19695881f;
      sa[233] = 0.20675543f;
      sa[234] = 0.16576779f;
      sa[235] = -0.0076698535f;
      sa[236] = 0.009870678f;
      sa[237] = -0.20494644f;
      sa[238] = -0.19445616f;
      sa[239] = 0.20838365f;
      sa[240] = 0.0026422914f;
      sa[241] = -0.21603681f;
      sa[242] = 0.012197291f;
      sa[243] = -0.15437083f;
      sa[244] = -0.12047461f;
      sa[245] = -0.08347444f;
      sa[246] = -0.13816607f;
      sa[247] = 0.027820133f;
      sa[248] = 0.17186284f;
      sa[249] = 0.13486557f;
      sa[250] = -0.10529191f;
      sa[251] = -7.291514E-4f;
      sa[252] = -0.12519099f;
      sa[253] = -0.16907187f;
      sa[254] = -0.22604959f;
      sa[255] = 0.36183184f;
      sa[256] = -0.18687382f;
      sa[257] = 0.29577982f;
      sa[258] = -0.20661259f;
      sa[259] = -0.17990395f;
      sa[260] = -0.10244223f;
      sa[261] = -0.06674412f;
      sa[262] = -0.22448461f;
      sa[263] = 0.33586657f;
      sa[264] = -0.087526575f;
      sa[265] = 0.10781792f;
      sa[266] = -0.22472313f;
      sa[267] = -0.25047496f;
      sa[268] = 0.30734396f;
      sa[269] = -0.0748056f;
      sa[270] = -0.6511181f;
      sa[271] = 0.39277843f;
      sa[272] = -0.047152255f;
      sa[273] = -0.1195882f;
      sa[274] = 0.16367622f;
      sa[275] = -0.09923736f;
      sa[276] = 0.07275461f;
      sa[277] = -0.2519599f;
      sa[278] = -0.47407138f;
      sa[279] = 0.081478916f;
      sa[280] = -0.16006206f;
      sa[281] = 0.20876631f;
      sa[282] = -0.07575832f;
      sa[283] = -0.10399204f;
      sa[284] = -0.018538877f;
      sa[285] = -0.1807448f;
      sa[286] = 0.37244073f;
      sa[287] = 0.1472376f;
      sa[288] = -0.23375595f;
      sa[289] = -0.118858054f;
      sa[290] = -0.063359655f;
      sa[291] = -0.11581732f;
      sa[292] = 0.13329265f;
      sa[293] = -0.20928289f;
      sa[294] = -0.0684701f;
      sa[295] = 0.123341784f;
      sa[296] = 0.13744836f;
      sa[297] = 0.27540407f;
      sa[298] = 0.05684874f;
      sa[299] = -0.28921574f;
      sa[300] = -0.0836519f;
      sa[301] = -0.19216472f;
      sa[302] = 0.017663416f;
      sa[303] = -0.02219643f;
      sa[304] = -0.13339613f;
      sa[305] = 0.05751963f;
      sa[306] = 0.35579994f;
      sa[307] = -0.086765334f;
      sa[308] = 0.111221306f;
      sa[309] = 0.23230903f;
      sa[310] = 0.22311221f;
      sa[311] = 0.35785738f;
      sa[312] = -0.08827838f;
      sa[313] = -0.099909484f;
      sa[314] = -0.04750249f;
      sa[315] = 0.14391269f;
      sa[316] = 0.04978755f;
      sa[317] = 0.05420652f;
      sa[318] = 0.114508316f;
      sa[319] = 0.43062517f;
      sa[320] = -0.15215804f;
      sa[321] = -0.0664133f;
      sa[322] = 0.3871434f;
      sa[323] = 0.09296455f;
      sa[324] = 0.09731749f;
      sa[325] = 0.060447525f;
      sa[326] = -0.44225028f;
      sa[327] = 0.0892917f;
      sa[328] = -0.10738842f;
      sa[329] = 0.27413413f;
      sa[330] = -0.1043778f;
      sa[331] = -0.16718686f;
      sa[332] = -0.1801449f;
      sa[333] = -0.051253617f;
      sa[334] = -0.06746834f;
      sa[335] = 0.42959988f;
      sa[336] = -0.12953694f;
      sa[337] = -0.11367247f;
      sa[338] = 0.37580553f;
      sa[339] = -0.24354286f;
      sa[340] = -0.42880252f;
      sa[341] = -0.5847356f;
      sa[342] = -0.013962053f;
      sa[343] = -0.006457877f;
      sa[344] = -0.1821703f;
      sa[345] = 0.14385664f;
      sa[346] = 0.21972768f;
      sa[347] = -0.14903446f;
      sa[348] = 0.18388997f;
      sa[349] = -0.21706001f;
      sa[350] = -0.30772588f;
      sa[351] = -0.034587257f;
      sa[352] = 0.1475678f;
      sa[353] = -0.15380275f;
      sa[354] = 0.01464378f;
      sa[355] = -0.044554483f;
      sa[356] = -0.008061442f;
      sa[357] = 0.37710178f;
      sa[358] = -0.3589049f;
      sa[359] = -0.27147937f;
      sa[360] = 0.13262609f;
      sa[361] = -0.023626907f;
      sa[362] = -0.2850006f;
      sa[363] = 0.1199865f;
      sa[364] = -0.14256677f;
      sa[365] = -0.20171799f;
      sa[366] = -0.0056797694f;
      sa[367] = -0.2967606f;
      sa[368] = -0.12839913f;
      sa[369] = 0.46548644f;
      sa[370] = -0.17358185f;
      sa[371] = 0.18603963f;
      sa[372] = 0.059411626f;
      sa[373] = 0.31048095f;
      sa[374] = -0.1095871f;
      sa[375] = -0.21067433f;
      sa[376] = -0.2800135f;
      sa[377] = -0.06445201f;
      sa[378] = -0.22646914f;
      sa[379] = 0.16766326f;
      sa[380] = -0.05185416f;
      sa[381] = -0.09288296f;
      sa[382] = 0.02105126f;
      sa[383] = -0.06686344f;
      sa[384] = -0.22710718f;
      sa[385] = 0.07151675f;
      sa[386] = -0.47843575f;
      sa[387] = -0.1975026f;
      sa[388] = 0.10008949f;
      sa[389] = -0.059459332f;
      sa[390] = -0.010878101f;
      sa[391] = -0.12571444f;
      sa[392] = 0.13094844f;
      sa[393] = 0.2412181f;
      sa[394] = 0.0061268476f;
      sa[395] = 0.20807092f;
      sa[396] = 0.3830619f;
      sa[397] = -0.33534557f;
      sa[398] = -0.04511845f;
      sa[399] = 0.057290804f;
      sa[400] = 0.18066785f;
      sa[401] = 0.2894341f;
      sa[402] = -0.10014626f;
      sa[403] = 0.0503081f;
      sa[404] = 0.29442486f;
      sa[405] = -0.23876101f;
      sa[406] = -0.006969068f;
      sa[407] = 0.15771054f;
      sa[408] = -0.12888736f;
      sa[409] = -0.17138231f;
      sa[410] = -0.04410215f;
      sa[411] = 0.19359423f;
      sa[412] = -0.1782497f;
      sa[413] = -0.007636351f;
      sa[414] = 0.022784863f;
      sa[415] = 0.49030977f;
      sa[416] = -0.111202724f;
      sa[417] = 0.034182377f;
      sa[418] = 0.09322705f;
      sa[419] = 0.43391755f;
      sa[420] = 0.23573251f;
      sa[421] = 0.28047645f;
      sa[422] = 0.23544046f;
      sa[423] = -0.084511355f;
      sa[424] = 0.16154526f;
      sa[425] = -0.025709642f;
      sa[426] = -0.20329581f;
      sa[427] = 0.23253001f;
      sa[428] = -0.16075604f;
      sa[429] = -0.27973634f;
      sa[430] = 0.31425563f;
      sa[431] = -0.061291546f;
      sa[432] = 0.015248061f;
      sa[433] = 0.080393866f;
      sa[434] = 0.3605282f;
      sa[435] = 0.05543303f;
      sa[436] = -0.21713796f;
      sa[437] = -0.2526342f;
      sa[438] = -0.026997687f;
      sa[439] = -0.046540838f;
      sa[440] = 0.28916612f;
      sa[441] = -0.21791096f;
      sa[442] = 0.09814611f;
      sa[443] = 0.052469254f;
      sa[444] = -0.23827764f;
      sa[445] = 0.0151582565f;
      sa[446] = 0.12915139f;
      sa[447] = 0.02605805f;
      sa[448] = 0.1875147f;
      sa[449] = 0.24231336f;
      sa[450] = -0.1906854f;
      sa[451] = 0.02595553f;
      sa[452] = 0.1856976f;
      sa[453] = 0.002203219f;
      sa[454] = -0.12629144f;
      sa[455] = -0.037562266f;
      sa[456] = 0.087475166f;
      sa[457] = 0.09315071f;
      sa[458] = -0.15348685f;
      sa[459] = 0.34307304f;
      sa[460] = 0.20629911f;
      sa[461] = 0.27018282f;
      sa[462] = 0.06293264f;
      sa[463] = 0.15644804f;
      sa[464] = -0.25744143f;
      sa[465] = 0.14108643f;
      sa[466] = -0.09135208f;
      sa[467] = 0.16166179f;
      sa[468] = -0.020441087f;
      sa[469] = 0.26751763f;
      sa[470] = 0.21175408f;
      sa[471] = 0.050984494f;
      sa[472] = 6.0627656E-4f;
      sa[473] = -0.22004175f;
      sa[474] = -0.20850934f;
      sa[475] = -0.015702812f;
      sa[476] = 0.10271673f;
      sa[477] = -0.025908632f;
      sa[478] = 0.1557943f;
      sa[479] = -0.24805431f;
      sa[480] = -0.4457395f;
      sa[481] = -0.35259175f;
      sa[482] = -0.5279996f;
      sa[483] = 0.057470307f;
      sa[484] = 0.21876788f;
      sa[485] = 0.29016757f;
      sa[486] = 0.10705524f;
      sa[487] = -0.17390619f;
      sa[488] = -0.22502343f;
      sa[489] = 0.09502623f;
      sa[490] = -0.12717986f;
      sa[491] = -0.22209498f;
      sa[492] = 0.2749406f;
      sa[493] = 0.26915857f;
      sa[494] = -0.07166172f;
      sa[495] = 0.24246936f;
      sa[496] = -0.018331815f;
      sa[497] = 0.12967423f;
      sa[498] = 0.15668112f;
      sa[499] = 0.12474833f;
      sa[500] = -0.08003273f;
      sa[501] = -0.009311414f;
      sa[502] = 0.27468035f;
      sa[503] = 0.24605502f;
      sa[504] = -0.13750978f;
      sa[505] = -0.2096201f;
      sa[506] = 0.35008588f;
      sa[507] = -0.17042635f;
      sa[508] = 0.15708713f;
      sa[509] = 0.19852558f;
      sa[510] = 0.26311532f;
      sa[511] = 0.14807893f;
      sa[512] = 0.064095765f;
      sa[513] = -0.080677465f;
      sa[514] = 0.20892197f;
      sa[515] = -0.48734602f;
      sa[516] = 0.0778486f;
      sa[517] = 0.0992238f;
      sa[518] = 0.20741735f;
      sa[519] = -0.023820652f;
      sa[520] = 0.22806172f;
      sa[521] = 0.21748984f;
      sa[522] = 0.16759045f;
      sa[523] = 0.13005227f;
      sa[524] = 0.30312508f;
      sa[525] = 0.2561265f;
      sa[526] = 0.108827524f;
      sa[527] = -0.04952758f;
      sa[528] = 0.05653003f;
      sa[529] = 0.10209059f;
      sa[530] = -0.23121016f;
      sa[531] = 0.2392471f;
      sa[532] = 0.19906464f;
      sa[533] = 0.18786809f;
      sa[534] = 0.12993583f;
      sa[535] = 0.0074296384f;
      sa[536] = -0.028330015f;
      sa[537] = -0.3505599f;
      sa[538] = 0.25728697f;
      sa[539] = 0.4810836f;
      sa[540] = -0.34088868f;
      sa[541] = -0.173131f;
      sa[542] = -0.020286694f;
      sa[543] = -0.12841679f;
      sa[544] = 0.25232086f;
      sa[545] = 0.22040673f;
      sa[546] = 0.1713391f;
      sa[547] = 0.2639341f;
      sa[548] = -0.010844639f;
      sa[549] = 0.11606568f;
      sa[550] = -0.104858525f;
      sa[551] = 0.09796662f;
      sa[552] = -0.009954674f;
      sa[553] = 9.813922E-4f;
      sa[554] = -0.1501369f;
      sa[555] = -0.18343942f;
      sa[556] = -0.15026447f;
      sa[557] = -0.20814563f;
      sa[558] = -9.5662207E-4f;
      sa[559] = -0.18136176f;
      sa[560] = -0.37409997f;
      sa[561] = -0.1041412f;
      sa[562] = 0.11004575f;
      sa[563] = -0.15938286f;
      sa[564] = 0.19607294f;
      sa[565] = -0.008446879f;
      sa[566] = 0.3932794f;
      sa[567] = -0.053744968f;
      sa[568] = -0.096156605f;
      sa[569] = 0.047199998f;
      sa[570] = 0.031774152f;
      sa[571] = -0.0919271f;
      sa[572] = 0.15620533f;
      sa[573] = 0.3735233f;
      sa[574] = -0.11023321f;
      sa[575] = -0.40748647f;
      sa[576] = -0.13485815f;
      sa[577] = -0.08292015f;
      sa[578] = -0.06594612f;
      sa[579] = 0.013426395f;
      sa[580] = 0.08234618f;
      sa[581] = -0.07824987f;
      sa[582] = 0.11066154f;
      sa[583] = -0.0886715f;
      sa[584] = 0.12516856f;
      sa[585] = 0.07813359f;
      sa[586] = -0.15400557f;
      sa[587] = -0.05956517f;
      sa[588] = 0.08456918f;
      sa[589] = 0.17928831f;
      sa[590] = 0.058138017f;
      sa[591] = 0.015122988f;
      sa[592] = -0.38275945f;
      sa[593] = -0.22916536f;
      sa[594] = 0.009248207f;
      sa[595] = 0.22151172f;
      sa[596] = 0.19291823f;
      sa[597] = -0.09662619f;
      sa[598] = 0.1450573f;
      sa[599] = 0.07867821f;
      sa[600] = -0.39163223f;
      sa[601] = 0.25835437f;
      sa[602] = -0.022395791f;
      sa[603] = 0.15666315f;
      sa[604] = 0.2432181f;
      sa[605] = 0.21380937f;
      sa[606] = 0.23891099f;
      sa[607] = 0.11091289f;
      sa[608] = 0.065006055f;
      sa[609] = 0.22790745f;
      sa[610] = 0.14769894f;
      sa[611] = -0.20207618f;
      sa[612] = 0.049924314f;
      sa[613] = 0.18674567f;
      sa[614] = 0.029761367f;
      sa[615] = -0.0386512f;
      sa[616] = 0.068425946f;
      sa[617] = -0.262301f;
      sa[618] = -0.1276949f;
      sa[619] = -0.2887993f;
      sa[620] = 0.057958324f;
      sa[621] = -0.1327552f;
      sa[622] = -0.32947686f;
      sa[623] = -0.16139413f;
      sa[624] = 0.018381344f;
      sa[625] = 0.26523238f;
      sa[626] = -0.014639667f;
      sa[627] = 0.21637967f;
      sa[628] = -0.2936098f;
      sa[629] = -0.041729603f;
      sa[630] = -0.33061168f;
      sa[631] = 0.23537125f;
      sa[632] = 0.1744345f;
      sa[633] = -0.09760277f;
      sa[634] = -0.036433056f;
      sa[635] = 0.18968584f;
      sa[636] = -0.11337255f;
      sa[637] = -0.092508845f;
      sa[638] = -0.067787595f;
      sa[639] = 0.018552339f;
      sa[640] = -0.11894626f;
      sa[641] = -0.37180936f;
      sa[642] = 0.21323605f;
      sa[643] = -0.4279857f;
      sa[644] = -0.27484712f;
      sa[645] = -0.38264805f;
      sa[646] = 0.40805426f;
      sa[647] = -0.14109007f;
      sa[648] = 0.12637961f;
      sa[649] = -0.009343943f;
      sa[650] = 0.05885051f;
      sa[651] = -0.114529714f;
      sa[652] = 0.021208683f;
      sa[653] = -0.1708903f;
      sa[654] = -0.08674632f;
      sa[655] = -0.19277626f;
      sa[656] = 0.26421764f;
      sa[657] = -0.012700729f;
      sa[658] = -0.2944028f;
      sa[659] = -0.10097215f;
      sa[660] = -0.22913331f;
      sa[661] = -0.097860865f;
      sa[662] = -0.17263484f;
      sa[663] = 0.16819862f;
      sa[664] = -0.28705114f;
      sa[665] = 0.015290752f;
      sa[666] = -0.14405853f;
      sa[667] = -0.55776864f;
      sa[668] = 0.26577702f;
      sa[669] = -0.13212088f;
      sa[670] = 0.17589691f;
      sa[671] = -0.018883651f;
      sa[672] = -0.30357102f;
      sa[673] = 0.1735561f;
      sa[674] = 0.13725778f;
      sa[675] = -0.4005223f;
      sa[676] = -0.14261515f;
      sa[677] = -0.25900522f;
      sa[678] = 0.120583065f;
      sa[679] = -0.16586958f;
      sa[680] = 0.04581524f;
      sa[681] = 0.18896882f;
      sa[682] = -0.15891218f;
      sa[683] = -0.2181008f;
      sa[684] = -0.11874313f;
      sa[685] = 0.12922767f;
      sa[686] = -0.009713312f;
      sa[687] = -0.25198713f;
      sa[688] = -0.115436055f;
      sa[689] = -0.22546959f;
      sa[690] = -0.08845931f;
      sa[691] = 0.21548519f;
      sa[692] = -0.25288355f;
      sa[693] = -0.10473089f;
      sa[694] = 0.24593423f;
      sa[695] = -0.27230605f;
      sa[696] = -0.15191028f;
      sa[697] = -0.1795673f;
      sa[698] = -0.24783197f;
      sa[699] = 0.27599493f;
      sa[700] = 0.24702363f;
      sa[701] = 0.25573426f;
      sa[702] = 0.44263625f;
      sa[703] = -0.15048881f;
      sa[704] = -0.24554811f;
      sa[705] = 0.059923556f;
      sa[706] = -0.18483055f;
      sa[707] = 0.043010052f;
      sa[708] = 0.08126448f;
      sa[709] = -0.25544664f;
      sa[710] = 0.44869605f;
      sa[711] = 0.03844304f;
      sa[712] = 0.113902986f;
      sa[713] = 0.32165048f;
      sa[714] = 0.27641815f;
      sa[715] = 0.3886647f;
      sa[716] = 0.007261455f;
      sa[717] = 0.11226071f;
      sa[718] = -0.05986029f;
      sa[719] = 0.2616257f;
      sa[720] = -0.34055686f;
      sa[721] = 0.28910482f;
      sa[722] = -0.09177862f;
      sa[723] = 0.06519303f;
      sa[724] = 0.1872303f;
      sa[725] = -0.15983042f;
      sa[726] = -0.010698862f;
      sa[727] = -0.27146408f;
      sa[728] = -0.16369718f;
      sa[729] = 0.08787231f;
      sa[730] = 0.18312308f;
      sa[731] = -0.07880932f;
      sa[732] = 0.24948375f;
      sa[733] = 0.3383791f;
      sa[734] = -0.036377802f;
      sa[735] = 0.33148366f;
      sa[736] = 0.0572125f;
      sa[737] = 0.37626928f;
      sa[738] = -0.202338f;
      sa[739] = -0.27985477f;
      sa[740] = -0.2188923f;
      sa[741] = -0.25618213f;
      sa[742] = 0.178081f;
      sa[743] = 0.019462518f;
      sa[744] = -0.018401952f;
      sa[745] = -0.18603846f;
      sa[746] = 0.041456375f;
      sa[747] = -0.1566566f;
      sa[748] = -0.11481868f;
      sa[749] = -0.2421619f;
      sa[750] = 0.23212208f;
      sa[751] = 0.1790065f;
      sa[752] = 0.08854661f;
      sa[753] = 0.25765988f;
      sa[754] = 0.0030850547f;
      sa[755] = 0.23319107f;
      sa[756] = -0.21592823f;
      sa[757] = 0.2501937f;
      sa[758] = -0.17156099f;
      sa[759] = -0.15949929f;
      sa[760] = -0.03924404f;
      sa[761] = 0.09889988f;
      sa[762] = 0.01649871f;
      sa[763] = 0.30479604f;
      sa[764] = 0.07640679f;
      sa[765] = -0.11050494f;
      sa[766] = -0.16766655f;
      sa[767] = 0.0032281978f;
      sa[768] = -0.119104564f;
      sa[769] = -0.20822433f;
      sa[770] = 0.101771384f;
      sa[771] = 0.09769937f;
      sa[772] = 0.045542374f;
      sa[773] = -0.21595293f;
      sa[774] = 0.20202999f;
      sa[775] = 0.33489445f;
      sa[776] = -0.020952318f;
      sa[777] = 0.086043976f;
      sa[778] = 0.20868176f;
      sa[779] = -0.1304248f;
      sa[780] = -0.093182065f;
      sa[781] = 0.020644091f;
      sa[782] = 0.08811761f;
      sa[783] = -0.1515519f;
      sa[784] = -0.064601615f;
      sa[785] = -0.04252834f;
      sa[786] = -0.024820223f;
      sa[787] = -0.122468464f;
      sa[788] = -0.29880106f;
      sa[789] = 0.12666388f;
      sa[790] = -0.035581198f;
      sa[791] = -0.02332929f;
      sa[792] = 0.1561131f;
      sa[793] = -0.04670567f;
      sa[794] = -0.15344821f;
      sa[795] = -0.071944624f;
      sa[796] = 0.19407338f;
      sa[797] = -0.2692539f;
      sa[798] = -0.3493458f;
      sa[799] = -0.13013774f;
      sa[800] = 0.17179751f;
      sa[801] = 0.09818822f;
      sa[802] = 0.1323565f;
      sa[803] = 0.11569971f;
      sa[804] = 0.14121181f;
      sa[805] = 0.209934f;
      sa[806] = 0.17412211f;
      sa[807] = 0.18913789f;
      sa[808] = -0.01755513f;
      sa[809] = -0.260335f;
      sa[810] = 0.13913396f;
      sa[811] = 0.00345788f;
      sa[812] = 0.103936635f;
      sa[813] = -0.29414248f;
      sa[814] = 0.0014843746f;
      sa[815] = -0.24405657f;
      sa[816] = -0.05482889f;
      sa[817] = -0.3196392f;
      sa[818] = 0.06348549f;
      sa[819] = -0.1762458f;
      sa[820] = -0.29738832f;
      sa[821] = -0.16256431f;
      sa[822] = -0.2846085f;
      sa[823] = 0.073431954f;
      sa[824] = 0.2715899f;
      sa[825] = 0.37351137f;
      sa[826] = -0.36182937f;
      sa[827] = -0.5323773f;
      sa[828] = 0.108691f;
      sa[829] = -0.049707226f;
      sa[830] = 0.24200884f;
      sa[831] = 0.25182012f;
      sa[832] = 0.20778985f;
      sa[833] = 0.18391262f;
      sa[834] = 0.2779574f;
      sa[835] = -0.018731141f;
      sa[836] = 0.18868297f;
      sa[837] = -0.19547145f;
      sa[838] = 0.10805935f;
      sa[839] = -0.049009174f;
      sa[840] = 0.19668569f;
      sa[841] = 0.17679535f;
      sa[842] = 0.19919722f;
      sa[843] = 0.04955848f;
      sa[844] = 0.04594398f;
      sa[845] = 0.0937596f;
      sa[846] = -0.21472071f;
      sa[847] = -0.33266887f;
      sa[848] = 0.16305296f;
      sa[849] = 0.22225834f;
      sa[850] = -0.0077563236f;
      sa[851] = 0.022888342f;
      sa[852] = 0.21156274f;
      sa[853] = 0.12876639f;
      sa[854] = 0.2304998f;
      sa[855] = 0.10588154f;
      sa[856] = 0.051507518f;
      sa[857] = -0.19613719f;
      sa[858] = 0.15219834f;
      sa[859] = -0.013621672f;
      sa[860] = 0.43219778f;
      sa[861] = -0.03931375f;
      sa[862] = -0.42314324f;
      sa[863] = -0.100494094f;
      sa[864] = -0.23326893f;
      sa[865] = 0.21917893f;
      sa[866] = -0.17913264f;
      sa[867] = -0.0927722f;
      sa[868] = -0.18319596f;
      sa[869] = 0.1048241f;
      sa[870] = -0.1326354f;
      sa[871] = 0.17989779f;
      sa[872] = 0.18580626f;
      sa[873] = -0.0540436f;
      sa[874] = 0.06092699f;
      sa[875] = -0.43641907f;
      sa[876] = -0.27326792f;
      sa[877] = -0.29651436f;
      sa[878] = -0.027876126f;
      sa[879] = 0.17844923f;
      sa[880] = -0.12133693f;
      sa[881] = -0.10905248f;
      sa[882] = 0.29998714f;
      sa[883] = 0.20188083f;
      sa[884] = -0.09536786f;
      sa[885] = -0.058481544f;
      sa[886] = 0.062944114f;
      sa[887] = 0.018005867f;
      sa[888] = -0.012257327f;
      sa[889] = 0.07797935f;
      sa[890] = -0.21448903f;
      sa[891] = 0.41547042f;
      sa[892] = 0.23816204f;
      sa[893] = 0.39867902f;
      sa[894] = 0.057993885f;
      sa[895] = 0.41030103f;
      sa[896] = -0.20990229f;
      sa[897] = 0.120210655f;
      sa[898] = 0.03512752f;
      sa[899] = 0.27172557f;
      sa[900] = -0.057209775f;
      sa[901] = 0.114357285f;
      sa[902] = -0.32239202f;
      sa[903] = 0.017157704f;
      sa[904] = 0.17357798f;
      sa[905] = 0.21094139f;
      sa[906] = -0.2769887f;
      sa[907] = -0.41787913f;
      sa[908] = -0.2085089f;
      sa[909] = 0.116385266f;
      sa[910] = 0.03479197f;
      sa[911] = -0.043375555f;
      sa[912] = 0.0024025845f;
      sa[913] = 0.06945601f;
      sa[914] = -0.2580315f;
      sa[915] = -0.019108506f;
      sa[916] = 0.27709737f;
      sa[917] = 0.24532923f;
      sa[918] = 0.00222633f;
      sa[919] = 0.08575722f;
      sa[920] = 0.13347219f;
      sa[921] = -0.117380485f;
      sa[922] = -0.1564026f;
      sa[923] = -0.13636746f;
      sa[924] = -0.077293366f;
      sa[925] = -0.18889596f;
      sa[926] = 0.15632842f;
      sa[927] = -0.0712886f;
      sa[928] = 0.23680909f;
      sa[929] = 0.0549658f;
      sa[930] = 0.18290307f;
      sa[931] = -0.09221273f;
      sa[932] = 0.1788811f;
      sa[933] = -0.077866755f;
      sa[934] = 0.32553816f;
      sa[935] = -0.09877457f;
      sa[936] = 0.020191653f;
      sa[937] = 0.20769118f;
      sa[938] = -0.07444019f;
      sa[939] = -0.14056194f;
      sa[940] = -0.14593948f;
      sa[941] = -0.37890998f;
      sa[942] = -0.26080862f;
      sa[943] = -0.20209539f;
      sa[944] = -0.23766433f;
      sa[945] = -0.090992674f;
      sa[946] = 0.105629474f;
      sa[947] = 0.1700214f;
      sa[948] = 0.13793458f;
      sa[949] = -0.19604781f;
      sa[950] = 0.17376824f;
      sa[951] = -0.05532755f;
      sa[952] = -0.23726699f;
      sa[953] = -0.22726163f;
      sa[954] = -0.1919954f;
      sa[955] = 0.17009547f;
      sa[956] = -0.012158558f;
      sa[957] = -0.048381444f;
      sa[958] = 0.06932635f;
      sa[959] = -0.1517881f;
      sa[960] = 0.41235045f;
      sa[961] = -0.08747992f;
      sa[962] = -0.15690796f;
      sa[963] = 0.006466826f;
      sa[964] = -0.15552968f;
      sa[965] = 0.21695071f;
      sa[966] = -0.1520746f;
      sa[967] = -0.19717638f;
      sa[968] = 0.11499142f;
      sa[969] = 0.04367269f;
      sa[970] = 0.36943635f;
      sa[971] = -0.013078341f;
      sa[972] = -0.13107775f;
      sa[973] = -0.3058776f;
      sa[974] = -0.2990215f;
      sa[975] = -0.15922093f;
      sa[976] = -0.12656915f;
      sa[977] = 0.06909759f;
      sa[978] = -0.060103357f;
      sa[979] = 0.05385184f;
      sa[980] = 0.14664136f;
      sa[981] = -0.22571559f;
      sa[982] = 0.30598956f;
      sa[983] = 0.1316052f;
      sa[984] = -0.25689965f;
      sa[985] = 0.09893692f;
      sa[986] = -0.21778153f;
      sa[987] = 0.0755806f;
      sa[988] = 0.14431524f;
      sa[989] = 0.2439667f;
      sa[990] = 0.08571519f;
      sa[991] = -0.07261968f;
      sa[992] = -0.26397f;
      sa[993] = -0.14052866f;
      sa[994] = -0.17707929f;
      sa[995] = -0.28245956f;
      sa[996] = 0.103847995f;
      sa[997] = 0.23148157f;
      sa[998] = 0.025582526f;
      sa[999] = 0.1816884f;
      sa[1000] = -0.04624717f;
      sa[1001] = 0.1087997f;
      sa[1002] = 0.20864104f;
      sa[1003] = -0.2852946f;
      sa[1004] = 0.2554134f;
      sa[1005] = -0.16615632f;
      sa[1006] = -0.1157088f;
      sa[1007] = -0.08190471f;
      sa[1008] = 0.13836484f;
      sa[1009] = 0.27644518f;
      sa[1010] = 0.112407066f;
      sa[1011] = 0.26727498f;
      sa[1012] = -0.036606036f;
      sa[1013] = 0.14478393f;
      sa[1014] = 0.26529247f;
      sa[1015] = -0.1970206f;
      sa[1016] = 0.21289371f;
      sa[1017] = 0.12600261f;
      sa[1018] = -0.20840092f;
      sa[1019] = 0.039642658f;
      sa[1020] = -0.25376558f;
      sa[1021] = 0.058034893f;
      sa[1022] = 0.18632694f;
      sa[1023] = 0.08816289f;
      sa[1024] = 0.3326363f;
      sa[1025] = 0.20899038f;
      sa[1026] = 0.1944476f;
      sa[1027] = 0.050915573f;
      sa[1028] = 0.3086164f;
      sa[1029] = 0.044631694f;
      sa[1030] = -0.16721402f;
      sa[1031] = -0.2677201f;
      sa[1032] = -0.17923301f;
      sa[1033] = -0.119332425f;
      sa[1034] = -0.032472037f;
      sa[1035] = -0.18192331f;
      sa[1036] = 0.2438736f;
      sa[1037] = 0.033880074f;
      sa[1038] = -0.208402f;
      sa[1039] = 0.24741036f;
      sa[1040] = -0.016387071f;
      sa[1041] = 0.15914573f;
      sa[1042] = -0.42433223f;
      sa[1043] = -0.002455912f;
      sa[1044] = 0.30647233f;
      sa[1045] = 0.2421488f;
      sa[1046] = -0.18062147f;
      sa[1047] = -0.13534304f;
      sa[1048] = 0.11962198f;
      sa[1049] = -0.077330776f;
      sa[1050] = 0.10406018f;
      sa[1051] = -0.22248784f;
      sa[1052] = 0.20702443f;
      sa[1053] = 0.32606614f;
      sa[1054] = 0.24555223f;
      sa[1055] = 0.074563384f;
      sa[1056] = 0.31221515f;
      sa[1057] = -0.15379946f;
      sa[1058] = 0.24960741f;
      sa[1059] = -0.14492118f;
      sa[1060] = -0.26734692f;
      sa[1061] = 0.05096064f;
      sa[1062] = -0.009608316f;
      sa[1063] = 0.08445734f;
      sa[1064] = 0.1427191f;
      sa[1065] = -0.04633042f;
      sa[1066] = 0.25424412f;
      sa[1067] = -0.31132323f;
      sa[1068] = -0.31618503f;
      sa[1069] = 0.19493887f;
      sa[1070] = 0.0024143094f;
      sa[1071] = 0.14990805f;
      sa[1072] = -0.25148547f;
      sa[1073] = -0.057840496f;
      sa[1074] = 0.096599095f;
      sa[1075] = -0.36172155f;
      sa[1076] = -0.19822636f;
      sa[1077] = 0.037533406f;
      sa[1078] = 0.08266142f;
      sa[1079] = 0.023324495f;
      sa[1080] = 0.11184922f;
      sa[1081] = 0.13308933f;
      sa[1082] = -0.355779f;
      sa[1083] = -0.12861964f;
      sa[1084] = 0.2778094f;
      sa[1085] = -0.060840923f;
      sa[1086] = -0.16898744f;
      sa[1087] = -0.19123536f;
      sa[1088] = -0.30957833f;
      sa[1089] = -0.13826908f;
      sa[1090] = -0.24465905f;
      sa[1091] = 0.10974471f;
      sa[1092] = -0.22342134f;
      sa[1093] = -0.116039805f;
      sa[1094] = 0.10447486f;
      sa[1095] = -0.2133131f;
      sa[1096] = 0.02832432f;
      sa[1097] = -0.12919633f;
      sa[1098] = 0.09689428f;
      sa[1099] = 0.07350107f;
      sa[1100] = -0.16370434f;
      sa[1101] = 0.09144768f;
      sa[1102] = -0.203135f;
      sa[1103] = 0.22307885f;
      sa[1104] = -0.35470554f;
      sa[1105] = -0.14430028f;
      sa[1106] = -0.041761093f;
      sa[1107] = 0.13876744f;
      sa[1108] = -0.16389453f;
      sa[1109] = 0.28835204f;
      sa[1110] = 0.26295215f;
      sa[1111] = -0.19280314f;
      sa[1112] = 0.16441233f;
      sa[1113] = 0.20007525f;
      sa[1114] = 0.16418238f;
      sa[1115] = 0.12886378f;
      sa[1116] = -0.019531192f;
      sa[1117] = -0.06780647f;
      sa[1118] = -0.07353133f;
      sa[1119] = -0.054313205f;
      sa[1120] = 0.20164165f;
      sa[1121] = 0.121606715f;
      sa[1122] = 0.3412589f;
      sa[1123] = 0.37792423f;
      sa[1124] = 0.047136143f;
      sa[1125] = -0.007062549f;
      sa[1126] = 0.20792465f;
      sa[1127] = 0.19689944f;
      sa[1128] = 0.05279224f;
      sa[1129] = -0.061135277f;
      sa[1130] = 0.28504816f;
      sa[1131] = 0.33862823f;
      sa[1132] = -0.1359299f;
      sa[1133] = -0.07045402f;
      sa[1134] = 0.13352206f;
      sa[1135] = -0.42922768f;
      sa[1136] = 0.003399911f;
      sa[1137] = 0.20449492f;
      sa[1138] = 0.027232915f;
      sa[1139] = 0.08432664f;
      sa[1140] = 0.17893252f;
      sa[1141] = -0.28837773f;
      sa[1142] = -0.08515733f;
      sa[1143] = -0.019728074f;
      sa[1144] = -0.28396642f;
      sa[1145] = 0.055709105f;
      sa[1146] = 0.19442955f;
      sa[1147] = -0.113647856f;
      sa[1148] = -0.07599799f;
      sa[1149] = -0.100761406f;
      sa[1150] = -0.23408656f;
      sa[1151] = -0.17004979f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_11_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_11_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.1897895f;
      sa[1] = -0.016267104f;
      sa[2] = -0.61565787f;
      sa[3] = -0.9513702f;
      sa[4] = 0.0974223f;
      sa[5] = 0.3319411f;
      sa[6] = 1.2929325f;
      sa[7] = -0.66416085f;
      sa[8] = -0.9499403f;
      sa[9] = 0.7078027f;
      sa[10] = -0.09269765f;
      sa[11] = 0.4643973f;
      sa[12] = 0.15194228f;
      sa[13] = -0.054226276f;
      sa[14] = -1.2754978f;
      sa[15] = 1.1575344f;
      sa[16] = 1.5770696f;
      sa[17] = -0.41504616f;
      sa[18] = 0.029366495f;
      sa[19] = -0.47316536f;
      sa[20] = 1.0747609f;
      sa[21] = 0.023677306f;
      sa[22] = -0.9422004f;
      sa[23] = 0.7742196f;
      sa[24] = -1.3751421f;
      sa[25] = 0.5131923f;
      sa[26] = -0.3197365f;
      sa[27] = 1.5087068f;
      sa[28] = -1.3337685f;
      sa[29] = -0.47518566f;
      sa[30] = 0.45281956f;
      sa[31] = -0.630083f;
      sa[32] = -1.1508679f;
      sa[33] = -1.5292084f;
      sa[34] = 0.10001387f;
      sa[35] = 1.3457774f;
      sa[36] = -0.29812872f;
      sa[37] = -0.026527898f;
      sa[38] = 0.18727838f;
      sa[39] = 0.7360318f;
      sa[40] = -0.71967846f;
      sa[41] = -1.3542764f;
      sa[42] = -1.1094075f;
      sa[43] = -1.5899924f;
      sa[44] = 0.054257117f;
      sa[45] = -1.393203f;
      sa[46] = 1.2177871f;
      sa[47] = 1.196624f;
      sa[48] = -1.3541906f;
      sa[49] = -1.2643247f;
      sa[50] = 0.42688859f;
      sa[51] = -0.20662446f;
      sa[52] = 0.852044f;
      sa[53] = 0.85883015f;
      sa[54] = -0.27831972f;
      sa[55] = 1.1446619f;
      sa[56] = -1.003328f;
      sa[57] = -1.1157368f;
      sa[58] = 0.0017457331f;
      sa[59] = -0.16958952f;
      sa[60] = 1.389795f;
      sa[61] = -0.6376596f;
      sa[62] = -0.38421836f;
      sa[63] = 0.7014238f;
      sa[64] = 1.3590012f;
      sa[65] = -0.7256876f;
      sa[66] = 0.5103154f;
      sa[67] = 1.5497285f;
      sa[68] = 0.6413809f;
      sa[69] = -1.1596934f;
      sa[70] = -1.477292f;
      sa[71] = -0.5335543f;
      sa[72] = -1.4059813f;
      sa[73] = 1.2311602f;
      sa[74] = 1.3724706f;
      sa[75] = -0.23144062f;
      sa[76] = 0.7817734f;
      sa[77] = 0.32102636f;
      sa[78] = -1.747638f;
      sa[79] = 0.95566857f;
      sa[80] = -0.8122519f;
      sa[81] = 0.172078f;
      sa[82] = 0.85239327f;
      sa[83] = -0.76890296f;
      sa[84] = -1.603971f;
      sa[85] = -1.2896357f;
      sa[86] = 0.32007894f;
      sa[87] = 1.1733435f;
      sa[88] = -1.6871227f;
      sa[89] = -0.677382f;
      sa[90] = -1.1223631f;
      sa[91] = 1.4492793f;
      sa[92] = -0.33567864f;
      sa[93] = 0.24168187f;
      sa[94] = -1.5226661f;
      sa[95] = -0.21296819f;
      sa[96] = -1.0564053f;
      sa[97] = 0.19013433f;
      sa[98] = -0.13863009f;
      sa[99] = 0.37341934f;
      sa[100] = -1.2978036f;
      sa[101] = -0.4886509f;
      sa[102] = 1.164582f;
      sa[103] = 0.22223799f;
      sa[104] = -0.16908747f;
      sa[105] = -0.7720792f;
      sa[106] = 1.4563894f;
      sa[107] = 1.201785f;
      sa[108] = 0.7672236f;
      sa[109] = 0.15808211f;
      sa[110] = 0.71783346f;
      sa[111] = -0.97191995f;
      sa[112] = -1.1260809f;
      sa[113] = 0.26893246f;
      sa[114] = 0.024295032f;
      sa[115] = -0.48710638f;
      sa[116] = 1.1635268f;
      sa[117] = 0.03860334f;
      sa[118] = -1.5024006f;
      sa[119] = -0.8084138f;
      sa[120] = -0.34691858f;
      sa[121] = 0.98485374f;
      sa[122] = -0.03742082f;
      sa[123] = 0.10984096f;
      sa[124] = -0.72441286f;
      sa[125] = 0.7904558f;
      sa[126] = -1.0657228f;
      sa[127] = 0.35494345f;
      sa[128] = -0.9516742f;
      sa[129] = 0.764696f;
      sa[130] = -0.41242883f;
      sa[131] = 0.8162062f;
      sa[132] = 0.38173574f;
      sa[133] = 0.5542847f;
      sa[134] = 0.44713593f;
      sa[135] = -1.1487491f;
      sa[136] = 0.55679625f;
      sa[137] = -0.59633076f;
      sa[138] = -0.19518907f;
      sa[139] = 1.196506f;
      sa[140] = -0.4752495f;
      sa[141] = -0.13748276f;
      sa[142] = 0.27592003f;
      sa[143] = -0.7781084f;
      sa[144] = 0.9982981f;
      sa[145] = -0.73285985f;
      sa[146] = 0.15815352f;
      sa[147] = -0.284223f;
      sa[148] = -0.991174f;
      sa[149] = 1.1015487f;
      sa[150] = -1.0681039f;
      sa[151] = -1.6203231f;
      sa[152] = 1.6212511f;
      sa[153] = -0.55034584f;
      sa[154] = 1.3734716f;
      sa[155] = -1.4950348f;
      sa[156] = -1.4923106f;
      sa[157] = -1.0935569f;
      sa[158] = -0.19278367f;
      sa[159] = -0.66146296f;
      sa[160] = 1.3591884f;
      sa[161] = -1.1742388f;
      sa[162] = 1.6187569f;
      sa[163] = -0.75098705f;
      sa[164] = 0.80160606f;
      sa[165] = -0.501911f;
      sa[166] = 1.1420677f;
      sa[167] = -1.5155046f;
      sa[168] = 1.0101525f;
      sa[169] = -1.6310045f;
      sa[170] = 0.87452066f;
      sa[171] = 0.86613584f;
      sa[172] = 1.4830567f;
      sa[173] = 1.5911399f;
      sa[174] = -0.10617815f;
      sa[175] = 0.0017942965f;
      sa[176] = -0.8385051f;
      sa[177] = 0.028041735f;
      sa[178] = -1.355392f;
      sa[179] = -0.11209535f;
      sa[180] = -1.3627236f;
      sa[181] = -0.99099195f;
      sa[182] = 0.22436339f;
      sa[183] = -0.9480248f;
      sa[184] = 1.4672754f;
      sa[185] = 1.2385552f;
      sa[186] = -0.49895868f;
      sa[187] = -0.89055014f;
      sa[188] = -0.55737716f;
      sa[189] = -0.7648088f;
      sa[190] = -1.4328172f;
      sa[191] = -0.99670684f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_11_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_11_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_11_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


