/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:06:36.338+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_01

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_01 > h2o_rf_01.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_01.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_01", algorithm="drf")
public class h2o_rf_01 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_01.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_rf_01_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};

  public h2o_rf_01() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-9203977040148079000L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_01_Forest_0.score0(data,preds);
    h2o_rf_01_Forest_1.score0(data,preds);
    h2o_rf_01_Forest_2.score0(data,preds);
    h2o_rf_01_Forest_3.score0(data,preds);
    h2o_rf_01_Forest_4.score0(data,preds);
    h2o_rf_01_Forest_5.score0(data,preds);
    h2o_rf_01_Forest_6.score0(data,preds);
    h2o_rf_01_Forest_7.score0(data,preds);
    h2o_rf_01_Forest_8.score0(data,preds);
    h2o_rf_01_Forest_9.score0(data,preds);
    h2o_rf_01_Forest_10.score0(data,preds);
    h2o_rf_01_Forest_11.score0(data,preds);
    h2o_rf_01_Forest_12.score0(data,preds);
    h2o_rf_01_Forest_13.score0(data,preds);
    h2o_rf_01_Forest_14.score0(data,preds);
    h2o_rf_01_Forest_15.score0(data,preds);
    h2o_rf_01_Forest_16.score0(data,preds);
    h2o_rf_01_Forest_17.score0(data,preds);
    h2o_rf_01_Forest_18.score0(data,preds);
    h2o_rf_01_Forest_19.score0(data,preds);
    h2o_rf_01_Forest_20.score0(data,preds);
    h2o_rf_01_Forest_21.score0(data,preds);
    h2o_rf_01_Forest_22.score0(data,preds);
    h2o_rf_01_Forest_23.score0(data,preds);
    h2o_rf_01_Forest_24.score0(data,preds);
    h2o_rf_01_Forest_25.score0(data,preds);
    h2o_rf_01_Forest_26.score0(data,preds);
    h2o_rf_01_Forest_27.score0(data,preds);
    h2o_rf_01_Forest_28.score0(data,preds);
    h2o_rf_01_Forest_29.score0(data,preds);
    h2o_rf_01_Forest_30.score0(data,preds);
    h2o_rf_01_Forest_31.score0(data,preds);
    h2o_rf_01_Forest_32.score0(data,preds);
    h2o_rf_01_Forest_33.score0(data,preds);
    h2o_rf_01_Forest_34.score0(data,preds);
    h2o_rf_01_Forest_35.score0(data,preds);
    h2o_rf_01_Forest_36.score0(data,preds);
    h2o_rf_01_Forest_37.score0(data,preds);
    h2o_rf_01_Forest_38.score0(data,preds);
    h2o_rf_01_Forest_39.score0(data,preds);
    h2o_rf_01_Forest_40.score0(data,preds);
    h2o_rf_01_Forest_41.score0(data,preds);
    h2o_rf_01_Forest_42.score0(data,preds);
    h2o_rf_01_Forest_43.score0(data,preds);
    h2o_rf_01_Forest_44.score0(data,preds);
    h2o_rf_01_Forest_45.score0(data,preds);
    h2o_rf_01_Forest_46.score0(data,preds);
    h2o_rf_01_Forest_47.score0(data,preds);
    h2o_rf_01_Forest_48.score0(data,preds);
    h2o_rf_01_Forest_49.score0(data,preds);
    h2o_rf_01_Forest_50.score0(data,preds);
    h2o_rf_01_Forest_51.score0(data,preds);
    h2o_rf_01_Forest_52.score0(data,preds);
    h2o_rf_01_Forest_53.score0(data,preds);
    h2o_rf_01_Forest_54.score0(data,preds);
    h2o_rf_01_Forest_55.score0(data,preds);
    h2o_rf_01_Forest_56.score0(data,preds);
    h2o_rf_01_Forest_57.score0(data,preds);
    h2o_rf_01_Forest_58.score0(data,preds);
    h2o_rf_01_Forest_59.score0(data,preds);
    h2o_rf_01_Forest_60.score0(data,preds);
    h2o_rf_01_Forest_61.score0(data,preds);
    h2o_rf_01_Forest_62.score0(data,preds);
    h2o_rf_01_Forest_63.score0(data,preds);
    h2o_rf_01_Forest_64.score0(data,preds);
    h2o_rf_01_Forest_65.score0(data,preds);
    h2o_rf_01_Forest_66.score0(data,preds);
    h2o_rf_01_Forest_67.score0(data,preds);
    h2o_rf_01_Forest_68.score0(data,preds);
    h2o_rf_01_Forest_69.score0(data,preds);
    h2o_rf_01_Forest_70.score0(data,preds);
    h2o_rf_01_Forest_71.score0(data,preds);
    h2o_rf_01_Forest_72.score0(data,preds);
    h2o_rf_01_Forest_73.score0(data,preds);
    h2o_rf_01_Forest_74.score0(data,preds);
    h2o_rf_01_Forest_75.score0(data,preds);
    h2o_rf_01_Forest_76.score0(data,preds);
    h2o_rf_01_Forest_77.score0(data,preds);
    h2o_rf_01_Forest_78.score0(data,preds);
    h2o_rf_01_Forest_79.score0(data,preds);
    h2o_rf_01_Forest_80.score0(data,preds);
    h2o_rf_01_Forest_81.score0(data,preds);
    h2o_rf_01_Forest_82.score0(data,preds);
    h2o_rf_01_Forest_83.score0(data,preds);
    h2o_rf_01_Forest_84.score0(data,preds);
    h2o_rf_01_Forest_85.score0(data,preds);
    h2o_rf_01_Forest_86.score0(data,preds);
    h2o_rf_01_Forest_87.score0(data,preds);
    h2o_rf_01_Forest_88.score0(data,preds);
    h2o_rf_01_Forest_89.score0(data,preds);
    h2o_rf_01_Forest_90.score0(data,preds);
    h2o_rf_01_Forest_91.score0(data,preds);
    h2o_rf_01_Forest_92.score0(data,preds);
    h2o_rf_01_Forest_93.score0(data,preds);
    h2o_rf_01_Forest_94.score0(data,preds);
    h2o_rf_01_Forest_95.score0(data,preds);
    h2o_rf_01_Forest_96.score0(data,preds);
    h2o_rf_01_Forest_97.score0(data,preds);
    h2o_rf_01_Forest_98.score0(data,preds);
    h2o_rf_01_Forest_99.score0(data,preds);
    h2o_rf_01_Forest_100.score0(data,preds);
    h2o_rf_01_Forest_101.score0(data,preds);
    h2o_rf_01_Forest_102.score0(data,preds);
    h2o_rf_01_Forest_103.score0(data,preds);
    h2o_rf_01_Forest_104.score0(data,preds);
    h2o_rf_01_Forest_105.score0(data,preds);
    h2o_rf_01_Forest_106.score0(data,preds);
    h2o_rf_01_Forest_107.score0(data,preds);
    h2o_rf_01_Forest_108.score0(data,preds);
    h2o_rf_01_Forest_109.score0(data,preds);
    h2o_rf_01_Forest_110.score0(data,preds);
    h2o_rf_01_Forest_111.score0(data,preds);
    h2o_rf_01_Forest_112.score0(data,preds);
    h2o_rf_01_Forest_113.score0(data,preds);
    h2o_rf_01_Forest_114.score0(data,preds);
    h2o_rf_01_Forest_115.score0(data,preds);
    h2o_rf_01_Forest_116.score0(data,preds);
    h2o_rf_01_Forest_117.score0(data,preds);
    h2o_rf_01_Forest_118.score0(data,preds);
    h2o_rf_01_Forest_119.score0(data,preds);
    h2o_rf_01_Forest_120.score0(data,preds);
    h2o_rf_01_Forest_121.score0(data,preds);
    h2o_rf_01_Forest_122.score0(data,preds);
    h2o_rf_01_Forest_123.score0(data,preds);
    h2o_rf_01_Forest_124.score0(data,preds);
    h2o_rf_01_Forest_125.score0(data,preds);
    h2o_rf_01_Forest_126.score0(data,preds);
    h2o_rf_01_Forest_127.score0(data,preds);
    h2o_rf_01_Forest_128.score0(data,preds);
    h2o_rf_01_Forest_129.score0(data,preds);
    h2o_rf_01_Forest_130.score0(data,preds);
    h2o_rf_01_Forest_131.score0(data,preds);
    h2o_rf_01_Forest_132.score0(data,preds);
    h2o_rf_01_Forest_133.score0(data,preds);
    h2o_rf_01_Forest_134.score0(data,preds);
    h2o_rf_01_Forest_135.score0(data,preds);
    h2o_rf_01_Forest_136.score0(data,preds);
    h2o_rf_01_Forest_137.score0(data,preds);
    h2o_rf_01_Forest_138.score0(data,preds);
    h2o_rf_01_Forest_139.score0(data,preds);
    h2o_rf_01_Forest_140.score0(data,preds);
    h2o_rf_01_Forest_141.score0(data,preds);
    h2o_rf_01_Forest_142.score0(data,preds);
    h2o_rf_01_Forest_143.score0(data,preds);
    h2o_rf_01_Forest_144.score0(data,preds);
    h2o_rf_01_Forest_145.score0(data,preds);
    h2o_rf_01_Forest_146.score0(data,preds);
    h2o_rf_01_Forest_147.score0(data,preds);
    h2o_rf_01_Forest_148.score0(data,preds);
    h2o_rf_01_Forest_149.score0(data,preds);
    h2o_rf_01_Forest_150.score0(data,preds);
    h2o_rf_01_Forest_151.score0(data,preds);
    h2o_rf_01_Forest_152.score0(data,preds);
    h2o_rf_01_Forest_153.score0(data,preds);
    h2o_rf_01_Forest_154.score0(data,preds);
    h2o_rf_01_Forest_155.score0(data,preds);
    h2o_rf_01_Forest_156.score0(data,preds);
    h2o_rf_01_Forest_157.score0(data,preds);
    h2o_rf_01_Forest_158.score0(data,preds);
    h2o_rf_01_Forest_159.score0(data,preds);
    h2o_rf_01_Forest_160.score0(data,preds);
    h2o_rf_01_Forest_161.score0(data,preds);
    h2o_rf_01_Forest_162.score0(data,preds);
    h2o_rf_01_Forest_163.score0(data,preds);
    h2o_rf_01_Forest_164.score0(data,preds);
    h2o_rf_01_Forest_165.score0(data,preds);
    h2o_rf_01_Forest_166.score0(data,preds);
    h2o_rf_01_Forest_167.score0(data,preds);
    h2o_rf_01_Forest_168.score0(data,preds);
    h2o_rf_01_Forest_169.score0(data,preds);
    h2o_rf_01_Forest_170.score0(data,preds);
    h2o_rf_01_Forest_171.score0(data,preds);
    h2o_rf_01_Forest_172.score0(data,preds);
    h2o_rf_01_Forest_173.score0(data,preds);
    h2o_rf_01_Forest_174.score0(data,preds);
    h2o_rf_01_Forest_175.score0(data,preds);
    h2o_rf_01_Forest_176.score0(data,preds);
    h2o_rf_01_Forest_177.score0(data,preds);
    h2o_rf_01_Forest_178.score0(data,preds);
    h2o_rf_01_Forest_179.score0(data,preds);
    h2o_rf_01_Forest_180.score0(data,preds);
    h2o_rf_01_Forest_181.score0(data,preds);
    h2o_rf_01_Forest_182.score0(data,preds);
    h2o_rf_01_Forest_183.score0(data,preds);
    h2o_rf_01_Forest_184.score0(data,preds);
    h2o_rf_01_Forest_185.score0(data,preds);
    h2o_rf_01_Forest_186.score0(data,preds);
    h2o_rf_01_Forest_187.score0(data,preds);
    h2o_rf_01_Forest_188.score0(data,preds);
    h2o_rf_01_Forest_189.score0(data,preds);
    h2o_rf_01_Forest_190.score0(data,preds);
    h2o_rf_01_Forest_191.score0(data,preds);
    h2o_rf_01_Forest_192.score0(data,preds);
    h2o_rf_01_Forest_193.score0(data,preds);
    h2o_rf_01_Forest_194.score0(data,preds);
    h2o_rf_01_Forest_195.score0(data,preds);
    h2o_rf_01_Forest_196.score0(data,preds);
    h2o_rf_01_Forest_197.score0(data,preds);
    h2o_rf_01_Forest_198.score0(data,preds);
    h2o_rf_01_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_01 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_rf_01_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_01_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_rf_01_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_rf_01_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_rf_01_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}

class h2o_rf_01_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_0_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[19 /* X20 */] <-0.18315862f ? 
             (data[35 /* X36 */] <-0.2003125f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.16878353f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.36689612f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.56221473f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3095225f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18012384f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.6324412f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.22290589f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.47947538f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[19 /* X20 */] <-0.41776034f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.50592685f ? 
             (data[35 /* X36 */] <-0.1571875f ? 
                 (data[14 /* X15 */] <0.19207314f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[13 /* X14 */] <0.21593507f ? 
            0.0f : 
             (data[35 /* X36 */] <0.08f ? 
                0.0f : 
                1.0f)) : 
         (data[15 /* X16 */] <0.07313348f ? 
            1.0f : 
             (data[30 /* X31 */] <0.12987256f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.052743785f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.31214595f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.146827f ? 
                         (data[25 /* X26 */] <0.06851869f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.32492676f ? 
         (data[5 /* X6 */] <0.13666491f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.59449446f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21194856f ? 
                     (data[1 /* X2 */] <-0.1278713f ? 
                         (data[8 /* X9 */] <0.23482266f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.24983963f ? 
             (data[30 /* X31 */] <0.2623269f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.18603106f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10760972f ? 
                     (data[2 /* X3 */] <-0.05650114f ? 
                         (data[14 /* X15 */] <0.20777933f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.75936025f ? 
            0.0f : 
             (data[29 /* X30 */] <0.20696203f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.03772469f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_1_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17897986f ? 
         (data[16 /* X17 */] <-0.5023943f ? 
             (data[8 /* X9 */] <0.3639593f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.5577318f ? 
                 (data[3 /* X4 */] <0.38472706f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.15171504f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.29369235f ? 
                 (data[23 /* X24 */] <0.042574264f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.014029066f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (data[16 /* X17 */] <-0.2632507f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.45312554f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2917098f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.11073432f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.14597256f ? 
                         (data[5 /* X6 */] <0.3113532f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
        0.037037037f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.12399891f ? 
            1.0f : 
            0.0f) : 
         (data[25 /* X26 */] <-0.5776245f ? 
             (data[22 /* X23 */] <0.18111381f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26784378f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.27198496f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19598801f ? 
             (data[11 /* X12 */] <-0.99734676f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9431405f ? 
                     (data[10 /* X11 */] <-0.35282966f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.40625125f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22285728f ? 
                                1.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28707495f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.17983133f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.42109376f ? 
                     (data[4 /* X5 */] <0.2161231f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28229567f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.38007814f ? 
            0.0f : 
             (data[26 /* X27 */] <0.09772899f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0656607f ? 
                    0.0f : 
                    1.0f))) : 
         (data[25 /* X26 */] <0.3225608f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_2_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.12412978f ? 
             (data[17 /* X18 */] <-0.22678438f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[15 /* X16 */] <0.10782814f ? 
             (data[15 /* X16 */] <0.081900336f ? 
                0.0f : 
                1.0f) : 
             (data[35 /* X36 */] <-0.0421875f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0714275f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.12670839f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (data[19 /* X20 */] <-0.540345f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X7 */] <0.24399474f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.104894094f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16111171f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14872088f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.21231294f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (data[10 /* X11 */] <-0.1395031f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.7486328f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.5937813f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.5653937f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3795478f ? 
                     (data[26 /* X27 */] <0.07026404f ? 
                         (data[7 /* X8 */] <0.124416515f ? 
                             (data[9 /* X10 */] <0.048690338f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24058414f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.32954946f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.79540527f ? 
             (data[24 /* X25 */] <-0.23204073f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.52381f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.1783077f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.35677472f ? 
                     (data[24 /* X25 */] <0.20132305f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7083102f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (data[6 /* X7 */] <0.17145124f ? 
             (data[10 /* X11 */] <-0.21814448f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22451515f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29102215f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[10 /* X11 */] <-0.08271834f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6434117f ? 
                 (data[20 /* X21 */] <0.28880894f ? 
                     (data[5 /* X6 */] <0.19088326f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.38342804f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44731474f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_3_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.074842684f ? 
         (data[15 /* X16 */] <0.11625399f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.120625f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.11890625f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4015625f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.12848549f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.11786186f ? 
                    1.0f : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.10919601f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.8911908f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.65163815f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.094453834f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.23811346f ? 
        0.0f : 
         (data[34 /* X35 */] <-0.2860878f ? 
             (data[8 /* X9 */] <-0.17504586f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24652024f ? 
                     (data[31 /* X32 */] <0.08377034f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38333648f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.38790533f ? 
             (data[2 /* X3 */] <-0.1170072f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07536865f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.4494645f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23441513f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X9 */] <-0.11609217f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5419403f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4525639f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2445081f ? 
                 (data[16 /* X17 */] <-0.22792268f ? 
                     (data[7 /* X8 */] <0.08417526f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28521553f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.599619f ? 
                         (data[25 /* X26 */] <0.0068217907f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19456477f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18745348f ? 
                         (data[1 /* X2 */] <-0.32961687f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28425938f ? 
                1.0f : 
                 (data[24 /* X25 */] <0.24742557f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_01_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22287367f ? 
         (data[3 /* X4 */] <-0.6163028f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3414237f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.619375f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.04457444f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24637938f ? 
             (data[12 /* X13 */] <0.22241773f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22478206f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.525625f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_01_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_4_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[35 /* X36 */] <-0.18054688f ? 
             (data[13 /* X14 */] <0.28065503f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.2035259f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2837796f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.445857f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5234375f ? 
                 (data[15 /* X16 */] <0.10138485f ? 
                     (data[24 /* X25 */] <0.026133426f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29544818f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.30924407f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.17672181f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19130446f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.19196227f ? 
                 (data[2 /* X3 */] <-0.6606587f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.635f ? 
                         (data[24 /* X25 */] <-0.04763062f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.44658968f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.38790533f ? 
             (data[30 /* X31 */] <0.12987256f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[13 /* X14 */] <0.17101015f ? 
            1.0f : 
             (data[18 /* X19 */] <-0.08554746f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.19795859f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.8677085f ? 
                        1.0f : 
                         (data[17 /* X18 */] <-0.30853418f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.52235144f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.48070312f ? 
            0.0f : 
             (data[24 /* X25 */] <0.039964184f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X7 */] <0.13980237f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_5_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09976563f ? 
         (data[22 /* X23 */] <0.18688497f ? 
             (data[22 /* X23 */] <0.13894035f ? 
                 (data[18 /* X19 */] <0.18704024f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3839272f ? 
                     (data[15 /* X16 */] <0.10534995f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[1 /* X2 */] <-0.26657137f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.6183044f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.146827f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[7 /* X8 */] <0.15565038f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.019855838f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3318439f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.102158815f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.8531473f ? 
                    1.0f : 
                    0.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
         (data[7 /* X8 */] <0.111906044f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3789362f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36999634f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3430793f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4515625f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[15 /* X16 */] <0.1648265f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.21396956f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (data[2 /* X3 */] <-0.29498833f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19971226f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.17566328f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.4165383f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <-0.026441677f ? 
                 (data[24 /* X25 */] <-0.22282024f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.7714844f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31817347f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.58293015f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
            0.0f : 
             (data[1 /* X2 */] <0.30504102f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <0.026257869f ? 
            0.0f : 
             (data[23 /* X24 */] <0.18987864f ? 
                 (data[20 /* X21 */] <0.17541671f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_6_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
        0.021276595f : 
         (data[1 /* X2 */] <-0.24765773f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15773496f ? 
                 (data[9 /* X10 */] <-0.09157793f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
                 (data[15 /* X16 */] <0.10931505f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.10214416f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (data[2 /* X3 */] <-0.43575525f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18869205f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.23866066f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.32681125f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (data[16 /* X17 */] <-0.6382714f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2074226f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.24232958f ? 
                    1.0f : 
                    0.0f))) : 
         (data[25 /* X26 */] <-0.45776287f ? 
            1.0f : 
             (data[30 /* X31 */] <0.13335821f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.3228038f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4848536f ? 
             (data[25 /* X26 */] <-0.5409322f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20292036f ? 
                     (data[8 /* X9 */] <-0.41647527f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23786782f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.13310568f ? 
                            1.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32902196f ? 
                                0.0f : 
                                1.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.4753662f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29583323f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20402059f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.19170244f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5167096f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3330788f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12893039f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_7_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2097892f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.20218039f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10480961f ? 
                 (data[9 /* X10 */] <-0.8633906f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29924265f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32739574f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4015625f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.20351313f ? 
         (data[21 /* X22 */] <0.12211833f ? 
             (data[9 /* X10 */] <-0.69923973f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.18752621f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24912995f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.289193f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.07850702f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.0796875f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[33 /* X34 */] <-0.3234375f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[19 /* X20 */] <-0.52132326f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.38984612f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (data[16 /* X17 */] <-0.28770858f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.51341206f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39592904f ? 
                 (data[15 /* X16 */] <0.12914057f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.30419463f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.146875f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.14110105f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21440691f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18187167f ? 
            0.0f : 
             (data[14 /* X15 */] <0.28945154f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.4170659f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32158786f ? 
             (data[10 /* X11 */] <-0.16252397f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.09106341f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07070313f ? 
                         (data[3 /* X4 */] <-0.6995278f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5292285f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[11 /* X12 */] <-0.16637918f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.42431346f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23232605f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18422005f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_8_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[31 /* X32 */] <0.086813666f ? 
            1.0f : 
            0.0f) : 
         (data[1 /* X2 */] <-0.25396228f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21426392f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.48793817f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6734375f ? 
                     (data[28 /* X29 */] <0.16309151f ? 
                         (data[1 /* X2 */] <0.39672735f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.67387694f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15855013f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.046836007f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5899485f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6305136f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2336543f ? 
             (data[9 /* X10 */] <-0.18039903f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.23219521f ? 
                     (data[30 /* X31 */] <0.14016834f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[7 /* X8 */] <0.08222238f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.24967802f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.25024167f ? 
                     (data[9 /* X10 */] <-0.36067417f ? 
                        1.0f : 
                         (data[30 /* X31 */] <0.26298228f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.16336644f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36840442f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.50027585f ? 
             (data[28 /* X29 */] <0.23189427f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4451485f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06143351f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_9_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.017857822f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.118304454f ? 
             (data[31 /* X32 */] <0.118768625f ? 
                1.0f : 
                0.0f) : 
             (data[26 /* X27 */] <0.036695775f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.50258356f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2779002f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28675342f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27438447f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32086393f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.065736376f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.19797555f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.35507268f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.116484694f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.5106825f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37158823f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.37828124f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.3843782f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (data[15 /* X16 */] <0.17771308f ? 
             (data[6 /* X7 */] <0.23368219f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.18373226f ? 
             (data[29 /* X30 */] <0.31329578f ? 
                 (data[21 /* X22 */] <0.2645603f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.470235f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1525331f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.40417418f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (data[32 /* X33 */] <-0.9274554f ? 
             (data[13 /* X14 */] <0.1973998f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.47890624f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.17419143f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_10_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[23 /* X24 */] <0.06205833f ? 
             (data[4 /* X5 */] <0.15836112f ? 
                0.0f : 
                1.0f) : 
             (data[35 /* X36 */] <-0.2578125f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38943732f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[28 /* X29 */] <0.167105f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09528722f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20612215f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.41809472f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.18041435f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[23 /* X24 */] <0.09714626f ? 
             (data[34 /* X35 */] <-0.33556688f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <7.4304687E-4f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.04046875f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.19578515f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.00836841f ? 
         (data[5 /* X6 */] <0.16734818f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3824411f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25434187f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.58293515f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4825f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.36424538f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.54956746f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X8 */] <0.16541474f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20036186f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20594497f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36999634f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.18968324f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.50204295f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.081831805f ? 
             (data[12 /* X13 */] <0.20526655f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24637938f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19119266f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.47890624f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_11_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.016600981f ? 
             (data[14 /* X15 */] <0.25882447f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23008004f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.43943104f ? 
             (data[29 /* X30 */] <0.10160384f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.49194753f ? 
                     (data[31 /* X32 */] <0.071597025f ? 
                         (data[17 /* X18 */] <-0.17335965f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.49814093f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.28927967f ? 
         (data[23 /* X24 */] <0.10403853f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.327562f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.19419813f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[8 /* X9 */] <-0.2873386f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1906639f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24005307f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X6 */] <0.12335651f ? 
            1.0f : 
             (data[28 /* X29 */] <0.0988756f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6272776f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                         (data[18 /* X19 */] <-0.5984813f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.40952f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <0.118695475f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[6 /* X7 */] <0.18023978f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.28851634f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.06487021f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18839742f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X6 */] <0.216885f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4525639f ? 
                 (data[7 /* X8 */] <0.07167687f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.15900506f ? 
                         (data[34 /* X35 */] <0.1556493f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2387257f ? 
                            0.0f : 
                             (data[2 /* X3 */] <0.1817184f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.55078304f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20018767f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27871302f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[10 /* X11 */] <0.049267877f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.49387816f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_12_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.52116305f ? 
         (data[25 /* X26 */] <-0.15443957f ? 
            0.0f : 
            1.0f) : 
         (data[31 /* X32 */] <0.18572186f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18622716f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.51785564f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17474702f ? 
                     (data[25 /* X26 */] <-0.14954725f ? 
                         (data[7 /* X8 */] <0.13132292f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30375928f ? 
                        0.0f : 
                        1.0f))) : 
             (data[19 /* X20 */] <-0.78974146f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.37543014f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19130446f ? 
             (data[31 /* X32 */] <0.09290033f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12471534f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20623547f ? 
                        0.0f : 
                        1.0f))) : 
             (data[6 /* X7 */] <0.15402658f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[25 /* X26 */] <-0.5751783f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17244509f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.59562945f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.38750735f ? 
                     (data[1 /* X2 */] <-0.3968654f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.47567225f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3296875f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[31 /* X32 */] <0.20398185f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22595198f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17869428f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2750871f ? 
             (data[5 /* X6 */] <0.16106366f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43526465f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2663701f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3285989f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.18113661f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16629219f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5476071f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12330307f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.22960085f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2750871f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.5545425f ? 
                 (data[33 /* X34 */] <-0.72578126f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.35968044f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[31 /* X32 */] <0.19637352f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_01_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_13_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11953125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2686568f ? 
             (data[28 /* X29 */] <0.111683026f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.33111542f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.021875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[25 /* X26 */] <-0.18134728f ? 
             (data[12 /* X13 */] <0.17871863f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.20943391f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16599587f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.020650977f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.1516168f ? 
                        1.0f : 
                        0.0f)))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[25 /* X26 */] <-0.5653937f ? 
             (data[27 /* X28 */] <-0.29737642f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X6 */] <0.12335651f ? 
                 (data[24 /* X25 */] <0.6715688f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4779382f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29573402f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16072784f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (data[24 /* X25 */] <-0.28736377f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17406018f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X6 */] <0.21503662f ? 
                 (data[17 /* X18 */] <-0.17335965f ? 
                     (data[23 /* X24 */] <0.102158815f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.36190096f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20274022f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2404373f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.01815774f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5277344f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.87374115f ? 
                        0.0f : 
                        1.0f))) : 
             (data[32 /* X33 */] <-0.3824411f ? 
                 (data[16 /* X17 */] <-0.21161743f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_01_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.50113016f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.24564338f ? 
            0.0f : 
             (data[27 /* X28 */] <0.97377056f ? 
                 (data[26 /* X27 */] <0.039747436f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_14_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09976563f ? 
         (data[33 /* X34 */] <-0.20019531f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.021578358f ? 
                 (data[23 /* X24 */] <0.059552047f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.16696043f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.7109383f ? 
                     (data[34 /* X35 */] <-0.9503175f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.1628969f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.26134828f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11469022f ? 
                 (data[9 /* X10 */] <-0.49258283f ? 
                     (data[31 /* X32 */] <0.11420363f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.1648265f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.58627915f ? 
            0.0f : 
             (data[21 /* X22 */] <0.19313663f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[25 /* X26 */] <-0.5653937f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4623271f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.008917773f ? 
                         (data[34 /* X35 */] <0.47730345f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
        0.75f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (data[34 /* X35 */] <-0.118212424f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45321447f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.19906852f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21194856f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.27360508f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.0020242406f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38641787f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.081175454f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.12442218f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.25801915f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[22 /* X23 */] <0.3013775f ? 
                            1.0f : 
                             (data[3 /* X4 */] <-0.99781007f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_01_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5818533f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2935281f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2283419f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_15_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[19 /* X20 */] <-0.14722863f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3591492f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0584375f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19180852f ? 
                 (data[30 /* X31 */] <0.14047667f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.41434f ? 
                         (data[11 /* X12 */] <-0.2315723f ? 
                            0.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6757136f ? 
                                1.0f : 
                                 (data[26 /* X27 */] <0.78947014f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (data[19 /* X20 */] <-0.90621156f ? 
            0.0f : 
             (data[30 /* X31 */] <0.19435692f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0038190503f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.6100464f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.06f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29489598f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.32846618f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X12 */] <-0.40748096f ? 
                     (data[21 /* X22 */] <0.19321787f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4028951f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.48254848f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.25829303f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35928202f ? 
                         (data[28 /* X29 */] <0.14015725f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23294531f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (data[3 /* X4 */] <-0.66009784f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23531319f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.8723493f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_16_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4150409f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.34072706f ? 
             (data[26 /* X27 */] <0.20148547f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.22348551f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.17371425f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.17970851f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[19 /* X20 */] <-0.5657074f ? 
             (data[6 /* X7 */] <0.18699242f ? 
                 (data[21 /* X22 */] <0.11034445f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.730577f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (data[10 /* X11 */] <-0.31906575f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29914623f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X6 */] <0.11448425f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.16793585f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.37989807f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2549208f ? 
             (data[10 /* X11 */] <-0.37665388f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.90604705f ? 
                     (data[24 /* X25 */] <0.13170813f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2954405f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.38658354f ? 
                            1.0f : 
                             (data[18 /* X19 */] <0.15888634f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[14 /* X15 */] <0.17636694f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23672718f ? 
            0.0f : 
             (data[21 /* X22 */] <0.27134928f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[24 /* X25 */] <0.27969733f ? 
            0.0f : 
             (data[10 /* X11 */] <0.035217836f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25288996f ? 
            0.0f : 
             (data[21 /* X22 */] <0.26113945f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_17_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
        0.021276595f : 
         (data[9 /* X10 */] <-0.27493355f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02537772f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.14434609f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4243248f ? 
                 (data[1 /* X2 */] <-0.24555622f ? 
                     (data[6 /* X7 */] <0.26665807f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.09001028f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (data[27 /* X28 */] <-0.20803878f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.63024014f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12471534f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.05486913f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.13339718f ? 
                 (data[9 /* X10 */] <0.1405787f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.55869f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4515625f ? 
                 (data[31 /* X32 */] <0.17202689f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0018481f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.53703463f ? 
                 (data[34 /* X35 */] <0.16480239f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.109172024f ? 
                         (data[6 /* X7 */] <0.22728129f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.5982147f ? 
                         (data[31 /* X32 */] <0.17090794f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2788361f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.16689017f ? 
            0.0f : 
             (data[9 /* X10 */] <0.101006106f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.42986876f ? 
                     (data[21 /* X22 */] <0.1441585f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_18_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[15 /* X16 */] <0.0850288f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.5376899f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.1740088f ? 
            0.0f : 
             (data[4 /* X5 */] <0.16271928f ? 
                 (data[35 /* X36 */] <-0.1571875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3996582f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27553543f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (data[7 /* X8 */] <0.08886215f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20587096f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.5213629f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18010229f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.14294371f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.5106825f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[7 /* X8 */] <0.09433019f ? 
             (data[4 /* X5 */] <0.14900918f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1733453f ? 
                 (data[25 /* X26 */] <-0.6137053f ? 
                     (data[35 /* X36 */] <0.094375f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.34276175f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.25342014f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4404053f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.945693f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_19_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.114767075f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25132954f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31262657f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31630975f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.08923877f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13632238f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25929067f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2120452f ? 
                 (data[0 /* X1 */] <-0.11831778f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.20351313f ? 
         (data[19 /* X20 */] <-0.53400445f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2676186f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.1740088f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.30858028f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.7848376f ? 
            1.0f : 
            0.0f) : 
         (data[31 /* X32 */] <0.14996275f ? 
             (data[25 /* X26 */] <-0.54582447f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21440691f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.06268748f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.104490384f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.07957678f ? 
                    0.0f : 
                    1.0f))) : 
         (data[4 /* X5 */] <0.15175976f ? 
            0.0f : 
             (data[4 /* X5 */] <0.19855206f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9839806f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.79540527f ? 
                     (data[27 /* X28 */] <-0.19017126f ? 
                         (data[4 /* X5 */] <0.21596062f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28229567f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27232313f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.10688397f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31928262f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[4 /* X5 */] <0.1611117f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_20_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.031916007f ? 
             (data[14 /* X15 */] <0.2062087f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19028686f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[7 /* X8 */] <0.09393962f ? 
             (data[5 /* X6 */] <0.20033938f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.10160384f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.086813666f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28570783f ? 
         (data[23 /* X24 */] <0.10090568f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.10327499f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.21396956f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6499242f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.15604095f ? 
             (data[26 /* X27 */] <0.042799097f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0033503126f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43237787f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.024643954f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[18 /* X19 */] <-0.026926449f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X8 */] <0.09589249f ? 
             (data[3 /* X4 */] <-0.1905224f ? 
                 (data[32 /* X33 */] <-0.4270839f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X12 */] <-1.0951077f ? 
                 (data[13 /* X14 */] <0.22786203f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.2155375f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.08885005f ? 
             (data[5 /* X6 */] <0.16011964f ? 
                 (data[31 /* X32 */] <0.15072358f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.22874409f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.6517559f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.27245674f ? 
                 (data[26 /* X27 */] <-0.11283561f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33739185f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21057187f ? 
            0.0f : 
             (data[23 /* X24 */] <0.21515754f ? 
                 (data[29 /* X30 */] <0.21476774f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[7 /* X8 */] <0.14862004f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_21_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[12 /* X13 */] <0.17871863f ? 
             (data[12 /* X13 */] <0.14957443f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15980327f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09714626f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14474109f ? 
                 (data[19 /* X20 */] <-0.3628086f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2920488f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (data[5 /* X6 */] <0.21503662f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24921875f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.288292f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.3601197f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.13632199f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.089627415f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15040472f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.840558f ? 
                 (data[23 /* X24 */] <0.037996568f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27000153f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25838318f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26784378f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.1659418f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.102167785f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4987106f ? 
                 (data[33 /* X34 */] <-0.77597654f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1933045f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21799403f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.29984376f ? 
                    1.0f : 
                     (data[34 /* X35 */] <0.25818187f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29522496f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.26570317f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.3449219f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5465494f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.54017663f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6585938f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27412513f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[30 /* X31 */] <0.21178512f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_22_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.017857822f ? 
         (data[14 /* X15 */] <0.20424543f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20868711f ? 
                 (data[16 /* X17 */] <-0.26596826f ? 
                     (data[14 /* X15 */] <0.22785722f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.09594366f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3886357f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21240774f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.8444944f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.25112304f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17379372f ? 
                 (data[31 /* X32 */] <0.09290033f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.3230366f ? 
                0.0f : 
                1.0f)) : 
         (data[20 /* X21 */] <0.1216584f ? 
             (data[10 /* X11 */] <-0.2883713f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
         (data[1 /* X2 */] <-0.2035259f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39592904f ? 
             (data[24 /* X25 */] <-0.5224867f ? 
                 (data[11 /* X12 */] <-0.28369224f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.31017077f ? 
                     (data[7 /* X8 */] <0.09979823f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21671744f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.12727483f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13690563f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.393947f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.19581021f ? 
         (data[12 /* X13 */] <0.22707377f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.15827669f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.089857f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15998414f ? 
                 (data[0 /* X1 */] <-0.058399078f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.929743f ? 
                        1.0f : 
                        0.0f) : 
                     (data[24 /* X25 */] <-0.72994804f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16543593f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.42490235f ? 
                 (data[12 /* X13 */] <0.23371075f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.41647807f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.7127352f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4344687f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.21042518f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <0.28841016f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_23_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[31 /* X32 */] <0.105073646f ? 
             (data[30 /* X31 */] <0.12909055f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09714626f ? 
             (data[2 /* X3 */] <-0.107299134f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[34 /* X35 */] <-0.35677218f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17476925f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28702298f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3471317f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.036995523f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20868711f ? 
             (data[16 /* X17 */] <-0.27140334f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.08493683f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[31 /* X32 */] <0.19789518f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39592904f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28846923f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30069703f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16323973f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X8 */] <0.18884921f ? 
                     (data[23 /* X24 */] <0.06584946f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[30 /* X31 */] <0.18956415f ? 
             (data[26 /* X27 */] <-0.04264741f ? 
                 (data[6 /* X7 */] <0.20025527f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38670048f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3240267f ? 
                     (data[7 /* X8 */] <0.08417526f ? 
                         (data[19 /* X20 */] <0.13598424f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.10007137f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[15 /* X16 */] <0.08056805f ? 
             (data[16 /* X17 */] <0.13894539f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21297473f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4028951f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2166223f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.14639644f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.2600545f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18432355f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_24_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[35 /* X36 */] <-0.23984376f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09660915f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1278713f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.08377034f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17600207f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[28 /* X29 */] <0.17799877f ? 
            1.0f : 
             (data[20 /* X21 */] <0.18851861f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.28475243f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (data[21 /* X22 */] <0.12211833f ? 
            1.0f : 
             (data[23 /* X24 */] <0.054539487f ? 
                 (data[21 /* X22 */] <0.12631582f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.59952384f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0714275f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.18837538f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.300838f ? 
                 (data[11 /* X12 */] <-0.16802946f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
        0.6666667f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41307488f ? 
             (data[27 /* X28 */] <-0.63430697f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.5247187f ? 
                     (data[7 /* X8 */] <0.11392735f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.114487514f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[7 /* X8 */] <0.13338764f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[17 /* X18 */] <-0.2212193f ? 
             (data[27 /* X28 */] <-0.36374152f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.19174269f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.19353189f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.79540527f ? 
                     (data[24 /* X25 */] <-0.74838907f ? 
                        1.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2317716f ? 
                             (data[32 /* X33 */] <-0.7695315f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.027330762f ? 
                                     (data[15 /* X16 */] <0.16799858f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2800562f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.23289081f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
                0.0f : 
                1.0f)) : 
         (data[31 /* X32 */] <0.23593679f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_25_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.114767075f ? 
         (data[14 /* X15 */] <0.23722844f ? 
            0.0f : 
             (data[30 /* X31 */] <0.16472897f ? 
                0.0f : 
                1.0f)) : 
         (data[29 /* X30 */] <0.14013763f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1453258f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.39085788f ? 
                     (data[27 /* X28 */] <-0.08807109f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.39085788f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20481384f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.21465652f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1046651f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20882684f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (data[10 /* X11 */] <-0.3221352f ? 
             (data[13 /* X14 */] <0.24933058f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.19713435f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (data[32 /* X33 */] <-0.57217306f ? 
            1.0f : 
             (data[13 /* X14 */] <0.14755379f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.38207126f ? 
             (data[17 /* X18 */] <-0.22010629f ? 
                 (data[19 /* X20 */] <-0.1599098f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.77849704f ? 
                     (data[30 /* X31 */] <0.18738563f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23828125f ? 
                             (data[11 /* X12 */] <-0.93229795f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.28576827f ? 
                            0.0f : 
                             (data[2 /* X3 */] <-0.08550645f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20116f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_01_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23232605f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0707657f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X8 */] <0.12987247f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.33096197f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09460157f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_26_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21013254f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
             (data[9 /* X10 */] <-0.65087324f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.08601864f ? 
                     (data[16 /* X17 */] <-0.27683842f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.1740088f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.039747436f ? 
                     (data[24 /* X25 */] <-0.15827669f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.05125f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[31 /* X32 */] <0.1111603f ? 
             (data[34 /* X35 */] <-0.42745656f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[28 /* X29 */] <0.12352992f ? 
             (data[31 /* X32 */] <0.16441856f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[10 /* X11 */] <-0.61219794f ? 
             (data[34 /* X35 */] <0.04612875f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22252353f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2988691f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.29931f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23828125f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.2793881f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))) : 
         (data[9 /* X10 */] <0.0020746146f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (data[32 /* X33 */] <-0.5479915f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23471946f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.21092999f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2071936f ? 
                         (data[1 /* X2 */] <0.066165075f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[31 /* X32 */] <0.06194613f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2516223f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.414941f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.037694793f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7950953f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <0.17579146f ? 
             (data[25 /* X26 */] <-0.07099441f ? 
                 (data[31 /* X32 */] <0.2572401f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_27_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3456857f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.39205015f ? 
                 (data[2 /* X3 */] <-0.34352866f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2798145f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
        0.04f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1046651f ? 
            1.0f : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_01_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
             (data[6 /* X7 */] <0.14051358f ? 
                 (data[2 /* X3 */] <-0.3046964f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.11217416f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.06954723f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.79625154f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20801938f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28498358f ? 
                     (data[2 /* X3 */] <-0.550634f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20548353f ? 
                            1.0f : 
                             (data[10 /* X11 */] <0.04497065f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.016478661f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06201073f ? 
            0.0f : 
             (data[18 /* X19 */] <-0.51348084f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.85144806f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19575548f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_28_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09976563f ? 
         (data[9 /* X10 */] <-0.5145676f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0714275f ? 
                 (data[25 /* X26 */] <-0.35502434f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.0834623f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16071437f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[17 /* X18 */] <-0.053154036f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0291426f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3481206f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32076445f ? 
         (data[21 /* X22 */] <0.1730556f ? 
             (data[19 /* X20 */] <-0.49384737f ? 
                 (data[19 /* X20 */] <-0.7261069f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.21527076f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3448999f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29842016f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.11998785f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[7 /* X8 */] <0.14119913f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2501148f ? 
                 (data[24 /* X25 */] <-0.5086559f ? 
                     (data[2 /* X3 */] <-0.18819965f ? 
                        0.0f : 
                        1.0f) : 
                     (data[18 /* X19 */] <0.05807402f ? 
                         (data[24 /* X25 */] <-0.09672392f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.12159417f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.21577597f ? 
         (data[14 /* X15 */] <0.20934995f ? 
             (data[25 /* X26 */] <-0.44797823f ? 
                0.0f : 
                 (data[18 /* X19 */] <-0.11192691f ? 
                    0.0f : 
                    1.0f)) : 
             (data[24 /* X25 */] <-0.13983569f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.14604452f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04869478f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25573897f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38586834f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))) : 
         (data[32 /* X33 */] <-0.4047625f ? 
             (data[16 /* X17 */] <-0.032638535f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2299182f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
        0.023255814f : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20427495f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22820677f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.22627178f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_29_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.52116305f ? 
         (data[14 /* X15 */] <0.23055331f ? 
            0.0f : 
            1.0f) : 
         (data[35 /* X36 */] <-0.020625f ? 
             (data[21 /* X22 */] <0.1177103f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.12183476f ? 
                     (data[22 /* X23 */] <0.19265611f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19289637f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.31004733f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18725926f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43082964f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
        0.8f : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3719862f ? 
             (data[12 /* X13 */] <0.15027443f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.38887542f ? 
                     (data[7 /* X8 */] <0.10782408f ? 
                         (data[33 /* X34 */] <-0.23828125f ? 
                             (data[33 /* X34 */] <-0.42353517f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[0 /* X1 */] <-0.039962552f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3122896f ? 
            0.0f : 
             (data[26 /* X27 */] <0.18012384f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25023016f ? 
             (data[14 /* X15 */] <0.1567342f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19650355f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21500458f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.99419063f ? 
                         (data[33 /* X34 */] <-0.42578125f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.05417916f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26755288f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3982669f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.43263972f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[34 /* X35 */] <0.4525639f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.08909312f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.20291595f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_30_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16767836f ? 
         (data[33 /* X34 */] <-0.20019531f ? 
            0.0f : 
             (data[6 /* X7 */] <0.29697993f ? 
                 (data[24 /* X25 */] <-0.1674972f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1612906f ? 
                    1.0f : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.22780472f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.25342947f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.059169397f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0461452f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20943391f ? 
             (data[30 /* X31 */] <0.15340064f ? 
                1.0f : 
                 (data[18 /* X19 */] <-0.21744473f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22272447f ? 
                 (data[16 /* X17 */] <-0.23879285f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.09714626f ? 
             (data[8 /* X9 */] <0.2404373f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.14100383f ? 
         (data[33 /* X34 */] <-0.07451172f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21777345f ? 
                 (data[8 /* X9 */] <0.20113485f ? 
                     (data[16 /* X17 */] <-0.5920732f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4826377f ? 
             (data[24 /* X25 */] <-0.15491399f ? 
                 (data[18 /* X19 */] <-0.10963124f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4609375f ? 
             (data[14 /* X15 */] <0.21641773f ? 
                 (data[24 /* X25 */] <-0.6144415f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.081175454f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.40722817f ? 
                     (data[32 /* X33 */] <-0.21131031f ? 
                         (data[6 /* X7 */] <0.20842443f ? 
                             (data[20 /* X21 */] <0.2645721f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22585887f ? 
                0.0f : 
                 (data[2 /* X3 */] <0.45900452f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.016478661f ? 
        0.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4609375f ? 
            0.0f : 
             (data[28 /* X29 */] <0.22501399f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21701358f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_31_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[31 /* X32 */] <0.09518282f ? 
             (data[7 /* X8 */] <0.08729985f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.019134074f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.33481222f ? 
                 (data[25 /* X26 */] <-0.09083951f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22221285f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[11 /* X12 */] <0.06288612f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1889166f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.47395465f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15591325f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3712627f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[26 /* X27 */] <0.21064045f ? 
                    1.0f : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.0983994f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3707923f ? 
             (data[26 /* X27 */] <-0.11588727f ? 
                 (data[14 /* X15 */] <0.19364375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[29 /* X30 */] <0.23232605f ? 
             (data[8 /* X9 */] <0.10007137f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28642106f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9839806f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21118203f ? 
                 (data[5 /* X6 */] <0.21947274f ? 
                     (data[19 /* X20 */] <-0.18527216f ? 
                        0.0f : 
                         (data[18 /* X19 */] <-0.4812393f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[9 /* X10 */] <-0.25514725f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.119891316f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[11 /* X12 */] <-0.9597751f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.41059002f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20024222f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.19041151f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.22853419f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_32_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.017857822f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17385052f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20612215f ? 
                 (data[2 /* X3 */] <-0.20675783f ? 
                     (data[27 /* X28 */] <-0.19727358f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.25396228f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.7770603f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23137592f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.20688392f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28570783f ? 
         (data[23 /* X24 */] <0.10027911f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09290033f ? 
                0.0f : 
                1.0f) : 
             (data[28 /* X29 */] <0.12752913f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.06013669f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.24151039f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2785245f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.39764714f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.20749973f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.464258f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[26 /* X27 */] <-0.10520646f ? 
             (data[10 /* X11 */] <-0.3282741f ? 
                 (data[17 /* X18 */] <-0.18226378f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.5862302f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.56769097f ? 
                    1.0f : 
                    0.0f))) : 
        0.75f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.2155375f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.08885005f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3542091f ? 
                 (data[5 /* X6 */] <0.14405847f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[22 /* X23 */] <0.11634862f ? 
             (data[2 /* X3 */] <-0.2476823f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22732574f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.34623823f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.14647864f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5333277f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2728109f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18603106f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_33_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[31 /* X32 */] <0.08224867f ? 
            1.0f : 
            0.0f) : 
         (data[18 /* X19 */] <0.17971262f ? 
             (data[31 /* X32 */] <0.08072701f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.15949535f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.043261226f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.27492675f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.11979055f ? 
             (data[19 /* X20 */] <-0.42198738f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.059188247f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X2 */] <-0.31070322f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12596849f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.14434609f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
        0.85714287f : 
         (data[5 /* X6 */] <0.1518217f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20093851f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.1674972f ? 
                 (data[3 /* X4 */] <-0.28262618f ? 
                     (data[32 /* X33 */] <-0.33035782f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[24 /* X25 */] <-0.75760955f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.49850875f ? 
                 (data[15 /* X16 */] <0.13151018f ? 
                     (data[34 /* X35 */] <0.112174466f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.23181447f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.20210537f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[7 /* X8 */] <0.05722562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (data[32 /* X33 */] <-0.9274554f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3747374f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16962713f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X8 */] <0.14666717f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_34_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[23 /* X24 */] <0.06205833f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.10266806f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4150409f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.22237818f ? 
             (data[30 /* X31 */] <0.17431448f ? 
                1.0f : 
                0.0f) : 
             (data[22 /* X23 */] <0.18688497f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3712627f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1171965f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.23811346f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0030844295f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2779002f ? 
                 (data[34 /* X35 */] <-0.19419813f ? 
                     (data[22 /* X23 */] <0.17166394f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[1 /* X2 */] <0.1453258f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.73478967f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
        0.85714287f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.46766126f ? 
             (data[18 /* X19 */] <-0.71572334f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31635433f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16187662f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.13907462f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[12 /* X13 */] <0.3598134f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22243017f ? 
             (data[3 /* X4 */] <-1.0042019f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.320538f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36840442f ? 
                         (data[3 /* X4 */] <-0.6351766f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20212634f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11459918f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[6 /* X7 */] <0.15971626f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25934502f ? 
                     (data[22 /* X23 */] <0.15466139f ? 
                         (data[8 /* X9 */] <0.05515427f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.25514725f ? 
                        1.0f : 
                        0.0f)))) : 
        0.022727273f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_01_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[3 /* X4 */] <-1.2648867f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.7127352f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44284976f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.5862699f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[30 /* X31 */] <0.34598228f ? 
                    1.0f : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.123688556f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_35_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.037021015f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2771409f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.7383232f ? 
            1.0f : 
             (data[22 /* X23 */] <0.1339041f ? 
                 (data[31 /* X32 */] <0.18115687f ? 
                    1.0f : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.08552443f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.24264303f ? 
             (data[15 /* X16 */] <0.13409695f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1755045f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43394852f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39003992f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.16687758f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.37585023f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.30803642f ? 
                    0.0f : 
                    1.0f))) : 
         (data[19 /* X20 */] <-0.5826156f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.11296217f ? 
         (data[10 /* X11 */] <-0.52778816f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.15447268f ? 
                 (data[24 /* X25 */] <-0.5649082f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.0986969f ? 
                    0.0f : 
                    1.0f))) : 
        0.032258064f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2903706f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.10468746f ? 
                 (data[17 /* X18 */] <-0.22233231f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15312716f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[24 /* X25 */] <0.017392473f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.14500098f ? 
                        1.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29398134f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9865331f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <0.42498222f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_36_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (data[18 /* X19 */] <-0.037185125f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X2 */] <-0.27707896f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.066914536f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.020625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4347338f ? 
                 (data[27 /* X28 */] <-0.5577318f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.36152962f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
             (data[1 /* X2 */] <-0.6322352f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34818712f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5001381f ? 
             (data[10 /* X11 */] <-0.54006594f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.12914057f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1380204f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.19647816f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.49916992f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.8809525f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.33025923f ? 
                 (data[10 /* X11 */] <-0.48174646f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.65809995f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.77f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.95335054f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.26977262f ? 
                                    1.0f : 
                                     (data[1 /* X2 */] <-0.29682547f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (data[32 /* X33 */] <-0.9274554f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.5307982f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_37_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.52116305f ? 
         (data[6 /* X7 */] <0.22763689f ? 
             (data[15 /* X16 */] <0.11030633f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16583936f ? 
             (data[10 /* X11 */] <-0.69046885f ? 
                 (data[22 /* X23 */] <0.25165015f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[20 /* X21 */] <0.14076132f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.42441407f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.29315624f ? 
                         (data[0 /* X1 */] <-0.0213582f ? 
                             (data[27 /* X28 */] <-0.31648907f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.102030315f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
             (data[3 /* X4 */] <-0.17418128f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.32377663f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.3856474f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21769297f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (data[6 /* X7 */] <0.11633241f ? 
            1.0f : 
             (data[13 /* X14 */] <0.17697364f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36999634f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[7 /* X8 */] <0.12987247f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20019531f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (data[33 /* X34 */] <-0.42490235f ? 
             (data[29 /* X30 */] <0.3113447f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20061089f ? 
             (data[34 /* X35 */] <0.16808f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12727483f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.18401729f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[33 /* X34 */] <-0.5746094f ? 
                     (data[0 /* X1 */] <-0.08144473f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.21159016f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.85355216f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16629219f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.52023435f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.08578779f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38641787f ? 
                 (data[9 /* X10 */] <0.017251048f ? 
                     (data[20 /* X21 */] <0.27607366f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_38_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20792755f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.30729312f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.10717138f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.07902133f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.25396228f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.04479128f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.6079779f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3687678f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.32899213f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22600058f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21029021f ? 
             (data[1 /* X2 */] <-0.38425627f ? 
                 (data[26 /* X27 */] <0.27167368f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4870748f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.38502797f ? 
             (data[4 /* X5 */] <0.09674835f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[29 /* X30 */] <0.17867142f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.10295366f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.28369224f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5188946f ? 
             (data[11 /* X12 */] <-0.55742276f ? 
                 (data[14 /* X15 */] <0.229768f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[20 /* X21 */] <0.16981368f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23263282f ? 
                 (data[4 /* X5 */] <0.19961968f ? 
                     (data[19 /* X20 */] <-0.320538f ? 
                        0.0f : 
                         (data[26 /* X27 */] <-0.13887386f ? 
                             (data[12 /* X13 */] <0.23178156f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22110552f ? 
                         (data[22 /* X23 */] <0.22343561f ? 
                            1.0f : 
                             (data[34 /* X35 */] <0.22618875f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_01_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5647302f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21047801f ? 
             (data[26 /* X27 */] <0.042799097f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_39_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.48465848f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15855013f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.116070315f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.016600981f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.17002818f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X8 */] <0.07675434f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35704118f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19803445f ? 
            1.0f : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_01_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.046836007f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20489138f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.38371468f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.13338764f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40326178f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3197387f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.020963857f ? 
             (data[30 /* X31 */] <0.17954294f ? 
                 (data[1 /* X2 */] <0.015031792f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1733453f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17166394f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.29096904f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29671162f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.32011464f ? 
                0.0f : 
                1.0f)) : 
         (data[30 /* X31 */] <0.21047801f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42753473f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_40_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
        0.021276595f : 
         (data[9 /* X10 */] <-0.6134991f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.029344091f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29892614f ? 
                     (data[18 /* X19 */] <0.16359185f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.6465762f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.27492675f ? 
         (data[29 /* X30 */] <0.17379372f ? 
             (data[13 /* X14 */] <0.29544818f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.50652856f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[22 /* X23 */] <0.18528187f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2536818f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X2 */] <-0.19932286f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.057441045f ? 
                     (data[8 /* X9 */] <-0.2630444f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.60300744f ? 
             (data[25 /* X26 */] <-0.5751783f ? 
                 (data[16 /* X17 */] <-0.28770858f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.95845556f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19057867f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.27000397f ? 
             (data[11 /* X12 */] <-0.24947593f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.059897203f ? 
                    1.0f : 
                     (data[8 /* X9 */] <-0.010049678f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[22 /* X23 */] <0.11617047f ? 
                 (data[27 /* X28 */] <-0.1595412f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.4753662f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0375832f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33479157f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39690468f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_41_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[15 /* X16 */] <0.10782814f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22343561f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.21048865f ? 
            0.0f : 
             (data[23 /* X24 */] <0.043261226f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22409976f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.48962033f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24010785f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[24 /* X25 */] <-0.5017405f ? 
             (data[30 /* X31 */] <0.2265991f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.28965458f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.076363765f ? 
                 (data[10 /* X11 */] <-0.07657945f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2867264f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.46332976f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.026884483f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2946132f ? 
                 (data[34 /* X35 */] <-0.23660874f ? 
                     (data[27 /* X28 */] <-0.10849113f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <0.011400833f ? 
                 (data[23 /* X24 */] <0.14438385f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[7 /* X8 */] <0.079097785f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.04457444f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[24 /* X25 */] <0.12064361f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16980071f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.60109377f ? 
                0.0f : 
                 (data[17 /* X18 */] <0.10712012f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_42_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (data[18 /* X19 */] <-0.037185125f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2686568f ? 
             (data[0 /* X1 */] <-0.32803324f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2623269f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.78354436f ? 
                    1.0f : 
                    0.0f)) : 
             (data[32 /* X33 */] <0.049106095f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[25 /* X26 */] <-0.18134728f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17274158f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17202689f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11105918f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.18593135f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[30 /* X31 */] <0.15775768f ? 
                     (data[6 /* X7 */] <0.2671091f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.620596f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (data[23 /* X24 */] <0.13849989f ? 
             (data[15 /* X16 */] <0.10931505f ? 
                 (data[18 /* X19 */] <-0.44152853f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[18 /* X19 */] <-0.71464497f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4623271f ? 
                     (data[4 /* X5 */] <0.1457085f ? 
                         (data[11 /* X12 */] <-0.7529445f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.20729147f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0023616345f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.21306694f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16641676f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1908194f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12893039f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.42928323f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.8714923f ? 
                     (data[29 /* X30 */] <0.17769587f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.10969386f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.082612954f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5647302f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.65029556f ? 
            1.0f : 
             (data[18 /* X19 */] <0.22514391f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_43_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[1 /* X2 */] <-0.24975926f ? 
             (data[3 /* X4 */] <-0.2409166f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.08377034f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2525351f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.30119854f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.095609024f ? 
             (data[19 /* X20 */] <-0.49384737f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X6 */] <0.31928575f ? 
             (data[19 /* X20 */] <-0.49384737f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3873735f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19519946f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37138924f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.14707005f ? 
             (data[25 /* X26 */] <-0.5751783f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.38352415f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.14381513f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3247322f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38541374f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.111213244f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[27 /* X28 */] <0.38669464f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97632307f ? 
             (data[19 /* X20 */] <-0.31631094f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.048701975f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20320693f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3422741f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22292857f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[14 /* X15 */] <0.14495456f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7625986f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[27 /* X28 */] <1.0273732f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18802223f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.46582228f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.12569061f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_44_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.017857822f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20403543f ? 
             (data[15 /* X16 */] <0.12517546f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
                     (data[9 /* X10 */] <-0.870721f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.7364245f ? 
                            1.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.16593668f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.49839488f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[19 /* X20 */] <-0.4811662f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3095225f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30964983f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.099881254f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.68920696f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (data[29 /* X30 */] <0.15233186f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.083227456f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.24232958f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.19246022f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2185405f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.13855027f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24891022f ? 
             (data[17 /* X18 */] <-0.39818868f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[15 /* X16 */] <0.14153151f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30744204f ? 
                 (data[18 /* X19 */] <-0.31123835f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26405123f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.79540527f ? 
                 (data[32 /* X33 */] <-0.52381f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19057867f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20452254f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.7127352f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24995127f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12893039f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_45_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[23 /* X24 */] <0.0626849f ? 
             (data[0 /* X1 */] <-0.30498758f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4150409f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.26376873f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3103314f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24912995f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[23 /* X24 */] <0.1046651f ? 
             (data[25 /* X26 */] <-0.3843782f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.1216584f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3888274f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
         (data[35 /* X36 */] <0.11953125f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.5653937f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26884922f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-1.1626983f ? 
                 (data[0 /* X1 */] <-0.1505817f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.38750735f ? 
                     (data[1 /* X2 */] <-0.39540312f ? 
                         (data[9 /* X10 */] <-0.061681237f ? 
                             (data[6 /* X7 */] <0.29783338f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.37283713f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19739749f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.2588963f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21348329f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4060691f ? 
                 (data[29 /* X30 */] <0.18940234f ? 
                     (data[4 /* X5 */] <0.1765149f ? 
                        1.0f : 
                        0.0f) : 
                     (data[26 /* X27 */] <0.02143747f ? 
                        1.0f : 
                         (data[26 /* X27 */] <0.14426683f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.298229f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21194856f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.54f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.24963178f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44498208f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[31 /* X32 */] <0.18724354f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_46_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[23 /* X24 */] <0.06017862f ? 
             (data[8 /* X9 */] <0.045548175f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24183765f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[26 /* X27 */] <0.05958323f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1698284f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21976405f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.16696043f ? 
                    1.0f : 
                     (data[33 /* X34 */] <0.41679686f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10529167f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1906639f ? 
                 (data[25 /* X26 */] <-0.3843782f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32685077f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.55156535f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.54879916f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17666662f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41307488f ? 
             (data[5 /* X6 */] <0.12335651f ? 
                 (data[0 /* X1 */] <0.15362096f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.57028604f ? 
                    1.0f : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.26256078f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34293386f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[28 /* X29 */] <0.15506452f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21207918f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36840442f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20213607f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14115515f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.8749022f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29887524f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[4 /* X5 */] <0.12067831f ? 
             (data[35 /* X36 */] <-0.01703125f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.48070312f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8472721f ? 
                0.0f : 
                 (data[35 /* X36 */] <0.30013824f ? 
                    1.0f : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.23037498f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.23204073f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_47_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18546425f ? 
         (data[9 /* X10 */] <-0.60910213f ? 
             (data[19 /* X20 */] <-0.5318909f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.5577318f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.72148436f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.011476562f ? 
             (data[6 /* X7 */] <0.17331088f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.118689865f ? 
                     (data[25 /* X26 */] <-0.024432117f ? 
                         (data[23 /* X24 */] <0.102158815f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[16 /* X17 */] <-0.23879285f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2549208f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.2782674f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25024167f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.14612724f ? 
                            1.0f : 
                             (data[27 /* X28 */] <-0.4095996f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[25 /* X26 */] <-0.5433783f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.384527f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38187954f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.13327697f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5188946f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31268758f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.17322928f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97632307f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.07693641f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14699964f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.07472567f ? 
                        0.0f : 
                         (data[34 /* X35 */] <0.102677815f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
        0.03448276f : 
         (data[27 /* X28 */] <0.945693f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_01_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_48_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[23 /* X24 */] <0.06205833f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14119913f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X13 */] <0.1521707f ? 
                 (data[1 /* X2 */] <-0.5649867f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.4811662f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1234622f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (data[23 /* X24 */] <0.10403853f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14931254f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.47482562f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.38020694f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.11296217f ? 
         (data[25 /* X26 */] <-0.5653937f ? 
            1.0f : 
             (data[7 /* X8 */] <0.0529293f ? 
                1.0f : 
                0.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[32 /* X33 */] <-0.50032604f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19269349f ? 
                 (data[18 /* X19 */] <0.22221285f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30766568f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2426728f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.053975634f ? 
                    0.0f : 
                    1.0f))) : 
        0.022727273f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.34411976f ? 
            0.0f : 
             (data[12 /* X13 */] <0.2915473f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_49_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (data[18 /* X19 */] <-0.037185125f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2686568f ? 
            0.0f : 
             (data[23 /* X24 */] <0.08461485f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.19207314f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.23811346f ? 
        0.0f : 
         (data[34 /* X35 */] <-0.21363632f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19090648f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19901401f ? 
                     (data[15 /* X16 */] <0.10931505f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[8 /* X9 */] <0.24605194f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.11376398f ? 
            1.0f : 
            0.0f) : 
         (data[28 /* X29 */] <0.1040358f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29794985f ? 
                 (data[4 /* X5 */] <0.097298466f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30938306f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26405123f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.033607192f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[26 /* X27 */] <-0.08842233f ? 
                     (data[11 /* X12 */] <-0.62854797f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5419403f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4525639f ? 
             (data[11 /* X12 */] <-0.4185996f ? 
                 (data[11 /* X12 */] <-0.96147734f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24461083f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.2501257f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[33 /* X34 */] <-0.42109376f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[11 /* X12 */] <-1.1513201f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.72578126f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19411854f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.60141516f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_50_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17897986f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42325512f ? 
             (data[17 /* X18 */] <-0.40931883f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.26414007f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.22818708f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.17566328f ? 
             (data[7 /* X8 */] <0.0956976f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.35128012f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16898355f ? 
                 (data[7 /* X8 */] <0.06742779f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5604716f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21574074f ? 
             (data[7 /* X8 */] <0.10587155f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4870748f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3518981f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2587038f ? 
             (data[14 /* X15 */] <0.16301668f ? 
                 (data[23 /* X24 */] <0.14371939f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31635433f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16498886f ? 
                        0.0f : 
                        1.0f))) : 
             (data[6 /* X7 */] <0.16962612f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.15376692f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.08451264f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28723896f ? 
            0.0f : 
            1.0f) : 
         (data[17 /* X18 */] <-0.2212193f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23794945f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12471534f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X7 */] <0.15971626f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.6772195f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.57936376f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.44988576f ? 
                     (data[32 /* X33 */] <-0.65773845f ? 
                         (data[32 /* X33 */] <-0.9251303f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23304099f ? 
         (data[8 /* X9 */] <-0.3771728f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22087632f ? 
             (data[20 /* X21 */] <0.15031278f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33874616f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26203212f ? 
                        1.0f : 
                        0.0f))) : 
             (data[6 /* X7 */] <0.1490481f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_51_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (data[26 /* X27 */] <0.18622716f ? 
             (data[28 /* X29 */] <0.10460916f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.9065812f ? 
                     (data[16 /* X17 */] <0.13622785f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.11420363f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.212319f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.47884268f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.47255054f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23877332f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[31 /* X32 */] <0.056380376f ? 
             (data[10 /* X11 */] <-0.15024617f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35788554f ? 
             (data[1 /* X2 */] <-0.72890496f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.108049296f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3600469f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.045779243f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.29144073f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07387424f ? 
                        1.0f : 
                        0.0f) : 
                     (data[16 /* X17 */] <-0.24422793f ? 
                         (data[9 /* X10 */] <0.02436377f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[24 /* X25 */] <0.09528722f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.24811012f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3600469f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.24736f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17615527f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30241176f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.3203191f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[5 /* X6 */] <0.2578227f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27109337f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6989062f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (data[32 /* X33 */] <-0.9274554f ? 
            1.0f : 
            0.0f) : 
         (data[31 /* X32 */] <0.23593679f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2923854f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_52_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[18 /* X19 */] <0.17385052f ? 
             (data[17 /* X18 */] <-0.28466114f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17233467f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.16744702f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19057867f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.15823008f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.3137362f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[34 /* X35 */] <-0.26134828f ? 
             (data[17 /* X18 */] <-0.18226378f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.713018f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[18 /* X19 */] <0.17385052f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.26008853f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.44565108f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.14135803f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.14100383f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.29410663f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.1438213f ? 
                 (data[4 /* X5 */] <0.12700462f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.49882787f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.031746034f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20427495f ? 
             (data[13 /* X14 */] <0.18492495f ? 
                1.0f : 
                 (data[24 /* X25 */] <0.0076924143f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25419676f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.23060422f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[34 /* X35 */] <-0.4014171f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.035714287f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <0.42498222f ? 
             (data[22 /* X23 */] <0.15866043f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_53_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[35 /* X36 */] <-0.6603125f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.21037158f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.16440909f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.17682235f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[19 /* X20 */] <-0.4811662f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1234622f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.012454458f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[1 /* X2 */] <-0.3485305f ? 
             (data[3 /* X4 */] <-0.61213183f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.102158815f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3120839f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24575248f ? 
             (data[25 /* X26 */] <-0.8980709f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.076363765f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.20144884f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.24202345f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.29921874f ? 
             (data[24 /* X25 */] <-0.23665099f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19971226f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20213607f ? 
                         (data[13 /* X14 */] <0.16751231f ? 
                            1.0f : 
                             (data[5 /* X6 */] <0.20084098f ? 
                                 (data[20 /* X21 */] <0.3161898f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f)) : 
             (data[2 /* X3 */] <-0.036106676f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36044487f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <0.026257869f ? 
                     (data[22 /* X23 */] <0.30745834f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09227688f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3633364f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_01_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[35 /* X36 */] <0.11953125f ? 
            0.0f : 
             (data[24 /* X25 */] <0.27969733f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.24588776f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.6767817f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20241004f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.38868666f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_54_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09976563f ? 
         (data[22 /* X23 */] <0.18977055f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2595821f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3839272f ? 
                     (data[2 /* X3 */] <-0.26799265f ? 
                         (data[20 /* X21 */] <0.089587905f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19155915f ? 
                    1.0f : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.07960229f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16680905f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.31264916f ? 
                     (data[1 /* X2 */] <-0.7186912f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[16 /* X17 */] <-0.23879285f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19803445f ? 
                 (data[7 /* X8 */] <0.10604742f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3839272f ? 
                         (data[24 /* X25 */] <-0.21038789f ? 
                             (data[15 /* X16 */] <0.32025856f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.29535174f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39592904f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.23697656f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.13775954f ? 
                     (data[33 /* X34 */] <-0.634375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[32 /* X33 */] <-0.63913727f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
        0.039215688f : 
         (data[4 /* X5 */] <0.1982444f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18338117f ? 
                 (data[29 /* X30 */] <0.23427713f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43761143f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.12017678f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[6 /* X7 */] <0.089513876f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.45883286f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.13112313f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.32647094f ? 
                1.0f : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.054546f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_55_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.033048805f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
             (data[9 /* X10 */] <-0.866324f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.108049296f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35974818f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.05471169f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29027984f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.22636719f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.11724696f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.3601197f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
             (data[23 /* X24 */] <0.03487827f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.557106f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[25 /* X26 */] <-0.5433783f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39047852f ? 
             (data[30 /* X31 */] <0.13074398f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26400223f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.1422593f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10931505f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.32954946f ? 
         (data[9 /* X10 */] <-0.037497982f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1733453f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12636718f ? 
                    0.0f : 
                    1.0f)) : 
             (data[12 /* X13 */] <0.22612563f ? 
                 (data[19 /* X20 */] <0.23743363f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.2910243f ? 
             (data[23 /* X24 */] <0.07438826f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.08056805f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3302531f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[25 /* X26 */] <0.03391442f ? 
             (data[30 /* X31 */] <0.2274705f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.29840362f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.7749407f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_56_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (data[7 /* X8 */] <0.10995317f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16383523f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.19784255f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5137803f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34960952f ? 
                     (data[21 /* X22 */] <0.097139485f ? 
                         (data[5 /* X6 */] <0.26235536f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15019532f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.42441407f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1046651f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.1267395f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.18266946f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
        0.85714287f : 
         (data[23 /* X24 */] <0.14288588f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2445598f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.53239846f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.19835562f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6125895f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.08779913f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47332796f ? 
             (data[25 /* X26 */] <-0.5653937f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3137362f ? 
                     (data[8 /* X9 */] <-0.46139234f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28778338f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12727483f ? 
                                1.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.219044f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.54017663f ? 
            0.0f : 
             (data[15 /* X16 */] <0.27684066f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <0.08152077f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_57_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[31 /* X32 */] <0.08300951f ? 
            1.0f : 
            0.0f) : 
         (data[16 /* X17 */] <-0.19395341f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.11053516f ? 
                 (data[4 /* X5 */] <0.16771306f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.31101125f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32076445f ? 
         (data[19 /* X20 */] <-0.49596092f ? 
             (data[2 /* X3 */] <-0.14289537f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3095225f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[12 /* X13 */] <0.17350385f ? 
             (data[35 /* X36 */] <-0.078125f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.32267168f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3863613f ? 
             (data[13 /* X14 */] <0.1507343f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.21131031f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X5 */] <0.12480417f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23449919f ? 
             (data[20 /* X21 */] <0.16543593f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25419676f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.38021126f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2689777f ? 
                            1.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.7737296f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[7 /* X8 */] <0.06855228f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.52235144f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[32 /* X33 */] <-0.8809525f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.25166658f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4825f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.04763062f ? 
                        0.0f : 
                        1.0f)))) : 
        0.8f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_58_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15171504f ? 
            0.0f : 
             (data[7 /* X8 */] <0.11229662f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3000532f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26910967f ? 
                 (data[20 /* X21 */] <0.09777975f ? 
                    1.0f : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.15241273f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[19 /* X20 */] <-0.42410094f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3019584f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.08040776f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
        0.85714287f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.40971568f ? 
             (data[7 /* X8 */] <0.048242405f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22496657f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13164063f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.1451151f ? 
            0.0f : 
             (data[9 /* X10 */] <0.074624375f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.3182305f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32207564f ? 
                         (data[20 /* X21 */] <0.21474588f ? 
                            1.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23855785f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.30115706f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[11 /* X12 */] <-0.98937166f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32194373f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25288996f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.2347396f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1835491f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X10 */] <0.008670047f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_59_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09976563f ? 
         (data[18 /* X19 */] <0.18264367f ? 
             (data[15 /* X16 */] <0.11440245f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.024239082f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39329576f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[5 /* X6 */] <0.19211659f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11844964f ? 
                 (data[1 /* X2 */] <-0.7583262f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.18722472f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X1 */] <-0.418027f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.5653937f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26256078f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-1.1668693f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.46869475f ? 
                     (data[5 /* X6 */] <0.12397082f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38541374f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.1739372f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
        0.039215688f : 
         (data[23 /* X24 */] <0.11030423f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.47347978f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35566914f ? 
                     (data[10 /* X11 */] <-0.5738299f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3439893f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[17 /* X18 */] <0.035887163f ? 
                     (data[33 /* X34 */] <-0.6496094f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5647302f ? 
            0.0f : 
            1.0f) : 
         (data[29 /* X30 */] <0.23086274f ? 
            0.0f : 
             (data[27 /* X28 */] <0.33053955f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_60_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[17 /* X18 */] <-0.027554693f ? 
             (data[4 /* X5 */] <0.15065953f ? 
                 (data[16 /* X17 */] <-0.28770858f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[16 /* X17 */] <-0.29042614f ? 
                 (data[18 /* X19 */] <0.0053151078f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[16 /* X17 */] <-0.29042614f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.11993494f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.11924734f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (data[13 /* X14 */] <0.17935903f ? 
             (data[26 /* X27 */] <-0.11283561f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.45312554f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3439893f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6749814f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24933058f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3824411f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9839806f ? 
                     (data[10 /* X11 */] <-0.34055188f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.19283384f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.36979166f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09560781f ? 
            0.0f : 
             (data[21 /* X22 */] <0.2705221f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[15 /* X16 */] <0.19852988f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44540223f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_61_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4150409f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X10 */] <-1.2386305E-4f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21976405f ? 
                1.0f : 
                0.0f) : 
             (data[13 /* X14 */] <0.2835212f ? 
                 (data[15 /* X16 */] <0.16534403f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[13 /* X14 */] <0.2851115f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3633364f ? 
                 (data[14 /* X15 */] <0.229768f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.14103588f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
        0.85714287f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.44238374f ? 
             (data[13 /* X14 */] <0.17697364f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21720305f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.48715872f ? 
                     (data[26 /* X27 */] <0.07026404f ? 
                         (data[22 /* X23 */] <0.16595851f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3654725f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[2 /* X3 */] <0.3166196f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[12 /* X13 */] <0.22849599f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25339654f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2794764f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19906957f ? 
                 (data[3 /* X4 */] <-0.80816686f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0036138631f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
                            1.0f : 
                             (data[3 /* X4 */] <-0.5439205f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4174937f ? 
            0.0f : 
             (data[15 /* X16 */] <0.087465525f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[11 /* X12 */] <-1.1537641f ? 
            1.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5378715f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33240148f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.027781747f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[15 /* X16 */] <0.259989f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37370697f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_62_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
        0.021276595f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.42544803f ? 
             (data[19 /* X20 */] <-0.54457206f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.21589085f ? 
                     (data[28 /* X29 */] <0.1355704f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16744834f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12727483f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1046651f ? 
            1.0f : 
             (data[33 /* X34 */] <0.4015625f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.12252992f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.046836007f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.37847626f ? 
             (data[24 /* X25 */] <-0.5363174f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[31 /* X32 */] <0.19713435f ? 
             (data[23 /* X24 */] <0.06205833f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43016884f ? 
                    1.0f : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.71216303f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.020963857f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15019532f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.75760955f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.21390544f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24183765f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23845974f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.28455845f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.4753662f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.0741948f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.62472206f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20132303f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2274705f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.09083951f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_63_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17897986f ? 
         (data[35 /* X36 */] <-0.17875f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.055522803f ? 
                 (data[35 /* X36 */] <-0.7191309f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[23 /* X24 */] <0.038248666f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <7.4304687E-4f ? 
             (data[23 /* X24 */] <0.06205833f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18370292f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[13 /* X14 */] <0.28431636f ? 
             (data[32 /* X33 */] <-0.21131031f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.1425f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.23040164f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.47884268f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.11970278f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09976563f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.091119036f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5333277f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[14 /* X15 */] <0.23919171f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (data[13 /* X14 */] <0.14636108f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.25189918f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20992889f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30528387f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.50046873f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19570744f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35818204f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.73807865f ? 
                            1.0f : 
                             (data[31 /* X32 */] <0.21645948f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.28369224f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16629219f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.52023435f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.097514465f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.32433575f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_64_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[31 /* X32 */] <0.08224867f ? 
             (data[13 /* X14 */] <0.17299798f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.17085432f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1427366f ? 
                 (data[2 /* X3 */] <-0.2529201f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[19 /* X20 */] <-0.43466857f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.122209065f ? 
             (data[31 /* X32 */] <0.09137866f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2694134f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4826377f ? 
             (data[31 /* X32 */] <0.05333705f ? 
                1.0f : 
                 (data[18 /* X19 */] <-0.71572334f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.12812975f ? 
                         (data[24 /* X25 */] <-0.06814865f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.34755665f ? 
                                0.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4815445f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[30 /* X31 */] <0.19784255f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97377056f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24032812f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.23665099f ? 
                 (data[34 /* X35 */] <0.1874975f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.44308594f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[20 /* X21 */] <0.2667437f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.439375f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.03915872f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.26938736f ? 
            0.0f : 
             (data[2 /* X3 */] <0.21630295f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (data[32 /* X33 */] <-0.9274554f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2546717f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39374012f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.369233f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23979916f ? 
                 (data[6 /* X7 */] <0.141936f ? 
                     (data[3 /* X4 */] <-0.9332956f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_65_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.024239082f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17971262f ? 
             (data[35 /* X36 */] <-0.17875f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2397669f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.02170599f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.14508687f ? 
                     (data[28 /* X29 */] <0.1263967f ? 
                         (data[20 /* X21 */] <0.120066494f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[13 /* X14 */] <0.28431636f ? 
             (data[8 /* X9 */] <-0.2845313f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8307694f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24106798f ? 
                 (data[30 /* X31 */] <0.18738563f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.39716914f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4826377f ? 
             (data[10 /* X11 */] <-0.61066324f ? 
                 (data[28 /* X29 */] <0.16309151f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.57028604f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5380131f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.24421288f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (data[13 /* X14 */] <0.14636108f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.06357623f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4825f ? 
                 (data[27 /* X28 */] <0.08549918f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9992956f ? 
                 (data[15 /* X16 */] <0.113280155f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28234962f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7950953f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2654368f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2617088f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_66_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[7 /* X8 */] <0.108390875f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.10495806f ? 
                 (data[24 /* X25 */] <-0.4514773f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27938622f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.0033503126f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18688497f ? 
             (data[20 /* X21 */] <0.10892312f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.111601435f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04220584f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.023939218f ? 
             (data[19 /* X20 */] <-0.5699344f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2167026f ? 
             (data[4 /* X5 */] <0.1220536f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.14135803f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[24 /* X25 */] <-0.43950212f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15286542f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28846923f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.4626552f ? 
                    1.0f : 
                    0.0f))) : 
         (data[17 /* X18 */] <0.16610992f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.01691292f ? 
             (data[19 /* X20 */] <-0.32476506f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23371075f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.13642332f ? 
                        0.0f : 
                        1.0f))) : 
             (data[30 /* X31 */] <0.14555794f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.39483982f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.099897474f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[24 /* X25 */] <0.01691292f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.46582228f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.70241f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_67_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19971226f ? 
             (data[33 /* X34 */] <-0.20019531f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.104854316f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21281527f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.102167785f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4015625f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29147252f ? 
                     (data[19 /* X20 */] <-0.87850964f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (data[20 /* X21 */] <0.15190469f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11724696f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.5565806f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
             (data[7 /* X8 */] <0.104485124f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.85033405f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
         (data[20 /* X21 */] <0.1499148f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37119028f ? 
             (data[33 /* X34 */] <-0.32587892f ? 
                 (data[1 /* X2 */] <-0.35483506f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28728575f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16637918f ? 
                        0.0f : 
                         (data[19 /* X20 */] <0.06835132f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[9 /* X10 */] <0.09660915f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.32954946f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21194856f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22528514f ? 
                 (data[12 /* X13 */] <0.2185405f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.07127027f ? 
                         (data[29 /* X30 */] <0.16330728f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
             (data[24 /* X25 */] <0.21054354f ? 
                 (data[19 /* X20 */] <0.24588776f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.40827546f ? 
             (data[24 /* X25 */] <-0.711507f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.12609334f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[10 /* X11 */] <0.0968443f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22443312f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30687457f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15983076f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_68_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.017857822f ? 
         (data[33 /* X34 */] <-0.20019531f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.053794943f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.10688397f ? 
                    0.0f : 
                    1.0f)) : 
             (data[22 /* X23 */] <0.18688497f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.46087664f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.16592437f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.18868575f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.023995398f ? 
                         (data[7 /* X8 */] <0.18623729f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[16 /* X17 */] <-0.14096136f ? 
            0.0f : 
             (data[23 /* X24 */] <0.0581594f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.12351375f ? 
                     (data[1 /* X2 */] <-0.1783077f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[10 /* X11 */] <-0.58150345f ? 
             (data[35 /* X36 */] <0.11953125f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36044487f ? 
                 (data[1 /* X2 */] <-0.38005325f ? 
                     (data[33 /* X34 */] <-0.25351563f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.054241717f ? 
                     (data[14 /* X15 */] <0.19835562f ? 
                         (data[7 /* X8 */] <0.09209935f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
        0.75f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.21577597f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3283163f ? 
             (data[11 /* X12 */] <-0.26414007f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.07150364f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.033804942f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0018448703f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[24 /* X25 */] <-0.28275353f ? 
             (data[10 /* X11 */] <-0.4326353f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30743295f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21054354f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.112987295f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20548353f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_69_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[18 /* X19 */] <0.17678156f ? 
             (data[5 /* X6 */] <0.20468563f ? 
                 (data[5 /* X6 */] <0.16847698f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X5 */] <0.1649625f ? 
                 (data[0 /* X1 */] <-0.021250192f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.32525083f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.14915553f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[31 /* X32 */] <0.10963864f ? 
            0.0f : 
             (data[7 /* X8 */] <0.10760972f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.32854268f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.38594958f ? 
                        0.0f : 
                        1.0f) : 
                     (data[4 /* X5 */] <0.12616172f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11218394f ? 
                            1.0f : 
                            0.0f))))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[25 /* X26 */] <-0.5433783f ? 
            1.0f : 
             (data[5 /* X6 */] <0.11448425f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5783355f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3883033f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22061959f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.11927995f ? 
                         (data[15 /* X16 */] <0.10138485f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[9 /* X10 */] <0.09660915f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27353263f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.48070312f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21651532f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                     (data[27 /* X28 */] <-0.2718514f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14896609f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.2356885f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.19401655f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.17607412f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[17 /* X18 */] <0.16277087f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.4029125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42325512f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4340707f ? 
            0.0f : 
             (data[18 /* X19 */] <0.12841924f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23104256f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.25837123f ? 
                 (data[35 /* X36 */] <0.381875f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_70_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
        0.021276595f : 
         (data[3 /* X4 */] <-0.30139548f ? 
            0.0f : 
             (data[14 /* X15 */] <0.24783012f ? 
                 (data[26 /* X27 */] <-0.11893893f ? 
                    1.0f : 
                    0.0f) : 
                 (data[18 /* X19 */] <0.06979822f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21029021f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2586656f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3095225f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (data[7 /* X8 */] <0.048242405f ? 
            1.0f : 
             (data[30 /* X31 */] <0.13074398f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.16319849f ? 
                     (data[16 /* X17 */] <-0.5920732f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.1606144f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36124083f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.13450226f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29525444f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.216885f ? 
             (data[32 /* X33 */] <-0.7358634f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.017711684f ? 
                     (data[16 /* X17 */] <-0.46163124f ? 
                        0.0f : 
                        1.0f) : 
                     (data[35 /* X36 */] <0.0596875f ? 
                         (data[34 /* X35 */] <0.07440469f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <1.0223823f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.79593045f ? 
                     (data[17 /* X18 */] <-0.22678438f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (data[3 /* X4 */] <-0.6767817f ? 
             (data[15 /* X16 */] <0.24016346f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6190625f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.16791719f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_71_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.11858024f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1630628f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.1111603f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
             (data[23 /* X24 */] <0.05704577f ? 
                 (data[22 /* X23 */] <0.11570738f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <-0.1574954f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[16 /* X17 */] <-0.23879285f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
                 (data[23 /* X24 */] <0.05704577f ? 
                     (data[31 /* X32 */] <0.10811697f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3327316f ? 
                     (data[1 /* X2 */] <0.0066257273f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26581255f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.42282194f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36920038f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.18724354f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.23289347f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (data[16 /* X17 */] <-0.45076105f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1948912f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[28 /* X29 */] <0.18831919f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.09376394f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.12883906f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.20305988f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.40661025f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.10100187f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.23710541f ? 
                             (data[8 /* X9 */] <0.28423148f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.29928032f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0350307f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.1467324f ? 
                0.0f : 
                1.0f)) : 
         (data[28 /* X29 */] <0.316751f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_72_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[28 /* X29 */] <0.15621123f ? 
             (data[14 /* X15 */] <0.24145676f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29887524f ? 
             (data[2 /* X3 */] <-0.1623115f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3058974f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21503662f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.17375f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.480625f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.8531473f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.009230825f ? 
                     (data[13 /* X14 */] <0.25966728f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19607532f ? 
             (data[14 /* X15 */] <0.29838538f ? 
                 (data[33 /* X34 */] <-0.3220703f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1171965f ? 
                     (data[2 /* X3 */] <-0.21344818f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[35 /* X36 */] <0.08f ? 
            0.0f : 
            1.0f) : 
         (data[18 /* X19 */] <-0.65710235f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3283163f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47332796f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19906852f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22801568f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35818204f ? 
                        1.0f : 
                        0.0f) : 
                     (data[12 /* X13 */] <0.26455012f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.31875f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.14289537f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.31506336f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.42431346f ? 
             (data[33 /* X34 */] <-0.72578126f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.026398614f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.36190096f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30528387f ? 
                1.0f : 
                 (data[19 /* X20 */] <0.83767587f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_73_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[15 /* X16 */] <0.104854316f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08210857f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.5376899f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X5 */] <0.18394142f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20462655f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28570783f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.17418128f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15228443f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26366845f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.51498264f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (data[6 /* X7 */] <0.13233465f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X3 */] <-0.73994124f ? 
            1.0f : 
             (data[5 /* X6 */] <0.15440945f ? 
                 (data[17 /* X18 */] <-0.08431846f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.32032955f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[22 /* X23 */] <0.16828902f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38541374f ? 
                        0.0f : 
                         (data[17 /* X18 */] <0.11157218f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20505531f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.40416563f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.43278065f ? 
                     (data[17 /* X18 */] <-0.021989617f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18728691f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.74977344f ? 
                 (data[3 /* X4 */] <-1.1691502f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <1.0223823f ? 
                    0.0f : 
                    1.0f))) : 
         (data[4 /* X5 */] <0.12507923f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[3 /* X4 */] <-0.6767817f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2785434f ? 
                 (data[22 /* X23 */] <0.2657574f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22422843f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18394275f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2685105f ? 
                    0.0f : 
                    1.0f))) : 
         (data[27 /* X28 */] <0.51942486f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_74_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[28 /* X29 */] <0.117223f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.08f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1327167f ? 
                 (data[11 /* X12 */] <-0.07996963f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.5910697f ? 
                         (data[3 /* X4 */] <9.989506E-4f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[2 /* X3 */] <-0.29822436f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[21 /* X22 */] <0.16325997f ? 
             (data[16 /* X17 */] <-0.20074727f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14822946f ? 
                     (data[34 /* X35 */] <-0.208335f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.29117972f ? 
             (data[11 /* X12 */] <0.31093073f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[25 /* X26 */] <-0.5433783f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.79860634f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.076363765f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.10144848f ? 
                 (data[34 /* X35 */] <-0.07403469f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28149793f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38541374f ? 
                     (data[10 /* X11 */] <-0.46332976f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17971262f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19210254f ? 
                 (data[19 /* X20 */] <-0.320538f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.399413f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.35282966f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.16355059f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (data[10 /* X11 */] <-0.4142186f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42325512f ? 
            0.0f : 
             (data[22 /* X23 */] <0.24010785f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4520622f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.143396f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.15721267f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_75_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[9 /* X10 */] <-0.60910213f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09976563f ? 
             (data[1 /* X2 */] <-0.2035259f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19941685f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6091473f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.23660874f ? 
                     (data[28 /* X29 */] <0.108049296f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18135501f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11724696f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.16592437f ? 
                1.0f : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.13921875f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.31899443f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
         (data[9 /* X10 */] <-0.01991016f ? 
            0.0f : 
            1.0f) : 
         (data[30 /* X31 */] <0.1337939f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.10327499f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37158823f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38541374f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.12722163f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[23 /* X24 */] <0.36531827f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97632307f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36999634f ? 
                 (data[20 /* X21 */] <0.22547509f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1755045f ? 
                        0.0f : 
                         (data[9 /* X10 */] <0.21366128f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[10 /* X11 */] <-0.48788536f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2685264f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.83137786f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[25 /* X26 */] <0.1342068f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6190625f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26256776f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_76_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[20 /* X21 */] <0.11449481f ? 
            1.0f : 
            0.0f) : 
         (data[1 /* X2 */] <-0.24975926f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31928575f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.021578358f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1015625f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16782379f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.43521163f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.04762f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3899765f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22921333f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27635482f ? 
                 (data[1 /* X2 */] <-0.71629584f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28972724f ? 
             (data[25 /* X26 */] <-0.1759022f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.17101376f ? 
                     (data[19 /* X20 */] <-0.48962033f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45436755f ? 
             (data[10 /* X11 */] <-0.57996875f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.6387784f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.16571154f ? 
                         (data[18 /* X19 */] <0.034625612f ? 
                             (data[31 /* X32 */] <0.18829039f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10240678f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[30 /* X31 */] <0.18956415f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20274022f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17076886f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1733453f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2663701f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.00546875f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22221285f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.393376f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.08056805f ? 
             (data[11 /* X12 */] <-0.035652626f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[28 /* X29 */] <0.23074755f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2690335f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <1.5672368E-4f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.6370806f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5975f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23593679f ? 
                    0.0f : 
                    1.0f)) : 
             (data[30 /* X31 */] <0.34598228f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_77_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4160668f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.32539064f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.40989178f ? 
                 (data[20 /* X21 */] <0.10892312f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[30 /* X31 */] <0.19784255f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14727187f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18572186f ? 
             (data[19 /* X20 */] <-0.49384737f ? 
                 (data[30 /* X31 */] <0.19753776f ? 
                     (data[14 /* X15 */] <0.26118037f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09213369f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.8248507f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (data[30 /* X31 */] <0.123336986f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.6382714f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.48328117f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6272776f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.37167704f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.1823598f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5188946f ? 
             (data[16 /* X17 */] <-0.45619613f ? 
                 (data[23 /* X24 */] <0.1948912f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[10 /* X11 */] <-0.08271834f ? 
             (data[31 /* X32 */] <0.19333018f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2907387f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2708825f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.065468185f ? 
                     (data[28 /* X29 */] <0.14904603f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.16246131f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23669763f ? 
         (data[17 /* X18 */] <-0.3391989f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.12034734f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.036990087f ? 
             (data[31 /* X32 */] <0.24125668f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_78_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[10 /* X11 */] <-0.65977436f ? 
            1.0f : 
            0.0f) : 
         (data[18 /* X19 */] <0.18264367f ? 
             (data[15 /* X16 */] <0.118236534f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26832238f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6734375f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.029344091f ? 
                 (data[12 /* X13 */] <0.1806149f ? 
                     (data[16 /* X17 */] <-0.0050136275f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[34 /* X35 */] <-0.690629f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3306617f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.11916354f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21042518f ? 
                 (data[22 /* X23 */] <0.16572405f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.5565806f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[10 /* X11 */] <-0.58150345f ? 
             (data[9 /* X10 */] <-0.15836386f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.23697656f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29476053f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.35935977f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.34234878f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.34885114f ? 
             (data[15 /* X16 */] <0.088498265f ? 
                 (data[29 /* X30 */] <0.24403252f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[14 /* X15 */] <0.15280765f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.33629376f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20081197f ? 
                    0.0f : 
                     (data[34 /* X35 */] <0.21519141f ? 
                         (data[16 /* X17 */] <-0.3600714f ? 
                            0.0f : 
                            1.0f) : 
                         (data[33 /* X34 */] <-0.775f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.4753662f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3801124f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X12 */] <-0.8164891f ? 
             (data[15 /* X16 */] <0.19852988f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_79_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
        0.021276595f : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19080465f ? 
             (data[17 /* X18 */] <-0.32027763f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1105613f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15260278f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.22954372f ? 
                        1.0f : 
                        0.0f))) : 
             (data[19 /* X20 */] <-0.48962033f ? 
                 (data[35 /* X36 */] <-0.2003125f ? 
                     (data[25 /* X26 */] <-0.11040876f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21093145f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14977814f ? 
                1.0f : 
                0.0f) : 
             (data[23 /* X24 */] <0.10090568f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (data[15 /* X16 */] <0.15392247f ? 
             (data[26 /* X27 */] <-0.11588727f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26279598f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24508843f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X13 */] <0.19578515f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3824411f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22220986f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6489022f ? 
             (data[23 /* X24 */] <0.102158815f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0044006f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4323f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20452254f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.37631103f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28707495f ? 
                                    1.0f : 
                                     (data[7 /* X8 */] <0.14354257f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[16 /* X17 */] <0.018830065f ? 
                                0.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24106798f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29671162f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.24063082f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4191971f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_80_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[9 /* X10 */] <-0.52995694f ? 
             (data[11 /* X12 */] <-0.24458788f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.06205833f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19091715f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[18 /* X19 */] <0.17385052f ? 
             (data[29 /* X30 */] <0.16989157f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.1493674f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X12 */] <-0.15660308f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[19 /* X20 */] <-0.52977735f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.37638515f ? 
                1.0f : 
                 (data[11 /* X12 */] <0.2211033f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.38700017f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.5653937f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13310568f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.46255338f ? 
                 (data[11 /* X12 */] <-0.42094788f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09371366f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.41199774f ? 
                        0.0f : 
                         (data[0 /* X1 */] <0.16744834f ? 
                            1.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26744574f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[19 /* X20 */] <-0.15779628f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.48254848f ? 
                 (data[0 /* X1 */] <-0.12292691f ? 
                     (data[10 /* X11 */] <0.052337322f ? 
                        1.0f : 
                        0.0f) : 
                     (data[18 /* X19 */] <-0.039041176f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18717876f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26405123f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.219044f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.08056805f ? 
             (data[11 /* X12 */] <-0.039290022f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28229567f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2834223f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5978048f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5085423f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.8743164f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_81_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17963521f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.058728203f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2436288f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.843002f ? 
             (data[15 /* X16 */] <0.10435867f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.034534857f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20269917f ? 
                    0.0f : 
                     (data[17 /* X18 */] <0.21188907f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12201545f ? 
             (data[0 /* X1 */] <-0.30729216f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.59709907f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.57416147f ? 
                        1.0f : 
                        0.0f))) : 
             (data[27 /* X28 */] <-0.101454414f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12659505f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.059335936f ? 
        0.033333335f : 
         (data[14 /* X15 */] <0.17990084f ? 
             (data[10 /* X11 */] <-0.2883713f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29603526f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.024565283f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.32954946f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9916381f ? 
             (data[10 /* X11 */] <-0.33748245f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.1457085f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20269917f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3848344f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[5 /* X6 */] <0.13888298f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.029344091f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.2782674f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.51208395f ? 
            0.0f : 
             (data[23 /* X24 */] <0.3139395f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_82_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4150409f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.026810998f ? 
             (data[19 /* X20 */] <-0.6037509f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21076876f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.03848633f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.11578787f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[34 /* X35 */] <-0.35677218f ? 
             (data[15 /* X16 */] <0.108323775f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.02185374f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.19041178f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20093851f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.14100383f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33240047f ? 
             (data[6 /* X7 */] <0.14331278f ? 
                 (data[11 /* X12 */] <-0.28369224f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.306215f ? 
                1.0f : 
                0.0f)) : 
         (data[26 /* X27 */] <-0.21506625f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3745019f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.64925605f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19883285f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28675342f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.26391092f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.40540814f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26935956f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24533586f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.8749022f ? 
                 (data[1 /* X2 */] <-0.043810662f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.31609473f ? 
            0.0f : 
             (data[27 /* X28 */] <0.08614209f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.46582228f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_83_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.52116305f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.030743679f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.26376873f ? 
             (data[28 /* X29 */] <0.15965137f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13605802f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[20 /* X21 */] <0.124046266f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.49814093f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.14703043f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1278713f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19130446f ? 
             (data[30 /* X31 */] <0.19609974f ? 
                 (data[21 /* X22 */] <0.12260812f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.10760972f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.30978173f ? 
                        1.0f : 
                         (data[0 /* X1 */] <0.16965288f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.32632765f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (data[24 /* X25 */] <-0.44872263f ? 
             (data[2 /* X3 */] <-0.2561561f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.3887852f ? 
             (data[10 /* X11 */] <-0.42342696f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3399828f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.19313663f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (data[32 /* X33 */] <-0.57217306f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97632307f ? 
             (data[2 /* X3 */] <-0.3618615f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35726106f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33281934f ? 
                         (data[0 /* X1 */] <0.09370225f ? 
                            1.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22835083f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19879934f ? 
                                     (data[19 /* X20 */] <-0.15483734f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
         (data[12 /* X13 */] <0.18582967f ? 
             (data[11 /* X12 */] <-0.259252f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20801938f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.16558112f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0375832f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31852067f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.19971226f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_84_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09976563f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18264367f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.67460936f ? 
                 (data[7 /* X8 */] <0.06698998f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.3703952f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.014029066f ? 
                 (data[3 /* X4 */] <-0.35770342f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30952635f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1742815f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23008473f ? 
             (data[19 /* X20 */] <-0.49384737f ? 
                 (data[29 /* X30 */] <0.10140187f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X8 */] <0.26071492f ? 
                 (data[33 /* X34 */] <-0.19882813f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.730577f ? 
             (data[23 /* X24 */] <0.05203321f ? 
                 (data[12 /* X13 */] <0.23560703f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.11053516f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
             (data[16 /* X17 */] <-0.67903453f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.09745479f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.1948912f ? 
                     (data[18 /* X19 */] <-0.10606481f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.42358312f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (data[33 /* X34 */] <-0.42490235f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9992956f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X7 */] <0.18603106f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28669596f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.023102632f ? 
            1.0f : 
             (data[4 /* X5 */] <0.14460827f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.20128214f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5647302f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.38634118f ? 
             (data[13 /* X14 */] <0.2040081f ? 
                 (data[6 /* X7 */] <0.22443645f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_85_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (data[22 /* X23 */] <0.17245707f ? 
            0.0f : 
             (data[26 /* X27 */] <0.19233048f ? 
                 (data[32 /* X33 */] <-0.1666675f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[7 /* X8 */] <0.10604742f ? 
             (data[31 /* X32 */] <0.08377034f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.28927967f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.288292f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.65618294f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.34756446f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.21059129f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[17 /* X18 */] <0.2540381f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.21186922f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.50652856f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X4 */] <0.046879485f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.07402344f ? 
             (data[25 /* X26 */] <-0.5800707f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.5535719f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.32527107f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14468654f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.20915362f ? 
         (data[7 /* X8 */] <0.12674788f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.14465494f ? 
                 (data[32 /* X33 */] <-0.56845284f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20685051f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.33267766f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20354137f ? 
                 (data[21 /* X22 */] <0.167668f ? 
                    1.0f : 
                     (data[2 /* X3 */] <0.22601101f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.23585415f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23669763f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27275702f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18398367f ? 
                    0.0f : 
                    1.0f)) : 
             (data[28 /* X29 */] <0.22730742f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.2750871f ? 
                     (data[32 /* X33 */] <-0.89583343f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[3 /* X4 */] <-1.2648867f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.8809525f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_01_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_86_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[15 /* X16 */] <0.12616675f ? 
             (data[13 /* X14 */] <0.21752533f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17238499f ? 
             (data[5 /* X6 */] <0.18398367f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.20837128f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[32 /* X33 */] <7.4304687E-4f ? 
                 (data[16 /* X17 */] <-0.33662432f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (data[31 /* X32 */] <0.09518282f ? 
            1.0f : 
            0.0f) : 
         (data[24 /* X25 */] <-0.3588227f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.30064908f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.79860634f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X2 */] <-0.40106842f ? 
                 (data[11 /* X12 */] <-0.19952303f ? 
                     (data[14 /* X15 */] <0.17950818f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26874536f ? 
             (data[10 /* X11 */] <-0.29757965f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.32961687f ? 
                     (data[16 /* X17 */] <-0.51598203f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.496875f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.23196211f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.42490235f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[25 /* X26 */] <0.13176064f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6439073f ? 
             (data[32 /* X33 */] <-0.54985166f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29021204f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_87_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (data[26 /* X27 */] <7.58425E-5f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.21465652f ? 
             (data[31 /* X32 */] <0.11157638f ? 
                 (data[15 /* X16 */] <0.14103588f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.09979823f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.26721373f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.20351313f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21734384f ? 
             (data[31 /* X32 */] <0.09290033f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.3270328f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.20007202f ? 
                         (data[20 /* X21 */] <0.1728461f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[8 /* X9 */] <-0.23680687f ? 
                 (data[33 /* X34 */] <0.23125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.11979055f ? 
            0.0f : 
             (data[32 /* X33 */] <0.28467125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.14100383f ? 
         (data[25 /* X26 */] <-0.4333013f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.23864943f ? 
                 (data[18 /* X19 */] <-0.4753772f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.899375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (data[5 /* X6 */] <0.13999201f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0957092f ? 
                 (data[33 /* X34 */] <-0.42109376f ? 
                     (data[5 /* X6 */] <0.24256872f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3001354f ? 
                     (data[15 /* X16 */] <0.20844264f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[35 /* X36 */] <0.29921874f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.6496094f ? 
                 (data[33 /* X34 */] <-0.89954376f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.48156092f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.0800569f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.40311164f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_88_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (data[5 /* X6 */] <0.22132114f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.093176104f ? 
             (data[1 /* X2 */] <-0.27077442f ? 
                 (data[18 /* X19 */] <0.0053151078f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2432959f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.39299828f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1742815f ? 
         (data[19 /* X20 */] <-0.48962033f ? 
             (data[19 /* X20 */] <-0.79737765f ? 
                 (data[0 /* X1 */] <0.16283922f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.4521961f ? 
             (data[5 /* X6 */] <0.22538759f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.480625f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (data[5 /* X6 */] <0.1470159f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.59716415f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.059974138f ? 
                0.0f : 
                 (data[18 /* X19 */] <-0.69813704f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.13098355f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.76156586f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11129864f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.015190511f ? 
                 (data[33 /* X34 */] <-0.39824218f ? 
                     (data[11 /* X12 */] <-0.57836276f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.18252319f ? 
                    1.0f : 
                    0.0f))) : 
         (data[27 /* X28 */] <0.33053955f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.285855f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5946756f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20178346f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.055093322f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20329121f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <0.33053955f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_89_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (data[15 /* X16 */] <0.15987012f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35788554f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1655126f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.35541755f ? 
                        0.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.38750935f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15019532f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (data[13 /* X14 */] <0.18253955f ? 
            0.0f : 
             (data[30 /* X31 */] <0.15252922f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3600469f ? 
             (data[30 /* X31 */] <0.13335821f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.57028604f ? 
                     (data[27 /* X28 */] <-0.2922714f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30914664f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.17367835f ? 
                             (data[0 /* X1 */] <0.25120583f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[19 /* X20 */] <-0.33744624f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.34777433f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.24458788f ? 
             (data[18 /* X19 */] <-0.08554746f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3029493f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.15822595f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.27680233f ? 
                        0.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2917098f ? 
                             (data[1 /* X2 */] <-0.37669083f ? 
                                 (data[22 /* X23 */] <0.1372483f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)))) : 
             (data[19 /* X20 */] <-0.046885546f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08750699f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06940808f ? 
         (data[11 /* X12 */] <-1.1562082f ? 
            1.0f : 
            0.0f) : 
         (data[20 /* X21 */] <0.15548648f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6722158f ? 
                 (data[4 /* X5 */] <0.17431444f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24412857f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22262597f ? 
                     (data[25 /* X26 */] <0.06571445f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_90_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17897986f ? 
         (data[9 /* X10 */] <-0.60910213f ? 
             (data[1 /* X2 */] <-0.44309875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.21977633f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.2558283f ? 
                    1.0f : 
                    0.0f))) : 
         (data[33 /* X34 */] <-0.20019531f ? 
             (data[9 /* X10 */] <-0.2419564f ? 
                 (data[13 /* X14 */] <0.27995202f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[32 /* X33 */] <-0.118304454f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.17019758f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1730556f ? 
             (data[31 /* X32 */] <0.13398527f ? 
                 (data[26 /* X27 */] <-0.21611626f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.02451172f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.22014767f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.118689865f ? 
                    1.0f : 
                    0.0f)) : 
             (data[18 /* X19 */] <0.12759866f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15479071f ? 
                    1.0f : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.11526139f ? 
                     (data[5 /* X6 */] <0.2653128f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1435039f ? 
            1.0f : 
            0.0f) : 
         (data[30 /* X31 */] <0.1337939f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.22992375f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.32415226f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.2023838f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.27532613f ? 
         (data[17 /* X18 */] <-0.3258427f ? 
             (data[1 /* X2 */] <0.21257432f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.20934995f ? 
             (data[0 /* X1 */] <-0.2243278f ? 
                0.0f : 
                1.0f) : 
             (data[33 /* X34 */] <-0.42490235f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.8248507f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.01073789f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.36159477f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.63563144f ? 
                 (data[31 /* X32 */] <0.17055993f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.053154036f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_91_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
        0.021276595f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0584375f ? 
             (data[15 /* X16 */] <0.118236534f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18752621f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.40186006f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <0.23151386f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17860426f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[7 /* X8 */] <0.10995317f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.102158815f ? 
                1.0f : 
                0.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36442465f ? 
             (data[10 /* X11 */] <-0.46332976f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.37348565f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.36531827f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19130446f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11218394f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.27814326f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X12 */] <-0.2348118f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22737512f ? 
                    1.0f : 
                     (data[24 /* X25 */] <0.21054354f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20842151f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.42109376f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[35 /* X36 */] <0.180625f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.019969104f ? 
                 (data[24 /* X25 */] <-0.54753876f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[17 /* X18 */] <0.28075045f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3603125f ? 
            0.0f : 
             (data[5 /* X6 */] <0.19137724f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.25436398f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_92_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[28 /* X29 */] <0.14417075f ? 
             (data[34 /* X35 */] <-0.68898875f ? 
                0.0f : 
                1.0f) : 
             (data[35 /* X36 */] <-0.6603125f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09714626f ? 
             (data[5 /* X6 */] <0.2815786f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.3632235f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.35435447f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.07180152f ? 
             (data[34 /* X35 */] <-0.35677218f ? 
                 (data[26 /* X27 */] <0.21064045f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.36703566f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11406365f ? 
             (data[24 /* X25 */] <-0.22282024f ? 
                 (data[34 /* X35 */] <-0.5688253f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.10136053f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.432569f ? 
            1.0f : 
            0.0f) : 
         (data[30 /* X31 */] <0.1320511f ? 
             (data[35 /* X36 */] <0.22015625f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.41432032f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22794002f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[6 /* X7 */] <0.16362792f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38710648f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.14993918f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.79540527f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.14960723f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3639024f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42325512f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[32 /* X33 */] <-0.5479915f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17424588f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.318507f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.54f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <0.51942486f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_93_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11953125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.21465652f ? 
             (data[20 /* X21 */] <0.15110873f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22064093f ? 
                     (data[16 /* X17 */] <-0.27683842f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1906639f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1171965f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.540345f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11869728f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.1171965f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.50923425f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (data[9 /* X10 */] <-0.004520818f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3786156f ? 
                 (data[23 /* X24 */] <0.12471534f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.07167687f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37158823f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.21702322f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.09524f ? 
            0.0f : 
             (data[5 /* X6 */] <0.16578983f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.102158815f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.099881254f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97632307f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21118203f ? 
                 (data[15 /* X16 */] <0.13905333f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19535944f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.30995592f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.37808502f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23669763f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4609375f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2040081f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.47308835f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.8144233f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_94_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27831066f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.50111455f ? 
             (data[35 /* X36 */] <0.0584375f ? 
                 (data[17 /* X18 */] <-0.2445926f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.5923317f ? 
                        1.0f : 
                        0.0f) : 
                     (data[31 /* X32 */] <0.102030315f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.17543945f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.106818214f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.21875077f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28972724f ? 
             (data[34 /* X35 */] <-0.21186922f ? 
                 (data[2 /* X3 */] <-0.51302785f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5193444f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.19970703f ? 
            0.0f : 
             (data[0 /* X1 */] <0.07526573f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.14100383f ? 
         (data[9 /* X10 */] <-0.116643175f ? 
            0.0f : 
             (data[34 /* X35 */] <0.16629219f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10485294f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4826377f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4047625f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97377056f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20292036f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.19265611f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38080323f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.013085498f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.016478661f ? 
        0.0f : 
         (data[21 /* X22 */] <0.2073403f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23877455f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.46243274f ? 
                    1.0f : 
                    0.0f)) : 
             (data[34 /* X35 */] <1.8390625E-4f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.59273255f ? 
                     (data[25 /* X26 */] <-0.208255f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_95_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17897986f ? 
         (data[27 /* X28 */] <-0.1595412f ? 
             (data[17 /* X18 */] <-0.07764037f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.16720816f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2749324f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.026784688f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18713483f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33774918f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20804587f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1782471f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09714626f ? 
                     (data[31 /* X32 */] <0.089857f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[11 /* X12 */] <0.23444046f ? 
                 (data[23 /* X24 */] <0.089627415f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (data[22 /* X23 */] <0.40554765f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.5523437f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.46869475f ? 
                 (data[16 /* X17 */] <-0.29857874f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23573856f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.1628969f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29525444f ? 
             (data[33 /* X34 */] <-0.42490235f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[6 /* X7 */] <0.16362792f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.34401488f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.79540527f ? 
                 (data[4 /* X5 */] <0.20182014f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9987399f ? 
                         (data[15 /* X16 */] <0.111789316f ? 
                             (data[14 /* X15 */] <0.22285728f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22059506f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16629219f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4300872f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <0.09837902f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23133862f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.18396588f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22395997f ? 
                 (data[27 /* X28 */] <0.19780935f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_96_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3451632f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16514379f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29892614f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.014029066f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.099897474f ? 
                         (data[13 /* X14 */] <0.20510092f ? 
                            0.0f : 
                            1.0f) : 
                         (data[18 /* X19 */] <0.22221285f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.15230955f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.22829467f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (data[23 /* X24 */] <0.06957717f ? 
             (data[28 /* X29 */] <0.16194479f ? 
                0.0f : 
                 (data[33 /* X34 */] <0.12734374f ? 
                     (data[29 /* X30 */] <0.16598941f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[25 /* X26 */] <-0.17890112f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.30737516f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.12659505f ? 
             (data[15 /* X16 */] <0.10534995f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3341429f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.059335936f ? 
         (data[3 /* X4 */] <-0.29931f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3508934f ? 
                 (data[7 /* X8 */] <0.11698351f ? 
                     (data[21 /* X22 */] <0.1598315f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.19551776f ? 
             (data[25 /* X26 */] <-0.5653937f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.109264374f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5852093f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2501257f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.6119726f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24000424f ? 
             (data[3 /* X4 */] <-0.2309048f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26884922f ? 
                     (data[29 /* X30 */] <0.14542688f ? 
                         (data[11 /* X12 */] <-0.20548353f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[10 /* X11 */] <0.15055962f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[29 /* X30 */] <0.15087618f ? 
                 (data[33 /* X34 */] <-0.7714844f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.77007216f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18810548f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22030875f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_01_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (data[3 /* X4 */] <-0.6892946f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.7848366f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.1948912f ? 
            0.0f : 
             (data[17 /* X18 */] <0.10712012f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_97_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.21229486f ? 
        0.0f : 
         (data[31 /* X32 */] <0.11420363f ? 
             (data[5 /* X6 */] <0.22316952f ? 
                 (data[20 /* X21 */] <0.15668042f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.42018616f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3786634f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.44254747f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32076445f ? 
         (data[23 /* X24 */] <0.09526654f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.04616015f ? 
                 (data[9 /* X10 */] <-0.12133104f ? 
                    0.0f : 
                     (data[11 /* X12 */] <0.08978449f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.19005488f ? 
            0.0f : 
             (data[6 /* X7 */] <0.24292792f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
        0.8f : 
         (data[5 /* X6 */] <0.10561198f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3849176f ? 
                 (data[18 /* X19 */] <-0.65710235f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38483247f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.41095197f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.21577597f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47332796f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.26414007f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.35904756f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.20888954f ? 
                     (data[26 /* X27 */] <-0.11598885f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.42490235f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20364176f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23036525f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21194856f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6439073f ? 
             (data[6 /* X7 */] <0.097129725f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.20172639f ? 
             (data[6 /* X7 */] <0.18460864f ? 
                 (data[23 /* X24 */] <0.24501681f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_98_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (data[32 /* X33 */] <-0.21317042f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.5276638f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.258851f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.48786995f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27602613f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.25361282f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.15120964f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (data[4 /* X5 */] <0.11545223f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35103196f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23592721f ? 
            1.0f : 
            0.0f) : 
         (data[18 /* X19 */] <-0.3434799f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.77004296f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-1.166603f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.29863584f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4047625f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2117222f ? 
                             (data[17 /* X18 */] <-0.16623636f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[4 /* X5 */] <0.1943936f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4153683f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.018078923f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2849946f ? 
                         (data[0 /* X1 */] <0.22275792f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.26596826f ? 
                 (data[0 /* X1 */] <0.16744834f ? 
                     (data[17 /* X18 */] <0.06705158f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.1736327f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.39114657f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.50520384f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.051396437f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[19 /* X20 */] <0.83028525f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_01_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.321745f ? 
            0.0f : 
            1.0f) : 
         (data[28 /* X29 */] <0.27546936f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_99_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19608018f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1984338f ? 
             (data[27 /* X28 */] <-0.43521163f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09660915f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.33348262f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2796875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[26 /* X27 */] <0.25571203f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.97172624f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.13268158f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.33658242f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.495f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.41776034f ? 
            1.0f : 
            0.0f) : 
        0.032258064f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_01_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.14100383f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.04789277f ? 
            0.0f : 
             (data[20 /* X21 */] <0.1764693f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.107445955f ? 
                     (data[9 /* X10 */] <-0.26107547f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3745019f ? 
            0.0f : 
             (data[4 /* X5 */] <0.2595821f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.21577597f ? 
         (data[15 /* X16 */] <0.13806206f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.26414007f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32645696f ? 
                     (data[31 /* X32 */] <0.06551036f ? 
                         (data[34 /* X35 */] <0.32886624f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[5 /* X6 */] <0.13672845f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15377605f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.093246624f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[6 /* X7 */] <0.15971626f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.399413f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.31506336f ? 
                     (data[35 /* X36 */] <-0.38f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.5035349f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_01_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14866541f ? 
            0.0f : 
             (data[20 /* X21 */] <0.15826702f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.38272917f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22485217f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.23372675f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.042799097f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23028393f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_100_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[23 /* X24 */] <0.073336594f ? 
             (data[7 /* X8 */] <0.11698351f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.026810998f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11720506f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19971226f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22297673f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2572812f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.27492675f ? 
         (data[23 /* X24 */] <0.047647215f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.72404784f ? 
                 (data[28 /* X29 */] <0.20896001f ? 
                     (data[19 /* X20 */] <-0.6079779f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.35642272f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4245768f ? 
             (data[16 /* X17 */] <-0.3230366f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <-0.33955607f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[13 /* X14 */] <0.18134686f ? 
            0.0f : 
             (data[22 /* X23 */] <0.17085397f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13969712f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.87960935f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.024555625f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.19637352f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41933727f ? 
                         (data[9 /* X10 */] <-0.34308636f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.55875f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3076738f ? 
             (data[7 /* X8 */] <0.070895724f ? 
                 (data[8 /* X9 */] <0.20095941f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4255597f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.18275458f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.529616f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20427495f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41292998f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18422005f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.19199258f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21118203f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2685264f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.9289141f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0477931f ? 
             (data[29 /* X30 */] <0.23037498f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4201057f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_101_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[31 /* X32 */] <0.10887781f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0021559068f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.19395341f ? 
            1.0f : 
             (data[16 /* X17 */] <0.045400303f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.21590191f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[31 /* X32 */] <0.09670449f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.2822735f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.44308594f ? 
                    0.0f : 
                    1.0f))) : 
         (data[20 /* X21 */] <0.113300875f ? 
             (data[12 /* X13 */] <0.12467463f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (data[10 /* X11 */] <-0.15485035f ? 
             (data[20 /* X21 */] <0.21154238f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19358815f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.40554765f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[20 /* X21 */] <0.15787435f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.95337284f ? 
                 (data[30 /* X31 */] <0.19609974f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.23488152f ? 
                         (data[33 /* X34 */] <-0.66484374f ? 
                            0.0f : 
                            1.0f) : 
                         (data[9 /* X10 */] <-0.23755944f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
        0.022727273f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[27 /* X28 */] <1.0273732f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.7871608f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.023809524f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_102_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[18 /* X19 */] <0.17971262f ? 
             (data[24 /* X25 */] <-0.28736377f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.021578358f ? 
                 (data[15 /* X16 */] <0.11526271f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6948991f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43434116f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28062654f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3095225f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.046836007f ? 
         (data[6 /* X7 */] <0.13091223f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X8 */] <0.14041798f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-1.8566762E-4f ? 
                 (data[21 /* X22 */] <0.14807674f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.48222443f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.24717304f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2016955f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.77715135f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23726799f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3200865f ? 
                            0.0f : 
                             (data[1 /* X2 */] <-0.37650397f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[2 /* X3 */] <0.26484326f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.15560378f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[15 /* X16 */] <0.19852988f ? 
            1.0f : 
             (data[9 /* X10 */] <0.1713574f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.039747436f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.7127352f ? 
             (data[32 /* X33 */] <-0.83258945f ? 
                 (data[2 /* X3 */] <0.3036755f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.46326977f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.3036755f ? 
                        1.0f : 
                        0.0f))) : 
             (data[21 /* X22 */] <0.13142417f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_01_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_103_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21013254f ? 
         (data[16 /* X17 */] <-0.21161743f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.08f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.065079145f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.10138485f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.30747887f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.21059129f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.29464155f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[16 /* X17 */] <-0.21161743f ? 
            0.0f : 
             (data[15 /* X16 */] <0.11030633f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.12183022f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.67004204f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[25 /* X26 */] <-0.55316293f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5086714f ? 
                 (data[4 /* X5 */] <0.15451033f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21130624f ? 
                        0.0f : 
                         (data[18 /* X19 */] <-0.5046877f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)) : 
        0.75f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (data[32 /* X33 */] <-0.49962848f ? 
             (data[15 /* X16 */] <0.3085615f ? 
                 (data[24 /* X25 */] <-0.41645086f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <0.052337322f ? 
                     (data[9 /* X10 */] <0.19974272f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28728575f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.09759107f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2685073f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5974669f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
        0.034883723f : 
         (data[35 /* X36 */] <0.4609375f ? 
            0.0f : 
             (data[29 /* X30 */] <0.18745126f ? 
                 (data[4 /* X5 */] <0.1765149f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_104_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10428131f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.67387694f ? 
             (data[28 /* X29 */] <0.11148944f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021204336f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11201923f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20844264f ? 
         (data[19 /* X20 */] <-0.3712627f ? 
             (data[33 /* X34 */] <0.10068359f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.04569907f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.5479915f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.19976898f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11469022f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.14100383f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10005425f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.59562945f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.35168353f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.40257204f ? 
                 (data[29 /* X30 */] <0.17964695f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.37496862f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.019726563f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.030307798f ? 
            0.0f : 
            1.0f) : 
         (data[32 /* X33 */] <-0.4047625f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2549208f ? 
                 (data[0 /* X1 */] <-0.08605386f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.16015221f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.10846964f ? 
                             (data[8 /* X9 */] <0.4127554f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.113596134f ? 
                 (data[29 /* X30 */] <0.24988575f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (data[3 /* X4 */] <-0.4682338f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.11986516f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.59449446f ? 
             (data[3 /* X4 */] <-0.8248507f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.11077985f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_105_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[9 /* X10 */] <-0.52995694f ? 
             (data[3 /* X4 */] <-0.2712872f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.05704577f ? 
                 (data[32 /* X33 */] <-0.21130948f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.053135924f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16782379f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1648265f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3628086f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43237787f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.037037037f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
        0.85714287f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.87960935f ? 
             (data[24 /* X25 */] <-0.09373315f ? 
                 (data[18 /* X19 */] <-0.32296255f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[19 /* X20 */] <-0.17047745f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23343469f ? 
                 (data[17 /* X18 */] <-0.035345796f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.5378705f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.7378462f ? 
                            1.0f : 
                             (data[15 /* X16 */] <0.117245264f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
        0.022727273f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[32 /* X33 */] <-0.83258945f ? 
             (data[3 /* X4 */] <-0.8083731f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.8f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_106_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4150409f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.21465652f ? 
             (data[1 /* X2 */] <-0.4641139f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.17171921f ? 
                     (data[17 /* X18 */] <-0.057606097f ? 
                         (data[27 /* X28 */] <-0.23101132f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[31 /* X32 */] <0.12942028f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23583584f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16638233f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23074755f ? 
                 (data[24 /* X25 */] <-0.28736377f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.14518395f ? 
                    1.0f : 
                    0.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (data[31 /* X32 */] <0.19333018f ? 
             (data[10 /* X11 */] <-0.48174646f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22969681f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.129978f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.21434832f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (data[3 /* X4 */] <-0.31599385f ? 
             (data[7 /* X8 */] <0.15916555f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16405778f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.15280765f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24183765f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25434187f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2833209f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19869418f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.20333004f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.11328485f ? 
                         (data[25 /* X26 */] <-0.3707549f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22301403f ? 
             (data[10 /* X11 */] <0.043128982f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4520622f ? 
            0.0f : 
             (data[0 /* X1 */] <0.5418232f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_107_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[9 /* X10 */] <-0.60910213f ? 
            1.0f : 
            0.0f) : 
         (data[18 /* X19 */] <0.17971262f ? 
             (data[13 /* X14 */] <0.24694519f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.12347924f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0461452f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.22874409f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.11551792f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.7432438f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21029021f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1782471f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.16680905f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10485294f ? 
                         (data[19 /* X20 */] <-0.7432438f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[30 /* X31 */] <0.13945808f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.28868124f ? 
                     (data[2 /* X3 */] <0.025501678f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
        0.04225352f : 
         (data[24 /* X25 */] <-0.33577144f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.29419947f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.4314797f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.95845556f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.26391092f ? 
                 (data[19 /* X20 */] <0.25434187f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.026575955f ? 
                         (data[2 /* X3 */] <-0.36349767f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.31609473f ? 
             (data[7 /* X8 */] <0.056835044f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[26 /* X27 */] <-0.006027479f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3555678f ? 
                 (data[7 /* X8 */] <0.24040504f ? 
                     (data[21 /* X22 */] <0.31656155f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6439073f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.7127352f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_108_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1906639f ? 
             (data[13 /* X14 */] <0.28431636f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19155915f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.10752965f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.25361282f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.29369235f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.30021897f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21093145f ? 
            1.0f : 
             (data[25 /* X26 */] <0.051037513f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[26 /* X27 */] <-0.10520646f ? 
             (data[10 /* X11 */] <-0.3282741f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10240678f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4525639f ? 
             (data[24 /* X25 */] <-0.28736377f ? 
                 (data[18 /* X19 */] <-0.0064090947f ? 
                    0.0f : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.22f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.19598801f ? 
                         (data[29 /* X30 */] <0.26284757f ? 
                             (data[3 /* X4 */] <-0.76645726f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28425938f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.08909312f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39592904f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5940841f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24106798f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_109_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (data[13 /* X14 */] <0.21752533f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.11681312f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.292389f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.17826466f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.47260538f ? 
                 (data[21 /* X22 */] <0.09713388f ? 
                     (data[31 /* X32 */] <0.11157638f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[0 /* X1 */] <-0.4179113f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (data[31 /* X32 */] <0.09290033f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.21186922f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.47884268f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.41330218f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.037037037f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.54827064f ? 
             (data[5 /* X6 */] <0.1470159f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.46869475f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.38413644f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3702501f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30038437f ? 
                            0.0f : 
                             (data[19 /* X20 */] <0.11569437f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15749745f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35954243f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97377056f ? 
                     (data[2 /* X3 */] <-0.42119315f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.099897474f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2066436f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.23815519f ? 
                     (data[19 /* X20 */] <0.72777236f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.15789048f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23669763f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20241004f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.10712012f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4578064f ? 
             (data[27 /* X28 */] <0.8512504f ? 
                 (data[32 /* X33 */] <-0.9255953f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_110_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.064124264f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
             (data[9 /* X10 */] <-0.61130065f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31262657f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.18749797f ? 
                        0.0f : 
                        1.0f))) : 
             (data[26 /* X27 */] <0.07316461f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.17019758f ? 
         (data[19 /* X20 */] <-0.49596092f ? 
             (data[9 /* X10 */] <-0.61130065f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.54457206f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
         (data[19 /* X20 */] <0.02819427f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.58676434f ? 
             (data[5 /* X6 */] <0.1669785f ? 
                 (data[30 /* X31 */] <0.14032948f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.28369224f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.45333287f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31635433f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.346429f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.20915362f ? 
         (data[25 /* X26 */] <-0.44797823f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08917069f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.11993494f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.19727658f ? 
             (data[5 /* X6 */] <0.1403617f ? 
                 (data[31 /* X32 */] <0.17507021f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22443645f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6186722f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23669763f ? 
         (data[32 /* X33 */] <-0.8809525f ? 
             (data[0 /* X1 */] <-0.16649477f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.50046873f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22343561f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_111_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.15885194f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17971262f ? 
             (data[20 /* X21 */] <0.09777975f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X9 */] <0.12375091f ? 
                1.0f : 
                 (data[8 /* X9 */] <0.3493768f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.00700671f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[34 /* X35 */] <-0.49990806f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0031720072f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.08224867f ? 
                 (data[23 /* X24 */] <0.08210857f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1906639f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2127964f ? 
                 (data[2 /* X3 */] <-0.43413725f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.21874616f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.07768368f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
        0.01923077f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (data[6 /* X7 */] <0.11704363f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3625846f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.38780057f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26594752f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.1628969f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0744025f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[14 /* X15 */] <0.2376211f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3134276f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.1689763f ? 
                0.0f : 
                1.0f)) : 
         (data[26 /* X27 */] <-0.04112158f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26797962f ? 
                 (data[3 /* X4 */] <-0.4077549f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.42028052f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18612438f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14103588f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[8 /* X9 */] <-0.37857646f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.8809525f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5040625f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.23232605f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.13278423f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[2 /* X3 */] <-0.04581474f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_112_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[10 /* X11 */] <-0.69046885f ? 
            1.0f : 
             (data[31 /* X32 */] <0.07920535f ? 
                 (data[3 /* X4 */] <-0.19086511f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[26 /* X27 */] <0.0046533337f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.024757013f ? 
                1.0f : 
                 (data[3 /* X4 */] <0.14281152f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.21363632f ? 
             (data[31 /* X32 */] <0.09898698f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.30053598f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.10068359f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.49317196f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[34 /* X35 */] <-0.118212424f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.52454174f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4826377f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29794985f ? 
                 (data[3 /* X4 */] <-0.29931f ? 
                     (data[4 /* X5 */] <0.14629069f ? 
                         (data[35 /* X36 */] <0.37375f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2962004f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.13354386f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19570744f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.50027585f ? 
             (data[19 /* X20 */] <-0.15145569f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.15519083f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2954405f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21822938f ? 
                             (data[30 /* X31 */] <0.14206664f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22500542f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[22 /* X23 */] <0.12083729f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4826377f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.21484712f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.076822855f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4344687f ? 
                 (data[33 /* X34 */] <-0.7248047f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3979049f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[25 /* X26 */] <0.17579146f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_113_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
        0.021276595f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3083593f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2127964f ? 
                 (data[23 /* X24 */] <0.06456461f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19057867f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.029414056f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.34055188f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.4811662f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21061082f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1525331f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[8 /* X9 */] <-0.335063f ? 
             (data[27 /* X28 */] <0.1620743f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.300838f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.11296217f ? 
         (data[10 /* X11 */] <-0.54006594f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30038437f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.56035477f ? 
                     (data[24 /* X25 */] <-0.5086559f ? 
                         (data[16 /* X17 */] <-0.60294336f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.1451151f ? 
            0.0f : 
             (data[20 /* X21 */] <0.21526782f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21832046f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97377056f ? 
                         (data[1 /* X2 */] <-0.16149557f ? 
                            1.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.375f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2159024f ? 
                                    1.0f : 
                                     (data[21 /* X22 */] <0.29780397f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.4753662f ? 
         (data[10 /* X11 */] <-0.08578779f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.40589336f ? 
                 (data[24 /* X25 */] <0.23820506f ? 
                     (data[11 /* X12 */] <-0.92278725f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.44924438f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44795474f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.022091115f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_114_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
        0.022222223f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.46848503f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12683725f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X6 */] <0.16549979f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40154397f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12471534f ? 
             (data[31 /* X32 */] <0.086813666f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (data[18 /* X19 */] <-0.6204642f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.5360398f ? 
                1.0f : 
                0.0f)) : 
         (data[31 /* X32 */] <0.19713435f ? 
             (data[20 /* X21 */] <0.21080536f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19739749f ? 
            0.0f : 
             (data[8 /* X9 */] <-0.41647527f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.29798734f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32500225f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2525351f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0957092f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.50559974f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.99734676f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.282611f ? 
            0.0f : 
             (data[30 /* X31 */] <0.25884128f ? 
                1.0f : 
                0.0f)) : 
         (data[31 /* X32 */] <0.23593679f ? 
             (data[4 /* X5 */] <0.17046364f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_115_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20792755f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.12323861f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.41985998f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.075265504f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19180852f ? 
             (data[11 /* X12 */] <-0.15562113f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22862425f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28570783f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.730577f ? 
            0.0f : 
            1.0f) : 
         (data[15 /* X16 */] <0.17573054f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20676339f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.09514554f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
        0.8f : 
         (data[7 /* X8 */] <0.09706421f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30328318f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.28645563f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.4419906f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[30 /* X31 */] <0.1673432f ? 
            1.0f : 
             (data[20 /* X21 */] <0.15986423f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.23817928f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26719025f ? 
                         (data[16 /* X17 */] <-0.776866f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1768235f ? 
                                1.0f : 
                                 (data[2 /* X3 */] <0.19700375f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)))) : 
         (data[7 /* X8 */] <0.05722562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21194856f ? 
         (data[11 /* X12 */] <-0.366789f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20419843f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.2431612f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.42544553f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_116_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[20 /* X21 */] <0.14235322f ? 
             (data[26 /* X27 */] <0.41815338f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.023064453f ? 
             (data[15 /* X16 */] <0.11922781f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.43133497f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04723103f ? 
                1.0f : 
                 (data[32 /* X33 */] <0.11949991f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[4 /* X5 */] <0.15946135f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.26164138f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16072784f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X13 */] <0.12183022f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32685077f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.05515427f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.39626285f ? 
            1.0f : 
            0.0f) : 
         (data[14 /* X15 */] <0.22780472f ? 
             (data[10 /* X11 */] <-0.2883713f ? 
                 (data[15 /* X16 */] <0.10931505f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2260976f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (data[5 /* X6 */] <0.15108235f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22668567f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.047614563f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20303951f ? 
             (data[17 /* X18 */] <0.10712012f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.38887542f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.12442218f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2054809f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.20732127f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3776987f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23757756f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.29990953f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X10 */] <0.07902133f ? 
            0.0f : 
             (data[15 /* X16 */] <0.20150371f ? 
                1.0f : 
                 (data[10 /* X11 */] <0.033920642f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_117_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.48465848f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35788554f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <-0.75811535f ? 
                0.0f : 
                1.0f)) : 
         (data[28 /* X29 */] <0.14933096f ? 
             (data[24 /* X25 */] <-0.12139467f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15040472f ? 
            1.0f : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_01_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2649095f ? 
             (data[16 /* X17 */] <-0.67903453f ? 
                 (data[24 /* X25 */] <0.4779382f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[19 /* X20 */] <0.55985826f ? 
                 (data[11 /* X12 */] <-0.45966184f ? 
                     (data[7 /* X8 */] <0.14666717f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24106798f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[0 /* X1 */] <-0.12177463f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.35040104f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.29295325f ? 
                    1.0f : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.15348655f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.30133465f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.021329405f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10604742f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.14879417f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[9 /* X10 */] <0.012514732f ? 
                        1.0f : 
                         (data[26 /* X27 */] <-0.12504226f ? 
                            0.0f : 
                             (data[25 /* X26 */] <0.15573297f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24665216f ? 
             (data[35 /* X36 */] <0.37828124f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.23616475f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6112071f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_118_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4150409f ? 
            0.0f : 
            1.0f) : 
         (data[18 /* X19 */] <0.17971262f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2934436f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18550019f ? 
                    0.0f : 
                     (data[16 /* X17 */] <0.10361735f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0066257273f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19873129f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.077526286f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.35573924f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.34913507f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[29 /* X30 */] <0.13330886f ? 
             (data[4 /* X5 */] <0.16056158f ? 
                1.0f : 
                0.0f) : 
             (data[26 /* X27 */] <-0.2776253f ? 
                 (data[27 /* X28 */] <0.58579f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1159863f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.288292f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11844964f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.11296217f ? 
         (data[30 /* X31 */] <0.13727956f ? 
            1.0f : 
             (data[14 /* X15 */] <0.21092057f ? 
                 (data[17 /* X18 */] <-0.18226378f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15322211f ? 
                        1.0f : 
                         (data[17 /* X18 */] <0.038547445f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0344491f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.899375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02537772f ? 
             (data[4 /* X5 */] <0.20071991f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.27063304f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23806159f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.25853345f ? 
                    1.0f : 
                    0.0f))) : 
         (data[33 /* X34 */] <-0.42490235f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2298872f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0076924143f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_119_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[35 /* X36 */] <-0.2003125f ? 
             (data[34 /* X35 */] <-0.4732185f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.42441407f ? 
             (data[9 /* X10 */] <-0.12323861f ? 
                 (data[18 /* X19 */] <0.20462655f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25803915f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5015139f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.12704217f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27278486f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[30 /* X31 */] <0.20829947f ? 
             (data[13 /* X14 */] <0.22786203f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.12260812f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.102158815f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19808906f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19090648f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.21163511f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
             (data[5 /* X6 */] <0.11670232f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.13026305f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.15985356f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.48070312f ? 
             (data[20 /* X21 */] <0.16304806f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.34055188f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.114487514f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.14458258f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[30 /* X31 */] <0.15490948f ? 
                 (data[18 /* X19 */] <0.6208357f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42325512f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[35 /* X36 */] <0.48070312f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.641373f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3603125f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.37167704f ? 
                 (data[4 /* X5 */] <0.21062197f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_120_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[31 /* X32 */] <0.105073646f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15101543f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.19395341f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.1740088f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.20946136f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.36821172f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[31 /* X32 */] <0.10659531f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.051037513f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37109375f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.36918747f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.23421581f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06765106f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2336543f ? 
             (data[24 /* X25 */] <-0.36573806f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29416338f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16208725f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.327651f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3054377f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.10356716f ? 
                     (data[10 /* X11 */] <-0.27916294f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20790459f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.25386316f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24270241f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[32 /* X33 */] <-0.8768584f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.022727273f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21101366f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.32325318f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16032748f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2843076f ? 
            0.0f : 
             (data[25 /* X26 */] <0.060822133f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_121_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (data[19 /* X20 */] <-0.48465848f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.07451172f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.044093415f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.04f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
        0.83870965f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_01_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
        0.6666667f : 
         (data[2 /* X3 */] <-0.11538919f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3878472f ? 
                 (data[25 /* X26 */] <-0.5800707f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.19758314f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.046885546f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5951497f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.010186402f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.38060796f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.47507071f ? 
                         (data[34 /* X35 */] <0.16881396f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06940808f ? 
         (data[5 /* X6 */] <0.12261716f ? 
             (data[4 /* X5 */] <0.11270166f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <0.005961594f ? 
            0.0f : 
             (data[25 /* X26 */] <0.060822133f ? 
                 (data[16 /* X17 */] <0.0057858666f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11105918f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_122_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (data[31 /* X32 */] <0.105073646f ? 
             (data[21 /* X22 */] <0.14513806f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.18784682f ? 
             (data[9 /* X10 */] <-0.50137675f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.091986746f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18480162f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.14522338f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.36152962f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[34 /* X35 */] <-0.40448415f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1568963f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.088062964f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X13 */] <0.12183022f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
         (data[10 /* X11 */] <-0.6892938f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39592904f ? 
             (data[25 /* X26 */] <-0.5653937f ? 
                 (data[9 /* X10 */] <0.25489953f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.79860634f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.37648436f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.12822413f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.50027585f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42325512f ? 
                 (data[16 /* X17 */] <-0.12465611f ? 
                     (data[11 /* X12 */] <-0.22503571f ? 
                         (data[27 /* X28 */] <0.05486913f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[17 /* X18 */] <0.098216005f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.38371468f ? 
                 (data[34 /* X35 */] <0.16629219f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.035455365f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.35904655f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3034177f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_123_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20792755f ? 
            0.0f : 
             (data[31 /* X32 */] <0.105073646f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0038190503f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.10891715f ? 
             (data[35 /* X36 */] <-0.5992187f ? 
                0.0f : 
                1.0f) : 
             (data[35 /* X36 */] <-0.34046876f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32076445f ? 
         (data[34 /* X35 */] <-0.26134828f ? 
             (data[16 /* X17 */] <-0.17085432f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1845211f ? 
                     (data[15 /* X16 */] <0.10931505f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[11 /* X12 */] <0.06091489f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (data[12 /* X13 */] <0.1900963f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X3 */] <-0.864528f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.79860634f ? 
                1.0f : 
                 (data[18 /* X19 */] <-0.71572334f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38541374f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.16700654f ? 
                             (data[23 /* X24 */] <0.2405055f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[21 /* X22 */] <0.18040232f ? 
             (data[16 /* X17 */] <-0.51598203f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.378262f ? 
                     (data[23 /* X24 */] <0.11218394f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24672997f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.325f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.44200355f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2800562f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[33 /* X34 */] <-0.8990723f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18070672f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.54f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4327776f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_124_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[19 /* X20 */] <-0.17681804f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.35903195f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.11873218f ? 
             (data[14 /* X15 */] <0.22270021f ? 
                0.0f : 
                1.0f) : 
             (data[28 /* X29 */] <0.108049296f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18117814f ? 
                     (data[27 /* X28 */] <-0.5553263f ? 
                         (data[25 /* X26 */] <0.08528369f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2637846f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.13454746f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32076445f ? 
         (data[19 /* X20 */] <-0.5023015f ? 
             (data[19 /* X20 */] <-0.7262414f ? 
                 (data[17 /* X18 */] <0.07192643f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.14896609f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.47499502f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[13 /* X14 */] <0.21235697f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6615351f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.15485035f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21558107f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.22275792f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.16651331f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5055772f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23571908f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0299257f ? 
                 (data[2 /* X3 */] <-0.41650346f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.63555384f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.37976214f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X7 */] <0.19243196f ? 
             (data[22 /* X23 */] <0.18432f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.26621065f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16356067f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
        0.03448276f : 
         (data[10 /* X11 */] <0.035455365f ? 
            0.0f : 
             (data[9 /* X10 */] <0.017463958f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_125_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[7 /* X8 */] <0.073629744f ? 
             (data[35 /* X36 */] <-0.279375f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.102653116f ? 
                    0.0f : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.11325684f ? 
                 (data[20 /* X21 */] <0.15338509f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X13 */] <0.2185405f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.17578393f ? 
                0.0f : 
                 (data[33 /* X34 */] <0.07402344f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[34 /* X35 */] <-0.59533197f ? 
             (data[35 /* X36 */] <-0.739375f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.04788455f ? 
                 (data[15 /* X16 */] <0.11129761f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.5313624f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[12 /* X13 */] <0.12562278f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (data[7 /* X8 */] <0.076363765f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.38659358f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.899375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[20 /* X21 */] <0.16543593f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.52203125f ? 
                 (data[29 /* X30 */] <0.13477217f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36636806f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3642456f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.8604815f ? 
                    0.0f : 
                    1.0f))) : 
        0.022727273f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.4753662f ? 
         (data[25 /* X26 */] <0.097514465f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22443645f ? 
                 (data[32 /* X33 */] <-0.6651789f ? 
                     (data[14 /* X15 */] <0.21720305f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.945693f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_126_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16767836f ? 
         (data[9 /* X10 */] <-0.48818588f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.42067096f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19765745f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3182958f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16459882f ? 
                            0.0f : 
                             (data[35 /* X36 */] <-0.11f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3095225f ? 
             (data[31 /* X32 */] <0.08072701f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1742815f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <3.2117884E-4f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20093851f ? 
                 (data[28 /* X29 */] <0.16767836f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2573341f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49296874f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.65166837f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35103196f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37109375f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.68920696f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33116832f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.38817093f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[24 /* X25 */] <-0.3588227f ? 
             (data[10 /* X11 */] <-0.30064908f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.14768025f ? 
                 (data[30 /* X31 */] <0.12920706f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25024167f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1817638f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.046044167f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (data[5 /* X6 */] <0.20579466f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13828184f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3361528f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.399413f ? 
                 (data[35 /* X36 */] <-0.38f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.29921874f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28873816f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.019969104f ? 
                 (data[2 /* X3 */] <-0.1667302f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23232605f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.528651f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.599619f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.38007814f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30743295f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <-0.071702905f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_127_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (data[2 /* X3 */] <-0.5231278f ? 
             (data[7 /* X8 */] <0.20562199f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18572186f ? 
             (data[33 /* X34 */] <-0.20019531f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19996522f ? 
                     (data[26 /* X27 */] <0.009230825f ? 
                         (data[10 /* X11 */] <0.13828184f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.0342098f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (data[23 /* X24 */] <0.10403853f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17089346f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12659505f ? 
            1.0f : 
             (data[14 /* X15 */] <0.16772854f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19548897f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X8 */] <0.09979823f ? 
             (data[4 /* X5 */] <0.1457085f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.71890706f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08525955f ? 
                         (data[10 /* X11 */] <-0.30371854f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.47007275f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.32954946f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.25915262f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27636504f ? 
                 (data[15 /* X16 */] <0.13905333f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.21239726f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.14352491f ? 
                            0.0f : 
                             (data[32 /* X33 */] <-0.838096f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.26542267f ? 
                                    0.0f : 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4442241f ? 
                                        1.0f : 
                                        0.0f)))))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.39624348f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.20548353f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.16298614f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3166196f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23702744f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27973977f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0350307f ? 
                0.0f : 
                1.0f)) : 
         (data[31 /* X32 */] <0.25419676f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_128_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (data[22 /* X23 */] <0.17053336f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19971226f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.15885194f ? 
             (data[15 /* X16 */] <0.11030633f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.16298614f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.041734044f ? 
             (data[0 /* X1 */] <-0.30729216f ? 
                 (data[29 /* X30 */] <0.16155057f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.12616675f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32400516f ? 
                    1.0f : 
                    0.0f))) : 
         (data[21 /* X22 */] <0.123587675f ? 
            1.0f : 
             (data[18 /* X19 */] <0.08152242f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.10811697f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41307488f ? 
             (data[25 /* X26 */] <-0.5751783f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36044487f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.26684326f ? 
                         (data[13 /* X14 */] <0.14299928f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5250531f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (data[11 /* X12 */] <-0.18837538f ? 
             (data[14 /* X15 */] <0.2384064f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38641787f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.13885568f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.18226378f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.33273664f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18312992f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.1111603f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2516223f ? 
             (data[25 /* X26 */] <-0.7373508f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37974322f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.2594154f ? 
                        0.0f : 
                        1.0f))) : 
             (data[27 /* X28 */] <0.33053955f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_01_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[35 /* X36 */] <0.4609375f ? 
             (data[31 /* X32 */] <0.29376006f ? 
                 (data[29 /* X30 */] <0.24557503f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.083227456f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.24547419f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44630077f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12418419f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_129_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (data[20 /* X21 */] <0.11966851f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.15938237f ? 
             (data[21 /* X22 */] <0.1098738f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.06416072f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2954405f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.15404572f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.07616202f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08528369f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[10 /* X11 */] <-0.15638508f ? 
             (data[12 /* X13 */] <0.17871863f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.118689865f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.277195f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.44010967f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.5776245f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3863613f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.40554765f ? 
                     (data[33 /* X34 */] <-0.37539062f ? 
                         (data[1 /* X2 */] <-0.36324114f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.03849041f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27368578f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X13 */] <0.22944412f ? 
             (data[27 /* X28 */] <-0.118701145f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.42382812f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.19029833f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28968865f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.34743965f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3413132f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.13989827f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.75f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[10 /* X11 */] <-0.08271834f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.37220317f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4520622f ? 
            0.0f : 
             (data[0 /* X1 */] <0.5418232f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_130_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (data[22 /* X23 */] <0.19105302f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.35905868f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26910967f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21478513f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1327167f ? 
                    1.0f : 
                    0.0f) : 
                 (data[26 /* X27 */] <-0.044150066f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.12543945f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21638198f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28062654f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
             (data[30 /* X31 */] <0.13858667f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.21159016f ? 
                 (data[26 /* X27 */] <0.009230825f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47332796f ? 
             (data[17 /* X18 */] <-0.23093745f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24183765f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21848027f ? 
                         (data[18 /* X19 */] <-0.29365206f ? 
                             (data[25 /* X26 */] <-0.025549296f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21976848f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.22079758f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6435683f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22287367f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.547092f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44630077f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.29990953f ? 
                    0.0f : 
                    1.0f)) : 
             (data[26 /* X27 */] <-0.03959575f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24637938f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_131_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[9 /* X10 */] <-0.52995694f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.019134074f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.07920535f ? 
                 (data[21 /* X22 */] <0.20880964f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.4875068f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.38882306f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.008246158f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35138756f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14727187f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
        0.8f : 
         (data[5 /* X6 */] <0.12335651f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24809366f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3786156f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30938306f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.20550351f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14555794f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[12 /* X13 */] <0.1663928f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22538759f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0044006f ? 
                     (data[30 /* X31 */] <0.1328431f ? 
                         (data[8 /* X9 */] <-0.19037563f ? 
                            1.0f : 
                            0.0f) : 
                         (data[32 /* X33 */] <-0.91443455f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24139032f ? 
                     (data[27 /* X28 */] <-0.19017126f ? 
                         (data[1 /* X2 */] <0.14112276f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30743295f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.5545425f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.23008473f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_132_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (data[18 /* X19 */] <-0.1632203f ? 
             (data[21 /* X22 */] <0.16179062f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.16813678f ? 
             (data[33 /* X34 */] <-0.24970703f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.17423469f ? 
                    1.0f : 
                     (data[33 /* X34 */] <0.39701003f ? 
                        0.0f : 
                        1.0f))) : 
             (data[15 /* X16 */] <0.108323775f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6500363f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23650414f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28570783f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.17418128f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.11765625f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.1493674f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10967766f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.41776034f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.54827064f ? 
            1.0f : 
            0.0f) : 
         (data[16 /* X17 */] <-0.67903453f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.899375f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37158823f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.071702905f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.32954946f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2516223f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22941491f ? 
                 (data[2 /* X3 */] <-0.45355338f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2268663f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.23757163f ? 
                            1.0f : 
                             (data[24 /* X25 */] <0.26621425f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[21 /* X22 */] <0.15868823f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.17423469f ? 
                    0.0f : 
                     (data[10 /* X11 */] <0.086931676f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3920325f ? 
            0.0f : 
             (data[15 /* X16 */] <0.11030633f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[25 /* X26 */] <0.097514465f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47332796f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <0.21207128f ? 
                0.0f : 
                1.0f)) : 
        0.023809524f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_133_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.52116305f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.19259465f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19976388f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2856153f ? 
                     (data[31 /* X32 */] <0.09594366f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.04642606f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.2722347f ? 
                        0.0f : 
                        1.0f))) : 
             (data[32 /* X33 */] <0.2127964f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10849113f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[16 /* X17 */] <-0.23335776f ? 
            0.0f : 
             (data[7 /* X8 */] <0.09745479f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2525351f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (data[22 /* X23 */] <0.1647622f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X8 */] <0.09706421f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36920038f ? 
                 (data[28 /* X29 */] <0.10816401f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3058974f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19551776f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2268663f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36920038f ? 
                 (data[9 /* X10 */] <-0.64920145f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4375301f ? 
                         (data[28 /* X29 */] <0.13098355f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[30 /* X31 */] <0.11418718f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.29928032f ? 
            0.0f : 
             (data[9 /* X10 */] <0.008670047f ? 
                0.0f : 
                1.0f)) : 
        0.8f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_134_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (data[13 /* X14 */] <0.18532251f ? 
            0.0f : 
            1.0f) : 
         (data[14 /* X15 */] <0.22466348f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18301585f ? 
                 (data[1 /* X2 */] <-0.25396228f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0175f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.80081826f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[19 /* X20 */] <-0.7263356f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4729963f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3403731f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19607532f ? 
                 (data[22 /* X23 */] <0.19265611f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.135625f ? 
                        0.0f : 
                         (data[1 /* X2 */] <0.010569636f ? 
                            1.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16548966f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
        0.8f : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28253996f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.35040104f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.4100244f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.83984375f ? 
                     (data[30 /* X31 */] <0.1246441f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3903835f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.74348485f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (data[13 /* X14 */] <0.14755379f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4848536f ? 
             (data[23 /* X24 */] <0.0983994f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.14559436f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.299653f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2569432f ? 
                             (data[23 /* X24 */] <0.20860463f ? 
                                 (data[4 /* X5 */] <0.20116f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.664f ? 
                                    1.0f : 
                                     (data[21 /* X22 */] <0.25360823f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23669763f ? 
         (data[3 /* X4 */] <-0.8519619f ? 
             (data[9 /* X10 */] <-0.1935899f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6585938f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22921333f ? 
                    0.0f : 
                    1.0f))) : 
         (data[24 /* X25 */] <0.026133426f ? 
            0.0f : 
             (data[35 /* X36 */] <0.180625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_135_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.01658157f ? 
             (data[16 /* X17 */] <-0.23879285f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16601923f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.53763705f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3529036f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.18593135f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.04f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35138756f ? 
             (data[35 /* X36 */] <-0.69984376f ? 
                 (data[7 /* X8 */] <0.22790666f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26426426f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39592904f ? 
             (data[7 /* X8 */] <0.09745479f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2205254f ? 
                     (data[24 /* X25 */] <-0.43489188f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24750237f ? 
             (data[10 /* X11 */] <-0.48174646f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.026257869f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24105164f ? 
                         (data[33 /* X34 */] <-0.7203125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22529432f ? 
                 (data[35 /* X36 */] <0.1159375f ? 
                     (data[4 /* X5 */] <0.21808518f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06940808f ? 
         (data[6 /* X7 */] <0.097840935f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.54f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.34007105f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <0.090604186f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.029405892f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_136_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.4884975f ? 
             (data[26 /* X27 */] <-0.10673229f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.30593336f ? 
                     (data[35 /* X36 */] <-0.710625f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.4494053f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.07675434f ? 
             (data[15 /* X16 */] <0.10435867f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (data[27 /* X28 */] <-0.43521163f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2546311f ? 
                 (data[4 /* X5 */] <0.11595207f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
        0.8f : 
         (data[24 /* X25 */] <-0.5247918f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17585076f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.579801f ? 
                 (data[1 /* X2 */] <-0.3968654f ? 
                     (data[33 /* X34 */] <-0.28398436f ? 
                         (data[32 /* X33 */] <-0.4345244f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.12029029f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97377056f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.34075382f ? 
                 (data[1 /* X2 */] <-0.37164718f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.42627257f ? 
                             (data[24 /* X25 */] <-0.57096624f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
             (data[5 /* X6 */] <0.1484946f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.33384752f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_137_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.43943104f ? 
             (data[31 /* X32 */] <0.085292004f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.109185115f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.4811662f ? 
             (data[5 /* X6 */] <0.18398367f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X7 */] <0.19243196f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15228443f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (data[1 /* X2 */] <-0.37585023f ? 
            0.0f : 
             (data[31 /* X32 */] <0.089857f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.39107108f ? 
                    0.0f : 
                    1.0f))) : 
         (data[19 /* X20 */] <-0.5551397f ? 
             (data[6 /* X7 */] <0.24079429f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37138924f ? 
         (data[30 /* X31 */] <0.1337939f ? 
             (data[28 /* X29 */] <0.13786383f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.107445955f ? 
                    1.0f : 
                    0.0f)) : 
             (data[26 /* X27 */] <-0.24405703f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.57996875f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3113267f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.25648674f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.09959565f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[8 /* X9 */] <-0.14697267f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[20 /* X21 */] <0.16543593f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97377056f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19233048f ? 
                     (data[3 /* X4 */] <-0.43278065f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4375301f ? 
                            1.0f : 
                            0.0f) : 
                         (data[30 /* X31 */] <0.16559893f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.75558025f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[30 /* X31 */] <0.15252922f ? 
            0.0f : 
             (data[27 /* X28 */] <0.97377056f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30872506f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21284866f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20381133f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_138_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21027899f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23531319f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.20754895f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32685077f ? 
             (data[15 /* X16 */] <0.10138485f ? 
                 (data[10 /* X11 */] <-0.20549622f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.25143135f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32076445f ? 
         (data[21 /* X22 */] <0.17256582f ? 
             (data[15 /* X16 */] <0.13409695f ? 
                 (data[21 /* X22 */] <0.1437954f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09714626f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25023016f ? 
             (data[15 /* X16 */] <0.1400446f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[12 /* X13 */] <0.2137998f ? 
            0.0f : 
            1.0f) : 
         (data[18 /* X19 */] <-0.65710235f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8778125f ? 
                 (data[15 /* X16 */] <0.12914057f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3029347f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.122209065f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18040161f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22407685f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.5239258f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97377056f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.10717138f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.14399143f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.14888375f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.24171875f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.21163511f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.42431346f ? 
             (data[33 /* X34 */] <-0.72578126f ? 
                 (data[21 /* X22 */] <0.17499942f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[25 /* X26 */] <0.17579146f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.259989f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_139_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[28 /* X29 */] <0.117223f ? 
            1.0f : 
            0.0f) : 
         (data[1 /* X2 */] <-0.25396228f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2837796f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18802223f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1427366f ? 
                     (data[23 /* X24 */] <0.05203321f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.30906025f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0998062f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.46224055f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
        0.85714287f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2290275f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28371212f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.27391616f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.3859375f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47332796f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.21048865f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3162224f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.014573076f ? 
                         (data[10 /* X11 */] <-0.37738526f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2431702f ? 
                                1.0f : 
                                 (data[1 /* X2 */] <-0.12738231f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21769297f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6439073f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4028951f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.6953125f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.8f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_140_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (data[32 /* X33 */] <-0.19084902f ? 
             (data[20 /* X21 */] <0.11449481f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
             (data[31 /* X32 */] <0.08377034f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.10355492f ? 
                     (data[12 /* X13 */] <0.26484564f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.28927967f ? 
         (data[19 /* X20 */] <-0.48962033f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10090568f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <0.056026842f ? 
            0.0f : 
             (data[31 /* X32 */] <0.089857f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19938913f ? 
            0.0f : 
            1.0f) : 
         (data[18 /* X19 */] <-0.7171889f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.5996399f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6272776f ? 
                     (data[7 /* X8 */] <0.08205396f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09407477f ? 
                            0.0f : 
                            1.0f) : 
                         (data[16 /* X17 */] <-0.2713185f ? 
                             (data[18 /* X19 */] <0.05741452f ? 
                                 (data[6 /* X7 */] <0.17038442f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.28851634f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19201489f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23123227f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.18837538f ? 
             (data[17 /* X18 */] <-0.037571825f ? 
                 (data[15 /* X16 */] <0.18861713f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.37572148f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26015455f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.19728549f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[10 /* X11 */] <-0.08271834f ? 
                     (data[6 /* X7 */] <0.21590191f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.17382345f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (data[32 /* X33 */] <-0.9274554f ? 
             (data[23 /* X24 */] <0.38411537f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X12 */] <-0.38634118f ? 
                 (data[12 /* X13 */] <0.1900963f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32009727f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.71628416f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21476635f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_141_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2610198f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.12738784f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.49814093f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32685077f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
                 (data[35 /* X36 */] <-0.58125f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.6594194f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.06765106f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18724354f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (data[28 /* X29 */] <0.10919601f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14977814f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.046836007f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.59716415f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.3482255f ? 
            1.0f : 
             (data[9 /* X10 */] <0.07902133f ? 
                 (data[22 /* X23 */] <0.15931167f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.089857f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[20 /* X21 */] <0.16543593f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.5545425f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.180625f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3047211f ? 
                        1.0f : 
                         (data[5 /* X6 */] <0.20320693f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.48203126f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7491502f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23232605f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2219149f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19172075f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.27245674f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[10 /* X11 */] <0.0968443f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_142_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[9 /* X10 */] <-0.6134991f ? 
             (data[35 /* X36 */] <-0.13921875f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28972724f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22318916f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16134658f ? 
                     (data[14 /* X15 */] <0.19835562f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.54005164f ? 
                             (data[4 /* X5 */] <0.15891124f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16977967f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.47395465f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.4641918f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.5291458f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20290989f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.14100383f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2759097f ? 
             (data[25 /* X26 */] <-0.60942453f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.053154036f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09917927f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.12255713f ? 
                1.0f : 
                0.0f)) : 
        0.031746034f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[4 /* X5 */] <0.20044485f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36044487f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30241176f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.2046381f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.0029127232f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.041916404f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25115344f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3069369f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.20973007f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[21 /* X22 */] <0.21321768f ? 
            0.0f : 
             (data[25 /* X26 */] <0.23205303f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2733375f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23232605f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.34547853f ? 
                 (data[31 /* X32 */] <0.19333018f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19029833f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_143_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[9 /* X10 */] <-0.6134991f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.01658157f ? 
             (data[13 /* X14 */] <0.2851115f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11614061f ? 
                     (data[26 /* X27 */] <0.19473684f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.24999875f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[23 /* X24 */] <0.07458973f ? 
             (data[11 /* X12 */] <-0.17233647f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.57589376f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.038211364f ? 
             (data[26 /* X27 */] <0.21979544f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.15093769f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.47276244f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.17213646f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[24 /* X25 */] <-0.5155713f ? 
             (data[22 /* X23 */] <0.12809883f ? 
                0.0f : 
                1.0f) : 
             (data[26 /* X27 */] <0.109935634f ? 
                 (data[22 /* X23 */] <0.16923772f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.23883593f ? 
                        0.0f : 
                         (data[27 /* X28 */] <0.46326977f ? 
                             (data[21 /* X22 */] <0.20289932f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16610992f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.06497989f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.047851562f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.73883563f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3283163f ? 
                        0.0f : 
                         (data[10 /* X11 */] <0.05545559f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21577124f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.037571825f ? 
                1.0f : 
                 (data[17 /* X18 */] <0.067457296f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7625986f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[27 /* X28 */] <1.0273732f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23525266f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.5974669f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.34547853f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22284709f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_144_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.42441407f ? 
             (data[15 /* X16 */] <0.118236534f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[23 /* X24 */] <0.07897572f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.65592045f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.47392577f ? 
            1.0f : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_01_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[25 /* X26 */] <-0.5433783f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23702744f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.048242405f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30831507f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5043253f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14468654f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24672997f ? 
             (data[2 /* X3 */] <-0.45355338f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20134759f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.50559974f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.112424955f ? 
                             (data[32 /* X33 */] <-0.476191f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20116f ? 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.264f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.18531671f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23232605f ? 
         (data[33 /* X34 */] <-0.8990723f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.37200314f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.41339466f ? 
                    0.0f : 
                    1.0f))) : 
         (data[2 /* X3 */] <0.005961594f ? 
            0.0f : 
             (data[7 /* X8 */] <0.11307777f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.8545841f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_145_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (data[1 /* X2 */] <-0.74571705f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.53400445f ? 
             (data[4 /* X5 */] <0.11545223f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.434169f ? 
                    0.0f : 
                    1.0f)) : 
             (data[14 /* X15 */] <0.19868556f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30038437f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22082989f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (data[22 /* X23 */] <0.15097556f ? 
             (data[7 /* X8 */] <0.14119913f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.13114472f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2800278f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.20074959f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.05203321f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12659505f ? 
            1.0f : 
             (data[14 /* X15 */] <0.19316396f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28956538f ? 
            0.0f : 
            1.0f) : 
         (data[24 /* X25 */] <-0.36343294f ? 
             (data[35 /* X36 */] <0.22015625f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18073069f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3863613f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25293264f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.32954946f ? 
         (data[20 /* X21 */] <0.16026221f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47332796f ? 
                 (data[12 /* X13 */] <0.19578515f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.31268638f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.24703191f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[1 /* X2 */] <0.107498504f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.0061383443f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.7749407f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6190625f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2016777f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_146_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1466453f ? 
             (data[24 /* X25 */] <-0.17210744f ? 
                 (data[22 /* X23 */] <0.1259672f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.42745656f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07946033f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22318916f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[23 /* X24 */] <0.053286348f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.35508302f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.54762f ? 
                 (data[15 /* X16 */] <0.16284394f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12659505f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.23660874f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37138924f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.47434148f ? 
             (data[10 /* X11 */] <-0.59224653f ? 
                 (data[31 /* X32 */] <0.1111603f ? 
                    0.0f : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.1444797f ? 
                     (data[23 /* X24 */] <0.14948444f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3012704f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[23 /* X24 */] <0.09213369f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.25799027f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33226186f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41318992f ? 
                         (data[32 /* X33 */] <-0.9241075f ? 
                            0.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1225f ? 
                                1.0f : 
                                 (data[17 /* X18 */] <0.019651407f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.45940816f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4174937f ? 
            0.0f : 
             (data[22 /* X23 */] <0.15289927f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (data[3 /* X4 */] <-0.6183883f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.10292051f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_147_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[19 /* X20 */] <-0.51498264f ? 
             (data[29 /* X30 */] <0.10160384f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.36327064f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1710076f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09796875f ? 
                 (data[33 /* X34 */] <-0.42265624f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[29 /* X30 */] <0.1357477f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19671279f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2758789f ? 
                 (data[17 /* X18 */] <-0.3692503f ? 
                     (data[18 /* X19 */] <-0.12951322f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.16782379f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.51498264f ? 
             (data[2 /* X3 */] <-0.5587317f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.4633316f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[24 /* X25 */] <-0.36343294f ? 
             (data[29 /* X30 */] <0.21769297f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.26414007f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.07481588f ? 
                 (data[13 /* X14 */] <0.19923732f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.22885889f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22541992f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27556992f ? 
                            0.0f : 
                            1.0f) : 
                         (data[19 /* X20 */] <-0.03309807f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.75f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[24 /* X25 */] <0.033048805f ? 
             (data[21 /* X22 */] <0.1755045f ? 
                 (data[20 /* X21 */] <0.17737524f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X8 */] <0.10804232f ? 
                1.0f : 
                 (data[27 /* X28 */] <0.97377056f ? 
                     (data[15 /* X16 */] <0.18465202f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.16836393f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.08056805f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42325512f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.085737556f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[24 /* X25 */] <0.27969733f ? 
            0.0f : 
             (data[27 /* X28 */] <0.8512504f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6112071f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6190625f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.011509248f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_148_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[7 /* X8 */] <0.06698998f ? 
            1.0f : 
             (data[31 /* X32 */] <0.105073646f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3082936f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.17085432f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.38083547f ? 
                 (data[15 /* X16 */] <0.10138485f ? 
                     (data[23 /* X24 */] <0.05203321f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (data[1 /* X2 */] <-0.27497745f ? 
            0.0f : 
             (data[31 /* X32 */] <0.089857f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.60735637f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17738932f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[34 /* X35 */] <-0.69075584f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3095225f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37138924f ? 
         (data[7 /* X8 */] <0.086518705f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24189305f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.5996399f ? 
                 (data[26 /* X27 */] <-0.033492427f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.34873047f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[32 /* X33 */] <-0.594727f ? 
             (data[20 /* X21 */] <0.1304139f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.9271775f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4525639f ? 
                 (data[17 /* X18 */] <-0.36479822f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.11570738f ? 
                        1.0f : 
                         (data[5 /* X6 */] <0.14405847f ? 
                             (data[35 /* X36 */] <0.356f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28297508f ? 
            0.0f : 
             (data[26 /* X27 */] <-0.03654409f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22287367f ? 
         (data[14 /* X15 */] <0.19796295f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4609375f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.34491354f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[2 /* X3 */] <0.005961594f ? 
            0.0f : 
             (data[25 /* X26 */] <0.00700671f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_149_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.017857822f ? 
         (data[11 /* X12 */] <-0.20792755f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13975303f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17531604f ? 
                         (data[17 /* X18 */] <-0.20897613f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (data[29 /* X30 */] <0.13330886f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4510742f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.5699344f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.35589412f ? 
                     (data[3 /* X4 */] <-0.065736376f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.09714626f ? 
             (data[5 /* X6 */] <0.20468563f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38555378f ? 
             (data[24 /* X25 */] <-0.13983569f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23987237f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.14650126f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.23335776f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.20315857f ? 
                         (data[18 /* X19 */] <0.26910967f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4403324f ? 
                1.0f : 
                0.0f)) : 
        0.75f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.26414007f ? 
             (data[2 /* X3 */] <0.03184976f ? 
                1.0f : 
                 (data[19 /* X20 */] <0.0091725085f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.34748757f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30528387f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.14287531f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[12 /* X13 */] <0.21000725f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1277089f ? 
                     (data[10 /* X11 */] <-0.1318295f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8489397f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33599988f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.5734375f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_150_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (data[33 /* X34 */] <-0.22495118f ? 
            0.0f : 
            1.0f) : 
         (data[29 /* X30 */] <0.14013763f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <7.4304687E-4f ? 
                 (data[15 /* X16 */] <0.21042518f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.52157587f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20844264f ? 
         (data[34 /* X35 */] <-0.35677218f ? 
             (data[22 /* X23 */] <0.19009116f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.15468515f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[21 /* X22 */] <0.12162855f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13098104f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.24152647f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22072016f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
        0.85714287f : 
         (data[5 /* X6 */] <0.16549979f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3824411f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.16469474f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.20915362f ? 
         (data[17 /* X18 */] <0.098216005f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19906852f ? 
                 (data[32 /* X33 */] <-0.49776953f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.30225998f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.151995f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.18898891f ? 
                 (data[31 /* X32 */] <0.18115687f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[33 /* X34 */] <-0.6248535f ? 
             (data[35 /* X36 */] <0.4609375f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.18465202f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20241004f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.25024167f ? 
                     (data[31 /* X32 */] <0.2370359f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5737881f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_151_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (data[19 /* X20 */] <-0.62488616f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.24051078f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.15885194f ? 
             (data[7 /* X8 */] <0.10604742f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08210857f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.407248f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.36152962f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32076445f ? 
         (data[19 /* X20 */] <-0.5023015f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11804944f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.7268034f ? 
            0.0f : 
             (data[7 /* X8 */] <0.13338764f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[24 /* X25 */] <-0.5155713f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6272776f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.20870282f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4515625f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.24811012f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.19581021f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4848536f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.10497083f ? 
                 (data[17 /* X18 */] <-0.20007202f ? 
                     (data[35 /* X36 */] <-0.3225f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.41749337f ? 
             (data[33 /* X34 */] <-0.42490235f ? 
                 (data[23 /* X24 */] <0.2600545f ? 
                    1.0f : 
                     (data[0 /* X1 */] <0.012829299f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.33326358f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.4154974f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30743295f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22647282f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_152_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (data[16 /* X17 */] <-0.23879285f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.02170599f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14977814f ? 
                0.0f : 
                1.0f)) : 
         (data[20 /* X21 */] <0.15946627f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.21953897f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (data[16 /* X17 */] <-0.23879285f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.38020694f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[24 /* X25 */] <-0.36343294f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.5409322f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.23697656f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.14977814f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.49425507f ? 
                        0.0f : 
                         (data[24 /* X25 */] <0.5468297f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.18514359f ? 
             (data[32 /* X33 */] <-0.50148857f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9839806f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.39492658f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.19749288f ? 
                     (data[24 /* X25 */] <0.06291097f ? 
                        0.0f : 
                        1.0f) : 
                     (data[27 /* X28 */] <-0.21059129f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16963986f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44630077f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7950953f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.081054896f ? 
            0.0f : 
             (data[12 /* X13 */] <0.21977979f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.18832795f ? 
                     (data[24 /* X25 */] <0.3693426f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_153_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (data[9 /* X10 */] <-0.53655237f ? 
            1.0f : 
            0.0f) : 
         (data[16 /* X17 */] <-0.166778f ? 
             (data[18 /* X19 */] <0.2368681f ? 
                 (data[20 /* X21 */] <0.18215097f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[22 /* X23 */] <0.13879201f ? 
                 (data[19 /* X20 */] <-0.4727121f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32714638f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.15190469f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21195398f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[7 /* X8 */] <0.10995317f ? 
            0.0f : 
             (data[15 /* X16 */] <0.2054688f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.06607163f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.31651917f ? 
             (data[12 /* X13 */] <0.12183022f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[2 /* X3 */] <-0.11053516f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.08f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26400223f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.26892278f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[22 /* X23 */] <0.11955482f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.52381f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (data[13 /* X14 */] <0.21752533f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.10203978f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08145646f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.29836038f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30387312f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.04762f ? 
                     (data[30 /* X31 */] <0.19623953f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[35 /* X36 */] <0.180625f ? 
            1.0f : 
             (data[20 /* X21 */] <0.25458288f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.52381f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23410107f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0299257f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22955176f ? 
            0.0f : 
             (data[12 /* X13 */] <0.1663928f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_154_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
             (data[1 /* X2 */] <-0.6322352f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.12292691f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4088186f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[31 /* X32 */] <0.04725039f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20868711f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.30593336f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <0.07607619f ? 
                 (data[4 /* X5 */] <0.22602515f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[24 /* X25 */] <-0.73852247f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X3 */] <-0.864528f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.59941167f ? 
                 (data[4 /* X5 */] <0.23702744f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2849946f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4205575f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4047625f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2516223f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20182014f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.2712045f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.16634096f ? 
                 (data[14 /* X15 */] <0.15594889f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.15428294f ? 
                         (data[32 /* X33 */] <-0.19642735f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (data[32 /* X33 */] <-0.9274554f ? 
            1.0f : 
            0.0f) : 
         (data[31 /* X32 */] <0.2671309f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_155_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (data[2 /* X3 */] <-0.5231278f ? 
             (data[23 /* X24 */] <0.13975303f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18977055f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3628086f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6932476f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15719019f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.21513994f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.08228031f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15486184f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (data[19 /* X20 */] <-0.49596092f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1046651f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21029021f ? 
             (data[8 /* X9 */] <-0.19188976f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4015625f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2169336f ? 
         (data[2 /* X3 */] <-0.10568113f ? 
             (data[11 /* X12 */] <-0.36190096f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.71721613f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0021484375f ? 
                     (data[3 /* X4 */] <-0.5216416f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.020833334f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.32954946f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2852754f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3596489f ? 
                 (data[0 /* X1 */] <-0.24773572f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.5124409f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37924948f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.058460418f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.14834651f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[5 /* X6 */] <0.16513011f ? 
            1.0f : 
             (data[11 /* X12 */] <-1.0608913f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6112071f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16980071f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43016884f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_156_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (data[12 /* X13 */] <0.15785953f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.536118f ? 
             (data[4 /* X5 */] <0.11545223f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5234375f ? 
                    0.0f : 
                    1.0f)) : 
             (data[33 /* X34 */] <-0.0021484375f ? 
                 (data[29 /* X30 */] <0.16598941f ? 
                     (data[15 /* X16 */] <0.07989868f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.22064857f ? 
                     (data[3 /* X4 */] <-0.18502414f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.536118f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10479528f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2117222f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.59716415f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2940316f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.13550693f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44795474f ? 
             (data[22 /* X23 */] <0.16380034f ? 
                 (data[29 /* X30 */] <0.20110881f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.3912292f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (data[33 /* X34 */] <-0.42490235f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22575727f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2001698f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.29376006f ? 
                     (data[30 /* X31 */] <0.17692871f ? 
                         (data[7 /* X8 */] <0.18728691f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33768424f ? 
                    0.0f : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.6428575f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[10 /* X11 */] <0.043128982f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22230281f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44540223f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_157_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.21465652f ? 
             (data[31 /* X32 */] <0.09421104f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.6606587f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.42007145f ? 
                        0.0f : 
                         (data[25 /* X26 */] <0.032840993f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (data[23 /* X24 */] <0.07458973f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1015625f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47693303f ? 
             (data[28 /* X29 */] <0.10743559f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (data[25 /* X26 */] <-0.5751783f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4047625f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.33923003f ? 
                     (data[29 /* X30 */] <0.14737985f ? 
                        1.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.288292f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24183765f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23720375f ? 
                 (data[20 /* X21 */] <0.20348555f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.12347924f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.45375f ? 
                             (data[4 /* X5 */] <0.14655615f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.76645726f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[7 /* X8 */] <0.09667364f ? 
                     (data[8 /* X9 */] <0.52902156f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22287367f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25039262f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36283273f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.004236256f ? 
                    1.0f : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.1046651f ? 
                0.0f : 
                1.0f)) : 
         (data[28 /* X29 */] <0.23246762f ? 
            0.0f : 
             (data[27 /* X28 */] <0.8002003f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.00700671f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_158_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[28 /* X29 */] <0.11263615f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.271651f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2849812f ? 
                 (data[6 /* X7 */] <0.16611716f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.014029066f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20291756f ? 
                            1.0f : 
                             (data[28 /* X29 */] <0.24106798f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[19 /* X20 */] <-0.43466857f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25298074f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <7.4304687E-4f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2776157f ? 
                 (data[25 /* X26 */] <-0.17890112f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[10 /* X11 */] <-0.58150345f ? 
            1.0f : 
             (data[5 /* X6 */] <0.12335651f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16441238f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3840313f ? 
                     (data[25 /* X26 */] <-0.5409322f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.26892278f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30938306f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26708528f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.14395724f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21348329f ? 
             (data[31 /* X32 */] <0.11268197f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.5086559f ? 
                     (data[11 /* X12 */] <-0.5399976f ? 
                        1.0f : 
                        0.0f) : 
                     (data[20 /* X21 */] <0.18692671f ? 
                         (data[7 /* X8 */] <0.11854581f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[7 /* X8 */] <0.120889254f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.05722562f ? 
             (data[8 /* X9 */] <0.8075157f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[10 /* X11 */] <0.06768455f ? 
            0.0f : 
             (data[31 /* X32 */] <0.20854683f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.38028258f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.17353515f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_159_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4150409f ? 
            0.0f : 
            1.0f) : 
         (data[22 /* X23 */] <0.18688497f ? 
             (data[9 /* X10 */] <-0.48378894f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.49194753f ? 
                     (data[15 /* X16 */] <0.12739389f ? 
                         (data[22 /* X23 */] <0.1558147f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.2035259f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.10931505f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.3331115f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[9 /* X10 */] <-0.21557467f ? 
             (data[34 /* X35 */] <-0.33203265f ? 
                 (data[12 /* X13 */] <0.18820003f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.17213646f ? 
             (data[31 /* X32 */] <0.10355198f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18055907f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X12 */] <0.26394057f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35642272f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.07497559f ? 
         (data[31 /* X32 */] <0.17202689f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2946132f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10617895f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.10931505f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.5431354f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18923151f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.18563803f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.23181447f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.15514345f ? 
                 (data[20 /* X21 */] <0.2506031f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29255807f ? 
                    0.0f : 
                    1.0f))) : 
         (data[4 /* X5 */] <0.12067831f ? 
             (data[15 /* X16 */] <0.14995736f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4253686f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.96666324f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_160_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14193895f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.65977436f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.6134991f ? 
            1.0f : 
             (data[21 /* X22 */] <0.10693511f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.020625f ? 
                     (data[18 /* X19 */] <0.18704024f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.26376873f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5341165f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.26376873f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.27492675f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.040710628f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26071492f ? 
                 (data[34 /* X35 */] <-0.2648825f ? 
                     (data[9 /* X10 */] <-0.34308636f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1375f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.62488616f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4245768f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.28369224f ? 
             (data[10 /* X11 */] <-0.47560754f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[2 /* X3 */] <-0.864528f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.23697656f ? 
                0.0f : 
                 (data[35 /* X36 */] <0.1159375f ? 
                     (data[13 /* X14 */] <0.24781172f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.09667364f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3626819f ? 
             (data[23 /* X24 */] <0.13223419f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.064782046f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43526465f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[6 /* X7 */] <0.18709788f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18620174f ? 
                 (data[26 /* X27 */] <0.009230825f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20777933f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (data[32 /* X33 */] <-0.9274554f ? 
             (data[9 /* X10 */] <0.15376957f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20241004f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21060048f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.19199258f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_161_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[1 /* X2 */] <-0.7772398f ? 
            1.0f : 
            0.0f) : 
         (data[26 /* X27 */] <0.16486554f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.31714708f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.008924059f ? 
                 (data[21 /* X22 */] <0.10105773f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.026280459f ? 
                        1.0f : 
                         (data[2 /* X3 */] <0.095360935f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.30063477f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.02185374f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.25514725f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.51018375f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.3043987f ? 
                 (data[11 /* X12 */] <0.17871317f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.17340566f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.5433783f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.432569f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.048242405f ? 
                1.0f : 
                 (data[26 /* X27 */] <-0.16166219f ? 
                     (data[30 /* X31 */] <0.13043918f ? 
                         (data[11 /* X12 */] <-0.5965271f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38080323f ? 
             (data[7 /* X8 */] <0.09511134f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.42912886f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.49850875f ? 
                         (data[2 /* X3 */] <-0.05381913f ? 
                             (data[16 /* X17 */] <-0.2942307f ? 
                                1.0f : 
                                 (data[22 /* X23 */] <0.1796529f ? 
                                     (data[12 /* X13 */] <0.23900685f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[16 /* X17 */] <-0.081175454f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26457557f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.09226281f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[35 /* X36 */] <0.4609375f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.75475496f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.7749407f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4683748f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_162_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[35 /* X36 */] <-0.58125f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.271967f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.1894659f ? 
                 (data[14 /* X15 */] <0.26589224f ? 
                     (data[0 /* X1 */] <-0.22893693f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.09714626f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3012472f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.12351375f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[18 /* X19 */] <-0.32003152f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1906639f ? 
             (data[12 /* X13 */] <0.17871863f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.50923425f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.5613412f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[24 /* X25 */] <-0.3588227f ? 
             (data[35 /* X36 */] <0.07929687f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11612923f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.12987256f ? 
                 (data[25 /* X26 */] <-0.0027779127f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27438447f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[34 /* X35 */] <-0.118212424f ? 
             (data[17 /* X18 */] <-0.15555142f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9431405f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3952878f ? 
                     (data[25 /* X26 */] <-0.8931786f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.18820003f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18502292f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.022727273f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (data[35 /* X36 */] <0.48070312f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.46582228f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_163_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[1 /* X2 */] <-0.7772398f ? 
            1.0f : 
             (data[23 /* X24 */] <0.059552047f ? 
                 (data[11 /* X12 */] <0.18556002f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.48962033f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3722142f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.011177209f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[20 /* X21 */] <0.19130446f ? 
             (data[34 /* X35 */] <-0.33203265f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.043107893f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.48962033f ? 
             (data[4 /* X5 */] <0.11545223f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35103196f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15729699f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.30064908f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4826377f ? 
             (data[30 /* X31 */] <0.12987256f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38541374f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.11977754f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2549208f ? 
             (data[23 /* X24 */] <0.10842452f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.38714513f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-1.0627816f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0080454f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30366135f ? 
                                1.0f : 
                                 (data[20 /* X21 */] <0.16475005f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.83137786f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.14155266f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31831625f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.7127352f ? 
            0.0f : 
             (data[23 /* X24 */] <0.1046651f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <0.32078126f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21651532f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_164_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16648948f ? 
             (data[31 /* X32 */] <0.06703203f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.10703003f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X2 */] <-0.25396228f ? 
             (data[22 /* X23 */] <0.16123538f ? 
                 (data[5 /* X6 */] <0.33776963f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[35 /* X36 */] <-0.17875f ? 
                 (data[24 /* X25 */] <-0.1767177f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.7966393f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1742815f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.48962033f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.39205015f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.40448415f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.5699344f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22343561f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (data[14 /* X15 */] <0.10529642f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29794985f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5086714f ? 
                 (data[1 /* X2 */] <-0.3968654f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2548285f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.49498877f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[35 /* X36 */] <0.50046873f ? 
                 (data[3 /* X4 */] <-0.6246447f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[19 /* X20 */] <-0.15779628f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.24232507f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.35040104f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29021204f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.43077776f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.41376448f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[26 /* X27 */] <-0.1372489f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.11858024f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.039342698f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6791612f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.528651f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X10 */] <0.008670047f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_165_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.019134074f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.06015625f ? 
             (data[16 /* X17 */] <-0.23879285f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1959441f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43551913f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22831635f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[1 /* X2 */] <-0.55027604f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18550019f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.22505614f ? 
                     (data[3 /* X4 */] <-0.1769873f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[20 /* X21 */] <0.1216584f ? 
             (data[20 /* X21 */] <0.09790015f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
             (data[30 /* X31 */] <0.13335821f ? 
                 (data[26 /* X27 */] <-0.17386883f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.6387784f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17666662f ? 
                        1.0f : 
                        0.0f) : 
                     (data[16 /* X17 */] <-0.2778865f ? 
                         (data[33 /* X34 */] <-0.325f ? 
                             (data[0 /* X1 */] <0.35181358f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (data[29 /* X30 */] <0.1406254f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.099025965f ? 
         (data[12 /* X13 */] <0.17397793f ? 
             (data[24 /* X25 */] <0.030743679f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[20 /* X21 */] <0.15906829f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36745456f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4047625f ? 
                     (data[11 /* X12 */] <-0.98757064f ? 
                        0.0f : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.18113342f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19883285f ? 
                             (data[20 /* X21 */] <0.19823232f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[0 /* X1 */] <-0.23815519f ? 
                     (data[0 /* X1 */] <-0.33962238f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44540223f ? 
             (data[3 /* X4 */] <-0.67886716f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[30 /* X31 */] <0.15470776f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.34743965f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.06013669f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_166_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[19 /* X20 */] <-0.48962033f ? 
             (data[16 /* X17 */] <-0.17085432f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40045446f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.41776034f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.7136544f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28629068f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5187169f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33853856f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.45157263f ? 
                    1.0f : 
                    0.0f))) : 
        0.75f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[30 /* X31 */] <0.19522832f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97377056f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3044117f ? 
                 (data[35 /* X36 */] <-0.078125f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.20453712f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6225f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33774918f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42325512f ? 
            0.0f : 
             (data[29 /* X30 */] <0.16989157f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26882648f ? 
         (data[33 /* X34 */] <-0.72578126f ? 
             (data[3 /* X4 */] <-0.53288364f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26646993f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.026133426f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.8778329f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.09031557f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.51231754f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_167_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[23 /* X24 */] <0.06519118f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12616675f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.06015625f ? 
             (data[32 /* X33 */] <0.28475243f ? 
                 (data[22 /* X23 */] <0.19265611f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <8.052433E-4f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[20 /* X21 */] <0.11126064f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.20351313f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09714626f ? 
             (data[15 /* X16 */] <0.12517546f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1367795f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.14872088f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28550905f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.15638508f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.11296217f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29525444f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.1759731f ? 
                 (data[25 /* X26 */] <-0.70727074f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.3130205f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.032258064f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[2 /* X3 */] <-0.19628972f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35714f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24672997f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24318108f ? 
                     (data[5 /* X6 */] <0.15588816f ? 
                         (data[30 /* X31 */] <0.27452666f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.124708675f ? 
                        0.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32563037f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (data[6 /* X7 */] <0.17714094f ? 
             (data[20 /* X21 */] <0.21923967f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (data[14 /* X15 */] <0.1402427f ? 
             (data[15 /* X16 */] <0.14301844f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <0.42498222f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.043020368f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_168_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.29071853f ? 
             (data[2 /* X3 */] <-0.20114374f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2615996f ? 
                     (data[10 /* X11 */] <-0.15363087f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.26236835f ? 
                            1.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24916762f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.10875f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.061498616f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (data[30 /* X31 */] <0.19740686f ? 
             (data[4 /* X5 */] <0.16771306f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.046836007f ? 
         (data[30 /* X31 */] <0.13989379f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.0875479f ? 
                 (data[7 /* X8 */] <0.057616193f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X3 */] <-0.10568113f ? 
             (data[10 /* X11 */] <-0.2883713f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.28736377f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.1483335f ? 
                 (data[9 /* X10 */] <-0.15709445f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[0 /* X1 */] <-0.24045976f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.49850875f ? 
                 (data[18 /* X19 */] <-0.08261641f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3961154f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.37500063f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32959738f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3671309f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54975414f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[4 /* X5 */] <0.17313647f ? 
                     (data[1 /* X2 */] <0.07387424f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2298872f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30743295f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.123063006f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.19778603f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_169_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (data[33 /* X34 */] <-0.20019531f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.17890112f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.034489244f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
                 (data[35 /* X36 */] <-0.58125f ? 
                     (data[34 /* X35 */] <-0.22916874f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.0029127232f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.12139467f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1742815f ? 
         (data[16 /* X17 */] <-0.20482358f ? 
            0.0f : 
             (data[15 /* X16 */] <0.17374799f ? 
                 (data[5 /* X6 */] <0.21461795f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.102158815f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.21889387f ? 
                         (data[34 /* X35 */] <-0.33705297f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35796794f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[7 /* X8 */] <0.14666717f ? 
             (data[25 /* X26 */] <-0.4333013f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28325123f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3452385f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.08451264f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.22506249f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.59224653f ? 
                    1.0f : 
                    0.0f))) : 
        0.75f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (data[3 /* X4 */] <-0.33267766f ? 
             (data[15 /* X16 */] <0.1360795f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.32772407f ? 
                     (data[35 /* X36 */] <-0.3725f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25624484f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.2332601f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.24742557f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.43361443f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4107814f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30607417f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23922789f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.365641f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X6 */] <0.19655272f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_170_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (data[3 /* X4 */] <-0.30139548f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.3043987f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.089857f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.49393007f ? 
                         (data[13 /* X14 */] <0.20148332f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.29710507f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5245299f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18970816f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.4929388f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.048763223f ? 
             (data[33 /* X34 */] <-0.7486328f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[24 /* X25 */] <-0.3519073f ? 
             (data[25 /* X26 */] <-0.5409322f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19258222f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3863613f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09371366f ? 
                    0.0f : 
                     (data[19 /* X20 */] <0.13788877f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.10292283f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.216885f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2843076f ? 
                 (data[7 /* X8 */] <0.09042445f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.032870658f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21194856f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.40940654f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.27248737f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1687916f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.04723103f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[19 /* X20 */] <0.53703463f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2653128f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.47730345f ? 
                 (data[2 /* X3 */] <-0.12190123f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.30038437f ? 
                     (data[17 /* X18 */] <0.35198343f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20362817f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42753473f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_171_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12609334f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1046651f ? 
             (data[1 /* X2 */] <-0.2035259f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16385244f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5890464f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.1279196f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3341429f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0714275f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1046651f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2756198f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.3354551f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.41163942f ? 
             (data[18 /* X19 */] <-0.32003152f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.07480147f ? 
                     (data[7 /* X8 */] <0.068334825f ? 
                        0.0f : 
                        1.0f) : 
                     (data[26 /* X27 */] <-0.21048877f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38541374f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.12822413f ? 
                                1.0f : 
                                0.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[6 /* X7 */] <0.16469474f ? 
             (data[5 /* X6 */] <0.14997332f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18260002f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40045446f ? 
                 (data[20 /* X21 */] <0.2028458f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1435039f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.08131211f ? 
                            0.0f : 
                             (data[1 /* X2 */] <-0.11740363f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (data[4 /* X5 */] <0.16609953f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.48123375f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.58244115f ? 
                 (data[12 /* X13 */] <0.1900963f ? 
                     (data[26 /* X27 */] <0.07026404f ? 
                         (data[5 /* X6 */] <0.30375928f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.92703915f ? 
            1.0f : 
             (data[7 /* X8 */] <0.13494994f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.8604815f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_01_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_172_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (data[35 /* X36 */] <-0.22007813f ? 
             (data[21 /* X22 */] <0.14219937f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.17238499f ? 
             (data[17 /* X18 */] <-0.14219524f ? 
                 (data[33 /* X34 */] <-0.22304687f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.014029066f ? 
                 (data[6 /* X7 */] <0.1746517f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21540827f ? 
                        1.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.35826355f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07407829f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.07557902f ? 
            0.0f : 
             (data[4 /* X5 */] <0.19442986f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.38020694f ? 
             (data[31 /* X32 */] <0.11724696f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.10759467f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
        0.8f : 
         (data[18 /* X19 */] <-0.45779088f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5756833f ? 
                 (data[24 /* X25 */] <-0.51787645f ? 
                     (data[28 /* X29 */] <0.3241242f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.37403548f ? 
                         (data[24 /* X25 */] <-0.13458599f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3137362f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.24139515f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.29199275f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.32954946f ? 
         (data[4 /* X5 */] <0.20044485f ? 
             (data[4 /* X5 */] <0.17467813f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29525444f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.30593336f ? 
                 (data[35 /* X36 */] <0.1f ? 
                     (data[17 /* X18 */] <-0.32812697f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.2856251f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.04761094f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.55342156f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23721696f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.12926577f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22998302f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37141708f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0248207f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (data[14 /* X15 */] <0.1889319f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09528722f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_173_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[15 /* X16 */] <0.10634123f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08339411f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29397196f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.26981878f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.38596985f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.042008083f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.31765014f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.18751717f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19130446f ? 
             (data[30 /* X31 */] <0.19697115f ? 
                 (data[24 /* X25 */] <-0.06607163f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35245436f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.47884268f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.22874409f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22518341f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.65636957f ? 
        1.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.42490235f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.37320036f ? 
                     (data[23 /* X24 */] <0.13223419f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.027781747f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2490852f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28642106f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.123668276f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5511585f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.097946554f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1933785f ? 
                     (data[11 /* X12 */] <-0.66265875f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.10875f ? 
                             (data[18 /* X19 */] <-0.49647638f ? 
                                0.0f : 
                                 (data[8 /* X9 */] <0.2123641f ? 
                                     (data[5 /* X6 */] <0.22923224f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)) : 
                     (data[23 /* X24 */] <0.16110435f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.4521955f ? 
         (data[34 /* X35 */] <0.16629219f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3041546f ? 
                 (data[6 /* X7 */] <0.20310012f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.82480466f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.8164891f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.3639486f ? 
                     (data[12 /* X13 */] <0.18820003f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_174_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.52116305f ? 
         (data[18 /* X19 */] <-0.012271196f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30443862f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31183285f ? 
             (data[23 /* X24 */] <0.046373352f ? 
                 (data[24 /* X25 */] <0.07223596f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.28938752f ? 
                     (data[17 /* X18 */] <0.031435102f ? 
                         (data[35 /* X36 */] <-0.17875f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.3370894f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0714275f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (data[30 /* X31 */] <0.2100423f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12596849f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.33036134f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[26 /* X27 */] <-0.25016037f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21400414f ? 
         (data[5 /* X6 */] <0.12076877f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.11030423f ? 
            1.0f : 
             (data[7 /* X8 */] <0.086518705f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.4276652f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.899375f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
        0.039215688f : 
         (data[27 /* X28 */] <-0.23356383f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.79540527f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3166196f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22648343f ? 
                         (data[2 /* X3 */] <-0.38681045f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.28108734f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15369333f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[25 /* X26 */] <-0.13537557f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23232605f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4234083f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23427828f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.5067866f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5184375f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.04102599f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_175_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[9 /* X10 */] <-0.27493355f ? 
            1.0f : 
             (data[18 /* X19 */] <0.18117814f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1698284f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36957395f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.33924836f ? 
                         (data[32 /* X33 */] <0.01190375f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22228438f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12659505f ? 
            1.0f : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_01_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.046836007f ? 
         (data[4 /* X5 */] <0.10307466f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.46950728f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.15638508f ? 
             (data[20 /* X21 */] <0.21080536f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28675005f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[15 /* X16 */] <0.117245264f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.18898891f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20044485f ? 
             (data[9 /* X10 */] <0.06143351f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.3227966f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.29964f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2843076f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2280219f ? 
                 (data[23 /* X24 */] <0.12471534f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3165866f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.34007105f ? 
            0.0f : 
             (data[10 /* X11 */] <0.054834247f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_176_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[23 /* X24 */] <0.06456461f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.026810998f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27938622f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.10727392f ? 
                    1.0f : 
                    0.0f))) : 
         (data[25 /* X26 */] <-0.1740088f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.5107556f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.025f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2852754f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.035345796f ? 
                 (data[19 /* X20 */] <-0.57416147f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.19515872f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11343708f ? 
                 (data[15 /* X16 */] <0.15094864f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20715906f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25316224f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0012665463f ? 
            0.0f : 
             (data[5 /* X6 */] <0.15440945f ? 
                 (data[22 /* X23 */] <0.25806254f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.33802292f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.08155933f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[5 /* X6 */] <0.21651532f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.97377056f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29573402f ? 
                     (data[7 /* X8 */] <0.056053896f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21140715f ? 
                0.0f : 
                 (data[10 /* X11 */] <0.08917069f ? 
                    1.0f : 
                    0.0f))) : 
        0.022727273f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28433385f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.51431984f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26884922f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.1708671f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <0.44540223f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_177_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.08871575f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.021686578f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.42441407f ? 
             (data[2 /* X3 */] <-0.5011844f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.870721f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3693442f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.2718514f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.27492675f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0030844295f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.25524688f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.17158626f ? 
                     (data[26 /* X27 */] <-0.100628965f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4245768f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.302925f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07786108f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.14100383f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.116643175f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.33603573f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.049435202f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.167668f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.031746034f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.19581021f ? 
         (data[32 /* X33 */] <-0.4047625f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.31338358f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.99419063f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41078144f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.09383604f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.22612563f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.13552628f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.99196345f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3134276f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.7172622f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23669763f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.46582228f ? 
            0.0f : 
             (data[2 /* X3 */] <0.3036755f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X3 */] <0.015669657f ? 
            0.0f : 
             (data[25 /* X26 */] <0.04125289f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21317579f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_178_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[1 /* X2 */] <-0.2035259f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20093851f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.086813666f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2962433f ? 
             (data[27 /* X28 */] <-0.32800648f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3706612f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[32 /* X33 */] <-0.30803642f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.30409205f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X2 */] <-0.24135318f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20093851f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.10995317f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.00836841f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2706535f ? 
            0.0f : 
             (data[5 /* X6 */] <0.17349762f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.34203017f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.14962034f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21348329f ? 
             (data[5 /* X6 */] <0.16159844f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.35344583f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.404015f ? 
                        1.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2138811f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.035714287f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[10 /* X11 */] <0.004760894f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3330788f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4683748f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_179_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[34 /* X35 */] <-0.33203265f ? 
             (data[31 /* X32 */] <0.09746532f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.024239082f ? 
             (data[31 /* X32 */] <0.10659531f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3095225f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18704024f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.48786995f ? 
             (data[28 /* X29 */] <0.108049296f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[13 /* X14 */] <0.18850304f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.75643f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3789362f ? 
             (data[26 /* X27 */] <-0.2471087f ? 
                 (data[22 /* X23 */] <0.17499198f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3304289f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35885295f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X12 */] <-0.60141516f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[34 /* X35 */] <0.16629219f ? 
             (data[28 /* X29 */] <0.21469358f ? 
                 (data[21 /* X22 */] <0.15371607f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-1.0462272f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38641787f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.08271834f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.55340624f ? 
                         (data[17 /* X18 */] <-0.29078114f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.34547853f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.47347978f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.17452495f ? 
                1.0f : 
                0.0f)) : 
         (data[27 /* X28 */] <0.57557994f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_180_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23508197f ? 
             (data[22 /* X23 */] <0.17213646f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.07920535f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1015625f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.46716562f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22576739f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.562612f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[19 /* X20 */] <0.21207128f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.26134828f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.129978f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X13 */] <0.12325243f ? 
            1.0f : 
             (data[20 /* X21 */] <0.1216584f ? 
                 (data[15 /* X16 */] <0.2877447f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16598941f ? 
             (data[22 /* X23 */] <0.3061555f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.44308594f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.46869475f ? 
                 (data[7 /* X8 */] <0.07480147f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18465202f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.32954946f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36243477f ? 
             (data[25 /* X26 */] <-0.45287055f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3487193f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.37505525f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22095145f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[24 /* X25 */] <0.013176503f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19739749f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.70083755f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3242289f ? 
            0.0f : 
             (data[18 /* X19 */] <-0.5281361f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44540223f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_181_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.10495806f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.031916007f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.026983041f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.20074727f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <0.09976563f ? 
             (data[31 /* X32 */] <0.089857f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24010785f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.26966894f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20844264f ? 
         (data[19 /* X20 */] <-0.46848503f ? 
             (data[35 /* X36 */] <-0.2578125f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0584375f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18851861f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10717138f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
        0.85714287f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.899375f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.18670894f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.42252937f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.15561056f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.09594366f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.27532613f ? 
        0.045454547f : 
         (data[11 /* X12 */] <-0.23969984f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.75936025f ? 
                 (data[10 /* X11 */] <-0.13886164f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44434547f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8305337f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.33116385f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.22694872f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.54017663f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.54f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.16629219f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5647548f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_182_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.33370402f ? 
             (data[23 /* X24 */] <0.06184488f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.102030315f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17794386f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.15010941f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.11281249f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
        0.83870965f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_01_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (data[14 /* X15 */] <0.10529642f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4073413f ? 
             (data[18 /* X19 */] <-0.65710235f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.12987256f ? 
                     (data[13 /* X14 */] <0.14015268f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26304364f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.13713823f ? 
                            1.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28892976f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1908194f ? 
             (data[32 /* X33 */] <-0.8809525f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0044006f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2906136f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22095145f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.37955838f ? 
                                1.0f : 
                                0.0f) : 
                             (data[9 /* X10 */] <-0.16017303f ? 
                                1.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5476145f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.14511049f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[33 /* X34 */] <-0.47441405f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02537772f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.35507268f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44795474f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.2002495f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5647548f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_183_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[31 /* X32 */] <0.105073646f ? 
             (data[2 /* X3 */] <-0.06523087f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.16813678f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36676663f ? 
                 (data[3 /* X4 */] <-0.46614832f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37490234f ? 
                 (data[22 /* X23 */] <0.13884519f ? 
                     (data[13 /* X14 */] <0.40915194f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.12484222f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[19 /* X20 */] <-0.5023015f ? 
             (data[2 /* X3 */] <-0.34029263f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.2646095f ? 
            0.0f : 
             (data[8 /* X9 */] <-0.17504586f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.11573713f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5951497f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.2804484f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.40971568f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30221102f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4987106f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[19 /* X20 */] <-0.23811038f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.45355338f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0028508592f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.56625134f ? 
                         (data[5 /* X6 */] <0.16771784f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24106798f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.14155266f ? 
            0.0f : 
             (data[8 /* X9 */] <0.4987106f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6439073f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.23697656f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.52780175f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.50027585f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_184_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09976563f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
             (data[1 /* X2 */] <-0.6700625f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.234986f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2796875f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15072358f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32076445f ? 
         (data[23 /* X24 */] <0.08712114f ? 
             (data[17 /* X18 */] <-0.24014056f ? 
                 (data[10 /* X11 */] <-0.22391291f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.09290033f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.06015625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.39608935f ? 
         (data[7 /* X8 */] <0.13065362f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0069487724f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.10811697f ? 
                    0.0f : 
                    1.0f)) : 
             (data[10 /* X11 */] <-0.59224653f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.41059002f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.21577597f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.11979055f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47332796f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.99419063f ? 
                     (data[12 /* X13 */] <0.2299182f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.12347924f ? 
                            0.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.39962846f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.29921874f ? 
            0.0f : 
             (data[0 /* X1 */] <0.022260718f ? 
                 (data[28 /* X29 */] <0.21813372f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.32242566f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2935281f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35885295f ? 
             (data[2 /* X3 */] <-0.026398614f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.23289347f ? 
                     (data[28 /* X29 */] <0.23189427f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_185_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[31 /* X32 */] <0.09518282f ? 
             (data[23 /* X24 */] <0.077368416f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19080465f ? 
             (data[25 /* X26 */] <-0.076162584f ? 
                 (data[17 /* X18 */] <-0.16445553f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[9 /* X10 */] <-0.004520818f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4508348f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[31 /* X32 */] <0.10963864f ? 
             (data[30 /* X31 */] <0.15427205f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.40930623f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3868082f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.116484694f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26256078f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.46869475f ? 
             (data[18 /* X19 */] <-0.65710235f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23915483f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22997913f ? 
             (data[18 /* X19 */] <-0.18520318f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.08292524f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30387312f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.09805308f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30558768f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23358949f ? 
                    0.0f : 
                    1.0f))) : 
         (data[35 /* X36 */] <0.29921874f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.052887324f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.34401488f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23992126f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22430305f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.17900693f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.060622793f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.18650576f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.36155885f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10540306f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_01_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_186_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
         (data[29 /* X30 */] <0.14111316f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X12 */] <-0.07106231f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.5699344f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2872011f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5234375f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.19110547f ? 
         (data[15 /* X16 */] <0.19605169f ? 
             (data[19 /* X20 */] <-0.36703566f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4732128f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34818712f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.50652856f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[21 /* X22 */] <0.1598315f ? 
             (data[13 /* X14 */] <0.26216763f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.38938782f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35726106f ? 
             (data[30 /* X31 */] <0.11680141f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38541374f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.18724354f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* X1 */] <-0.003089503f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20257212f ? 
             (data[20 /* X21 */] <0.16962355f ? 
                 (data[6 /* X7 */] <0.2543073f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.51431984f ? 
                 (data[16 /* X17 */] <-0.634062f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.19116083f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.30047774f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.29792154f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.51431984f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.40358394f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_187_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.017857822f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22093493f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39560035f ? 
                 (data[22 /* X23 */] <0.19085549f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31017086f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23786782f ? 
                        1.0f : 
                         (data[33 /* X34 */] <0.67578125f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[31 /* X32 */] <0.121811956f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.49194753f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.18978035f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2167026f ? 
             (data[15 /* X16 */] <0.15293118f ? 
                 (data[12 /* X13 */] <0.21095538f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.27683842f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.49202937f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.72148436f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[0 /* X1 */] <-0.1574954f ? 
                 (data[10 /* X11 */] <0.19353189f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (data[14 /* X15 */] <0.12610713f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.5971937f ? 
            1.0f : 
             (data[30 /* X31 */] <0.13945808f ? 
                 (data[22 /* X23 */] <0.3952878f ? 
                    0.0f : 
                    1.0f) : 
                 (data[26 /* X27 */] <0.112987295f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.11669503f ? 
                         (data[1 /* X2 */] <-0.36324114f ? 
                             (data[33 /* X34 */] <-0.22f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.118212424f ? 
         (data[14 /* X15 */] <0.14613253f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X5 */] <0.20044485f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14764807f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3023099f ? 
                     (data[28 /* X29 */] <0.25024167f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31817347f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[27 /* X28 */] <-0.49647173f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (data[11 /* X12 */] <-0.38634118f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23482698f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_01_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_188_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[9 /* X10 */] <-0.5079722f ? 
            1.0f : 
             (data[23 /* X24 */] <0.059552047f ? 
                 (data[4 /* X5 */] <0.22052401f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[18 /* X19 */] <0.17971262f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35056922f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23650414f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.107445955f ? 
             (data[19 /* X20 */] <-0.5699344f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.028763512f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20322645f ? 
             (data[2 /* X3 */] <-0.5150378f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.026784688f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.1695715f ? 
                        1.0f : 
                        0.0f))) : 
             (data[14 /* X15 */] <0.19547552f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.00836841f ? 
         (data[16 /* X17 */] <-0.38961637f ? 
             (data[0 /* X1 */] <0.13088518f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.26696274f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35726106f ? 
                 (data[2 /* X3 */] <-0.7383232f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5159484f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28149793f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.4704829f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32439804f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (data[6 /* X7 */] <0.15971626f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33774918f ? 
                 (data[10 /* X11 */] <-0.33636394f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.18999986f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5819733f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.32605258f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42325512f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21722333f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (data[10 /* X11 */] <0.035455365f ? 
            0.0f : 
             (data[29 /* X30 */] <0.18745126f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4520622f ? 
             (data[32 /* X33 */] <-0.54985166f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.08271834f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X5 */] <0.17871535f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_189_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[10 /* X11 */] <-0.69046885f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0584375f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1453258f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.024239082f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29807872f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.14896609f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.19170927f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.48962033f ? 
             (data[1 /* X2 */] <-0.6406413f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24010785f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.30053598f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18257357f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (data[9 /* X10 */] <-0.0023223406f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.0017803374f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.5653937f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.432569f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2587038f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (data[24 /* X25 */] <-0.75760955f ? 
            1.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3563629f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.23444179f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X7 */] <0.16362792f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38555378f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.26593664f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.08527102f ? 
                    1.0f : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.28755957f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22730742f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15681024f ? 
                         (data[21 /* X22 */] <0.2725196f ? 
                             (data[5 /* X6 */] <0.21030474f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_01_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.4753662f ? 
         (data[10 /* X11 */] <-0.08732252f ? 
            0.0f : 
             (data[29 /* X30 */] <0.20891312f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22501399f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6190625f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_190_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1616684f ? 
            0.0f : 
             (data[11 /* X12 */] <0.11223935f ? 
                 (data[10 /* X11 */] <-0.46332976f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.48962033f ? 
             (data[19 /* X20 */] <-0.74968344f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.32187974f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.18629593f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21285516f ? 
         (data[34 /* X35 */] <-0.1906639f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11469022f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.2782674f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.16066074f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.027027028f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23675238f ? 
            1.0f : 
            0.0f) : 
         (data[31 /* X32 */] <0.05333705f ? 
            1.0f : 
             (data[30 /* X31 */] <0.123772696f ? 
                 (data[5 /* X6 */] <0.13222878f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22061959f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.2354051f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (data[34 /* X35 */] <-0.118212424f ? 
            0.0f : 
             (data[6 /* X7 */] <0.15971626f ? 
                 (data[6 /* X7 */] <0.09190677f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.16288234f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20915908f ? 
                         (data[20 /* X21 */] <0.17601354f ? 
                             (data[31 /* X32 */] <0.15802757f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24862787f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28297508f ? 
            0.0f : 
             (data[5 /* X6 */] <0.18915917f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (data[33 /* X34 */] <-0.9238281f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.40416563f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21054354f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.19199258f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X7 */] <0.19911319f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.2648484f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_01_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_191_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.20019531f ? 
         (data[23 /* X24 */] <0.073336594f ? 
             (data[9 /* X10 */] <-0.3474833f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.08453117f ? 
            1.0f : 
             (data[7 /* X8 */] <0.120889254f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.5657074f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.23482266f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.02158379f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.27492675f ? 
         (data[23 /* X24 */] <0.09526654f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.18479598f ? 
                 (data[19 /* X20 */] <-0.4304415f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1648226f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[22 /* X23 */] <0.19842727f ? 
            1.0f : 
             (data[7 /* X8 */] <0.15916555f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.050937235f ? 
                     (data[11 /* X12 */] <-0.04906611f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.07497559f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.62889564f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                 (data[24 /* X25 */] <-0.13983569f ? 
                     (data[12 /* X13 */] <0.21515232f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2285866f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.32901523f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.19581021f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2729333f ? 
             (data[29 /* X30 */] <0.17281818f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2596875f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23573856f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.26696274f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.5212025f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.54698384f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[7 /* X8 */] <0.06855228f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28691834f ? 
             (data[17 /* X18 */] <-0.32472968f ? 
                 (data[29 /* X30 */] <0.13733415f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3789351f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_01_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0273732f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.55078304f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4303714f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.026257869f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2375033f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_192_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.28968805f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2097892f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0038190503f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2794625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15171504f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2933466f ? 
                 (data[15 /* X16 */] <0.09940229f ? 
                     (data[5 /* X6 */] <0.2268663f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17233467f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2218993f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.117127396f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11698351f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[28 /* X29 */] <0.12180985f ? 
             (data[2 /* X3 */] <-0.035609007f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.36343294f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.30064908f ? 
            1.0f : 
            0.0f) : 
         (data[30 /* X31 */] <0.13989379f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26488522f ? 
                 (data[7 /* X8 */] <0.104485124f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09794072f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.15638508f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07387424f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.10382461f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.20915362f ? 
         (data[10 /* X11 */] <-0.30064908f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8512504f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.18837538f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19776417f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.95335054f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31229913f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.1687916f ? 
                     (data[28 /* X29 */] <0.2583638f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.14155266f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1457582f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27969733f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3215828f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.47890624f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.369233f ? 
             (data[35 /* X36 */] <0.180625f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_193_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17897986f ? 
         (data[19 /* X20 */] <-0.12609334f ? 
             (data[15 /* X16 */] <0.2054688f ? 
                 (data[8 /* X9 */] <-0.14697267f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09976563f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.01122095f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2594154f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.032368712f ? 
                     (data[6 /* X7 */] <0.23866066f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.17256582f ? 
         (data[19 /* X20 */] <-0.4875068f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X13 */] <0.12325243f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21674377f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26784378f ? 
             (data[15 /* X16 */] <0.07263785f ? 
                 (data[8 /* X9 */] <-0.057138477f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[8 /* X9 */] <-0.082404345f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41307488f ? 
                     (data[3 /* X4 */] <-0.26594234f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.5248159f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17428005f ? 
         (data[26 /* X27 */] <-0.25473785f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22716072f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36999634f ? 
                 (data[1 /* X2 */] <-0.33042872f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.4387742f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.11418718f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[15 /* X16 */] <0.12418419f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21194856f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.5357186f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.40219328f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.32645574f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[14 /* X15 */] <0.22623411f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_194_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.30035275f ? 
        0.022222223f : 
         (data[1 /* X2 */] <-0.25186077f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.20061338f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.14639644f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X8 */] <0.10604742f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24204032f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2549208f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43394852f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4664014f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.10403853f ? 
         (data[15 /* X16 */] <0.11873218f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.41776034f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2882289f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37138924f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1730556f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.38918585f ? 
                 (data[7 /* X8 */] <0.19041151f ? 
                     (data[10 /* X11 */] <-0.3282741f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.74351704f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.16822176f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.38058096f ? 
             (data[3 /* X4 */] <-0.8999279f ? 
                 (data[1 /* X2 */] <-0.029853785f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.14495456f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[18 /* X19 */] <-0.12365112f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41078144f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.1323896f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[17 /* X18 */] <-0.14442126f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.12150535f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.30289003f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.16975123f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.6507132f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.34007105f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6585938f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.7600432f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.350854f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4509099f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17811354f ? 
                    0.0f : 
                    1.0f)) : 
             (data[33 /* X34 */] <-0.39824218f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_01_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_195_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27911118f ? 
            0.0f : 
             (data[18 /* X19 */] <-0.094340615f ? 
                1.0f : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.16813678f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18312992f ? 
                 (data[3 /* X4 */] <-0.46614832f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.117245264f ? 
                 (data[5 /* X6 */] <0.25644052f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21871915f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                         (data[28 /* X29 */] <0.11194781f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20844264f ? 
             (data[18 /* X19 */] <-0.22916894f ? 
                 (data[2 /* X3 */] <-0.04581474f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[19 /* X20 */] <-0.51920974f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <0.023064453f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.11530107f ? 
                 (data[7 /* X8 */] <0.10136053f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.5653937f ? 
        0.85714287f : 
         (data[4 /* X5 */] <0.09674835f ? 
            1.0f : 
             (data[18 /* X19 */] <-0.5339982f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.14032948f ? 
                     (data[0 /* X1 */] <-0.035353422f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.10604742f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20596445f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.010748597f ? 
                 (data[27 /* X28 */] <-0.30248144f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.10760972f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30528387f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.33028f ? 
                 (data[30 /* X31 */] <0.18134381f ? 
                     (data[23 /* X24 */] <0.4029125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.097840935f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.83137786f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42325512f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_01_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28464538f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32937828f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.50046873f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.2181488f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.13877451f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.31062028f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_196_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023438476f ? 
         (data[15 /* X16 */] <0.10634123f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.114444695f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.3009375f ? 
                 (data[13 /* X14 */] <0.28174898f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.19395341f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.08708585f ? 
                 (data[20 /* X21 */] <0.10892312f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.20594497f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.27492675f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20844264f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.25036457f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.15638508f ? 
                    1.0f : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.16081107f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.48962033f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23957358f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0714275f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31262657f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.07497559f ? 
         (data[30 /* X31 */] <0.1337939f ? 
             (data[0 /* X1 */] <-0.18054105f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.55828947f ? 
                 (data[7 /* X8 */] <0.048242405f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.5369965f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2543978f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38541317f ? 
                             (data[24 /* X25 */] <-0.11713941f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29326198f ? 
                                    0.0f : 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20201059f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            1.0f))) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1666675f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.23969984f ? 
             (data[4 /* X5 */] <0.20071991f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29573402f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4075527f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3005925f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[6 /* X7 */] <0.23012613f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.040059533f ? 
                     (data[29 /* X30 */] <0.2029674f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09560781f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5465494f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_01_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23669763f ? 
        0.025316456f : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.24357073f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2501609f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.09560781f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_01_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_197_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[21 /* X22 */] <0.13877091f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.037021015f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.075955704f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24315588f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29271266f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.2685264f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[31 /* X32 */] <0.17202689f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078023046f ? 
         (data[19 /* X20 */] <-0.5023015f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26068234f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31928575f ? 
             (data[10 /* X11 */] <-0.16252397f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.39918283f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.17213646f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.58150345f ? 
        0.8f : 
         (data[26 /* X27 */] <-0.14640388f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20182014f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.1420723f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38541374f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.3225348f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_01_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.18959738f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47332796f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25648674f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20580967f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.30558607f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.023450652f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X5 */] <0.2028578f ? 
                     (data[2 /* X3 */] <0.14834651f ? 
                         (data[35 /* X36 */] <-0.190625f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7625986f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47332796f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23205303f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0018481f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.6370806f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.13801844f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_01_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_198_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
         (data[20 /* X21 */] <0.11131099f ? 
            1.0f : 
            0.0f) : 
         (data[15 /* X16 */] <0.15640065f ? 
             (data[18 /* X19 */] <-0.17054793f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3580328f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20804587f ? 
                    0.0f : 
                     (data[11 /* X12 */] <0.22227763f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14975661f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_01_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.37429968f ? 
             (data[17 /* X18 */] <-0.32027763f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.03213178f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_01_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.16472931f ? 
        0.0f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26324537f ? 
             (data[2 /* X3 */] <-0.45355338f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.38966304f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.29365206f ? 
                         (data[13 /* X14 */] <0.14033797f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.10355198f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.079628736f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.1946717f ? 
                 (data[33 /* X34 */] <-0.37539062f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.41512564f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[10 /* X11 */] <0.033920642f ? 
                     (data[13 /* X14 */] <0.17129569f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25934502f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[9 /* X10 */] <0.009371357f ? 
                         (data[11 /* X12 */] <-0.76349556f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_01_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4798047f ? 
         (data[3 /* X4 */] <-0.4786612f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.37882236f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <0.0047227424f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07807728f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_01_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_01_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_01_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_01_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_01_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_01_Tree_199_class_4.score0(fdata);
  }
}
class h2o_rf_01_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14438298f ? 
        0.018867925f : 
         (data[17 /* X18 */] <-0.006407407f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19873129f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22728306f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.4811662f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_01_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49490413f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18970816f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.341075f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_01_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1337939f ? 
         (data[4 /* X5 */] <0.20182014f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37158823f ? 
             (data[10 /* X11 */] <-0.67819107f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.3968654f ? 
                     (data[26 /* X27 */] <0.10087571f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.2694134f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_01_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1451151f ? 
        0.0f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20316102f ? 
             (data[6 /* X7 */] <0.15829384f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.295625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25421512f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3211896f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.43278065f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[7 /* X8 */] <0.082612954f ? 
                 (data[7 /* X8 */] <0.06403351f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_01_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28775474f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28586847f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.386803f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27576295f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27541992f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}



