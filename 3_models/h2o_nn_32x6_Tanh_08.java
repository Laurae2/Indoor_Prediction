/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:08:23.417+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_08

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_08 > h2o_nn_32x6_Tanh_08.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_08.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_08", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_08 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_08_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_08_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_08_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_08_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_08_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_08_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_08_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_08_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_08_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_08.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_08_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24528301886792453,0.12264150943396226,0.12264150943396226,0.1320754716981132,0.24528301886792453,0.1320754716981132};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_08() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-4175024015608955408L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_08_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_08_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_08_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_08_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_08_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_08_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_08_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_08_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_08_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.04777015263091676;
      sa[1] = 0.008925655425394061;
      sa[2] = -0.030310774127714653;
      sa[3] = -0.10305461401264474;
      sa[4] = -0.05403649974630323;
      sa[5] = 0.002331726418102186;
      sa[6] = 0.10120238528276751;
      sa[7] = -0.010020459548575123;
      sa[8] = -0.004445948739317333;
      sa[9] = -0.06742559045938272;
      sa[10] = 0.0410101497650638;
      sa[11] = 0.050371388583889266;
      sa[12] = 0.07344653479269142;
      sa[13] = -0.02843394265079514;
      sa[14] = 0.024104479068189646;
      sa[15] = -0.03539430866822581;
      sa[16] = -0.011668053063303485;
      sa[17] = 0.04476655913931599;
      sa[18] = -0.05344127083729597;
      sa[19] = 0.02509204107428587;
      sa[20] = 0.0951497163033588;
      sa[21] = 0.018096593484067468;
      sa[22] = -0.09282628413487491;
      sa[23] = 0.0032107308984714905;
      sa[24] = -0.03344286715755297;
      sa[25] = 0.10537497378402742;
      sa[26] = 2.1728357279365786E-4;
      sa[27] = 0.04302517129222969;
      sa[28] = -0.07611033430583658;
      sa[29] = 0.06311630696886959;
      sa[30] = 0.021620511918642227;
      sa[31] = 0.05451993184640714;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_08_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_08_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.02558378466931429;
      sa[1] = -0.07476751751525564;
      sa[2] = -0.05388362317916884;
      sa[3] = 0.048409483022906055;
      sa[4] = -0.1352447199160414;
      sa[5] = 5.566326039145092E-4;
    }
  }
}
class h2o_nn_32x6_Tanh_08_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_08_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_08_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.0077398405f;
      sa[1] = 0.10551543f;
      sa[2] = 0.14519301f;
      sa[3] = 0.12375165f;
      sa[4] = -0.1679584f;
      sa[5] = -0.19946624f;
      sa[6] = -0.03863396f;
      sa[7] = 0.25199836f;
      sa[8] = 0.07358995f;
      sa[9] = -0.18867673f;
      sa[10] = -0.1538674f;
      sa[11] = -0.14614193f;
      sa[12] = 0.05005502f;
      sa[13] = -0.29750973f;
      sa[14] = -0.17826132f;
      sa[15] = -0.034627397f;
      sa[16] = 0.010725901f;
      sa[17] = 0.103163734f;
      sa[18] = -0.1667999f;
      sa[19] = 0.14643125f;
      sa[20] = 0.2041693f;
      sa[21] = -0.3000598f;
      sa[22] = 0.23253709f;
      sa[23] = -0.14103228f;
      sa[24] = 0.25061014f;
      sa[25] = 0.17463951f;
      sa[26] = -0.24108697f;
      sa[27] = 0.22141118f;
      sa[28] = 0.19749142f;
      sa[29] = -0.29179433f;
      sa[30] = -0.20461018f;
      sa[31] = 0.10775591f;
      sa[32] = 0.20267892f;
      sa[33] = -0.19667448f;
      sa[34] = 0.021706335f;
      sa[35] = -0.11053022f;
      sa[36] = 0.082063034f;
      sa[37] = 0.22953647f;
      sa[38] = -0.076488204f;
      sa[39] = 0.15152103f;
      sa[40] = -0.011387232f;
      sa[41] = -0.093000576f;
      sa[42] = -0.1631552f;
      sa[43] = -0.057362895f;
      sa[44] = 0.2619355f;
      sa[45] = -0.28404123f;
      sa[46] = 0.024531126f;
      sa[47] = 0.01936368f;
      sa[48] = 0.22220616f;
      sa[49] = 0.25957045f;
      sa[50] = 0.19478516f;
      sa[51] = -0.34204498f;
      sa[52] = -0.118418075f;
      sa[53] = 0.12972012f;
      sa[54] = 0.20903358f;
      sa[55] = 0.18983077f;
      sa[56] = -0.17030251f;
      sa[57] = -0.3022748f;
      sa[58] = 0.23530279f;
      sa[59] = -0.23658556f;
      sa[60] = -0.22153316f;
      sa[61] = 0.14487575f;
      sa[62] = 0.10715915f;
      sa[63] = -0.123287715f;
      sa[64] = 0.12715165f;
      sa[65] = 0.093272395f;
      sa[66] = 0.008649218f;
      sa[67] = 0.06579689f;
      sa[68] = -0.11403207f;
      sa[69] = 0.039336637f;
      sa[70] = -0.070878185f;
      sa[71] = 0.3449341f;
      sa[72] = -0.13511798f;
      sa[73] = 0.20827594f;
      sa[74] = -0.1882322f;
      sa[75] = -0.023922395f;
      sa[76] = -0.12970056f;
      sa[77] = -0.049664766f;
      sa[78] = -0.031091066f;
      sa[79] = 0.2298469f;
      sa[80] = -0.25833732f;
      sa[81] = -0.043015365f;
      sa[82] = 0.009056526f;
      sa[83] = 0.13175018f;
      sa[84] = -0.043848973f;
      sa[85] = -0.19841328f;
      sa[86] = 0.10691036f;
      sa[87] = 0.30799675f;
      sa[88] = 0.24517444f;
      sa[89] = 0.11306189f;
      sa[90] = -0.1310181f;
      sa[91] = 0.044696856f;
      sa[92] = 0.10706788f;
      sa[93] = -0.14461954f;
      sa[94] = -0.14790924f;
      sa[95] = -0.138983f;
      sa[96] = 0.09091759f;
      sa[97] = 0.07194048f;
      sa[98] = 0.18727456f;
      sa[99] = 0.049909905f;
      sa[100] = -0.0537261f;
      sa[101] = -0.15463018f;
      sa[102] = -0.24738945f;
      sa[103] = -0.025419287f;
      sa[104] = -0.030630074f;
      sa[105] = -0.06501454f;
      sa[106] = -0.19130638f;
      sa[107] = 0.1582307f;
      sa[108] = 0.20359817f;
      sa[109] = -0.1477893f;
      sa[110] = -0.21753213f;
      sa[111] = 0.12151421f;
      sa[112] = 0.11481353f;
      sa[113] = 0.025800554f;
      sa[114] = -0.16779359f;
      sa[115] = -0.04731605f;
      sa[116] = -0.19997963f;
      sa[117] = 0.0636386f;
      sa[118] = -0.23805259f;
      sa[119] = 0.0045281523f;
      sa[120] = 0.19536196f;
      sa[121] = 0.21419203f;
      sa[122] = 0.26772186f;
      sa[123] = 0.2857889f;
      sa[124] = 0.29591602f;
      sa[125] = 0.3126961f;
      sa[126] = -0.260151f;
      sa[127] = -0.32548958f;
      sa[128] = 0.07231099f;
      sa[129] = 0.15471478f;
      sa[130] = -0.13173021f;
      sa[131] = 0.25788763f;
      sa[132] = 0.12271291f;
      sa[133] = -0.2803799f;
      sa[134] = 0.0802913f;
      sa[135] = -0.24698706f;
      sa[136] = -0.25532013f;
      sa[137] = -0.012338705f;
      sa[138] = 0.11988197f;
      sa[139] = -0.029073387f;
      sa[140] = -0.084551305f;
      sa[141] = -0.0908407f;
      sa[142] = 0.16552977f;
      sa[143] = -0.25011122f;
      sa[144] = 0.2386887f;
      sa[145] = -0.27480423f;
      sa[146] = -0.31935915f;
      sa[147] = 0.13946173f;
      sa[148] = 0.1787759f;
      sa[149] = 0.15430394f;
      sa[150] = 0.2810079f;
      sa[151] = -0.20331609f;
      sa[152] = -0.0045077316f;
      sa[153] = 0.27916923f;
      sa[154] = 0.20169203f;
      sa[155] = -0.12309307f;
      sa[156] = 0.098106466f;
      sa[157] = -0.22624785f;
      sa[158] = 0.062261075f;
      sa[159] = 0.07622096f;
      sa[160] = -0.018535884f;
      sa[161] = 0.13596675f;
      sa[162] = -0.080533266f;
      sa[163] = -0.20483157f;
      sa[164] = 0.21930416f;
      sa[165] = -0.011207525f;
      sa[166] = -0.0517917f;
      sa[167] = -0.033431385f;
      sa[168] = 0.12705693f;
      sa[169] = 0.27760148f;
      sa[170] = 0.048983015f;
      sa[171] = -0.049871698f;
      sa[172] = -0.08476017f;
      sa[173] = -0.1515437f;
      sa[174] = -0.055649918f;
      sa[175] = -0.23943712f;
      sa[176] = -0.021196034f;
      sa[177] = 0.012489465f;
      sa[178] = -0.050807714f;
      sa[179] = 0.15617512f;
      sa[180] = -0.067670025f;
      sa[181] = -0.30941793f;
      sa[182] = -0.14179422f;
      sa[183] = 0.20378685f;
      sa[184] = 0.24626735f;
      sa[185] = 0.11708027f;
      sa[186] = -0.3223806f;
      sa[187] = -0.003593382f;
      sa[188] = -0.026888235f;
      sa[189] = 0.116368115f;
      sa[190] = 0.017106041f;
      sa[191] = -0.20567298f;
      sa[192] = -0.12817171f;
      sa[193] = 0.17608188f;
      sa[194] = 0.055923354f;
      sa[195] = 0.1702887f;
      sa[196] = 0.20989282f;
      sa[197] = -0.12852491f;
      sa[198] = 0.15097488f;
      sa[199] = -0.04391711f;
      sa[200] = 0.0168991f;
      sa[201] = -0.2856128f;
      sa[202] = 0.11569137f;
      sa[203] = -0.06793794f;
      sa[204] = -0.18174215f;
      sa[205] = 0.18393026f;
      sa[206] = 0.25895005f;
      sa[207] = 0.13030872f;
      sa[208] = -0.26168817f;
      sa[209] = -0.09924902f;
      sa[210] = -0.2980123f;
      sa[211] = -0.29969913f;
      sa[212] = 0.2611396f;
      sa[213] = -0.35577556f;
      sa[214] = -0.018211754f;
      sa[215] = 0.059418183f;
      sa[216] = 0.08657036f;
      sa[217] = 0.15619044f;
      sa[218] = -0.119494155f;
      sa[219] = 0.2664732f;
      sa[220] = -0.20158924f;
      sa[221] = 0.063466184f;
      sa[222] = 0.23785195f;
      sa[223] = 0.058371406f;
      sa[224] = 0.10948769f;
      sa[225] = 0.19824295f;
      sa[226] = -0.22552744f;
      sa[227] = 0.13195282f;
      sa[228] = 0.13800658f;
      sa[229] = 0.11147946f;
      sa[230] = 0.27749765f;
      sa[231] = -0.23496173f;
      sa[232] = -0.24042003f;
      sa[233] = 0.044522464f;
      sa[234] = 0.13271476f;
      sa[235] = -0.18293138f;
      sa[236] = -0.020173127f;
      sa[237] = -0.20975222f;
      sa[238] = -0.1862371f;
      sa[239] = 0.14680521f;
      sa[240] = 0.042645708f;
      sa[241] = -0.22366284f;
      sa[242] = -0.071033195f;
      sa[243] = -0.17663728f;
      sa[244] = -0.18278722f;
      sa[245] = -0.11299294f;
      sa[246] = -0.2313485f;
      sa[247] = -0.054430954f;
      sa[248] = 0.23528086f;
      sa[249] = 0.18428631f;
      sa[250] = -0.17604661f;
      sa[251] = -0.099735364f;
      sa[252] = -0.20316915f;
      sa[253] = -0.065488204f;
      sa[254] = -0.1896584f;
      sa[255] = 0.2856635f;
      sa[256] = -0.1918652f;
      sa[257] = 0.3051348f;
      sa[258] = -0.24865277f;
      sa[259] = -0.13225032f;
      sa[260] = -0.11858218f;
      sa[261] = -0.04705855f;
      sa[262] = -0.12897158f;
      sa[263] = 0.29561675f;
      sa[264] = -0.09086905f;
      sa[265] = 0.15103884f;
      sa[266] = -0.235556f;
      sa[267] = -0.16768065f;
      sa[268] = 0.37720937f;
      sa[269] = -0.04939423f;
      sa[270] = -0.068549104f;
      sa[271] = 0.14806946f;
      sa[272] = -0.07526795f;
      sa[273] = -0.14335436f;
      sa[274] = 0.09358917f;
      sa[275] = -0.05041045f;
      sa[276] = 0.10654285f;
      sa[277] = -0.21232621f;
      sa[278] = -0.1647611f;
      sa[279] = 0.18774514f;
      sa[280] = -0.096075706f;
      sa[281] = 0.29788098f;
      sa[282] = -0.0064365836f;
      sa[283] = 0.026937444f;
      sa[284] = 0.06167885f;
      sa[285] = -0.11361522f;
      sa[286] = 0.17097813f;
      sa[287] = 0.029912751f;
      sa[288] = -0.18717821f;
      sa[289] = -0.14055304f;
      sa[290] = -0.08981349f;
      sa[291] = -0.06276092f;
      sa[292] = 0.13541646f;
      sa[293] = -0.0985368f;
      sa[294] = 0.077967174f;
      sa[295] = 0.12183586f;
      sa[296] = 0.19434145f;
      sa[297] = 0.2099339f;
      sa[298] = -0.0038204764f;
      sa[299] = -0.10969119f;
      sa[300] = -0.03133989f;
      sa[301] = -0.08959986f;
      sa[302] = 0.1286337f;
      sa[303] = -0.010070602f;
      sa[304] = -0.19600004f;
      sa[305] = -0.027500888f;
      sa[306] = 0.17406772f;
      sa[307] = -0.099759445f;
      sa[308] = 0.080560505f;
      sa[309] = 0.16139719f;
      sa[310] = 0.28165454f;
      sa[311] = 0.31118646f;
      sa[312] = -0.19857582f;
      sa[313] = -0.14835827f;
      sa[314] = -0.172765f;
      sa[315] = 0.067957304f;
      sa[316] = -0.034183897f;
      sa[317] = -0.085676216f;
      sa[318] = 0.07080278f;
      sa[319] = 0.2482136f;
      sa[320] = -0.112965494f;
      sa[321] = 0.06485272f;
      sa[322] = 0.3168953f;
      sa[323] = -0.08536179f;
      sa[324] = -0.04584557f;
      sa[325] = 0.22067739f;
      sa[326] = -0.260051f;
      sa[327] = 0.016283222f;
      sa[328] = -0.09541878f;
      sa[329] = 0.20343927f;
      sa[330] = -0.19484924f;
      sa[331] = -0.04355249f;
      sa[332] = -0.26471075f;
      sa[333] = 0.09292076f;
      sa[334] = -0.09227787f;
      sa[335] = 0.31466496f;
      sa[336] = -0.16288683f;
      sa[337] = -0.16274953f;
      sa[338] = 0.2582566f;
      sa[339] = -0.24117304f;
      sa[340] = -0.31947005f;
      sa[341] = -0.28790757f;
      sa[342] = 0.21271202f;
      sa[343] = -0.065250084f;
      sa[344] = -0.18783988f;
      sa[345] = 0.14511056f;
      sa[346] = 0.16246793f;
      sa[347] = -0.20555365f;
      sa[348] = 0.28529674f;
      sa[349] = -0.27193943f;
      sa[350] = -0.21270725f;
      sa[351] = -0.009566189f;
      sa[352] = 0.16641833f;
      sa[353] = -0.061497416f;
      sa[354] = 0.05924445f;
      sa[355] = 0.07507035f;
      sa[356] = -0.094901696f;
      sa[357] = 0.26097172f;
      sa[358] = -0.3629175f;
      sa[359] = -0.012315332f;
      sa[360] = 0.1047734f;
      sa[361] = 0.005276869f;
      sa[362] = -0.08473552f;
      sa[363] = -0.03530765f;
      sa[364] = -0.09582051f;
      sa[365] = -0.15968333f;
      sa[366] = 0.023968387f;
      sa[367] = -0.2167351f;
      sa[368] = -0.14753444f;
      sa[369] = 0.3291675f;
      sa[370] = -0.15678865f;
      sa[371] = 0.28529593f;
      sa[372] = -0.0050689704f;
      sa[373] = 0.33657652f;
      sa[374] = -0.10091721f;
      sa[375] = -0.22839496f;
      sa[376] = -0.23397283f;
      sa[377] = -0.13844681f;
      sa[378] = 0.23505121f;
      sa[379] = 0.1685273f;
      sa[380] = -0.10888784f;
      sa[381] = -0.072428055f;
      sa[382] = -0.034959514f;
      sa[383] = -0.049631916f;
      sa[384] = -0.07216442f;
      sa[385] = 0.14896704f;
      sa[386] = -0.2892681f;
      sa[387] = -0.17864735f;
      sa[388] = 0.101017065f;
      sa[389] = 0.020183941f;
      sa[390] = 0.0358683f;
      sa[391] = -0.06670879f;
      sa[392] = 0.15271743f;
      sa[393] = 0.1396334f;
      sa[394] = -0.028428866f;
      sa[395] = 0.33887097f;
      sa[396] = 0.26812127f;
      sa[397] = -0.2887125f;
      sa[398] = 0.15175499f;
      sa[399] = -0.026098229f;
      sa[400] = 0.17679301f;
      sa[401] = 0.24793264f;
      sa[402] = -0.120143086f;
      sa[403] = 0.056120943f;
      sa[404] = 0.24119008f;
      sa[405] = -0.25169995f;
      sa[406] = -0.056397036f;
      sa[407] = 0.102793895f;
      sa[408] = -0.20053275f;
      sa[409] = -0.21948095f;
      sa[410] = -0.099523894f;
      sa[411] = 0.13828574f;
      sa[412] = -0.15356344f;
      sa[413] = 0.05807069f;
      sa[414] = 0.13818778f;
      sa[415] = 0.39242867f;
      sa[416] = -0.16521907f;
      sa[417] = 0.03380467f;
      sa[418] = 0.0024172235f;
      sa[419] = 0.27164567f;
      sa[420] = 0.22814023f;
      sa[421] = 0.25240573f;
      sa[422] = 0.21454199f;
      sa[423] = -0.053088006f;
      sa[424] = 0.10660319f;
      sa[425] = -0.061421197f;
      sa[426] = -0.2677026f;
      sa[427] = 0.16128837f;
      sa[428] = -0.07799674f;
      sa[429] = -0.22687596f;
      sa[430] = 0.19824615f;
      sa[431] = 0.068555325f;
      sa[432] = -0.040128443f;
      sa[433] = 0.16213296f;
      sa[434] = 0.2874894f;
      sa[435] = -0.04623478f;
      sa[436] = -0.2020078f;
      sa[437] = -0.17861223f;
      sa[438] = 0.037234426f;
      sa[439] = 0.06243164f;
      sa[440] = 0.2549638f;
      sa[441] = -0.23770583f;
      sa[442] = 0.12176583f;
      sa[443] = 0.07590945f;
      sa[444] = -0.19714451f;
      sa[445] = 0.11025007f;
      sa[446] = 0.23948309f;
      sa[447] = 0.14186317f;
      sa[448] = 0.22539072f;
      sa[449] = 0.30540586f;
      sa[450] = -0.16925843f;
      sa[451] = 0.13039227f;
      sa[452] = 0.18547967f;
      sa[453] = -0.015087622f;
      sa[454] = -0.13991943f;
      sa[455] = 0.0048707468f;
      sa[456] = 0.008073025f;
      sa[457] = 0.13690032f;
      sa[458] = -0.30081525f;
      sa[459] = 0.3253451f;
      sa[460] = 0.24040574f;
      sa[461] = 0.31290138f;
      sa[462] = 0.10274223f;
      sa[463] = 0.2659931f;
      sa[464] = -0.32579863f;
      sa[465] = 0.28654394f;
      sa[466] = -0.037056923f;
      sa[467] = 0.13330896f;
      sa[468] = 0.056280103f;
      sa[469] = 0.17647013f;
      sa[470] = 0.20098321f;
      sa[471] = -0.070684634f;
      sa[472] = 0.032673113f;
      sa[473] = -0.11607885f;
      sa[474] = 0.002807545f;
      sa[475] = 0.1412482f;
      sa[476] = 0.14057879f;
      sa[477] = -0.14807178f;
      sa[478] = 0.10889092f;
      sa[479] = -0.120487735f;
      sa[480] = -0.34181207f;
      sa[481] = -0.25179517f;
      sa[482] = -0.27166238f;
      sa[483] = 0.18056571f;
      sa[484] = 0.12292674f;
      sa[485] = 0.1348574f;
      sa[486] = -0.023435313f;
      sa[487] = -0.08859488f;
      sa[488] = -0.21669646f;
      sa[489] = 0.09430935f;
      sa[490] = -0.0021496848f;
      sa[491] = -0.15219499f;
      sa[492] = 0.22102822f;
      sa[493] = 0.26735446f;
      sa[494] = -0.2399451f;
      sa[495] = 0.21176822f;
      sa[496] = -0.05787538f;
      sa[497] = 0.0426577f;
      sa[498] = 0.11094168f;
      sa[499] = 0.119583316f;
      sa[500] = -0.12311097f;
      sa[501] = 0.07635112f;
      sa[502] = 0.32444566f;
      sa[503] = 0.12562573f;
      sa[504] = -0.116559185f;
      sa[505] = -0.12199853f;
      sa[506] = 0.19473542f;
      sa[507] = -0.05291327f;
      sa[508] = 0.08375847f;
      sa[509] = 0.22533426f;
      sa[510] = 0.14659005f;
      sa[511] = -0.0061277472f;
      sa[512] = 0.094991714f;
      sa[513] = -0.06392261f;
      sa[514] = 0.26934433f;
      sa[515] = -0.2971762f;
      sa[516] = 0.024187805f;
      sa[517] = 0.10157707f;
      sa[518] = 0.12648536f;
      sa[519] = -0.08615957f;
      sa[520] = 0.24899419f;
      sa[521] = 0.17392758f;
      sa[522] = 0.044931203f;
      sa[523] = 0.20902951f;
      sa[524] = 0.18398058f;
      sa[525] = 0.16163248f;
      sa[526] = -0.010936002f;
      sa[527] = -0.11824782f;
      sa[528] = -0.016618263f;
      sa[529] = 0.11989758f;
      sa[530] = -0.19173093f;
      sa[531] = 0.19437683f;
      sa[532] = 0.144239f;
      sa[533] = 0.120201476f;
      sa[534] = 0.1400811f;
      sa[535] = -0.07609687f;
      sa[536] = 0.051764768f;
      sa[537] = -0.24451582f;
      sa[538] = 0.2772856f;
      sa[539] = 0.30689064f;
      sa[540] = -0.26129416f;
      sa[541] = -0.20235983f;
      sa[542] = -0.109461464f;
      sa[543] = -0.13183658f;
      sa[544] = 0.14003813f;
      sa[545] = 0.082758434f;
      sa[546] = 0.07607608f;
      sa[547] = 0.19309504f;
      sa[548] = 0.035001446f;
      sa[549] = 0.12878036f;
      sa[550] = -0.023918478f;
      sa[551] = -0.07903868f;
      sa[552] = 0.032138977f;
      sa[553] = -0.08013019f;
      sa[554] = -0.15249844f;
      sa[555] = -0.122528285f;
      sa[556] = -0.19515686f;
      sa[557] = -0.23671597f;
      sa[558] = -0.17432567f;
      sa[559] = 6.488852E-5f;
      sa[560] = -0.3006477f;
      sa[561] = -0.10049628f;
      sa[562] = 0.18279168f;
      sa[563] = -0.07437069f;
      sa[564] = 0.23216681f;
      sa[565] = 0.0325218f;
      sa[566] = 0.27992874f;
      sa[567] = -0.027372425f;
      sa[568] = -0.089670844f;
      sa[569] = 0.010684394f;
      sa[570] = -0.042198386f;
      sa[571] = -0.05605734f;
      sa[572] = -0.06612886f;
      sa[573] = 0.18067858f;
      sa[574] = 0.15424424f;
      sa[575] = -0.30697057f;
      sa[576] = -0.1474476f;
      sa[577] = -0.035096012f;
      sa[578] = 0.078683175f;
      sa[579] = 0.023830624f;
      sa[580] = 0.07029043f;
      sa[581] = -0.17781603f;
      sa[582] = 0.07669009f;
      sa[583] = -0.067263454f;
      sa[584] = 0.083596006f;
      sa[585] = 0.1271661f;
      sa[586] = -0.25549027f;
      sa[587] = -0.1947897f;
      sa[588] = 0.072618574f;
      sa[589] = 0.0682611f;
      sa[590] = -0.021703424f;
      sa[591] = -0.05682629f;
      sa[592] = -0.35636756f;
      sa[593] = -0.24054834f;
      sa[594] = -0.022285666f;
      sa[595] = 0.01542147f;
      sa[596] = 0.25382024f;
      sa[597] = -0.036926508f;
      sa[598] = 0.21886031f;
      sa[599] = -6.7451317E-4f;
      sa[600] = -0.28252003f;
      sa[601] = 0.15893723f;
      sa[602] = -0.041750465f;
      sa[603] = 0.056524735f;
      sa[604] = 0.20173618f;
      sa[605] = 0.13195921f;
      sa[606] = 0.13944829f;
      sa[607] = -0.02942105f;
      sa[608] = -0.00814428f;
      sa[609] = 0.037130393f;
      sa[610] = 0.11472967f;
      sa[611] = -0.044224527f;
      sa[612] = -0.09606791f;
      sa[613] = 0.11588735f;
      sa[614] = 0.13138616f;
      sa[615] = -0.18469857f;
      sa[616] = 0.0613107f;
      sa[617] = -0.23580275f;
      sa[618] = -0.13461132f;
      sa[619] = -0.11840508f;
      sa[620] = -0.04106831f;
      sa[621] = -0.16998236f;
      sa[622] = -0.25216037f;
      sa[623] = -0.21317987f;
      sa[624] = -0.054043848f;
      sa[625] = 0.3027433f;
      sa[626] = 0.012500846f;
      sa[627] = 0.27401018f;
      sa[628] = -0.22527404f;
      sa[629] = 0.010596123f;
      sa[630] = -0.18751447f;
      sa[631] = 0.3321489f;
      sa[632] = 0.08115821f;
      sa[633] = -0.15284902f;
      sa[634] = -0.21324688f;
      sa[635] = 0.20317662f;
      sa[636] = -0.09370152f;
      sa[637] = 0.023660038f;
      sa[638] = -0.18163142f;
      sa[639] = -0.06346462f;
      sa[640] = -0.1323535f;
      sa[641] = -0.26975393f;
      sa[642] = 0.20956095f;
      sa[643] = -0.298104f;
      sa[644] = -0.14748663f;
      sa[645] = -0.22473419f;
      sa[646] = 0.28516254f;
      sa[647] = -0.20627995f;
      sa[648] = -0.02197308f;
      sa[649] = -0.02068288f;
      sa[650] = 0.051429313f;
      sa[651] = -0.1026894f;
      sa[652] = 0.055911355f;
      sa[653] = -0.15089323f;
      sa[654] = -0.16714418f;
      sa[655] = -0.17877664f;
      sa[656] = 0.12744518f;
      sa[657] = 0.16297248f;
      sa[658] = -0.23861739f;
      sa[659] = -0.14317329f;
      sa[660] = -0.22758879f;
      sa[661] = -0.09021836f;
      sa[662] = -0.26180142f;
      sa[663] = 0.17110051f;
      sa[664] = -0.15122029f;
      sa[665] = 0.28075525f;
      sa[666] = 0.015207484f;
      sa[667] = -0.30470383f;
      sa[668] = 0.25080502f;
      sa[669] = -0.14397538f;
      sa[670] = 0.10609811f;
      sa[671] = 0.0070466106f;
      sa[672] = -0.26631427f;
      sa[673] = 0.15879147f;
      sa[674] = 0.25606894f;
      sa[675] = -0.33189198f;
      sa[676] = -0.08858562f;
      sa[677] = -0.19974342f;
      sa[678] = 0.19251274f;
      sa[679] = -0.05747848f;
      sa[680] = 0.09701083f;
      sa[681] = 0.13667777f;
      sa[682] = -0.04687692f;
      sa[683] = -0.18453358f;
      sa[684] = -0.021267492f;
      sa[685] = 0.07588054f;
      sa[686] = -0.14835942f;
      sa[687] = -0.17195655f;
      sa[688] = -0.27948302f;
      sa[689] = -0.22867984f;
      sa[690] = -0.03806352f;
      sa[691] = 0.08378732f;
      sa[692] = -0.14395799f;
      sa[693] = -0.18078557f;
      sa[694] = 0.28159648f;
      sa[695] = -0.11873847f;
      sa[696] = -0.0879715f;
      sa[697] = -0.1319605f;
      sa[698] = -0.17675917f;
      sa[699] = 0.26905847f;
      sa[700] = 0.17807876f;
      sa[701] = 0.12255107f;
      sa[702] = 0.14713207f;
      sa[703] = -0.0018814345f;
      sa[704] = -0.26489887f;
      sa[705] = -0.048054483f;
      sa[706] = -0.14162537f;
      sa[707] = 0.0039785793f;
      sa[708] = -0.009596841f;
      sa[709] = -0.27066898f;
      sa[710] = 0.24061161f;
      sa[711] = -0.02913342f;
      sa[712] = 0.032812577f;
      sa[713] = 0.13199073f;
      sa[714] = 0.18654007f;
      sa[715] = 0.06427528f;
      sa[716] = 0.034208592f;
      sa[717] = 0.12444815f;
      sa[718] = -0.008855019f;
      sa[719] = 0.11223044f;
      sa[720] = -0.25126272f;
      sa[721] = 0.29258963f;
      sa[722] = -0.033553056f;
      sa[723] = 0.17370366f;
      sa[724] = 0.032251034f;
      sa[725] = -0.2509944f;
      sa[726] = -0.20814379f;
      sa[727] = -0.33364657f;
      sa[728] = -0.08755443f;
      sa[729] = -0.09234371f;
      sa[730] = 0.102394365f;
      sa[731] = -0.41004276f;
      sa[732] = 0.20654996f;
      sa[733] = 0.26745847f;
      sa[734] = -0.100300305f;
      sa[735] = 0.29282323f;
      sa[736] = 0.054395754f;
      sa[737] = 0.16866453f;
      sa[738] = -0.250207f;
      sa[739] = -0.14871837f;
      sa[740] = -0.26464084f;
      sa[741] = -0.309532f;
      sa[742] = 0.07726415f;
      sa[743] = -0.033169813f;
      sa[744] = 0.124542296f;
      sa[745] = -0.2286548f;
      sa[746] = 0.07796768f;
      sa[747] = -0.15240702f;
      sa[748] = -0.12540543f;
      sa[749] = -0.16623081f;
      sa[750] = 0.22529893f;
      sa[751] = 0.2480013f;
      sa[752] = -0.03745857f;
      sa[753] = 0.11787717f;
      sa[754] = 0.0035724514f;
      sa[755] = 0.10320511f;
      sa[756] = -0.16664937f;
      sa[757] = 0.26647124f;
      sa[758] = -0.18127327f;
      sa[759] = 0.004651224f;
      sa[760] = -0.11551638f;
      sa[761] = 0.029922782f;
      sa[762] = -0.12254495f;
      sa[763] = 0.09265903f;
      sa[764] = 0.10414968f;
      sa[765] = -0.11242225f;
      sa[766] = -0.23679231f;
      sa[767] = 0.012543569f;
      sa[768] = -0.15442534f;
      sa[769] = -0.26490346f;
      sa[770] = -0.010700378f;
      sa[771] = -0.029277239f;
      sa[772] = 0.040149685f;
      sa[773] = -0.29817253f;
      sa[774] = -0.017957183f;
      sa[775] = 0.2821909f;
      sa[776] = -0.05096609f;
      sa[777] = 0.045112252f;
      sa[778] = 0.1560447f;
      sa[779] = -0.19468209f;
      sa[780] = -0.031829383f;
      sa[781] = -0.08658173f;
      sa[782] = 0.14097543f;
      sa[783] = -0.15505868f;
      sa[784] = -0.13379943f;
      sa[785] = -0.11893577f;
      sa[786] = -0.08201334f;
      sa[787] = -0.2500092f;
      sa[788] = -0.25993678f;
      sa[789] = 0.072093345f;
      sa[790] = -0.058031127f;
      sa[791] = -0.07592785f;
      sa[792] = 0.1749251f;
      sa[793] = -0.15896909f;
      sa[794] = -0.24768507f;
      sa[795] = -0.06516172f;
      sa[796] = 0.23709823f;
      sa[797] = -0.22777507f;
      sa[798] = -0.26847014f;
      sa[799] = -0.12648243f;
      sa[800] = 0.16054945f;
      sa[801] = 0.08993576f;
      sa[802] = 0.24771573f;
      sa[803] = 0.1164599f;
      sa[804] = 0.1936566f;
      sa[805] = 0.24465671f;
      sa[806] = 0.24035731f;
      sa[807] = 0.21854043f;
      sa[808] = -0.060478456f;
      sa[809] = -0.1784829f;
      sa[810] = 0.10896488f;
      sa[811] = 0.04619344f;
      sa[812] = 0.1447248f;
      sa[813] = -0.2759995f;
      sa[814] = 0.07970352f;
      sa[815] = -0.12450029f;
      sa[816] = -0.14590889f;
      sa[817] = -0.14601392f;
      sa[818] = 0.009499201f;
      sa[819] = -2.6098735E-4f;
      sa[820] = -0.30059272f;
      sa[821] = -0.20549071f;
      sa[822] = -0.2942845f;
      sa[823] = 0.078759074f;
      sa[824] = 0.11702153f;
      sa[825] = 0.3513067f;
      sa[826] = -0.26058537f;
      sa[827] = -0.26682207f;
      sa[828] = 0.11067579f;
      sa[829] = -0.10508499f;
      sa[830] = 0.15174554f;
      sa[831] = 0.19781959f;
      sa[832] = 0.13914439f;
      sa[833] = 0.072914876f;
      sa[834] = 0.18601623f;
      sa[835] = -0.053887155f;
      sa[836] = 0.18583986f;
      sa[837] = -0.16224572f;
      sa[838] = 0.14369385f;
      sa[839] = -0.1913473f;
      sa[840] = 0.19521925f;
      sa[841] = 0.10489683f;
      sa[842] = 0.16483825f;
      sa[843] = 0.07779873f;
      sa[844] = 0.038928486f;
      sa[845] = 0.14869775f;
      sa[846] = -0.23541038f;
      sa[847] = -0.12641628f;
      sa[848] = 0.20096576f;
      sa[849] = 0.23274162f;
      sa[850] = -0.011237348f;
      sa[851] = 0.11753841f;
      sa[852] = 0.2607221f;
      sa[853] = 0.16621307f;
      sa[854] = 0.2531857f;
      sa[855] = 0.13243863f;
      sa[856] = 0.09268458f;
      sa[857] = -0.14616102f;
      sa[858] = 0.14045984f;
      sa[859] = 0.111336075f;
      sa[860] = 0.33024186f;
      sa[861] = -0.16393954f;
      sa[862] = -0.18014796f;
      sa[863] = -0.026723472f;
      sa[864] = -0.17094657f;
      sa[865] = 0.21293727f;
      sa[866] = -0.20289786f;
      sa[867] = -0.034521002f;
      sa[868] = -0.169392f;
      sa[869] = 0.17487787f;
      sa[870] = -0.03904233f;
      sa[871] = 0.13627656f;
      sa[872] = 0.22716594f;
      sa[873] = -0.067988575f;
      sa[874] = -0.016317429f;
      sa[875] = -0.2650461f;
      sa[876] = -0.2564004f;
      sa[877] = -0.25990486f;
      sa[878] = -0.0050139152f;
      sa[879] = 0.11504398f;
      sa[880] = -0.14080118f;
      sa[881] = -0.14227532f;
      sa[882] = 0.17989832f;
      sa[883] = 0.186909f;
      sa[884] = -0.13010503f;
      sa[885] = -0.113505125f;
      sa[886] = 0.10050406f;
      sa[887] = -0.049089577f;
      sa[888] = -0.13893107f;
      sa[889] = 0.0191059f;
      sa[890] = -0.3035929f;
      sa[891] = 0.38866973f;
      sa[892] = 0.14577906f;
      sa[893] = 0.24453326f;
      sa[894] = 0.0070130234f;
      sa[895] = 0.17807461f;
      sa[896] = -0.2168174f;
      sa[897] = 0.1929088f;
      sa[898] = 0.05270343f;
      sa[899] = 0.24122319f;
      sa[900] = -0.15085761f;
      sa[901] = 0.16798285f;
      sa[902] = -0.1731211f;
      sa[903] = -0.16616271f;
      sa[904] = 0.18185623f;
      sa[905] = 0.2134126f;
      sa[906] = -0.22392993f;
      sa[907] = -0.21634516f;
      sa[908] = -0.2314709f;
      sa[909] = 0.021266159f;
      sa[910] = 0.032285854f;
      sa[911] = -0.21116221f;
      sa[912] = -0.0011963937f;
      sa[913] = 0.079082094f;
      sa[914] = -0.15525885f;
      sa[915] = 0.06411944f;
      sa[916] = 0.24378505f;
      sa[917] = 0.03130437f;
      sa[918] = 0.122052625f;
      sa[919] = 0.10715736f;
      sa[920] = 0.14220044f;
      sa[921] = -0.07422011f;
      sa[922] = -0.12518573f;
      sa[923] = -0.07885959f;
      sa[924] = -0.06560397f;
      sa[925] = -0.16680978f;
      sa[926] = 0.06372363f;
      sa[927] = -0.0271931f;
      sa[928] = 0.24831681f;
      sa[929] = 0.13704522f;
      sa[930] = 0.16843128f;
      sa[931] = -0.012059015f;
      sa[932] = 0.20851071f;
      sa[933] = -0.017409f;
      sa[934] = 0.21828441f;
      sa[935] = -0.16500254f;
      sa[936] = 0.08993593f;
      sa[937] = 0.17657216f;
      sa[938] = -0.14730115f;
      sa[939] = 0.05267825f;
      sa[940] = -0.063193075f;
      sa[941] = -0.31242758f;
      sa[942] = -0.24517274f;
      sa[943] = -0.21694276f;
      sa[944] = -0.18874802f;
      sa[945] = 0.005235982f;
      sa[946] = 0.02293187f;
      sa[947] = 0.20338973f;
      sa[948] = 0.09048397f;
      sa[949] = -0.18565461f;
      sa[950] = 0.0826182f;
      sa[951] = -0.13846661f;
      sa[952] = -0.23539446f;
      sa[953] = -0.23847339f;
      sa[954] = -0.21182898f;
      sa[955] = 0.052160196f;
      sa[956] = -0.008469378f;
      sa[957] = 0.034382194f;
      sa[958] = 0.094769455f;
      sa[959] = -0.18625729f;
      sa[960] = 0.2846924f;
      sa[961] = -0.16655774f;
      sa[962] = -0.012499096f;
      sa[963] = -0.06831077f;
      sa[964] = -0.16818789f;
      sa[965] = 0.23950253f;
      sa[966] = -0.09587945f;
      sa[967] = -0.29199174f;
      sa[968] = 0.096006684f;
      sa[969] = -0.030016506f;
      sa[970] = 0.35404804f;
      sa[971] = 0.046473447f;
      sa[972] = -0.2043674f;
      sa[973] = -0.22683065f;
      sa[974] = -0.27471367f;
      sa[975] = -0.26391196f;
      sa[976] = -0.090195514f;
      sa[977] = 0.056896195f;
      sa[978] = -0.08357067f;
      sa[979] = 0.14917135f;
      sa[980] = 0.08531063f;
      sa[981] = -0.20868245f;
      sa[982] = 0.13586628f;
      sa[983] = -0.04845034f;
      sa[984] = -0.25115496f;
      sa[985] = 0.10180642f;
      sa[986] = -0.22173248f;
      sa[987] = 0.12255597f;
      sa[988] = 0.15923074f;
      sa[989] = 0.23308939f;
      sa[990] = 0.27857137f;
      sa[991] = -0.18221444f;
      sa[992] = -0.19947809f;
      sa[993] = -0.05472837f;
      sa[994] = -0.15850662f;
      sa[995] = -0.2635851f;
      sa[996] = 0.22534943f;
      sa[997] = 0.18046293f;
      sa[998] = 0.12002261f;
      sa[999] = 0.15709157f;
      sa[1000] = 0.036815718f;
      sa[1001] = 0.23257433f;
      sa[1002] = 0.2737032f;
      sa[1003] = -0.053959668f;
      sa[1004] = 0.20915042f;
      sa[1005] = -0.17283767f;
      sa[1006] = -0.18637346f;
      sa[1007] = 4.6467167E-4f;
      sa[1008] = 0.22401878f;
      sa[1009] = 0.118460625f;
      sa[1010] = -0.026126277f;
      sa[1011] = 0.28368115f;
      sa[1012] = -0.06617728f;
      sa[1013] = 0.15348502f;
      sa[1014] = 0.2596841f;
      sa[1015] = -0.23597112f;
      sa[1016] = 0.27663133f;
      sa[1017] = 0.116283335f;
      sa[1018] = 0.0035952113f;
      sa[1019] = 0.116382636f;
      sa[1020] = -0.2424763f;
      sa[1021] = 0.07132461f;
      sa[1022] = 0.2117113f;
      sa[1023] = 0.12435332f;
      sa[1024] = 0.036438365f;
      sa[1025] = 0.1728919f;
      sa[1026] = 0.122034125f;
      sa[1027] = 0.15961161f;
      sa[1028] = 0.28517973f;
      sa[1029] = -0.029333435f;
      sa[1030] = -0.17032604f;
      sa[1031] = 0.0043246276f;
      sa[1032] = -0.25807357f;
      sa[1033] = 0.07195222f;
      sa[1034] = -0.04731084f;
      sa[1035] = -0.03711479f;
      sa[1036] = 0.2601785f;
      sa[1037] = 0.03274817f;
      sa[1038] = -0.19377916f;
      sa[1039] = 0.29774144f;
      sa[1040] = -0.013907837f;
      sa[1041] = 0.1693875f;
      sa[1042] = -0.24237777f;
      sa[1043] = -0.07839909f;
      sa[1044] = 0.21356799f;
      sa[1045] = 0.42052987f;
      sa[1046] = -0.093965255f;
      sa[1047] = -0.37490454f;
      sa[1048] = 0.15876661f;
      sa[1049] = -0.03761659f;
      sa[1050] = 0.06953438f;
      sa[1051] = -0.15194187f;
      sa[1052] = 0.18607832f;
      sa[1053] = 0.31860247f;
      sa[1054] = 0.3122951f;
      sa[1055] = 0.060685143f;
      sa[1056] = 0.30180284f;
      sa[1057] = -0.113835774f;
      sa[1058] = 0.26800972f;
      sa[1059] = -0.06722099f;
      sa[1060] = -0.11600784f;
      sa[1061] = 0.1562348f;
      sa[1062] = 0.10356618f;
      sa[1063] = 0.18170975f;
      sa[1064] = 0.11502365f;
      sa[1065] = -0.02319043f;
      sa[1066] = 0.17216069f;
      sa[1067] = -0.288688f;
      sa[1068] = -0.21331571f;
      sa[1069] = 0.26465306f;
      sa[1070] = 0.09166288f;
      sa[1071] = 0.16969588f;
      sa[1072] = -0.18994336f;
      sa[1073] = 0.14955701f;
      sa[1074] = 0.17792282f;
      sa[1075] = -0.11693971f;
      sa[1076] = -0.14763941f;
      sa[1077] = 0.13201706f;
      sa[1078] = -0.09262072f;
      sa[1079] = 0.011817665f;
      sa[1080] = 0.17438614f;
      sa[1081] = 0.19368576f;
      sa[1082] = -0.31419343f;
      sa[1083] = -0.016689416f;
      sa[1084] = 0.19296384f;
      sa[1085] = -0.2500901f;
      sa[1086] = -0.28925547f;
      sa[1087] = -0.31972516f;
      sa[1088] = -0.19642033f;
      sa[1089] = 0.009316361f;
      sa[1090] = -0.3138432f;
      sa[1091] = 0.022498123f;
      sa[1092] = -0.22330141f;
      sa[1093] = -0.26862228f;
      sa[1094] = 0.010507211f;
      sa[1095] = -0.26993164f;
      sa[1096] = 0.06246128f;
      sa[1097] = -0.18135945f;
      sa[1098] = 0.010609188f;
      sa[1099] = -0.027532907f;
      sa[1100] = -0.12074676f;
      sa[1101] = 0.105931684f;
      sa[1102] = -0.13703793f;
      sa[1103] = 0.17173167f;
      sa[1104] = -0.25878933f;
      sa[1105] = -0.18269071f;
      sa[1106] = -0.08497303f;
      sa[1107] = 0.101042345f;
      sa[1108] = -0.19232413f;
      sa[1109] = 0.21481198f;
      sa[1110] = 0.15487674f;
      sa[1111] = -0.28466675f;
      sa[1112] = 0.17236929f;
      sa[1113] = 0.1262359f;
      sa[1114] = 0.10266847f;
      sa[1115] = 0.20890766f;
      sa[1116] = -0.028815124f;
      sa[1117] = 0.016654572f;
      sa[1118] = -0.13234521f;
      sa[1119] = -0.06599337f;
      sa[1120] = 0.17145583f;
      sa[1121] = 0.13209066f;
      sa[1122] = 0.2407794f;
      sa[1123] = 0.23899265f;
      sa[1124] = 0.05990162f;
      sa[1125] = -0.04376459f;
      sa[1126] = 0.24728033f;
      sa[1127] = 0.18801217f;
      sa[1128] = 0.04753629f;
      sa[1129] = -0.043671608f;
      sa[1130] = 0.2385816f;
      sa[1131] = 0.3116743f;
      sa[1132] = 0.04559205f;
      sa[1133] = -0.070602745f;
      sa[1134] = 0.20301512f;
      sa[1135] = -0.25105113f;
      sa[1136] = -0.026462322f;
      sa[1137] = 0.17002545f;
      sa[1138] = -0.09759268f;
      sa[1139] = 0.0907452f;
      sa[1140] = 0.2719058f;
      sa[1141] = -0.24296898f;
      sa[1142] = 0.090161875f;
      sa[1143] = -0.02916519f;
      sa[1144] = -0.23260877f;
      sa[1145] = 0.18641092f;
      sa[1146] = 0.26923513f;
      sa[1147] = -0.024818435f;
      sa[1148] = 0.014344621f;
      sa[1149] = 1.700585E-4f;
      sa[1150] = -0.32431838f;
      sa[1151] = -0.33510646f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_08_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_08_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2720059f;
      sa[1] = -0.14137986f;
      sa[2] = -0.54233825f;
      sa[3] = -0.9079819f;
      sa[4] = 0.028802937f;
      sa[5] = 0.24612275f;
      sa[6] = 1.2403854f;
      sa[7] = -0.6629616f;
      sa[8] = -0.9360143f;
      sa[9] = 0.7259304f;
      sa[10] = -0.14645429f;
      sa[11] = 0.43066105f;
      sa[12] = 0.11804697f;
      sa[13] = 0.017202018f;
      sa[14] = -1.3070202f;
      sa[15] = 1.1672533f;
      sa[16] = 1.5495876f;
      sa[17] = -0.3421159f;
      sa[18] = 0.09383892f;
      sa[19] = -0.42610332f;
      sa[20] = 1.1472752f;
      sa[21] = 0.120594166f;
      sa[22] = -0.95444924f;
      sa[23] = 0.7864052f;
      sa[24] = -1.368949f;
      sa[25] = 0.4726452f;
      sa[26] = -0.21798457f;
      sa[27] = 1.4680841f;
      sa[28] = -1.3794729f;
      sa[29] = -0.58793384f;
      sa[30] = 0.38071966f;
      sa[31] = -0.6179427f;
      sa[32] = -1.1083829f;
      sa[33] = -1.4505584f;
      sa[34] = 0.026873805f;
      sa[35] = 1.3880588f;
      sa[36] = -0.25106242f;
      sa[37] = -0.052143235f;
      sa[38] = 0.19718604f;
      sa[39] = 0.7968735f;
      sa[40] = -0.73717064f;
      sa[41] = -1.3285377f;
      sa[42] = -1.0350279f;
      sa[43] = -1.4701527f;
      sa[44] = 0.096451506f;
      sa[45] = -1.2525375f;
      sa[46] = 1.1398035f;
      sa[47] = 1.2734151f;
      sa[48] = -1.3080453f;
      sa[49] = -1.0513413f;
      sa[50] = 0.45039058f;
      sa[51] = -0.30689144f;
      sa[52] = 0.84115386f;
      sa[53] = 0.8032579f;
      sa[54] = -0.19792883f;
      sa[55] = 1.1339f;
      sa[56] = -0.9632744f;
      sa[57] = -1.0358945f;
      sa[58] = 0.15003522f;
      sa[59] = -0.18493147f;
      sa[60] = 1.3769819f;
      sa[61] = -0.51093924f;
      sa[62] = -0.29007033f;
      sa[63] = 0.6743411f;
      sa[64] = 1.368349f;
      sa[65] = -0.6188538f;
      sa[66] = 0.6279023f;
      sa[67] = 1.5557894f;
      sa[68] = 0.7124571f;
      sa[69] = -1.066825f;
      sa[70] = -1.4413458f;
      sa[71] = -0.4317356f;
      sa[72] = -1.263148f;
      sa[73] = 1.2547064f;
      sa[74] = 1.3800368f;
      sa[75] = -0.12884505f;
      sa[76] = 0.89559066f;
      sa[77] = 0.451325f;
      sa[78] = -1.3436164f;
      sa[79] = 0.9583448f;
      sa[80] = -0.80929494f;
      sa[81] = 0.18225239f;
      sa[82] = 0.849745f;
      sa[83] = -0.558123f;
      sa[84] = -1.5829715f;
      sa[85] = -1.2303622f;
      sa[86] = 0.30968317f;
      sa[87] = 1.1663672f;
      sa[88] = -1.5563157f;
      sa[89] = -0.51916975f;
      sa[90] = -1.036895f;
      sa[91] = 1.4953618f;
      sa[92] = -0.27426714f;
      sa[93] = 0.30789208f;
      sa[94] = -1.4911864f;
      sa[95] = -0.1768448f;
      sa[96] = -1.0112284f;
      sa[97] = 0.19452527f;
      sa[98] = -0.05225374f;
      sa[99] = 0.32086065f;
      sa[100] = -1.2121272f;
      sa[101] = -0.41598296f;
      sa[102] = 1.2369895f;
      sa[103] = 0.024798583f;
      sa[104] = -0.25342116f;
      sa[105] = -0.658981f;
      sa[106] = 1.3878162f;
      sa[107] = 1.2039905f;
      sa[108] = 0.88997066f;
      sa[109] = 0.26671284f;
      sa[110] = 0.7619839f;
      sa[111] = -0.7938668f;
      sa[112] = -1.118135f;
      sa[113] = 0.27218428f;
      sa[114] = 0.10044898f;
      sa[115] = -0.32233843f;
      sa[116] = 1.1566242f;
      sa[117] = 0.05623401f;
      sa[118] = -1.3526709f;
      sa[119] = -0.74520755f;
      sa[120] = -0.30962148f;
      sa[121] = 1.0489242f;
      sa[122] = -0.079981394f;
      sa[123] = 0.34077546f;
      sa[124] = -0.7062523f;
      sa[125] = 0.76678663f;
      sa[126] = -1.0008924f;
      sa[127] = 0.3686486f;
      sa[128] = -0.90961516f;
      sa[129] = 0.74871033f;
      sa[130] = -0.36071622f;
      sa[131] = 0.87786376f;
      sa[132] = 0.45013818f;
      sa[133] = 0.6666551f;
      sa[134] = 0.6227864f;
      sa[135] = -0.96832716f;
      sa[136] = 0.5559501f;
      sa[137] = -0.6360686f;
      sa[138] = -0.018618872f;
      sa[139] = 1.2068602f;
      sa[140] = -0.60421497f;
      sa[141] = -0.05282241f;
      sa[142] = 0.33862263f;
      sa[143] = -0.7731776f;
      sa[144] = 0.9657299f;
      sa[145] = -0.68888533f;
      sa[146] = 0.070146665f;
      sa[147] = -0.28432655f;
      sa[148] = -0.8321912f;
      sa[149] = 1.0975759f;
      sa[150] = -1.1537207f;
      sa[151] = -1.5838294f;
      sa[152] = 1.5277139f;
      sa[153] = -0.54356307f;
      sa[154] = 1.3999212f;
      sa[155] = -1.4931532f;
      sa[156] = -1.4924632f;
      sa[157] = -1.1267936f;
      sa[158] = -0.10051823f;
      sa[159] = -0.68071765f;
      sa[160] = 1.3272856f;
      sa[161] = -1.117393f;
      sa[162] = 1.5049306f;
      sa[163] = -0.7554238f;
      sa[164] = 0.74430746f;
      sa[165] = -0.51734054f;
      sa[166] = 1.300869f;
      sa[167] = -1.3712692f;
      sa[168] = 1.0414398f;
      sa[169] = -1.51712f;
      sa[170] = 1.109852f;
      sa[171] = 0.8779187f;
      sa[172] = 1.5234478f;
      sa[173] = 1.5264645f;
      sa[174] = -0.07819364f;
      sa[175] = 0.055471953f;
      sa[176] = -0.7521186f;
      sa[177] = 0.13649437f;
      sa[178] = -1.0625364f;
      sa[179] = -0.25668466f;
      sa[180] = -1.3708295f;
      sa[181] = -0.9574282f;
      sa[182] = 0.26973844f;
      sa[183] = -1.0048207f;
      sa[184] = 1.519535f;
      sa[185] = 1.2154714f;
      sa[186] = -0.49403855f;
      sa[187] = -0.9732222f;
      sa[188] = -0.63370687f;
      sa[189] = -0.7027247f;
      sa[190] = -1.4264019f;
      sa[191] = -1.097304f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_08 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_08_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_08_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_08_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_08_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


