/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:07:05.088+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_03

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_03 > h2o_nn_32x6_ReLU_03.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_03.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_03", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_03 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_03_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_03_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_03_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_03_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_03_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_03_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_03_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_03_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_03_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_03.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_03_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.27956989247311825,0.13978494623655913,0.15053763440860216,0.27956989247311825,0.15053763440860216};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_03() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(6339294875953872016L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_03_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_03_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_03_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_03_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_03_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_03_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_03_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_03_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_03_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.47381372783058917;
      sa[1] = 0.5017623993503902;
      sa[2] = 0.48393332861801025;
      sa[3] = 0.5352832292137525;
      sa[4] = 0.5846264314184859;
      sa[5] = 0.5490695673573323;
      sa[6] = 0.5381979674495824;
      sa[7] = 0.45046595244761795;
      sa[8] = 0.5076685253318602;
      sa[9] = 0.5197090821106698;
      sa[10] = 0.4763641817856314;
      sa[11] = 0.5386473647127396;
      sa[12] = 0.43641596560442786;
      sa[13] = 0.49808673500326006;
      sa[14] = 0.5235444379389278;
      sa[15] = 0.5084201992776723;
      sa[16] = 0.5216211460238559;
      sa[17] = 0.4807501083245767;
      sa[18] = 0.4980404005321222;
      sa[19] = 0.518363448704595;
      sa[20] = 0.47948513041419827;
      sa[21] = 0.38034333748570903;
      sa[22] = 0.6354557194862911;
      sa[23] = 0.506504096837676;
      sa[24] = 0.5207880624280826;
      sa[25] = 0.4465285741249231;
      sa[26] = 0.443221510852971;
      sa[27] = 0.45587708875445276;
      sa[28] = 0.5060336160565879;
      sa[29] = 0.4165433806553301;
      sa[30] = 0.5149301192017863;
      sa[31] = 0.46816119407421614;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_03_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_03_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.0072404044412022195;
      sa[1] = 0.009023270313272394;
      sa[2] = -0.006193025335381653;
      sa[3] = -0.03855416471495655;
      sa[4] = 0.025811310539300664;
    }
  }
}
class h2o_nn_32x6_ReLU_03_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_03_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_03_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.015782498f;
      sa[1] = 0.22792853f;
      sa[2] = 0.16269246f;
      sa[3] = 0.20693323f;
      sa[4] = -0.21581277f;
      sa[5] = -0.18176387f;
      sa[6] = -0.06375729f;
      sa[7] = 0.15269826f;
      sa[8] = 0.11868374f;
      sa[9] = -0.18748921f;
      sa[10] = -0.16791806f;
      sa[11] = -0.14794408f;
      sa[12] = 0.09890197f;
      sa[13] = -0.22332646f;
      sa[14] = -0.13552497f;
      sa[15] = -0.055439536f;
      sa[16] = 0.0873043f;
      sa[17] = 0.13294804f;
      sa[18] = -0.20555113f;
      sa[19] = 0.30215108f;
      sa[20] = 0.20190772f;
      sa[21] = -0.3495894f;
      sa[22] = 0.1994564f;
      sa[23] = -0.22879282f;
      sa[24] = 0.2975469f;
      sa[25] = 0.15595208f;
      sa[26] = -0.25040132f;
      sa[27] = 0.18678562f;
      sa[28] = 0.21811195f;
      sa[29] = -0.29557157f;
      sa[30] = -0.16842249f;
      sa[31] = 0.07849837f;
      sa[32] = 0.21462911f;
      sa[33] = -0.24758658f;
      sa[34] = 0.022957565f;
      sa[35] = -0.13529126f;
      sa[36] = 0.0813529f;
      sa[37] = 0.20857456f;
      sa[38] = -0.018681075f;
      sa[39] = 0.07270619f;
      sa[40] = 0.02141134f;
      sa[41] = -0.106936716f;
      sa[42] = -0.14863873f;
      sa[43] = 0.038631883f;
      sa[44] = 0.21934699f;
      sa[45] = -0.25997525f;
      sa[46] = 0.072069176f;
      sa[47] = -0.0608735f;
      sa[48] = 0.1730358f;
      sa[49] = 0.19495888f;
      sa[50] = 0.15528128f;
      sa[51] = -0.32114694f;
      sa[52] = -0.14773674f;
      sa[53] = 0.16815044f;
      sa[54] = 0.19830614f;
      sa[55] = 0.09878807f;
      sa[56] = -0.18147326f;
      sa[57] = -0.27509445f;
      sa[58] = 0.24999717f;
      sa[59] = -0.13253145f;
      sa[60] = -0.2256253f;
      sa[61] = 0.20219523f;
      sa[62] = 0.0960625f;
      sa[63] = 0.05970911f;
      sa[64] = 0.101991154f;
      sa[65] = 0.09299188f;
      sa[66] = -0.025831476f;
      sa[67] = 0.093377754f;
      sa[68] = -0.154131f;
      sa[69] = 0.021661688f;
      sa[70] = -0.053790245f;
      sa[71] = 0.37285113f;
      sa[72] = -0.11855674f;
      sa[73] = 0.2707004f;
      sa[74] = -0.19079408f;
      sa[75] = 0.027478062f;
      sa[76] = -0.1806016f;
      sa[77] = -0.044151597f;
      sa[78] = -0.05600086f;
      sa[79] = 0.110598095f;
      sa[80] = -0.19567657f;
      sa[81] = -0.061375253f;
      sa[82] = -0.029967824f;
      sa[83] = 0.17270033f;
      sa[84] = -6.2467565E-4f;
      sa[85] = -0.14251621f;
      sa[86] = 0.1558463f;
      sa[87] = 0.24785f;
      sa[88] = 0.2741243f;
      sa[89] = 0.11185928f;
      sa[90] = -0.15599036f;
      sa[91] = 0.15776077f;
      sa[92] = 0.12472735f;
      sa[93] = -0.17630152f;
      sa[94] = -0.15858428f;
      sa[95] = -0.2524155f;
      sa[96] = 0.11694696f;
      sa[97] = 0.031179097f;
      sa[98] = 0.1685907f;
      sa[99] = -0.07743611f;
      sa[100] = -0.023478568f;
      sa[101] = -0.15348116f;
      sa[102] = -0.21261004f;
      sa[103] = -0.056484327f;
      sa[104] = -0.04117575f;
      sa[105] = -0.16406234f;
      sa[106] = -0.14204785f;
      sa[107] = 0.17919174f;
      sa[108] = 0.22165647f;
      sa[109] = -0.1347129f;
      sa[110] = -0.1841022f;
      sa[111] = 0.08194145f;
      sa[112] = 0.1596297f;
      sa[113] = 0.073883966f;
      sa[114] = -0.12519068f;
      sa[115] = 0.006492755f;
      sa[116] = -0.19621396f;
      sa[117] = 0.058696996f;
      sa[118] = -0.2041338f;
      sa[119] = -0.16947421f;
      sa[120] = 0.22791351f;
      sa[121] = 0.2566578f;
      sa[122] = 0.3015928f;
      sa[123] = 0.30859736f;
      sa[124] = 0.32064334f;
      sa[125] = 0.34176388f;
      sa[126] = -0.32362735f;
      sa[127] = -0.22089325f;
      sa[128] = 0.10839937f;
      sa[129] = 0.2108937f;
      sa[130] = -0.083710305f;
      sa[131] = 0.33267403f;
      sa[132] = 0.1390457f;
      sa[133] = -0.24729753f;
      sa[134] = 0.038223695f;
      sa[135] = -0.10480219f;
      sa[136] = -0.21488985f;
      sa[137] = 0.046041925f;
      sa[138] = 0.16865842f;
      sa[139] = -0.011575426f;
      sa[140] = -0.12813136f;
      sa[141] = -0.17474195f;
      sa[142] = 0.22729096f;
      sa[143] = -0.2125388f;
      sa[144] = 0.1793908f;
      sa[145] = -0.11267711f;
      sa[146] = -0.2268329f;
      sa[147] = 0.15961732f;
      sa[148] = 0.19335672f;
      sa[149] = 0.24473113f;
      sa[150] = 0.33021775f;
      sa[151] = -0.15774919f;
      sa[152] = 0.013676476f;
      sa[153] = 0.25134805f;
      sa[154] = 0.25735882f;
      sa[155] = -0.19178416f;
      sa[156] = 0.17288482f;
      sa[157] = -0.10604034f;
      sa[158] = 0.14500707f;
      sa[159] = 0.16456524f;
      sa[160] = 0.12688172f;
      sa[161] = 0.24677531f;
      sa[162] = -0.19512379f;
      sa[163] = 0.02818815f;
      sa[164] = 0.23491925f;
      sa[165] = -0.035863698f;
      sa[166] = -0.05119827f;
      sa[167] = -0.049588427f;
      sa[168] = 0.2176639f;
      sa[169] = 0.35744742f;
      sa[170] = 0.011653616f;
      sa[171] = -0.0076315342f;
      sa[172] = -0.02522511f;
      sa[173] = -0.11678985f;
      sa[174] = 0.040741093f;
      sa[175] = -0.20070454f;
      sa[176] = -0.006190489f;
      sa[177] = 0.008383857f;
      sa[178] = -0.110780455f;
      sa[179] = 0.038290318f;
      sa[180] = -0.04542516f;
      sa[181] = -0.33217245f;
      sa[182] = -0.08881284f;
      sa[183] = 0.053535182f;
      sa[184] = 0.31152266f;
      sa[185] = 0.16835776f;
      sa[186] = -0.2569338f;
      sa[187] = 0.15483478f;
      sa[188] = -0.038381f;
      sa[189] = 0.17779458f;
      sa[190] = 0.1061236f;
      sa[191] = -0.12623936f;
      sa[192] = -0.1314444f;
      sa[193] = 0.19955502f;
      sa[194] = 0.07586596f;
      sa[195] = 0.30036324f;
      sa[196] = 0.22712763f;
      sa[197] = -0.04375928f;
      sa[198] = 0.13857535f;
      sa[199] = -0.11069278f;
      sa[200] = 0.018299382f;
      sa[201] = -0.24815984f;
      sa[202] = 0.15176263f;
      sa[203] = 0.048442524f;
      sa[204] = -0.16166566f;
      sa[205] = 0.27646384f;
      sa[206] = 0.24607755f;
      sa[207] = 0.23242372f;
      sa[208] = -0.2615335f;
      sa[209] = -0.07373225f;
      sa[210] = -0.27883443f;
      sa[211] = -0.22536443f;
      sa[212] = 0.25141355f;
      sa[213] = -0.19899113f;
      sa[214] = -0.14693327f;
      sa[215] = -0.006089013f;
      sa[216] = 0.11528855f;
      sa[217] = 0.029406892f;
      sa[218] = -0.16351327f;
      sa[219] = 0.2502805f;
      sa[220] = -0.21134602f;
      sa[221] = -0.0047777463f;
      sa[222] = 0.20458171f;
      sa[223] = 0.061754674f;
      sa[224] = 0.09547621f;
      sa[225] = 0.2030518f;
      sa[226] = -0.24163821f;
      sa[227] = 0.21060976f;
      sa[228] = 0.08374654f;
      sa[229] = 0.011315004f;
      sa[230] = 0.22127782f;
      sa[231] = -0.2821692f;
      sa[232] = -0.35338756f;
      sa[233] = -0.037751205f;
      sa[234] = 0.2515f;
      sa[235] = -0.2840169f;
      sa[236] = -0.04215257f;
      sa[237] = -0.20559928f;
      sa[238] = -0.19864695f;
      sa[239] = 0.18844876f;
      sa[240] = 0.01599945f;
      sa[241] = -0.26588017f;
      sa[242] = -0.011387012f;
      sa[243] = -0.2925764f;
      sa[244] = -0.22652124f;
      sa[245] = -0.1361473f;
      sa[246] = -0.30404994f;
      sa[247] = -0.07375955f;
      sa[248] = 0.26291436f;
      sa[249] = 0.23595451f;
      sa[250] = -0.21870106f;
      sa[251] = -0.1134604f;
      sa[252] = -0.20008321f;
      sa[253] = -0.22755225f;
      sa[254] = -0.28064445f;
      sa[255] = 0.21332595f;
      sa[256] = -0.17888473f;
      sa[257] = 0.23390928f;
      sa[258] = -0.2482874f;
      sa[259] = -0.14237672f;
      sa[260] = -0.16142048f;
      sa[261] = -0.02689815f;
      sa[262] = -0.16030611f;
      sa[263] = 0.34407696f;
      sa[264] = -0.15627874f;
      sa[265] = 0.023247885f;
      sa[266] = -0.272283f;
      sa[267] = -0.23436096f;
      sa[268] = 0.1277138f;
      sa[269] = -0.13152954f;
      sa[270] = 0.018726645f;
      sa[271] = 0.10456243f;
      sa[272] = -0.07877129f;
      sa[273] = -0.1083033f;
      sa[274] = 0.12347312f;
      sa[275] = -0.040805545f;
      sa[276] = 0.037796788f;
      sa[277] = -0.2559241f;
      sa[278] = -0.112689205f;
      sa[279] = 0.17594388f;
      sa[280] = -0.18191144f;
      sa[281] = 0.2534489f;
      sa[282] = -0.12964898f;
      sa[283] = -0.04655925f;
      sa[284] = 0.014927248f;
      sa[285] = -0.15279013f;
      sa[286] = 0.26128158f;
      sa[287] = 0.13713047f;
      sa[288] = -0.15871179f;
      sa[289] = -0.14847672f;
      sa[290] = -0.02443566f;
      sa[291] = -0.07782961f;
      sa[292] = 0.15216577f;
      sa[293] = -0.093550816f;
      sa[294] = 0.09121867f;
      sa[295] = 0.16268565f;
      sa[296] = 0.218182f;
      sa[297] = 0.23145252f;
      sa[298] = 0.06136443f;
      sa[299] = -0.09393524f;
      sa[300] = -0.040227033f;
      sa[301] = -0.096906886f;
      sa[302] = 0.12440038f;
      sa[303] = 0.03912902f;
      sa[304] = -0.19872595f;
      sa[305] = -0.016108887f;
      sa[306] = 0.1530503f;
      sa[307] = -0.1475003f;
      sa[308] = 0.08612149f;
      sa[309] = 0.17738026f;
      sa[310] = 0.2940389f;
      sa[311] = 0.33694372f;
      sa[312] = -0.16690674f;
      sa[313] = -0.11980314f;
      sa[314] = -0.19968133f;
      sa[315] = 0.076397575f;
      sa[316] = -0.032856856f;
      sa[317] = -0.077486195f;
      sa[318] = 0.0714403f;
      sa[319] = 0.27950794f;
      sa[320] = -0.11960333f;
      sa[321] = 0.08588876f;
      sa[322] = 0.28064844f;
      sa[323] = -0.09791977f;
      sa[324] = -0.091836214f;
      sa[325] = 0.227519f;
      sa[326] = -0.22985534f;
      sa[327] = 0.01627839f;
      sa[328] = -0.09827653f;
      sa[329] = 0.23387249f;
      sa[330] = -0.18168777f;
      sa[331] = -0.08058781f;
      sa[332] = -0.27968398f;
      sa[333] = 0.069393195f;
      sa[334] = -0.078459494f;
      sa[335] = 0.23369373f;
      sa[336] = -0.13136089f;
      sa[337] = -0.11319935f;
      sa[338] = 0.2980391f;
      sa[339] = -0.2679692f;
      sa[340] = -0.32917964f;
      sa[341] = -0.28712812f;
      sa[342] = 0.17810251f;
      sa[343] = 0.043113258f;
      sa[344] = -0.19350202f;
      sa[345] = 0.13266994f;
      sa[346] = 0.16585758f;
      sa[347] = -0.21624145f;
      sa[348] = 0.3370001f;
      sa[349] = -0.2587206f;
      sa[350] = -0.22543271f;
      sa[351] = 0.016673429f;
      sa[352] = 0.17722626f;
      sa[353] = -0.07305043f;
      sa[354] = 0.0745805f;
      sa[355] = 0.046747256f;
      sa[356] = -0.11487749f;
      sa[357] = 0.1798086f;
      sa[358] = -0.30815735f;
      sa[359] = 0.0066757463f;
      sa[360] = 0.08531393f;
      sa[361] = -0.03848033f;
      sa[362] = -0.14109534f;
      sa[363] = 0.13758793f;
      sa[364] = -0.12140642f;
      sa[365] = -0.22161284f;
      sa[366] = -0.016836053f;
      sa[367] = -0.3142408f;
      sa[368] = -0.17670919f;
      sa[369] = 0.2932947f;
      sa[370] = -0.17367661f;
      sa[371] = 0.10512611f;
      sa[372] = -0.02600415f;
      sa[373] = 0.26459956f;
      sa[374] = -0.14882822f;
      sa[375] = -0.3245924f;
      sa[376] = -0.29648867f;
      sa[377] = -0.20460954f;
      sa[378] = 0.28300616f;
      sa[379] = 0.14391021f;
      sa[380] = -0.11069875f;
      sa[381] = -0.08265161f;
      sa[382] = -0.043590456f;
      sa[383] = -0.12155652f;
      sa[384] = -0.1215199f;
      sa[385] = 0.0906687f;
      sa[386] = -0.2531171f;
      sa[387] = -0.19589476f;
      sa[388] = 0.07827278f;
      sa[389] = -0.005854042f;
      sa[390] = -0.013274428f;
      sa[391] = -0.124005444f;
      sa[392] = 0.17328735f;
      sa[393] = 0.08831151f;
      sa[394] = 0.045286257f;
      sa[395] = 0.36369446f;
      sa[396] = 0.2726741f;
      sa[397] = -0.3109934f;
      sa[398] = 0.14070007f;
      sa[399] = 0.04936311f;
      sa[400] = 0.19042519f;
      sa[401] = 0.2106179f;
      sa[402] = -0.12496263f;
      sa[403] = 0.07498249f;
      sa[404] = 0.22967611f;
      sa[405] = -0.24017747f;
      sa[406] = -0.041627806f;
      sa[407] = 0.10215934f;
      sa[408] = -0.2237986f;
      sa[409] = -0.2721822f;
      sa[410] = -0.12556273f;
      sa[411] = 0.12859003f;
      sa[412] = -0.18082012f;
      sa[413] = 0.044671115f;
      sa[414] = 0.15152258f;
      sa[415] = 0.31373122f;
      sa[416] = -0.16327253f;
      sa[417] = 0.05831042f;
      sa[418] = 0.019299867f;
      sa[419] = 0.30491903f;
      sa[420] = 0.20528936f;
      sa[421] = 0.24974377f;
      sa[422] = 0.22554605f;
      sa[423] = 0.011522091f;
      sa[424] = 0.08769038f;
      sa[425] = -0.06772053f;
      sa[426] = -0.30027378f;
      sa[427] = 0.16444083f;
      sa[428] = -0.05588925f;
      sa[429] = -0.21197535f;
      sa[430] = 0.21364014f;
      sa[431] = 0.029944804f;
      sa[432] = -0.061356023f;
      sa[433] = 0.13465261f;
      sa[434] = 0.20557483f;
      sa[435] = 0.06864463f;
      sa[436] = -0.2955966f;
      sa[437] = -0.26189283f;
      sa[438] = -0.03679044f;
      sa[439] = -0.10542647f;
      sa[440] = 0.2870753f;
      sa[441] = -0.27381265f;
      sa[442] = 0.020457996f;
      sa[443] = 0.122669145f;
      sa[444] = -0.2132253f;
      sa[445] = 0.06497181f;
      sa[446] = 0.20980507f;
      sa[447] = -0.0026243094f;
      sa[448] = 0.18273976f;
      sa[449] = 0.22453246f;
      sa[450] = -0.08066897f;
      sa[451] = 0.14278202f;
      sa[452] = 0.15794007f;
      sa[453] = -0.08206269f;
      sa[454] = -0.1935177f;
      sa[455] = -0.12666094f;
      sa[456] = -0.03779344f;
      sa[457] = 0.0417161f;
      sa[458] = -0.20794794f;
      sa[459] = 0.16433643f;
      sa[460] = 0.20829959f;
      sa[461] = 0.25848773f;
      sa[462] = 0.04450254f;
      sa[463] = 0.17345393f;
      sa[464] = -0.27649075f;
      sa[465] = 0.14976054f;
      sa[466] = 0.041866817f;
      sa[467] = 0.16659401f;
      sa[468] = 0.09669475f;
      sa[469] = 0.3015912f;
      sa[470] = 0.20067233f;
      sa[471] = 0.045857355f;
      sa[472] = -0.005527542f;
      sa[473] = -0.10783106f;
      sa[474] = -0.012063874f;
      sa[475] = 0.051600195f;
      sa[476] = 0.2612413f;
      sa[477] = -0.1291716f;
      sa[478] = 0.07991778f;
      sa[479] = -0.10991181f;
      sa[480] = -0.2842446f;
      sa[481] = -0.1844488f;
      sa[482] = -0.22484557f;
      sa[483] = 0.16589876f;
      sa[484] = 0.22206593f;
      sa[485] = 0.14790699f;
      sa[486] = -0.018024579f;
      sa[487] = -0.114392154f;
      sa[488] = -0.1912586f;
      sa[489] = 0.06840793f;
      sa[490] = -0.0056523327f;
      sa[491] = -0.25281635f;
      sa[492] = 0.23611349f;
      sa[493] = 0.22917576f;
      sa[494] = -0.24513724f;
      sa[495] = 0.07703239f;
      sa[496] = -0.0109513905f;
      sa[497] = 0.04428179f;
      sa[498] = 0.15323414f;
      sa[499] = 0.121338665f;
      sa[500] = -0.083097726f;
      sa[501] = -0.026706848f;
      sa[502] = 0.25894684f;
      sa[503] = 0.08951864f;
      sa[504] = -0.081541866f;
      sa[505] = -0.2008185f;
      sa[506] = 0.15600763f;
      sa[507] = -0.10159041f;
      sa[508] = 0.12996045f;
      sa[509] = 0.20647828f;
      sa[510] = 0.16722417f;
      sa[511] = 0.060267463f;
      sa[512] = 0.09120017f;
      sa[513] = -0.043843053f;
      sa[514] = 0.26667133f;
      sa[515] = -0.26064408f;
      sa[516] = 0.007168414f;
      sa[517] = 0.0497594f;
      sa[518] = 0.09376594f;
      sa[519] = -0.06370733f;
      sa[520] = 0.19202499f;
      sa[521] = 0.13845885f;
      sa[522] = 0.091537125f;
      sa[523] = 0.07971509f;
      sa[524] = 0.20385772f;
      sa[525] = 0.2244802f;
      sa[526] = 0.033296205f;
      sa[527] = -0.049653973f;
      sa[528] = -0.06160531f;
      sa[529] = 0.12352229f;
      sa[530] = -0.17078628f;
      sa[531] = 0.17334904f;
      sa[532] = 0.14010482f;
      sa[533] = 0.13880424f;
      sa[534] = 0.123766206f;
      sa[535] = -0.046262138f;
      sa[536] = 0.05624793f;
      sa[537] = -0.19863288f;
      sa[538] = 0.24788451f;
      sa[539] = 0.30884576f;
      sa[540] = -0.27398685f;
      sa[541] = -0.15186855f;
      sa[542] = -0.099479936f;
      sa[543] = -0.18848453f;
      sa[544] = 0.12419559f;
      sa[545] = 0.125534f;
      sa[546] = 0.07791956f;
      sa[547] = 0.14566152f;
      sa[548] = 0.057935935f;
      sa[549] = 0.1246072f;
      sa[550] = -0.05017676f;
      sa[551] = -0.070074394f;
      sa[552] = 0.07430022f;
      sa[553] = 0.0029195133f;
      sa[554] = -0.101007596f;
      sa[555] = -0.117817916f;
      sa[556] = -0.15321678f;
      sa[557] = -0.21370158f;
      sa[558] = -0.18859562f;
      sa[559] = 0.07715994f;
      sa[560] = -0.2967322f;
      sa[561] = -0.124591075f;
      sa[562] = 0.16896154f;
      sa[563] = -0.12814407f;
      sa[564] = 0.24178788f;
      sa[565] = 0.017909035f;
      sa[566] = 0.28064045f;
      sa[567] = -0.051438402f;
      sa[568] = -0.06324179f;
      sa[569] = 0.016417269f;
      sa[570] = -0.0025154203f;
      sa[571] = -0.058482625f;
      sa[572] = -0.067934744f;
      sa[573] = 0.16545151f;
      sa[574] = 0.16194913f;
      sa[575] = -0.29623377f;
      sa[576] = -0.13098074f;
      sa[577] = 6.839989E-4f;
      sa[578] = 0.14701386f;
      sa[579] = -0.055183515f;
      sa[580] = 0.09148735f;
      sa[581] = -0.12400578f;
      sa[582] = 0.10615115f;
      sa[583] = 0.032253686f;
      sa[584] = 0.105959155f;
      sa[585] = 0.14536934f;
      sa[586] = -0.2007354f;
      sa[587] = -0.15562287f;
      sa[588] = 0.082281284f;
      sa[589] = 0.12898481f;
      sa[590] = 0.005673675f;
      sa[591] = 0.038819417f;
      sa[592] = -0.3068723f;
      sa[593] = -0.18853743f;
      sa[594] = -0.0600848f;
      sa[595] = 0.045650523f;
      sa[596] = 0.24553807f;
      sa[597] = -0.03511227f;
      sa[598] = 0.21868616f;
      sa[599] = 0.061547387f;
      sa[600] = -0.23500077f;
      sa[601] = 0.24270761f;
      sa[602] = -0.049943704f;
      sa[603] = 0.23651844f;
      sa[604] = 0.21196699f;
      sa[605] = 0.15591969f;
      sa[606] = 0.19359773f;
      sa[607] = 0.032160174f;
      sa[608] = -0.01469759f;
      sa[609] = 0.08928967f;
      sa[610] = 0.06818045f;
      sa[611] = -0.08964928f;
      sa[612] = -0.11453737f;
      sa[613] = 0.07539462f;
      sa[614] = 0.0494628f;
      sa[615] = -0.0029058745f;
      sa[616] = 0.022214063f;
      sa[617] = -0.3172708f;
      sa[618] = -0.1814138f;
      sa[619] = -0.25463656f;
      sa[620] = -0.05529992f;
      sa[621] = -0.20932412f;
      sa[622] = -0.31125492f;
      sa[623] = -0.2580588f;
      sa[624] = -0.06737177f;
      sa[625] = 0.219645f;
      sa[626] = -0.022793215f;
      sa[627] = 0.17022663f;
      sa[628] = -0.28547052f;
      sa[629] = -0.07638221f;
      sa[630] = -0.11856377f;
      sa[631] = 0.26283628f;
      sa[632] = 0.08226304f;
      sa[633] = -0.17270327f;
      sa[634] = -0.23130883f;
      sa[635] = 0.07660851f;
      sa[636] = -0.15973699f;
      sa[637] = -0.09348942f;
      sa[638] = -0.10355409f;
      sa[639] = -0.17006427f;
      sa[640] = -0.14972448f;
      sa[641] = -0.29968354f;
      sa[642] = 0.15466058f;
      sa[643] = -0.3538857f;
      sa[644] = -0.078927636f;
      sa[645] = -0.2819168f;
      sa[646] = 0.33585894f;
      sa[647] = -0.17628902f;
      sa[648] = -0.031519867f;
      sa[649] = 0.029845314f;
      sa[650] = 0.025996083f;
      sa[651] = -0.13006525f;
      sa[652] = 0.07969453f;
      sa[653] = -0.10473971f;
      sa[654] = -0.14753881f;
      sa[655] = -0.18573189f;
      sa[656] = 0.10834307f;
      sa[657] = 0.17687243f;
      sa[658] = -0.25088775f;
      sa[659] = -0.14323846f;
      sa[660] = -0.20350249f;
      sa[661] = -0.02752432f;
      sa[662] = -0.24624546f;
      sa[663] = 0.1922083f;
      sa[664] = -0.11400195f;
      sa[665] = 0.32652158f;
      sa[666] = -0.075570166f;
      sa[667] = -0.25086042f;
      sa[668] = 0.27589035f;
      sa[669] = -0.11860113f;
      sa[670] = 0.123674095f;
      sa[671] = -0.014203435f;
      sa[672] = -0.29059017f;
      sa[673] = 0.14989609f;
      sa[674] = 0.19212943f;
      sa[675] = -0.26609156f;
      sa[676] = -0.060762364f;
      sa[677] = -0.16509958f;
      sa[678] = 0.25376588f;
      sa[679] = -0.033795327f;
      sa[680] = 0.03681864f;
      sa[681] = 0.057671484f;
      sa[682] = 0.08868894f;
      sa[683] = -0.07245061f;
      sa[684] = 0.02340644f;
      sa[685] = 0.013704096f;
      sa[686] = -0.16423474f;
      sa[687] = -0.21901833f;
      sa[688] = -0.24359614f;
      sa[689] = -0.24510553f;
      sa[690] = -0.025548255f;
      sa[691] = 0.18993779f;
      sa[692] = -0.12353933f;
      sa[693] = -0.14681616f;
      sa[694] = 0.2889507f;
      sa[695] = -0.059367925f;
      sa[696] = -0.111593306f;
      sa[697] = -0.16763031f;
      sa[698] = -0.20686793f;
      sa[699] = 0.32811713f;
      sa[700] = 0.13044286f;
      sa[701] = 0.09737667f;
      sa[702] = 0.19229575f;
      sa[703] = -0.16807023f;
      sa[704] = -0.25468537f;
      sa[705] = -0.0011348743f;
      sa[706] = -0.10951976f;
      sa[707] = 0.07353574f;
      sa[708] = -0.056922417f;
      sa[709] = -0.2567745f;
      sa[710] = 0.24309148f;
      sa[711] = -0.010560165f;
      sa[712] = 0.027876703f;
      sa[713] = 0.13961501f;
      sa[714] = 0.16858992f;
      sa[715] = 0.10676388f;
      sa[716] = 0.04080393f;
      sa[717] = 0.18952236f;
      sa[718] = -0.03537438f;
      sa[719] = 0.097699694f;
      sa[720] = -0.23035045f;
      sa[721] = 0.11111151f;
      sa[722] = -0.13762055f;
      sa[723] = 0.10370848f;
      sa[724] = 0.030089995f;
      sa[725] = -0.31926712f;
      sa[726] = -0.23835824f;
      sa[727] = -0.30803764f;
      sa[728] = -0.10069828f;
      sa[729] = -0.067153156f;
      sa[730] = -0.015353144f;
      sa[731] = -0.2524165f;
      sa[732] = 0.14191553f;
      sa[733] = 0.16808838f;
      sa[734] = -0.15873854f;
      sa[735] = 0.24119173f;
      sa[736] = -0.08051628f;
      sa[737] = 0.05101239f;
      sa[738] = -0.05406927f;
      sa[739] = -0.48346853f;
      sa[740] = -0.28123194f;
      sa[741] = -0.30159426f;
      sa[742] = 0.08423636f;
      sa[743] = 0.009139203f;
      sa[744] = 0.021718027f;
      sa[745] = -0.32733643f;
      sa[746] = 0.17127332f;
      sa[747] = -0.19289939f;
      sa[748] = -0.18536109f;
      sa[749] = -0.21099159f;
      sa[750] = 0.12934609f;
      sa[751] = 0.20972118f;
      sa[752] = -0.005437618f;
      sa[753] = 0.20368022f;
      sa[754] = -0.041938357f;
      sa[755] = 0.1388486f;
      sa[756] = -0.16034651f;
      sa[757] = 0.2762675f;
      sa[758] = -0.20068213f;
      sa[759] = -0.047888998f;
      sa[760] = -0.10165691f;
      sa[761] = 0.017657029f;
      sa[762] = -0.1357224f;
      sa[763] = 0.18358284f;
      sa[764] = 0.0758919f;
      sa[765] = -0.030032886f;
      sa[766] = -0.22880293f;
      sa[767] = 0.12549369f;
      sa[768] = -0.202754f;
      sa[769] = -0.314043f;
      sa[770] = -0.059350736f;
      sa[771] = 0.03809882f;
      sa[772] = 0.07665643f;
      sa[773] = -0.2416631f;
      sa[774] = -0.06333717f;
      sa[775] = 0.17968869f;
      sa[776] = -0.07415716f;
      sa[777] = 0.05301821f;
      sa[778] = 0.1363049f;
      sa[779] = -0.14021976f;
      sa[780] = -0.09718567f;
      sa[781] = -0.06912529f;
      sa[782] = 0.11114068f;
      sa[783] = -0.12240718f;
      sa[784] = -0.15113842f;
      sa[785] = -0.12052258f;
      sa[786] = -0.1046337f;
      sa[787] = -0.20044667f;
      sa[788] = -0.18732172f;
      sa[789] = 0.28038317f;
      sa[790] = -0.22455843f;
      sa[791] = -0.20045845f;
      sa[792] = 0.18579032f;
      sa[793] = 0.080039315f;
      sa[794] = -0.24492541f;
      sa[795] = -0.010776108f;
      sa[796] = 0.26215518f;
      sa[797] = -0.13195953f;
      sa[798] = -0.20931877f;
      sa[799] = -0.13981187f;
      sa[800] = 0.22293822f;
      sa[801] = 0.067863055f;
      sa[802] = 0.22744942f;
      sa[803] = 0.1151982f;
      sa[804] = 0.3242548f;
      sa[805] = 0.36965644f;
      sa[806] = 0.3653239f;
      sa[807] = 0.3105287f;
      sa[808] = 0.1339445f;
      sa[809] = -0.11483948f;
      sa[810] = 0.021991381f;
      sa[811] = 0.1780259f;
      sa[812] = 0.20832998f;
      sa[813] = -0.26769662f;
      sa[814] = 0.10897964f;
      sa[815] = -0.1909361f;
      sa[816] = -0.14512397f;
      sa[817] = -0.1322854f;
      sa[818] = -0.028458297f;
      sa[819] = -0.05435021f;
      sa[820] = -0.19225007f;
      sa[821] = -0.13640273f;
      sa[822] = -0.15236793f;
      sa[823] = 0.13658878f;
      sa[824] = 0.10884041f;
      sa[825] = 0.31621853f;
      sa[826] = -0.29887503f;
      sa[827] = -0.305591f;
      sa[828] = 0.09129269f;
      sa[829] = -0.066255696f;
      sa[830] = 0.11517568f;
      sa[831] = 0.21885823f;
      sa[832] = 0.11304401f;
      sa[833] = 0.07991144f;
      sa[834] = 0.17313348f;
      sa[835] = -0.13135733f;
      sa[836] = 0.1941389f;
      sa[837] = -0.17761794f;
      sa[838] = 0.08579711f;
      sa[839] = -0.20982932f;
      sa[840] = 0.22558932f;
      sa[841] = 0.145944f;
      sa[842] = 0.20289549f;
      sa[843] = 0.05071422f;
      sa[844] = 0.06657462f;
      sa[845] = 0.15049893f;
      sa[846] = -0.23280849f;
      sa[847] = -0.078890055f;
      sa[848] = 0.20127578f;
      sa[849] = 0.20989022f;
      sa[850] = -0.02808952f;
      sa[851] = 0.06087634f;
      sa[852] = 0.24922028f;
      sa[853] = 0.12632005f;
      sa[854] = 0.26701587f;
      sa[855] = 0.12205054f;
      sa[856] = 0.10707965f;
      sa[857] = -0.14871432f;
      sa[858] = 0.15940982f;
      sa[859] = 0.08728268f;
      sa[860] = 0.31068933f;
      sa[861] = -0.19255f;
      sa[862] = -0.1440855f;
      sa[863] = -0.0036739036f;
      sa[864] = -0.14828782f;
      sa[865] = 0.22428928f;
      sa[866] = -0.11922734f;
      sa[867] = -0.053708494f;
      sa[868] = -0.14827546f;
      sa[869] = 0.21528865f;
      sa[870] = -0.008157305f;
      sa[871] = 0.1871789f;
      sa[872] = 0.2622888f;
      sa[873] = -0.030070333f;
      sa[874] = 0.054444708f;
      sa[875] = -0.24854246f;
      sa[876] = -0.24857728f;
      sa[877] = -0.22581509f;
      sa[878] = 0.015948908f;
      sa[879] = 0.20062341f;
      sa[880] = -0.11863543f;
      sa[881] = -0.08541345f;
      sa[882] = 0.11303603f;
      sa[883] = 0.18795027f;
      sa[884] = -0.121678285f;
      sa[885] = -0.09868978f;
      sa[886] = 0.11535754f;
      sa[887] = -0.018696588f;
      sa[888] = -0.087042116f;
      sa[889] = 0.06588802f;
      sa[890] = -0.34998783f;
      sa[891] = 0.3939654f;
      sa[892] = 0.15891826f;
      sa[893] = 0.26137242f;
      sa[894] = 0.032410797f;
      sa[895] = 0.22394517f;
      sa[896] = -0.20861578f;
      sa[897] = 0.23852281f;
      sa[898] = -0.0395461f;
      sa[899] = 0.20020875f;
      sa[900] = -0.15199827f;
      sa[901] = 0.068296425f;
      sa[902] = -0.22329088f;
      sa[903] = -0.101427875f;
      sa[904] = 0.13014671f;
      sa[905] = 0.100949034f;
      sa[906] = -0.28861386f;
      sa[907] = -0.3375823f;
      sa[908] = -0.2509833f;
      sa[909] = 0.01857684f;
      sa[910] = 0.00349671f;
      sa[911] = -0.12779893f;
      sa[912] = -0.070765644f;
      sa[913] = -0.030501826f;
      sa[914] = -0.23247129f;
      sa[915] = -0.058269497f;
      sa[916] = 0.1151079f;
      sa[917] = -0.086752966f;
      sa[918] = 0.24932046f;
      sa[919] = -0.0047704037f;
      sa[920] = 0.10563713f;
      sa[921] = -0.101538785f;
      sa[922] = -0.15672168f;
      sa[923] = -0.16275793f;
      sa[924] = -0.07933269f;
      sa[925] = -0.22888783f;
      sa[926] = 0.12371278f;
      sa[927] = -0.22772044f;
      sa[928] = 0.17980468f;
      sa[929] = 0.07701218f;
      sa[930] = 0.06208478f;
      sa[931] = -0.0749088f;
      sa[932] = 0.22406253f;
      sa[933] = -0.077324994f;
      sa[934] = 0.23696296f;
      sa[935] = -0.14653389f;
      sa[936] = 0.10362939f;
      sa[937] = 0.22671166f;
      sa[938] = -0.102185465f;
      sa[939] = -0.04574161f;
      sa[940] = -0.057493445f;
      sa[941] = -0.31138057f;
      sa[942] = -0.2372473f;
      sa[943] = -0.15043028f;
      sa[944] = -0.19214992f;
      sa[945] = 0.103267595f;
      sa[946] = 0.07349914f;
      sa[947] = 0.26992574f;
      sa[948] = 0.055733003f;
      sa[949] = -0.2040139f;
      sa[950] = 0.06633193f;
      sa[951] = -0.07549919f;
      sa[952] = -0.18125181f;
      sa[953] = -0.12979151f;
      sa[954] = -0.2834543f;
      sa[955] = 0.057257343f;
      sa[956] = -0.024769409f;
      sa[957] = 0.036274355f;
      sa[958] = 0.093930654f;
      sa[959] = -0.1452351f;
      sa[960] = 0.30993116f;
      sa[961] = -0.14133668f;
      sa[962] = -0.06822582f;
      sa[963] = -0.031363443f;
      sa[964] = -0.1811361f;
      sa[965] = 0.23804356f;
      sa[966] = -0.10536544f;
      sa[967] = -0.26499346f;
      sa[968] = 0.12986246f;
      sa[969] = 0.11851603f;
      sa[970] = 0.26564103f;
      sa[971] = -0.007394406f;
      sa[972] = -0.2290852f;
      sa[973] = -0.22784927f;
      sa[974] = -0.33773276f;
      sa[975] = -0.21735798f;
      sa[976] = -0.12608148f;
      sa[977] = 0.0056456886f;
      sa[978] = -0.12870747f;
      sa[979] = 0.08263421f;
      sa[980] = 0.056598186f;
      sa[981] = -0.23973134f;
      sa[982] = 0.07925436f;
      sa[983] = -0.073990606f;
      sa[984] = -0.26982793f;
      sa[985] = 0.050736766f;
      sa[986] = -0.25785723f;
      sa[987] = 0.026158202f;
      sa[988] = 0.13973801f;
      sa[989] = 0.18329874f;
      sa[990] = 0.34540737f;
      sa[991] = -0.14698938f;
      sa[992] = -0.21917924f;
      sa[993] = -0.082523994f;
      sa[994] = -0.18655969f;
      sa[995] = -0.30717024f;
      sa[996] = 0.20445524f;
      sa[997] = 0.13584508f;
      sa[998] = 0.1660683f;
      sa[999] = 0.16569814f;
      sa[1000] = 0.013747887f;
      sa[1001] = 0.20715742f;
      sa[1002] = 0.23755512f;
      sa[1003] = -0.11622954f;
      sa[1004] = 0.20431867f;
      sa[1005] = -0.2517909f;
      sa[1006] = -0.084157944f;
      sa[1007] = 0.050283663f;
      sa[1008] = 0.24006021f;
      sa[1009] = 0.066525f;
      sa[1010] = -0.0547501f;
      sa[1011] = 0.27788568f;
      sa[1012] = -0.05873813f;
      sa[1013] = 0.17812662f;
      sa[1014] = 0.27273732f;
      sa[1015] = -0.25959474f;
      sa[1016] = 0.28259668f;
      sa[1017] = 0.08574019f;
      sa[1018] = -0.034853846f;
      sa[1019] = 0.0960912f;
      sa[1020] = -0.21460584f;
      sa[1021] = 0.116099894f;
      sa[1022] = 0.24439466f;
      sa[1023] = 0.11512098f;
      sa[1024] = -0.021964526f;
      sa[1025] = 0.122212104f;
      sa[1026] = 0.14855042f;
      sa[1027] = 0.18421161f;
      sa[1028] = 0.30950147f;
      sa[1029] = -0.008145131f;
      sa[1030] = -0.14972004f;
      sa[1031] = -0.01591673f;
      sa[1032] = -0.26080224f;
      sa[1033] = 0.02535724f;
      sa[1034] = -0.034666467f;
      sa[1035] = -0.20573035f;
      sa[1036] = 0.27573982f;
      sa[1037] = 0.049918585f;
      sa[1038] = -0.17504711f;
      sa[1039] = 0.28416625f;
      sa[1040] = -0.016097121f;
      sa[1041] = 0.11085737f;
      sa[1042] = -0.23244531f;
      sa[1043] = -0.066060886f;
      sa[1044] = 0.19309826f;
      sa[1045] = 0.23474534f;
      sa[1046] = -0.21631724f;
      sa[1047] = -0.19207104f;
      sa[1048] = 0.12548128f;
      sa[1049] = -0.14316891f;
      sa[1050] = 0.0051988526f;
      sa[1051] = -0.27014032f;
      sa[1052] = 0.14633177f;
      sa[1053] = 0.2918027f;
      sa[1054] = 0.20664498f;
      sa[1055] = 0.015080914f;
      sa[1056] = 0.2360212f;
      sa[1057] = -0.22738157f;
      sa[1058] = 0.18661706f;
      sa[1059] = -0.23852211f;
      sa[1060] = -0.2898629f;
      sa[1061] = 0.022258058f;
      sa[1062] = 0.2616821f;
      sa[1063] = -0.01028446f;
      sa[1064] = 0.09578317f;
      sa[1065] = -0.029094713f;
      sa[1066] = 0.15942065f;
      sa[1067] = -0.35172915f;
      sa[1068] = -0.28902382f;
      sa[1069] = 0.15682872f;
      sa[1070] = 0.13499229f;
      sa[1071] = 0.13424651f;
      sa[1072] = -0.24812566f;
      sa[1073] = 0.10544927f;
      sa[1074] = 0.08553823f;
      sa[1075] = -0.2080719f;
      sa[1076] = -0.13527732f;
      sa[1077] = 0.0540451f;
      sa[1078] = 0.042007975f;
      sa[1079] = 0.11060326f;
      sa[1080] = 0.19702248f;
      sa[1081] = 0.15244761f;
      sa[1082] = -0.28803113f;
      sa[1083] = -0.11884054f;
      sa[1084] = 0.22815605f;
      sa[1085] = -0.20939222f;
      sa[1086] = -0.2538336f;
      sa[1087] = -0.20674323f;
      sa[1088] = -0.18774532f;
      sa[1089] = 0.058895394f;
      sa[1090] = -0.2715121f;
      sa[1091] = 0.11138152f;
      sa[1092] = -0.23331094f;
      sa[1093] = -0.25208735f;
      sa[1094] = 0.013918534f;
      sa[1095] = -0.18395132f;
      sa[1096] = 0.061294425f;
      sa[1097] = -0.12754478f;
      sa[1098] = 7.952763E-4f;
      sa[1099] = -0.05302601f;
      sa[1100] = -0.1322386f;
      sa[1101] = 0.11915853f;
      sa[1102] = -0.1334912f;
      sa[1103] = 0.24737437f;
      sa[1104] = -0.25007915f;
      sa[1105] = -0.11280257f;
      sa[1106] = -0.09215246f;
      sa[1107] = 0.19193503f;
      sa[1108] = -0.1969254f;
      sa[1109] = 0.22335286f;
      sa[1110] = 0.16572967f;
      sa[1111] = -0.23672149f;
      sa[1112] = 0.21503446f;
      sa[1113] = 0.25322255f;
      sa[1114] = -0.03772455f;
      sa[1115] = 0.16995312f;
      sa[1116] = 9.676044E-4f;
      sa[1117] = -0.1752178f;
      sa[1118] = -0.24627852f;
      sa[1119] = -0.06787941f;
      sa[1120] = 0.19906916f;
      sa[1121] = 0.06364093f;
      sa[1122] = 0.2300032f;
      sa[1123] = 0.26360694f;
      sa[1124] = 0.03788119f;
      sa[1125] = -0.043921657f;
      sa[1126] = 0.21286117f;
      sa[1127] = 0.17046578f;
      sa[1128] = 0.0010238003f;
      sa[1129] = -0.12741841f;
      sa[1130] = 0.17735824f;
      sa[1131] = 0.2767282f;
      sa[1132] = -0.18250953f;
      sa[1133] = -0.15161133f;
      sa[1134] = 0.2604859f;
      sa[1135] = -0.39784747f;
      sa[1136] = -0.021772593f;
      sa[1137] = 0.22881894f;
      sa[1138] = -0.07584459f;
      sa[1139] = 0.13434929f;
      sa[1140] = 0.1873269f;
      sa[1141] = -0.29897168f;
      sa[1142] = 0.110303506f;
      sa[1143] = 0.037724294f;
      sa[1144] = -0.26150018f;
      sa[1145] = 0.18216771f;
      sa[1146] = 0.22133258f;
      sa[1147] = -0.026992576f;
      sa[1148] = 0.0032943855f;
      sa[1149] = 0.0037583f;
      sa[1150] = -0.23217662f;
      sa[1151] = -0.21943347f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_03_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_03_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2497395f;
      sa[1] = -0.14439753f;
      sa[2] = -0.54373163f;
      sa[3] = -0.94494087f;
      sa[4] = 0.04353815f;
      sa[5] = 0.21963738f;
      sa[6] = 1.2381561f;
      sa[7] = -0.7076897f;
      sa[8] = -0.9469631f;
      sa[9] = 0.7051369f;
      sa[10] = -0.15565741f;
      sa[11] = 0.4150146f;
      sa[12] = 0.14302248f;
      sa[13] = -0.006295868f;
      sa[14] = -1.3580394f;
      sa[15] = 1.1542596f;
      sa[16] = 1.5562961f;
      sa[17] = -0.4428451f;
      sa[18] = 0.041305333f;
      sa[19] = -0.45554957f;
      sa[20] = 1.1798888f;
      sa[21] = 0.055004485f;
      sa[22] = -0.99674124f;
      sa[23] = 0.77502966f;
      sa[24] = -1.3758167f;
      sa[25] = 0.463345f;
      sa[26] = -0.23176287f;
      sa[27] = 1.4960588f;
      sa[28] = -1.3949593f;
      sa[29] = -0.50618666f;
      sa[30] = 0.33615762f;
      sa[31] = -0.63612264f;
      sa[32] = -1.1963052f;
      sa[33] = -1.4656497f;
      sa[34] = -3.987897E-5f;
      sa[35] = 1.3923455f;
      sa[36] = -0.2768428f;
      sa[37] = -0.049602136f;
      sa[38] = 0.20881006f;
      sa[39] = 0.73512626f;
      sa[40] = -0.73961055f;
      sa[41] = -1.3383086f;
      sa[42] = -1.0348758f;
      sa[43] = -1.492987f;
      sa[44] = 0.04550689f;
      sa[45] = -1.3445671f;
      sa[46] = 1.0158778f;
      sa[47] = 1.2244501f;
      sa[48] = -1.3176831f;
      sa[49] = -1.1418146f;
      sa[50] = 0.4404264f;
      sa[51] = -0.30036658f;
      sa[52] = 0.8583099f;
      sa[53] = 0.9072063f;
      sa[54] = -0.20357805f;
      sa[55] = 1.1391368f;
      sa[56] = -0.9903197f;
      sa[57] = -1.1150713f;
      sa[58] = 0.10881352f;
      sa[59] = -0.20803346f;
      sa[60] = 1.3973767f;
      sa[61] = -0.5632011f;
      sa[62] = -0.31807274f;
      sa[63] = 0.7057444f;
      sa[64] = 1.475257f;
      sa[65] = -0.62334687f;
      sa[66] = 0.67553276f;
      sa[67] = 1.6112344f;
      sa[68] = 0.7385085f;
      sa[69] = -1.0482262f;
      sa[70] = -1.6216903f;
      sa[71] = -0.41436768f;
      sa[72] = -1.3098372f;
      sa[73] = 1.1413352f;
      sa[74] = 1.3172319f;
      sa[75] = -0.1085721f;
      sa[76] = 0.9395779f;
      sa[77] = 0.5284467f;
      sa[78] = -1.2527083f;
      sa[79] = 0.95484334f;
      sa[80] = -0.80369353f;
      sa[81] = 0.28143895f;
      sa[82] = 0.7742204f;
      sa[83] = -0.65177846f;
      sa[84] = -1.6136969f;
      sa[85] = -1.3094709f;
      sa[86] = 0.22384518f;
      sa[87] = 1.2375644f;
      sa[88] = -1.5596015f;
      sa[89] = -0.51009816f;
      sa[90] = -1.0354273f;
      sa[91] = 1.5252895f;
      sa[92] = -0.31833056f;
      sa[93] = 0.24160708f;
      sa[94] = -1.5507467f;
      sa[95] = -0.27053648f;
      sa[96] = -1.1529294f;
      sa[97] = 0.16233769f;
      sa[98] = -0.113402575f;
      sa[99] = 0.29529157f;
      sa[100] = -1.3315809f;
      sa[101] = -0.43668133f;
      sa[102] = 1.2780029f;
      sa[103] = 0.12086423f;
      sa[104] = -0.16992651f;
      sa[105] = -0.5967697f;
      sa[106] = 1.4500519f;
      sa[107] = 1.1925316f;
      sa[108] = 0.6924029f;
      sa[109] = 0.09338537f;
      sa[110] = 0.7254591f;
      sa[111] = -0.7895944f;
      sa[112] = -1.1471062f;
      sa[113] = 0.18867947f;
      sa[114] = 0.17276728f;
      sa[115] = -0.32677153f;
      sa[116] = 1.1255332f;
      sa[117] = 0.01005865f;
      sa[118] = -1.3493102f;
      sa[119] = -0.8272994f;
      sa[120] = -0.34236622f;
      sa[121] = 1.0784662f;
      sa[122] = -0.05934961f;
      sa[123] = 0.31982875f;
      sa[124] = -0.7551608f;
      sa[125] = 0.7780347f;
      sa[126] = -0.96243787f;
      sa[127] = 0.43892783f;
      sa[128] = -0.8574786f;
      sa[129] = 0.78589743f;
      sa[130] = -0.37170115f;
      sa[131] = 0.89616066f;
      sa[132] = 0.49688664f;
      sa[133] = 0.6503626f;
      sa[134] = 0.5985312f;
      sa[135] = -1.1178776f;
      sa[136] = 0.5646609f;
      sa[137] = -0.6411581f;
      sa[138] = -0.23571098f;
      sa[139] = 1.2009553f;
      sa[140] = -0.4155195f;
      sa[141] = 0.03297152f;
      sa[142] = 0.33426273f;
      sa[143] = -0.77246624f;
      sa[144] = 1.0160675f;
      sa[145] = -0.7776986f;
      sa[146] = 0.05057509f;
      sa[147] = -0.311548f;
      sa[148] = -0.88589936f;
      sa[149] = 1.0666578f;
      sa[150] = -1.1158949f;
      sa[151] = -1.5336957f;
      sa[152] = 1.631939f;
      sa[153] = -0.6329238f;
      sa[154] = 1.30755f;
      sa[155] = -1.5014762f;
      sa[156] = -1.4457132f;
      sa[157] = -1.0680791f;
      sa[158] = -0.20671834f;
      sa[159] = -0.65224755f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_03 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_03_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_03_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_03_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_03_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


