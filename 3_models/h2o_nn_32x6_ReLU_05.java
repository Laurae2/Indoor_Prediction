/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:07:34.162+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_05

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_05 > h2o_nn_32x6_ReLU_05.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_05.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_05", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_05 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_05_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_05_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_05_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_05_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_05_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_05_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_05_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_05_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_05_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_05.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_05_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.29347826086956524,0.13043478260869565,0.14130434782608695,0.29347826086956524,0.14130434782608695};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_05() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(3229935781991269792L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_05_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_05_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_05_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_05_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_05_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_05_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_05_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_05_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_05_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.4818768369538276;
      sa[1] = 0.46565030725408024;
      sa[2] = 0.4978440419785124;
      sa[3] = 0.5194598299361526;
      sa[4] = 0.6304210210975241;
      sa[5] = 0.6179132249133592;
      sa[6] = 0.6761764100727322;
      sa[7] = 0.3669035243526092;
      sa[8] = 0.48578279082293907;
      sa[9] = 0.43644377279232494;
      sa[10] = 0.4337444109058226;
      sa[11] = 0.4895766056418308;
      sa[12] = 0.5556686939579493;
      sa[13] = 0.5894360284366609;
      sa[14] = 0.43620225439137295;
      sa[15] = 0.565085139494164;
      sa[16] = 0.5814733492140655;
      sa[17] = 0.5326016994433004;
      sa[18] = 0.45811793504138226;
      sa[19] = 0.5300934055210164;
      sa[20] = 0.5036006437836411;
      sa[21] = 0.5542534644008822;
      sa[22] = 0.582276719059569;
      sa[23] = 0.5389055554394622;
      sa[24] = 0.5023596001148397;
      sa[25] = 0.43655951495187056;
      sa[26] = 0.540632521204959;
      sa[27] = 0.47164495639860776;
      sa[28] = 0.519219698468373;
      sa[29] = 0.4170004120179567;
      sa[30] = 0.5991015995578328;
      sa[31] = 0.3711595642667778;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_05_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_05_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.013999199684495943;
      sa[1] = -0.004220688239661438;
      sa[2] = -0.014436240903331515;
      sa[3] = -0.07103678133860947;
      sa[4] = 0.02360636431754407;
    }
  }
}
class h2o_nn_32x6_ReLU_05_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_05_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_05_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.1156657f;
      sa[1] = 0.255003f;
      sa[2] = 0.11900094f;
      sa[3] = 0.20403546f;
      sa[4] = -0.20981738f;
      sa[5] = -0.1564867f;
      sa[6] = -0.06594811f;
      sa[7] = 0.15224929f;
      sa[8] = 0.25368902f;
      sa[9] = -0.20649219f;
      sa[10] = -0.13141371f;
      sa[11] = -0.16409473f;
      sa[12] = 0.058286928f;
      sa[13] = -0.23106942f;
      sa[14] = -0.1864932f;
      sa[15] = -0.08721822f;
      sa[16] = 0.09566186f;
      sa[17] = 0.105694994f;
      sa[18] = -0.23881795f;
      sa[19] = 0.305029f;
      sa[20] = 0.17598118f;
      sa[21] = -0.36916587f;
      sa[22] = 0.16930903f;
      sa[23] = -0.272489f;
      sa[24] = 0.17796062f;
      sa[25] = 0.13068824f;
      sa[26] = -0.25202352f;
      sa[27] = 0.23432131f;
      sa[28] = 0.20632498f;
      sa[29] = -0.30715853f;
      sa[30] = -0.15838869f;
      sa[31] = 0.07112373f;
      sa[32] = 0.1940674f;
      sa[33] = -0.2976115f;
      sa[34] = 0.06715533f;
      sa[35] = -0.11111245f;
      sa[36] = 0.123264045f;
      sa[37] = 0.23236404f;
      sa[38] = -0.19437082f;
      sa[39] = 0.025906552f;
      sa[40] = -0.0139799705f;
      sa[41] = -0.118411034f;
      sa[42] = -0.21367577f;
      sa[43] = -0.008355265f;
      sa[44] = 0.23264174f;
      sa[45] = -0.2595251f;
      sa[46] = 0.060327694f;
      sa[47] = -0.044918876f;
      sa[48] = 0.16676652f;
      sa[49] = 0.19667295f;
      sa[50] = 0.11507269f;
      sa[51] = -0.33037797f;
      sa[52] = -0.121196546f;
      sa[53] = 0.17192261f;
      sa[54] = 0.18673204f;
      sa[55] = 0.06918872f;
      sa[56] = -0.20315214f;
      sa[57] = -0.31468445f;
      sa[58] = 0.20145941f;
      sa[59] = -0.20139009f;
      sa[60] = -0.2910613f;
      sa[61] = 0.17735164f;
      sa[62] = 0.1471459f;
      sa[63] = 0.12624145f;
      sa[64] = 0.10988964f;
      sa[65] = 0.10133147f;
      sa[66] = -0.0012777232f;
      sa[67] = 0.14758247f;
      sa[68] = -0.16357681f;
      sa[69] = 0.111786954f;
      sa[70] = -0.057736192f;
      sa[71] = 0.35401428f;
      sa[72] = -0.08151007f;
      sa[73] = 0.26104888f;
      sa[74] = -0.1428405f;
      sa[75] = 0.117467724f;
      sa[76] = -0.18377843f;
      sa[77] = -0.035755634f;
      sa[78] = -5.3737295E-4f;
      sa[79] = 0.16639413f;
      sa[80] = -0.10840912f;
      sa[81] = -0.15550263f;
      sa[82] = -0.047841508f;
      sa[83] = 0.12034008f;
      sa[84] = 0.052609134f;
      sa[85] = -0.098138474f;
      sa[86] = 0.23943198f;
      sa[87] = 0.33305198f;
      sa[88] = 0.34932002f;
      sa[89] = 0.03605652f;
      sa[90] = -0.14355573f;
      sa[91] = 0.21236415f;
      sa[92] = 0.16275184f;
      sa[93] = -0.17423186f;
      sa[94] = -0.09193254f;
      sa[95] = -0.20267421f;
      sa[96] = 0.10208386f;
      sa[97] = 0.10052752f;
      sa[98] = 0.14593287f;
      sa[99] = -0.15935767f;
      sa[100] = -0.031223118f;
      sa[101] = -0.198927f;
      sa[102] = -0.23453452f;
      sa[103] = -0.11722533f;
      sa[104] = -0.0937422f;
      sa[105] = -0.23809183f;
      sa[106] = -0.1160324f;
      sa[107] = 0.22017604f;
      sa[108] = 0.12274278f;
      sa[109] = -0.06160886f;
      sa[110] = 0.014185683f;
      sa[111] = 0.11362385f;
      sa[112] = 0.18849877f;
      sa[113] = 0.11051925f;
      sa[114] = -0.0598372f;
      sa[115] = 0.086587586f;
      sa[116] = -0.25002128f;
      sa[117] = 0.04737355f;
      sa[118] = -0.28538972f;
      sa[119] = -0.24003695f;
      sa[120] = 0.30537048f;
      sa[121] = 0.30301195f;
      sa[122] = 0.39484426f;
      sa[123] = 0.41269174f;
      sa[124] = 0.46321315f;
      sa[125] = 0.3319686f;
      sa[126] = -0.31875375f;
      sa[127] = -0.15446612f;
      sa[128] = 0.17661414f;
      sa[129] = 0.2485035f;
      sa[130] = -0.014910557f;
      sa[131] = 0.41322598f;
      sa[132] = 0.34204867f;
      sa[133] = -0.26199913f;
      sa[134] = -8.1196387E-4f;
      sa[135] = -0.20315312f;
      sa[136] = -0.17419557f;
      sa[137] = 0.0508715f;
      sa[138] = 0.181993f;
      sa[139] = 0.027165355f;
      sa[140] = -0.14863485f;
      sa[141] = -0.33689073f;
      sa[142] = 0.29302853f;
      sa[143] = -0.18662539f;
      sa[144] = 0.26390895f;
      sa[145] = -0.08762913f;
      sa[146] = -0.15453014f;
      sa[147] = 0.13787584f;
      sa[148] = 0.20498723f;
      sa[149] = 0.23507093f;
      sa[150] = 0.29147977f;
      sa[151] = -0.16536705f;
      sa[152] = 0.044739522f;
      sa[153] = 0.288971f;
      sa[154] = 0.30159804f;
      sa[155] = -0.24332224f;
      sa[156] = 0.17036681f;
      sa[157] = -0.12076354f;
      sa[158] = 0.096902646f;
      sa[159] = 0.16657947f;
      sa[160] = 0.16254444f;
      sa[161] = 0.30059722f;
      sa[162] = -0.22006506f;
      sa[163] = 0.13611631f;
      sa[164] = 0.29643786f;
      sa[165] = 0.028960843f;
      sa[166] = -0.057435032f;
      sa[167] = -0.0070218444f;
      sa[168] = 0.2612134f;
      sa[169] = 0.28565797f;
      sa[170] = 0.045145724f;
      sa[171] = -0.01044875f;
      sa[172] = 0.04501215f;
      sa[173] = -1.8860976E-4f;
      sa[174] = 0.0879508f;
      sa[175] = -0.04875145f;
      sa[176] = 0.018271843f;
      sa[177] = -0.023263803f;
      sa[178] = -0.10007009f;
      sa[179] = 0.02412833f;
      sa[180] = -0.12700157f;
      sa[181] = -0.2936415f;
      sa[182] = -0.05594564f;
      sa[183] = -0.041036498f;
      sa[184] = 0.333264f;
      sa[185] = 0.17638558f;
      sa[186] = -0.3083858f;
      sa[187] = 0.1515994f;
      sa[188] = -0.18220608f;
      sa[189] = 0.31442943f;
      sa[190] = 0.0896136f;
      sa[191] = -0.15265667f;
      sa[192] = -0.118897855f;
      sa[193] = 0.20948964f;
      sa[194] = 0.032098413f;
      sa[195] = 0.28608978f;
      sa[196] = 0.215546f;
      sa[197] = 0.124014206f;
      sa[198] = 0.17457776f;
      sa[199] = -0.065626696f;
      sa[200] = 0.054813836f;
      sa[201] = -0.20273513f;
      sa[202] = 0.11776622f;
      sa[203] = 0.085705325f;
      sa[204] = -0.06669607f;
      sa[205] = 0.17186071f;
      sa[206] = 0.30141014f;
      sa[207] = 0.26125124f;
      sa[208] = -0.19179873f;
      sa[209] = 0.01935174f;
      sa[210] = -0.21569678f;
      sa[211] = -0.11932846f;
      sa[212] = 0.35504803f;
      sa[213] = -0.1245124f;
      sa[214] = -0.24976663f;
      sa[215] = -0.03910295f;
      sa[216] = 0.10113997f;
      sa[217] = 0.013468023f;
      sa[218] = -0.32018617f;
      sa[219] = 0.046831768f;
      sa[220] = -0.19455555f;
      sa[221] = 0.025641233f;
      sa[222] = 0.1975565f;
      sa[223] = 0.023406014f;
      sa[224] = 0.082768284f;
      sa[225] = 0.24429941f;
      sa[226] = -0.20195608f;
      sa[227] = 0.2538662f;
      sa[228] = 0.10210413f;
      sa[229] = 0.06308029f;
      sa[230] = 0.21912041f;
      sa[231] = -0.30078456f;
      sa[232] = -0.46674436f;
      sa[233] = -0.037169047f;
      sa[234] = 0.3020376f;
      sa[235] = -0.41361818f;
      sa[236] = -0.0481686f;
      sa[237] = -0.21322215f;
      sa[238] = -0.22143996f;
      sa[239] = 0.10785348f;
      sa[240] = -0.05233001f;
      sa[241] = -0.21952355f;
      sa[242] = 0.028582742f;
      sa[243] = -0.13580099f;
      sa[244] = -0.20480499f;
      sa[245] = -0.11276926f;
      sa[246] = -0.2622403f;
      sa[247] = -0.054351047f;
      sa[248] = 0.2841333f;
      sa[249] = 0.26937944f;
      sa[250] = -0.21982665f;
      sa[251] = -0.12023908f;
      sa[252] = -0.2238009f;
      sa[253] = -0.28484374f;
      sa[254] = -0.2819741f;
      sa[255] = 0.26514795f;
      sa[256] = -0.2073052f;
      sa[257] = 0.23274079f;
      sa[258] = -0.2023022f;
      sa[259] = -0.18057866f;
      sa[260] = -0.15060662f;
      sa[261] = -0.14933309f;
      sa[262] = -0.18495615f;
      sa[263] = 0.3209822f;
      sa[264] = -0.19284599f;
      sa[265] = 0.0038154614f;
      sa[266] = -0.23719822f;
      sa[267] = -0.28144732f;
      sa[268] = 0.065095514f;
      sa[269] = -0.25889024f;
      sa[270] = 0.054502133f;
      sa[271] = 0.11131701f;
      sa[272] = -0.15806054f;
      sa[273] = -0.18062748f;
      sa[274] = 0.10797017f;
      sa[275] = -0.06547596f;
      sa[276] = -0.0044421507f;
      sa[277] = -0.1946974f;
      sa[278] = -0.13819492f;
      sa[279] = 0.1603522f;
      sa[280] = -0.28517917f;
      sa[281] = 0.13370124f;
      sa[282] = -0.19813614f;
      sa[283] = -0.18916047f;
      sa[284] = -0.00968904f;
      sa[285] = -0.19134508f;
      sa[286] = 0.2990208f;
      sa[287] = 0.17268455f;
      sa[288] = -0.260117f;
      sa[289] = -0.15677644f;
      sa[290] = -0.06510664f;
      sa[291] = -0.11572146f;
      sa[292] = 0.14194664f;
      sa[293] = -0.102240466f;
      sa[294] = 0.025547922f;
      sa[295] = 0.16295704f;
      sa[296] = 0.10675098f;
      sa[297] = 0.24068782f;
      sa[298] = -0.006523809f;
      sa[299] = -0.1406337f;
      sa[300] = 0.0074832425f;
      sa[301] = -0.06625258f;
      sa[302] = 0.11503703f;
      sa[303] = 0.07223307f;
      sa[304] = -0.16726786f;
      sa[305] = 0.033522088f;
      sa[306] = 0.21583036f;
      sa[307] = -0.105636775f;
      sa[308] = 0.11494316f;
      sa[309] = 0.19208047f;
      sa[310] = 0.27014932f;
      sa[311] = 0.37789637f;
      sa[312] = -0.112770155f;
      sa[313] = -0.17620228f;
      sa[314] = -0.11882811f;
      sa[315] = 0.14424466f;
      sa[316] = 0.034412913f;
      sa[317] = -0.0075053056f;
      sa[318] = 0.1305966f;
      sa[319] = 0.37698305f;
      sa[320] = -0.13751645f;
      sa[321] = 0.077309914f;
      sa[322] = 0.30007485f;
      sa[323] = -0.07518772f;
      sa[324] = 0.051593963f;
      sa[325] = 0.25212714f;
      sa[326] = -0.36178458f;
      sa[327] = 0.042901818f;
      sa[328] = -0.12645236f;
      sa[329] = 0.21430661f;
      sa[330] = -0.25414968f;
      sa[331] = -0.10391803f;
      sa[332] = -0.1668921f;
      sa[333] = 0.09086803f;
      sa[334] = -0.0030072015f;
      sa[335] = 0.2826389f;
      sa[336] = -0.22522038f;
      sa[337] = -0.18618281f;
      sa[338] = 0.17388634f;
      sa[339] = -0.31848505f;
      sa[340] = -0.35492826f;
      sa[341] = -0.26650876f;
      sa[342] = 0.104095474f;
      sa[343] = -0.040271178f;
      sa[344] = -0.24945216f;
      sa[345] = 0.094863795f;
      sa[346] = 0.09940955f;
      sa[347] = -0.27783218f;
      sa[348] = 0.19020419f;
      sa[349] = -0.22328582f;
      sa[350] = -0.22289962f;
      sa[351] = 0.118237935f;
      sa[352] = 0.13676165f;
      sa[353] = -0.08272609f;
      sa[354] = 0.064874284f;
      sa[355] = 0.04408201f;
      sa[356] = -0.12483236f;
      sa[357] = 0.28665802f;
      sa[358] = -0.31089324f;
      sa[359] = 0.015435155f;
      sa[360] = 0.15076782f;
      sa[361] = -0.03777537f;
      sa[362] = -0.28084198f;
      sa[363] = 0.11519294f;
      sa[364] = -0.16103882f;
      sa[365] = -0.22702618f;
      sa[366] = -0.03989449f;
      sa[367] = -0.33083642f;
      sa[368] = -0.09326597f;
      sa[369] = 0.14557439f;
      sa[370] = -0.18859059f;
      sa[371] = 0.1054619f;
      sa[372] = -0.038870577f;
      sa[373] = 0.2641151f;
      sa[374] = -0.15826179f;
      sa[375] = -0.32298756f;
      sa[376] = -0.3111615f;
      sa[377] = -0.29448256f;
      sa[378] = 0.27669263f;
      sa[379] = 0.10410337f;
      sa[380] = -0.1444767f;
      sa[381] = -0.134586f;
      sa[382] = -0.067426376f;
      sa[383] = -0.15846547f;
      sa[384] = -0.23150729f;
      sa[385] = 0.11878674f;
      sa[386] = -0.22676921f;
      sa[387] = -0.14663234f;
      sa[388] = 0.053685945f;
      sa[389] = -0.037957776f;
      sa[390] = -0.021660145f;
      sa[391] = -0.12760238f;
      sa[392] = 0.061705496f;
      sa[393] = 0.047272604f;
      sa[394] = 0.122773185f;
      sa[395] = 0.36709368f;
      sa[396] = 0.28784758f;
      sa[397] = -0.30191055f;
      sa[398] = 0.012722035f;
      sa[399] = -0.10546069f;
      sa[400] = 0.15199289f;
      sa[401] = 0.22055256f;
      sa[402] = -0.18617262f;
      sa[403] = 0.039876062f;
      sa[404] = 0.21897659f;
      sa[405] = -0.2872555f;
      sa[406] = -0.06196789f;
      sa[407] = 0.07882871f;
      sa[408] = -0.23256744f;
      sa[409] = -0.25239757f;
      sa[410] = -0.17099133f;
      sa[411] = 0.11403741f;
      sa[412] = -0.20277734f;
      sa[413] = 0.013402112f;
      sa[414] = 0.16372442f;
      sa[415] = 0.32055226f;
      sa[416] = -0.19799632f;
      sa[417] = 0.0037229012f;
      sa[418] = -0.045395434f;
      sa[419] = 0.2462413f;
      sa[420] = 0.21772623f;
      sa[421] = 0.21174645f;
      sa[422] = 0.28921676f;
      sa[423] = 0.048031412f;
      sa[424] = 0.10799163f;
      sa[425] = -0.04919197f;
      sa[426] = -0.25590006f;
      sa[427] = 0.22260019f;
      sa[428] = -0.13270488f;
      sa[429] = -0.24144097f;
      sa[430] = 0.21735029f;
      sa[431] = 0.0016132761f;
      sa[432] = 0.026740123f;
      sa[433] = 0.083078496f;
      sa[434] = 0.10182075f;
      sa[435] = 0.10332327f;
      sa[436] = -0.27101225f;
      sa[437] = -0.22494334f;
      sa[438] = 0.02470592f;
      sa[439] = -0.059346046f;
      sa[440] = 0.44333944f;
      sa[441] = -0.43165863f;
      sa[442] = 0.03286301f;
      sa[443] = 0.08171884f;
      sa[444] = -0.20333561f;
      sa[445] = 0.0879549f;
      sa[446] = 0.25103942f;
      sa[447] = 0.025405373f;
      sa[448] = 0.09930368f;
      sa[449] = 0.030768115f;
      sa[450] = -0.07199978f;
      sa[451] = 0.062701255f;
      sa[452] = 0.148058f;
      sa[453] = -0.0835612f;
      sa[454] = -0.14766422f;
      sa[455] = -0.11148072f;
      sa[456] = -0.16666411f;
      sa[457] = 0.07971837f;
      sa[458] = -0.19859947f;
      sa[459] = 0.17365354f;
      sa[460] = 0.18636604f;
      sa[461] = 0.23167647f;
      sa[462] = 0.04411342f;
      sa[463] = 0.15285704f;
      sa[464] = -0.40670493f;
      sa[465] = 0.09146482f;
      sa[466] = 0.10911801f;
      sa[467] = 0.15758842f;
      sa[468] = 0.10068304f;
      sa[469] = 0.28466034f;
      sa[470] = 0.095510416f;
      sa[471] = -0.021911401f;
      sa[472] = 0.012100571f;
      sa[473] = -0.06719893f;
      sa[474] = -0.024786396f;
      sa[475] = 0.08791708f;
      sa[476] = 0.25343072f;
      sa[477] = -0.2437747f;
      sa[478] = 0.10530086f;
      sa[479] = -0.18011412f;
      sa[480] = -0.27117306f;
      sa[481] = -0.15876618f;
      sa[482] = -0.25228587f;
      sa[483] = 0.18825978f;
      sa[484] = 0.2134582f;
      sa[485] = 0.07988085f;
      sa[486] = -0.018760094f;
      sa[487] = -0.14144945f;
      sa[488] = -0.18015167f;
      sa[489] = 0.0749076f;
      sa[490] = -0.013565361f;
      sa[491] = -0.2370232f;
      sa[492] = 0.19470522f;
      sa[493] = 0.19773898f;
      sa[494] = -0.17339426f;
      sa[495] = 0.15762609f;
      sa[496] = 0.029693326f;
      sa[497] = 0.08820131f;
      sa[498] = 0.20548336f;
      sa[499] = 0.18309847f;
      sa[500] = -0.18545832f;
      sa[501] = -0.033716924f;
      sa[502] = 0.28847006f;
      sa[503] = 0.06608056f;
      sa[504] = -0.23909484f;
      sa[505] = -0.20912f;
      sa[506] = 0.23095524f;
      sa[507] = -0.09495208f;
      sa[508] = 0.12213672f;
      sa[509] = 0.18838598f;
      sa[510] = 0.21722674f;
      sa[511] = 0.08039502f;
      sa[512] = -0.053278238f;
      sa[513] = -0.03535384f;
      sa[514] = 0.16365175f;
      sa[515] = -0.27563205f;
      sa[516] = 0.046289627f;
      sa[517] = 0.069674544f;
      sa[518] = 0.18994734f;
      sa[519] = -0.0039491844f;
      sa[520] = 0.2472442f;
      sa[521] = 0.15682253f;
      sa[522] = 0.13692819f;
      sa[523] = 0.13885254f;
      sa[524] = 0.22865711f;
      sa[525] = 0.22285081f;
      sa[526] = 0.0696592f;
      sa[527] = -0.0034217848f;
      sa[528] = 0.021548703f;
      sa[529] = 0.09868294f;
      sa[530] = -0.19359048f;
      sa[531] = 0.08704944f;
      sa[532] = 0.1177658f;
      sa[533] = 0.105106f;
      sa[534] = 0.07240356f;
      sa[535] = -0.067184426f;
      sa[536] = 0.07042527f;
      sa[537] = -0.22153087f;
      sa[538] = 0.23555173f;
      sa[539] = 0.31142828f;
      sa[540] = -0.21195446f;
      sa[541] = -0.12762518f;
      sa[542] = -0.026318057f;
      sa[543] = -0.13042946f;
      sa[544] = 0.16489209f;
      sa[545] = 0.12921727f;
      sa[546] = 0.13812232f;
      sa[547] = 0.17997281f;
      sa[548] = 0.12713076f;
      sa[549] = 0.16860965f;
      sa[550] = -0.0067253215f;
      sa[551] = -0.037012443f;
      sa[552] = 0.055657282f;
      sa[553] = -0.033103153f;
      sa[554] = -0.08904431f;
      sa[555] = -0.13519652f;
      sa[556] = -0.16144483f;
      sa[557] = -0.18325286f;
      sa[558] = -0.20670101f;
      sa[559] = 0.08395577f;
      sa[560] = -0.28024644f;
      sa[561] = -0.08310186f;
      sa[562] = 0.21489373f;
      sa[563] = -0.1095784f;
      sa[564] = 0.20780544f;
      sa[565] = 0.05695863f;
      sa[566] = 0.22132802f;
      sa[567] = -0.09905571f;
      sa[568] = -0.09077009f;
      sa[569] = -0.004071175f;
      sa[570] = -0.040522005f;
      sa[571] = -0.11760945f;
      sa[572] = 0.00710215f;
      sa[573] = 0.19472492f;
      sa[574] = 0.10555343f;
      sa[575] = -0.3360533f;
      sa[576] = -0.07530789f;
      sa[577] = 0.021156743f;
      sa[578] = 0.08945852f;
      sa[579] = -0.14216281f;
      sa[580] = 0.09984937f;
      sa[581] = -0.10820176f;
      sa[582] = 0.047949806f;
      sa[583] = 5.89473E-4f;
      sa[584] = 0.11684235f;
      sa[585] = 0.20787382f;
      sa[586] = -0.14515604f;
      sa[587] = -0.15704975f;
      sa[588] = 0.0490137f;
      sa[589] = 0.12929666f;
      sa[590] = -0.07400619f;
      sa[591] = -0.036085088f;
      sa[592] = -0.33373716f;
      sa[593] = -0.1366239f;
      sa[594] = -0.09378672f;
      sa[595] = 0.08156383f;
      sa[596] = 0.23115614f;
      sa[597] = -0.03899344f;
      sa[598] = 0.14891322f;
      sa[599] = -0.012916323f;
      sa[600] = -0.24700966f;
      sa[601] = 0.19170262f;
      sa[602] = -0.026163004f;
      sa[603] = 0.34895083f;
      sa[604] = 0.28772378f;
      sa[605] = 0.25492153f;
      sa[606] = 0.2743527f;
      sa[607] = 0.14662808f;
      sa[608] = 0.013127252f;
      sa[609] = 0.16174833f;
      sa[610] = 0.03862639f;
      sa[611] = -0.123539075f;
      sa[612] = 0.016861737f;
      sa[613] = 0.047987357f;
      sa[614] = -0.07313307f;
      sa[615] = 0.023118656f;
      sa[616] = 0.013683495f;
      sa[617] = -0.29397583f;
      sa[618] = -0.17642383f;
      sa[619] = -0.22088133f;
      sa[620] = 0.11667522f;
      sa[621] = -0.35459957f;
      sa[622] = -0.28388575f;
      sa[623] = -0.27380916f;
      sa[624] = -0.056264017f;
      sa[625] = 0.24078622f;
      sa[626] = -0.017068196f;
      sa[627] = 0.19958155f;
      sa[628] = -0.3410578f;
      sa[629] = -0.1699279f;
      sa[630] = -0.12679707f;
      sa[631] = 0.19809501f;
      sa[632] = 0.07583463f;
      sa[633] = -0.18739028f;
      sa[634] = -0.21666285f;
      sa[635] = 0.097657226f;
      sa[636] = -0.27698916f;
      sa[637] = -0.0113519365f;
      sa[638] = -0.07918268f;
      sa[639] = -0.09817693f;
      sa[640] = -0.15511806f;
      sa[641] = -0.31052613f;
      sa[642] = 0.17090257f;
      sa[643] = -0.34608766f;
      sa[644] = -0.1947864f;
      sa[645] = -0.3544186f;
      sa[646] = 0.4043046f;
      sa[647] = -0.1788464f;
      sa[648] = 0.0046668737f;
      sa[649] = 0.060647484f;
      sa[650] = 0.1647017f;
      sa[651] = 0.029115885f;
      sa[652] = 0.096655935f;
      sa[653] = -0.11865295f;
      sa[654] = -0.071166545f;
      sa[655] = -0.10337477f;
      sa[656] = 0.15080006f;
      sa[657] = 0.10056905f;
      sa[658] = -0.26730275f;
      sa[659] = -0.1525918f;
      sa[660] = -0.19264954f;
      sa[661] = -0.06294697f;
      sa[662] = -0.18563446f;
      sa[663] = 0.23965624f;
      sa[664] = -0.021133965f;
      sa[665] = 0.27170593f;
      sa[666] = -0.09386047f;
      sa[667] = -0.18294865f;
      sa[668] = 0.29864737f;
      sa[669] = -0.08582909f;
      sa[670] = 0.19876146f;
      sa[671] = 0.071406364f;
      sa[672] = -0.28566843f;
      sa[673] = 0.22436428f;
      sa[674] = 0.15424009f;
      sa[675] = -0.41155964f;
      sa[676] = -0.08974447f;
      sa[677] = -0.2227395f;
      sa[678] = 0.18420114f;
      sa[679] = -0.115506805f;
      sa[680] = -0.0041891905f;
      sa[681] = 0.015159364f;
      sa[682] = 0.13076916f;
      sa[683] = -0.026616443f;
      sa[684] = -0.07789702f;
      sa[685] = -0.01540135f;
      sa[686] = -0.12120192f;
      sa[687] = -0.27441448f;
      sa[688] = -0.2398002f;
      sa[689] = -0.24509318f;
      sa[690] = -0.01842384f;
      sa[691] = 0.1773596f;
      sa[692] = -0.24660346f;
      sa[693] = -0.120891996f;
      sa[694] = 0.21217768f;
      sa[695] = -0.12033912f;
      sa[696] = -0.07124059f;
      sa[697] = -0.14766908f;
      sa[698] = -0.16002113f;
      sa[699] = 0.35259914f;
      sa[700] = 0.11983777f;
      sa[701] = 0.15811087f;
      sa[702] = 0.261334f;
      sa[703] = -0.10489177f;
      sa[704] = -0.22055061f;
      sa[705] = 0.025530158f;
      sa[706] = -0.098141834f;
      sa[707] = 0.14478715f;
      sa[708] = 0.088386014f;
      sa[709] = -0.31985876f;
      sa[710] = 0.28858405f;
      sa[711] = -0.008666124f;
      sa[712] = 0.05808165f;
      sa[713] = 0.18474066f;
      sa[714] = 0.18786398f;
      sa[715] = 0.18575366f;
      sa[716] = 0.06305625f;
      sa[717] = 0.19419108f;
      sa[718] = -0.068570666f;
      sa[719] = 0.079524994f;
      sa[720] = -0.16494538f;
      sa[721] = 0.10157097f;
      sa[722] = -0.2713292f;
      sa[723] = 0.07894603f;
      sa[724] = 0.0426328f;
      sa[725] = -0.3168222f;
      sa[726] = -0.17669548f;
      sa[727] = -0.33976248f;
      sa[728] = -0.06976614f;
      sa[729] = -0.0449073f;
      sa[730] = -0.010352996f;
      sa[731] = -0.2050981f;
      sa[732] = 0.11743784f;
      sa[733] = 0.15896767f;
      sa[734] = -0.13740858f;
      sa[735] = 0.19975343f;
      sa[736] = -0.21328112f;
      sa[737] = 0.084010534f;
      sa[738] = -0.030577848f;
      sa[739] = -0.4669749f;
      sa[740] = -0.3240417f;
      sa[741] = -0.3163651f;
      sa[742] = 0.086809136f;
      sa[743] = -0.029902244f;
      sa[744] = -0.035349626f;
      sa[745] = -0.23058723f;
      sa[746] = 0.08815798f;
      sa[747] = -0.17929171f;
      sa[748] = -0.21531413f;
      sa[749] = -0.2569049f;
      sa[750] = 0.11435778f;
      sa[751] = 0.14485475f;
      sa[752] = 0.025708785f;
      sa[753] = 0.22804026f;
      sa[754] = -0.047903474f;
      sa[755] = 0.13202113f;
      sa[756] = -0.2752821f;
      sa[757] = 0.22494876f;
      sa[758] = -0.031391725f;
      sa[759] = -0.19507651f;
      sa[760] = -0.03913621f;
      sa[761] = 0.048600014f;
      sa[762] = -0.06466637f;
      sa[763] = 0.21889278f;
      sa[764] = -0.03294572f;
      sa[765] = 0.04636063f;
      sa[766] = -0.2578141f;
      sa[767] = 0.045376547f;
      sa[768] = -0.14595488f;
      sa[769] = -0.27131096f;
      sa[770] = 0.013613949f;
      sa[771] = 0.07059988f;
      sa[772] = 0.04967074f;
      sa[773] = -0.14137577f;
      sa[774] = 0.059990395f;
      sa[775] = 0.23598987f;
      sa[776] = -0.011505562f;
      sa[777] = 0.12695244f;
      sa[778] = 0.21004426f;
      sa[779] = -0.059004135f;
      sa[780] = 0.112358965f;
      sa[781] = -0.09928113f;
      sa[782] = 0.17586564f;
      sa[783] = -0.11983572f;
      sa[784] = -0.110449836f;
      sa[785] = -0.064717226f;
      sa[786] = -0.06978492f;
      sa[787] = -0.16794395f;
      sa[788] = -0.12595472f;
      sa[789] = 0.22126693f;
      sa[790] = -0.19429816f;
      sa[791] = -0.12665296f;
      sa[792] = 0.25060213f;
      sa[793] = -0.0572874f;
      sa[794] = -0.09556893f;
      sa[795] = 0.16099621f;
      sa[796] = 0.2827518f;
      sa[797] = -0.12652239f;
      sa[798] = -0.15532102f;
      sa[799] = -0.11236682f;
      sa[800] = 0.26829618f;
      sa[801] = 0.03757284f;
      sa[802] = 0.24027455f;
      sa[803] = 0.0807951f;
      sa[804] = 0.28463194f;
      sa[805] = 0.3532526f;
      sa[806] = 0.39161336f;
      sa[807] = 0.30259463f;
      sa[808] = 0.10674183f;
      sa[809] = -0.19347511f;
      sa[810] = 0.04339922f;
      sa[811] = 0.23264378f;
      sa[812] = 0.23022045f;
      sa[813] = -0.2208043f;
      sa[814] = 0.1585204f;
      sa[815] = -0.11358468f;
      sa[816] = -0.1158766f;
      sa[817] = -0.11685675f;
      sa[818] = -0.05870543f;
      sa[819] = -0.16757713f;
      sa[820] = -0.25217956f;
      sa[821] = -0.17875302f;
      sa[822] = -0.24663268f;
      sa[823] = 0.06262675f;
      sa[824] = 0.13694766f;
      sa[825] = 0.26605177f;
      sa[826] = -0.2702289f;
      sa[827] = -0.29870027f;
      sa[828] = 0.16778314f;
      sa[829] = -0.057190023f;
      sa[830] = 0.20029554f;
      sa[831] = 0.2632968f;
      sa[832] = 0.14516096f;
      sa[833] = 0.08610671f;
      sa[834] = 0.25770926f;
      sa[835] = -0.096841834f;
      sa[836] = 0.3104376f;
      sa[837] = -0.16048436f;
      sa[838] = 0.1402883f;
      sa[839] = -0.18236059f;
      sa[840] = 0.1950881f;
      sa[841] = 0.11912993f;
      sa[842] = 0.22126354f;
      sa[843] = 0.031940423f;
      sa[844] = 0.04746964f;
      sa[845] = 0.15345708f;
      sa[846] = -0.264707f;
      sa[847] = -0.083183825f;
      sa[848] = 0.20377709f;
      sa[849] = 0.23375162f;
      sa[850] = 0.020494735f;
      sa[851] = 0.06603901f;
      sa[852] = 0.20713592f;
      sa[853] = 0.17874794f;
      sa[854] = 0.19466268f;
      sa[855] = 0.06334685f;
      sa[856] = 0.062445465f;
      sa[857] = -0.19005269f;
      sa[858] = 0.10667926f;
      sa[859] = 0.011679508f;
      sa[860] = 0.37416345f;
      sa[861] = -0.17970498f;
      sa[862] = -0.19273575f;
      sa[863] = -0.0278444f;
      sa[864] = -0.24934049f;
      sa[865] = 0.22564499f;
      sa[866] = -0.13181989f;
      sa[867] = -0.09155506f;
      sa[868] = -0.15386392f;
      sa[869] = 0.20521119f;
      sa[870] = -0.07907367f;
      sa[871] = 0.20239474f;
      sa[872] = 0.12089923f;
      sa[873] = -0.007341715f;
      sa[874] = 0.018663993f;
      sa[875] = -0.2963557f;
      sa[876] = -0.20038767f;
      sa[877] = -0.19648422f;
      sa[878] = 1.03380575E-4f;
      sa[879] = 0.24651442f;
      sa[880] = -0.067445435f;
      sa[881] = -0.009140298f;
      sa[882] = 0.1707227f;
      sa[883] = 0.2603497f;
      sa[884] = -0.08313138f;
      sa[885] = -0.076492354f;
      sa[886] = 0.09352353f;
      sa[887] = 0.025776021f;
      sa[888] = -0.03000071f;
      sa[889] = 0.013614766f;
      sa[890] = -0.2579237f;
      sa[891] = 0.45107603f;
      sa[892] = 0.23830749f;
      sa[893] = 0.33932814f;
      sa[894] = 0.09539532f;
      sa[895] = 0.32791364f;
      sa[896] = -0.21660861f;
      sa[897] = 0.21541063f;
      sa[898] = -0.0061044507f;
      sa[899] = 0.2253289f;
      sa[900] = -0.07729728f;
      sa[901] = 0.05829123f;
      sa[902] = -0.40808463f;
      sa[903] = -0.10891461f;
      sa[904] = 0.095963195f;
      sa[905] = 0.11456699f;
      sa[906] = -0.31330413f;
      sa[907] = -0.3371644f;
      sa[908] = -0.19589381f;
      sa[909] = -0.0058066947f;
      sa[910] = 0.014638652f;
      sa[911] = -0.08733656f;
      sa[912] = -0.09363953f;
      sa[913] = -0.01850638f;
      sa[914] = -0.25302964f;
      sa[915] = -0.05068764f;
      sa[916] = 0.042875864f;
      sa[917] = -0.10096112f;
      sa[918] = 0.21609169f;
      sa[919] = -0.08047001f;
      sa[920] = 0.056931894f;
      sa[921] = -0.16061181f;
      sa[922] = -0.19493327f;
      sa[923] = -0.22126448f;
      sa[924] = -0.22289684f;
      sa[925] = -0.18361887f;
      sa[926] = 0.13400936f;
      sa[927] = -0.06320821f;
      sa[928] = 0.15121765f;
      sa[929] = 0.04839153f;
      sa[930] = 0.07735776f;
      sa[931] = -0.09687313f;
      sa[932] = 0.14444354f;
      sa[933] = 0.0036106426f;
      sa[934] = 0.24591665f;
      sa[935] = -0.16215469f;
      sa[936] = -0.016664118f;
      sa[937] = 0.21203928f;
      sa[938] = -0.020332102f;
      sa[939] = -0.102423616f;
      sa[940] = -0.008475778f;
      sa[941] = -0.28062522f;
      sa[942] = -0.24252112f;
      sa[943] = -0.11136602f;
      sa[944] = -0.32989722f;
      sa[945] = 0.16489527f;
      sa[946] = 0.10779968f;
      sa[947] = 0.19388324f;
      sa[948] = 0.114036344f;
      sa[949] = -0.16379842f;
      sa[950] = 0.076342456f;
      sa[951] = -0.03363054f;
      sa[952] = -0.1656636f;
      sa[953] = -0.07560072f;
      sa[954] = -0.21483386f;
      sa[955] = 0.07882932f;
      sa[956] = 0.028101245f;
      sa[957] = 0.09214505f;
      sa[958] = 0.11103427f;
      sa[959] = -0.085629866f;
      sa[960] = 0.39840683f;
      sa[961] = -0.16764814f;
      sa[962] = 0.035123818f;
      sa[963] = 2.1730873E-4f;
      sa[964] = -0.110811085f;
      sa[965] = 0.31833747f;
      sa[966] = -0.037897874f;
      sa[967] = -0.18518086f;
      sa[968] = 0.13332966f;
      sa[969] = 0.072611056f;
      sa[970] = 0.26095808f;
      sa[971] = 0.006285727f;
      sa[972] = -0.08376409f;
      sa[973] = -0.23852406f;
      sa[974] = -0.4578917f;
      sa[975] = -0.18669693f;
      sa[976] = -0.15046686f;
      sa[977] = 0.0106242895f;
      sa[978] = -0.12218736f;
      sa[979] = 0.04978467f;
      sa[980] = 0.23821479f;
      sa[981] = -0.31215158f;
      sa[982] = 0.16793516f;
      sa[983] = -0.017203052f;
      sa[984] = -0.33836046f;
      sa[985] = 0.012563726f;
      sa[986] = -0.29825604f;
      sa[987] = -0.02250638f;
      sa[988] = 0.04059743f;
      sa[989] = 0.09176311f;
      sa[990] = 0.25975162f;
      sa[991] = -0.23109251f;
      sa[992] = -0.27715117f;
      sa[993] = -0.1421818f;
      sa[994] = -0.22247453f;
      sa[995] = -0.37945673f;
      sa[996] = 0.05391994f;
      sa[997] = 0.21363503f;
      sa[998] = 0.078921564f;
      sa[999] = 0.1831361f;
      sa[1000] = -0.05295327f;
      sa[1001] = 0.12779988f;
      sa[1002] = 0.1821908f;
      sa[1003] = -0.177589f;
      sa[1004] = 0.18390688f;
      sa[1005] = -0.21087065f;
      sa[1006] = -0.08643013f;
      sa[1007] = 0.05824059f;
      sa[1008] = 0.14136697f;
      sa[1009] = 0.080071405f;
      sa[1010] = 0.09527653f;
      sa[1011] = 0.41942868f;
      sa[1012] = -0.030486284f;
      sa[1013] = 0.17478226f;
      sa[1014] = 0.34923396f;
      sa[1015] = -0.2263031f;
      sa[1016] = 0.23892868f;
      sa[1017] = 0.07750808f;
      sa[1018] = -0.08713816f;
      sa[1019] = 0.08924626f;
      sa[1020] = -0.18865766f;
      sa[1021] = 0.112364836f;
      sa[1022] = 0.31616393f;
      sa[1023] = 0.13885213f;
      sa[1024] = 0.00802919f;
      sa[1025] = 0.1043764f;
      sa[1026] = 0.18533541f;
      sa[1027] = 0.20635572f;
      sa[1028] = 0.3283412f;
      sa[1029] = 0.010309238f;
      sa[1030] = -0.09492891f;
      sa[1031] = 0.052185703f;
      sa[1032] = -0.2222397f;
      sa[1033] = 0.042953778f;
      sa[1034] = -0.08983007f;
      sa[1035] = -0.33685946f;
      sa[1036] = 0.24949658f;
      sa[1037] = 0.010471003f;
      sa[1038] = -0.22849953f;
      sa[1039] = 0.21469718f;
      sa[1040] = 0.010505003f;
      sa[1041] = 0.06259606f;
      sa[1042] = -0.25479648f;
      sa[1043] = -0.07846378f;
      sa[1044] = 0.22937036f;
      sa[1045] = 0.1799588f;
      sa[1046] = -0.3155718f;
      sa[1047] = -0.14829816f;
      sa[1048] = 0.10716619f;
      sa[1049] = -0.12837544f;
      sa[1050] = 0.027003342f;
      sa[1051] = -0.2533439f;
      sa[1052] = 0.20723122f;
      sa[1053] = 0.16399541f;
      sa[1054] = 0.20482433f;
      sa[1055] = -0.003994306f;
      sa[1056] = 0.22748055f;
      sa[1057] = -0.2187193f;
      sa[1058] = 0.2122714f;
      sa[1059] = -0.2305522f;
      sa[1060] = -0.35289f;
      sa[1061] = -0.114787824f;
      sa[1062] = 0.25363758f;
      sa[1063] = -0.09658758f;
      sa[1064] = 0.050039303f;
      sa[1065] = -0.07877818f;
      sa[1066] = 0.15791221f;
      sa[1067] = -0.37788174f;
      sa[1068] = -0.42105561f;
      sa[1069] = 0.22881258f;
      sa[1070] = 0.13402298f;
      sa[1071] = 0.16950928f;
      sa[1072] = -0.29797772f;
      sa[1073] = 0.051479574f;
      sa[1074] = 0.061139867f;
      sa[1075] = -0.2519139f;
      sa[1076] = -0.22007547f;
      sa[1077] = 0.020346556f;
      sa[1078] = 0.110729516f;
      sa[1079] = 0.1151689f;
      sa[1080] = 0.2035432f;
      sa[1081] = 0.2225681f;
      sa[1082] = -0.2954291f;
      sa[1083] = -0.19090062f;
      sa[1084] = 0.25692624f;
      sa[1085] = -0.19771269f;
      sa[1086] = -0.2637364f;
      sa[1087] = -0.22331628f;
      sa[1088] = -0.20721357f;
      sa[1089] = 0.1348319f;
      sa[1090] = -0.21978353f;
      sa[1091] = 0.15069431f;
      sa[1092] = -0.25363243f;
      sa[1093] = -0.26519594f;
      sa[1094] = -0.021639764f;
      sa[1095] = -0.24205823f;
      sa[1096] = 0.03781361f;
      sa[1097] = -0.069250725f;
      sa[1098] = 0.0031303929f;
      sa[1099] = -0.07737736f;
      sa[1100] = -0.124131925f;
      sa[1101] = 0.15150893f;
      sa[1102] = -0.14822333f;
      sa[1103] = 0.22229677f;
      sa[1104] = -0.25883803f;
      sa[1105] = -0.1384929f;
      sa[1106] = -0.09070463f;
      sa[1107] = 0.2365383f;
      sa[1108] = -0.17761599f;
      sa[1109] = 0.27171522f;
      sa[1110] = 0.18223307f;
      sa[1111] = -0.21348281f;
      sa[1112] = 0.21717842f;
      sa[1113] = 0.3297214f;
      sa[1114] = -0.029213244f;
      sa[1115] = 0.14862855f;
      sa[1116] = -0.10452809f;
      sa[1117] = -0.20377937f;
      sa[1118] = -0.18033677f;
      sa[1119] = 0.011792653f;
      sa[1120] = 0.19537078f;
      sa[1121] = 0.04817667f;
      sa[1122] = 0.29548177f;
      sa[1123] = 0.28646457f;
      sa[1124] = -0.0018169347f;
      sa[1125] = -0.07947498f;
      sa[1126] = 0.15438716f;
      sa[1127] = 0.20262288f;
      sa[1128] = 0.016521582f;
      sa[1129] = -0.1361238f;
      sa[1130] = 0.2600701f;
      sa[1131] = 0.32258868f;
      sa[1132] = -0.18315908f;
      sa[1133] = -0.19068019f;
      sa[1134] = 0.29910466f;
      sa[1135] = -0.45044243f;
      sa[1136] = -0.021443922f;
      sa[1137] = 0.21642752f;
      sa[1138] = -0.0027187113f;
      sa[1139] = 0.1863815f;
      sa[1140] = 0.19957688f;
      sa[1141] = -0.23832388f;
      sa[1142] = 0.06869329f;
      sa[1143] = -0.0914698f;
      sa[1144] = -0.35099956f;
      sa[1145] = 0.09026536f;
      sa[1146] = 0.1403022f;
      sa[1147] = -0.14571859f;
      sa[1148] = 0.0025560674f;
      sa[1149] = -0.016490709f;
      sa[1150] = -0.24268927f;
      sa[1151] = -0.21309566f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_05_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_05_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2319081f;
      sa[1] = -0.10231251f;
      sa[2] = -0.5766754f;
      sa[3] = -1.0298492f;
      sa[4] = 0.10376585f;
      sa[5] = 0.25743586f;
      sa[6] = 1.2868438f;
      sa[7] = -0.75952816f;
      sa[8] = -0.9431679f;
      sa[9] = 0.76951164f;
      sa[10] = -0.12205388f;
      sa[11] = 0.41023836f;
      sa[12] = 0.15308017f;
      sa[13] = -0.034265824f;
      sa[14] = -1.34371f;
      sa[15] = 1.1501453f;
      sa[16] = 1.586947f;
      sa[17] = -0.49228117f;
      sa[18] = 0.047700904f;
      sa[19] = -0.43464956f;
      sa[20] = 1.1838856f;
      sa[21] = 0.048844412f;
      sa[22] = -0.95334065f;
      sa[23] = 0.7784424f;
      sa[24] = -1.3526996f;
      sa[25] = 0.47320822f;
      sa[26] = -0.25855762f;
      sa[27] = 1.5432066f;
      sa[28] = -1.3696468f;
      sa[29] = -0.42835364f;
      sa[30] = 0.4737522f;
      sa[31] = -0.61614054f;
      sa[32] = -1.1857637f;
      sa[33] = -1.5366209f;
      sa[34] = 0.03739027f;
      sa[35] = 1.3769711f;
      sa[36] = -0.3243999f;
      sa[37] = -0.03684642f;
      sa[38] = 0.21715069f;
      sa[39] = 0.7673261f;
      sa[40] = -0.7618993f;
      sa[41] = -1.3479198f;
      sa[42] = -1.0741843f;
      sa[43] = -1.4674292f;
      sa[44] = -0.041676417f;
      sa[45] = -1.3944252f;
      sa[46] = 1.1583941f;
      sa[47] = 1.3022269f;
      sa[48] = -1.3419179f;
      sa[49] = -1.1165493f;
      sa[50] = 0.42445594f;
      sa[51] = -0.34566972f;
      sa[52] = 0.7925889f;
      sa[53] = 0.8981384f;
      sa[54] = -0.20984061f;
      sa[55] = 1.1413792f;
      sa[56] = -1.0881413f;
      sa[57] = -1.1460861f;
      sa[58] = 0.13599297f;
      sa[59] = -0.26191223f;
      sa[60] = 1.4073211f;
      sa[61] = -0.67243314f;
      sa[62] = -0.38496238f;
      sa[63] = 0.6989828f;
      sa[64] = 1.5369992f;
      sa[65] = -0.61573386f;
      sa[66] = 0.65779954f;
      sa[67] = 1.6216997f;
      sa[68] = 0.74577105f;
      sa[69] = -1.0855345f;
      sa[70] = -1.7307564f;
      sa[71] = -0.41621238f;
      sa[72] = -1.3059363f;
      sa[73] = 1.032568f;
      sa[74] = 1.2490159f;
      sa[75] = -0.07850495f;
      sa[76] = 1.0030086f;
      sa[77] = 0.59896976f;
      sa[78] = -1.2546613f;
      sa[79] = 0.9605106f;
      sa[80] = -0.79892564f;
      sa[81] = 0.30595037f;
      sa[82] = 0.7798023f;
      sa[83] = -0.6834579f;
      sa[84] = -1.6575176f;
      sa[85] = -1.3193461f;
      sa[86] = 0.17440408f;
      sa[87] = 1.2498808f;
      sa[88] = -1.5439105f;
      sa[89] = -0.5311298f;
      sa[90] = -1.0438306f;
      sa[91] = 1.5102214f;
      sa[92] = -0.33071786f;
      sa[93] = 0.2432245f;
      sa[94] = -1.6103519f;
      sa[95] = -0.30825284f;
      sa[96] = -1.2537651f;
      sa[97] = 0.17621751f;
      sa[98] = -0.1037924f;
      sa[99] = 0.28946084f;
      sa[100] = -1.3402289f;
      sa[101] = -0.46627697f;
      sa[102] = 1.2638859f;
      sa[103] = 0.09894132f;
      sa[104] = -0.16393578f;
      sa[105] = -0.62270206f;
      sa[106] = 1.482827f;
      sa[107] = 1.1872593f;
      sa[108] = 0.7082959f;
      sa[109] = 0.09631334f;
      sa[110] = 0.6729962f;
      sa[111] = -0.7949645f;
      sa[112] = -1.1605641f;
      sa[113] = 0.21078736f;
      sa[114] = 0.17538086f;
      sa[115] = -0.35459623f;
      sa[116] = 1.1780382f;
      sa[117] = 0.0024858597f;
      sa[118] = -1.3800963f;
      sa[119] = -0.9066581f;
      sa[120] = -0.33941072f;
      sa[121] = 1.0802968f;
      sa[122] = -0.08929648f;
      sa[123] = 0.34775105f;
      sa[124] = -0.7998296f;
      sa[125] = 0.8085766f;
      sa[126] = -0.9568266f;
      sa[127] = 0.42965934f;
      sa[128] = -0.8447602f;
      sa[129] = 0.72831804f;
      sa[130] = -0.3119447f;
      sa[131] = 0.94358385f;
      sa[132] = 0.48525777f;
      sa[133] = 0.6382764f;
      sa[134] = 0.19168198f;
      sa[135] = -1.1348895f;
      sa[136] = 0.557678f;
      sa[137] = -0.6706747f;
      sa[138] = -0.41055882f;
      sa[139] = 1.1979997f;
      sa[140] = -0.44113547f;
      sa[141] = 0.029073298f;
      sa[142] = 0.32773566f;
      sa[143] = -0.7741664f;
      sa[144] = 0.99886894f;
      sa[145] = -0.8023158f;
      sa[146] = 0.019161513f;
      sa[147] = -0.21732801f;
      sa[148] = -0.83525074f;
      sa[149] = 1.0991732f;
      sa[150] = -1.242066f;
      sa[151] = -1.5248657f;
      sa[152] = 1.6299117f;
      sa[153] = -0.5694656f;
      sa[154] = 1.3827648f;
      sa[155] = -1.5280302f;
      sa[156] = -1.6525131f;
      sa[157] = -1.1395072f;
      sa[158] = -0.22155868f;
      sa[159] = -0.6415475f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_05 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_05_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_05_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_05_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_05_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


