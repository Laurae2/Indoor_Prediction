/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:08:05.026+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_07

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_07 > h2o_nn_32x6_ReLU_07.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_07.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_07", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_07 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_07_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_07_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_07_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_07_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_07_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_07_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_07_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_07_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_07_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_07.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_07_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_07() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-3500121204049454624L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_07_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_07_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_07_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_07_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_07_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_07_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_07_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_07_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_07_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_07_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_07_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_07_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_07_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.4140387895211023;
      sa[1] = 0.465956459454982;
      sa[2] = 0.47755702149036616;
      sa[3] = 0.5193925333641535;
      sa[4] = 0.5030834832293405;
      sa[5] = 0.5311035586347681;
      sa[6] = 0.47587409909532213;
      sa[7] = 0.4372491840184148;
      sa[8] = 0.5072761215428901;
      sa[9] = 0.47357073737757527;
      sa[10] = 0.39445737847392637;
      sa[11] = 0.5033039836958532;
      sa[12] = 0.45034523614085836;
      sa[13] = 0.3980550309673107;
      sa[14] = 0.5128324337829816;
      sa[15] = 0.5105860074752198;
      sa[16] = 0.48522966952271473;
      sa[17] = 0.5478762358407446;
      sa[18] = 0.49397637525148813;
      sa[19] = 0.5163171560446881;
      sa[20] = 0.5020442762334246;
      sa[21] = 0.4994877218303006;
      sa[22] = 0.5299180690661152;
      sa[23] = 0.5023408573863201;
      sa[24] = 0.5060496906103763;
      sa[25] = 0.4727322726747348;
      sa[26] = 0.4632746574058228;
      sa[27] = 0.45224666141571224;
      sa[28] = 0.5574042620486435;
      sa[29] = 0.46163010690883705;
      sa[30] = 0.4616539086330062;
      sa[31] = 0.5147834526733076;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_07_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_07_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_07_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.011010518757240824;
      sa[1] = 0.026218367485809423;
      sa[2] = -0.013142938771650953;
      sa[3] = -0.011323757229332458;
      sa[4] = -0.006462380692889625;
    }
  }
}
class h2o_nn_32x6_ReLU_07_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_07_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_07_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_07_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.056184184f;
      sa[1] = 0.22497626f;
      sa[2] = 0.10947567f;
      sa[3] = 0.18747836f;
      sa[4] = -0.19993325f;
      sa[5] = -0.19412276f;
      sa[6] = -0.05966399f;
      sa[7] = 0.1946539f;
      sa[8] = 0.12889397f;
      sa[9] = -0.16184881f;
      sa[10] = -0.16083084f;
      sa[11] = -0.15088746f;
      sa[12] = 0.06434234f;
      sa[13] = -0.26827958f;
      sa[14] = -0.18064526f;
      sa[15] = -0.035142753f;
      sa[16] = 0.089897096f;
      sa[17] = 0.1266032f;
      sa[18] = -0.21285848f;
      sa[19] = 0.13706894f;
      sa[20] = 0.20445909f;
      sa[21] = -0.3247217f;
      sa[22] = 0.21015939f;
      sa[23] = -0.19426748f;
      sa[24] = 0.22585356f;
      sa[25] = 0.14858283f;
      sa[26] = -0.26375255f;
      sa[27] = 0.23104028f;
      sa[28] = 0.20332323f;
      sa[29] = -0.2955979f;
      sa[30] = -0.18624114f;
      sa[31] = 0.1209812f;
      sa[32] = 0.19847386f;
      sa[33] = -0.22496802f;
      sa[34] = 0.085121505f;
      sa[35] = -0.12366102f;
      sa[36] = 0.086426325f;
      sa[37] = 0.21514453f;
      sa[38] = -0.051062588f;
      sa[39] = 0.10643045f;
      sa[40] = 0.019864814f;
      sa[41] = -0.10920491f;
      sa[42] = -0.16293661f;
      sa[43] = -0.014702237f;
      sa[44] = 0.22897445f;
      sa[45] = -0.26171106f;
      sa[46] = 0.06606419f;
      sa[47] = -0.06428867f;
      sa[48] = 0.21328044f;
      sa[49] = 0.22325724f;
      sa[50] = 0.16841988f;
      sa[51] = -0.2996308f;
      sa[52] = -0.09593242f;
      sa[53] = 0.21486536f;
      sa[54] = 0.19282012f;
      sa[55] = 0.12419295f;
      sa[56] = -0.15384588f;
      sa[57] = -0.26255202f;
      sa[58] = 0.2524288f;
      sa[59] = -0.14774318f;
      sa[60] = -0.23617831f;
      sa[61] = 0.21062349f;
      sa[62] = 0.106999904f;
      sa[63] = 0.06527181f;
      sa[64] = 0.13560845f;
      sa[65] = 0.12661956f;
      sa[66] = 0.0043064747f;
      sa[67] = 0.13197505f;
      sa[68] = -0.11346063f;
      sa[69] = 0.064134724f;
      sa[70] = -0.048802685f;
      sa[71] = 0.33936566f;
      sa[72] = -0.13256158f;
      sa[73] = 0.21741137f;
      sa[74] = -0.18827966f;
      sa[75] = 0.06517848f;
      sa[76] = -0.18897422f;
      sa[77] = -0.068603225f;
      sa[78] = -0.07165319f;
      sa[79] = 0.13545932f;
      sa[80] = -0.20601141f;
      sa[81] = -0.074691415f;
      sa[82] = -0.044596795f;
      sa[83] = 0.08123841f;
      sa[84] = -0.02048491f;
      sa[85] = -0.17776394f;
      sa[86] = 0.13261642f;
      sa[87] = 0.24094835f;
      sa[88] = 0.25537497f;
      sa[89] = 0.086928986f;
      sa[90] = -0.139826f;
      sa[91] = 0.1567376f;
      sa[92] = 0.11929639f;
      sa[93] = -0.18308978f;
      sa[94] = -0.16288361f;
      sa[95] = -0.22582695f;
      sa[96] = 0.09775673f;
      sa[97] = 0.015263282f;
      sa[98] = 0.18455659f;
      sa[99] = -0.07635437f;
      sa[100] = -0.039378047f;
      sa[101] = -0.17028418f;
      sa[102] = -0.24364309f;
      sa[103] = -0.06299302f;
      sa[104] = -0.049851242f;
      sa[105] = -0.15304188f;
      sa[106] = -0.17818373f;
      sa[107] = 0.14878526f;
      sa[108] = 0.13431145f;
      sa[109] = -0.18219005f;
      sa[110] = -0.14170934f;
      sa[111] = 0.10778299f;
      sa[112] = 0.1275147f;
      sa[113] = 0.032949887f;
      sa[114] = -0.15758072f;
      sa[115] = -0.011856251f;
      sa[116] = -0.2534413f;
      sa[117] = 0.04028263f;
      sa[118] = -0.30545816f;
      sa[119] = -0.21115941f;
      sa[120] = 0.21820413f;
      sa[121] = 0.2164594f;
      sa[122] = 0.28149736f;
      sa[123] = 0.28317544f;
      sa[124] = 0.2959133f;
      sa[125] = 0.32312834f;
      sa[126] = -0.29392764f;
      sa[127] = -0.19353703f;
      sa[128] = 0.10079313f;
      sa[129] = 0.17553338f;
      sa[130] = -0.10567553f;
      sa[131] = 0.31236884f;
      sa[132] = 0.2165855f;
      sa[133] = -0.29473838f;
      sa[134] = 0.05915609f;
      sa[135] = -0.14439398f;
      sa[136] = -0.23756382f;
      sa[137] = -1.02672864E-4f;
      sa[138] = 0.13065618f;
      sa[139] = -0.052345425f;
      sa[140] = -0.14808884f;
      sa[141] = -0.20331085f;
      sa[142] = 0.19326314f;
      sa[143] = -0.16052906f;
      sa[144] = 0.24906616f;
      sa[145] = -0.14443357f;
      sa[146] = -0.27722785f;
      sa[147] = 0.19300541f;
      sa[148] = 0.17370112f;
      sa[149] = 0.19505401f;
      sa[150] = 0.29568616f;
      sa[151] = -0.23729792f;
      sa[152] = 0.026666084f;
      sa[153] = 0.27693802f;
      sa[154] = 0.21349707f;
      sa[155] = -0.14819483f;
      sa[156] = 0.13260481f;
      sa[157] = -0.16801117f;
      sa[158] = 0.09554113f;
      sa[159] = 0.09185806f;
      sa[160] = 0.07474519f;
      sa[161] = 0.22352122f;
      sa[162] = -0.14088742f;
      sa[163] = -0.093528055f;
      sa[164] = 0.22673933f;
      sa[165] = -0.029692883f;
      sa[166] = -0.05889566f;
      sa[167] = -0.08022703f;
      sa[168] = 0.16432256f;
      sa[169] = 0.285931f;
      sa[170] = 0.042820018f;
      sa[171] = -0.045227323f;
      sa[172] = -0.058674637f;
      sa[173] = -0.14339598f;
      sa[174] = -0.013150612f;
      sa[175] = -0.23420925f;
      sa[176] = -0.02488777f;
      sa[177] = -0.012810359f;
      sa[178] = -0.051648024f;
      sa[179] = 0.108375475f;
      sa[180] = -0.06083009f;
      sa[181] = -0.2721479f;
      sa[182] = -0.10667321f;
      sa[183] = 0.058274962f;
      sa[184] = 0.28751943f;
      sa[185] = 0.18796703f;
      sa[186] = -0.2730252f;
      sa[187] = 0.099844776f;
      sa[188] = -0.033239592f;
      sa[189] = 0.18061478f;
      sa[190] = 0.06651985f;
      sa[191] = -0.032529894f;
      sa[192] = -0.122887686f;
      sa[193] = 0.23876585f;
      sa[194] = 0.090454064f;
      sa[195] = 0.26191807f;
      sa[196] = 0.25567615f;
      sa[197] = -0.03785178f;
      sa[198] = 0.13016528f;
      sa[199] = -0.0988771f;
      sa[200] = 0.011701812f;
      sa[201] = -0.27202338f;
      sa[202] = 0.12119411f;
      sa[203] = -0.022628745f;
      sa[204] = -0.13683048f;
      sa[205] = 0.25217587f;
      sa[206] = 0.2435866f;
      sa[207] = 0.17977162f;
      sa[208] = -0.2548262f;
      sa[209] = -0.07065389f;
      sa[210] = -0.25715896f;
      sa[211] = -0.24034724f;
      sa[212] = 0.2386946f;
      sa[213] = -0.23849908f;
      sa[214] = -0.14670807f;
      sa[215] = 0.04332128f;
      sa[216] = 0.09089504f;
      sa[217] = 0.13983555f;
      sa[218] = -0.1442743f;
      sa[219] = 0.23447345f;
      sa[220] = -0.22577189f;
      sa[221] = 0.025656069f;
      sa[222] = 0.2072534f;
      sa[223] = 0.036203485f;
      sa[224] = 0.095540255f;
      sa[225] = 0.25401476f;
      sa[226] = -0.19302242f;
      sa[227] = 0.30429035f;
      sa[228] = 0.10350716f;
      sa[229] = 0.07290847f;
      sa[230] = 0.23972799f;
      sa[231] = -0.25090054f;
      sa[232] = -0.23219761f;
      sa[233] = 0.050699174f;
      sa[234] = 0.15553424f;
      sa[235] = -0.28164607f;
      sa[236] = -0.046590477f;
      sa[237] = -0.22837496f;
      sa[238] = -0.21957757f;
      sa[239] = 0.12454595f;
      sa[240] = 0.02046719f;
      sa[241] = -0.19264449f;
      sa[242] = -0.06864733f;
      sa[243] = -0.22324972f;
      sa[244] = -0.20948373f;
      sa[245] = -0.13587086f;
      sa[246] = -0.26572612f;
      sa[247] = -0.06830758f;
      sa[248] = 0.2833353f;
      sa[249] = 0.26424024f;
      sa[250] = -0.21723974f;
      sa[251] = -0.13420944f;
      sa[252] = -0.2727001f;
      sa[253] = -0.24812034f;
      sa[254] = -0.2085829f;
      sa[255] = 0.19519633f;
      sa[256] = -0.19606748f;
      sa[257] = 0.23379275f;
      sa[258] = -0.2643329f;
      sa[259] = -0.12519285f;
      sa[260] = -0.21527222f;
      sa[261] = -0.09722154f;
      sa[262] = -0.14338958f;
      sa[263] = 0.25244614f;
      sa[264] = -0.16678528f;
      sa[265] = 0.030259272f;
      sa[266] = -0.28671303f;
      sa[267] = -0.23431078f;
      sa[268] = 0.14999436f;
      sa[269] = -0.16758327f;
      sa[270] = -0.04096853f;
      sa[271] = 0.17562447f;
      sa[272] = -0.1018822f;
      sa[273] = -0.1346435f;
      sa[274] = 0.09415172f;
      sa[275] = -0.01405356f;
      sa[276] = 0.091117986f;
      sa[277] = -0.23339829f;
      sa[278] = -0.13899991f;
      sa[279] = 0.18622987f;
      sa[280] = -0.17858197f;
      sa[281] = 0.25384018f;
      sa[282] = -0.115184814f;
      sa[283] = -0.049023654f;
      sa[284] = 0.043384932f;
      sa[285] = -0.13151865f;
      sa[286] = 0.2427366f;
      sa[287] = 0.13412295f;
      sa[288] = -0.18878339f;
      sa[289] = -0.13703237f;
      sa[290] = -0.034209285f;
      sa[291] = -0.028396724f;
      sa[292] = 0.12656915f;
      sa[293] = -0.095832944f;
      sa[294] = 0.06665791f;
      sa[295] = 0.124436334f;
      sa[296] = 0.21322973f;
      sa[297] = 0.20321444f;
      sa[298] = -0.0074691796f;
      sa[299] = -0.09027092f;
      sa[300] = -0.0035724025f;
      sa[301] = -0.064795814f;
      sa[302] = 0.15188377f;
      sa[303] = 0.03595409f;
      sa[304] = -0.18678187f;
      sa[305] = -0.011141946f;
      sa[306] = 0.1815481f;
      sa[307] = -0.1099437f;
      sa[308] = 0.089878984f;
      sa[309] = 0.15842278f;
      sa[310] = 0.2771019f;
      sa[311] = 0.30506316f;
      sa[312] = -0.14480406f;
      sa[313] = -0.12664749f;
      sa[314] = -0.1696837f;
      sa[315] = 0.040270936f;
      sa[316] = -0.01518187f;
      sa[317] = -0.071066f;
      sa[318] = 0.089547835f;
      sa[319] = 0.27698362f;
      sa[320] = -0.08994849f;
      sa[321] = 0.07075642f;
      sa[322] = 0.22354485f;
      sa[323] = -0.12034274f;
      sa[324] = -0.0031885195f;
      sa[325] = 0.22960898f;
      sa[326] = -0.33042583f;
      sa[327] = 0.033701655f;
      sa[328] = -0.05973022f;
      sa[329] = 0.2211081f;
      sa[330] = -0.17147769f;
      sa[331] = -0.049058586f;
      sa[332] = -0.24620686f;
      sa[333] = 0.103667796f;
      sa[334] = -0.09791675f;
      sa[335] = 0.24902828f;
      sa[336] = -0.15057603f;
      sa[337] = -0.15862516f;
      sa[338] = 0.25695726f;
      sa[339] = -0.22519845f;
      sa[340] = -0.3149062f;
      sa[341] = -0.25542644f;
      sa[342] = 0.16981922f;
      sa[343] = -0.062166624f;
      sa[344] = -0.16287798f;
      sa[345] = 0.18977077f;
      sa[346] = 0.19871226f;
      sa[347] = -0.17134859f;
      sa[348] = 0.22885682f;
      sa[349] = -0.29460976f;
      sa[350] = -0.22145416f;
      sa[351] = 0.051821105f;
      sa[352] = 0.18419911f;
      sa[353] = -0.04490434f;
      sa[354] = 0.072962366f;
      sa[355] = 0.09240026f;
      sa[356] = -0.10847416f;
      sa[357] = 0.2459039f;
      sa[358] = -0.23647167f;
      sa[359] = 0.0062291822f;
      sa[360] = 0.10292293f;
      sa[361] = -0.044837393f;
      sa[362] = -0.16518156f;
      sa[363] = 0.18483949f;
      sa[364] = -0.14077982f;
      sa[365] = -0.25015065f;
      sa[366] = -0.036414832f;
      sa[367] = -0.3156148f;
      sa[368] = -0.15676881f;
      sa[369] = 0.27968052f;
      sa[370] = -0.1989892f;
      sa[371] = 0.047377937f;
      sa[372] = -0.024736986f;
      sa[373] = 0.23843665f;
      sa[374] = -0.16179267f;
      sa[375] = -0.29187444f;
      sa[376] = -0.29669544f;
      sa[377] = -0.18369791f;
      sa[378] = 0.24885084f;
      sa[379] = 0.13901636f;
      sa[380] = -0.10161832f;
      sa[381] = -0.08214762f;
      sa[382] = -0.045054536f;
      sa[383] = -0.09143281f;
      sa[384] = -0.175181f;
      sa[385] = 0.084549166f;
      sa[386] = -0.27216724f;
      sa[387] = -0.1586533f;
      sa[388] = 0.08334718f;
      sa[389] = -0.0076193246f;
      sa[390] = -0.02372274f;
      sa[391] = -0.106885664f;
      sa[392] = 0.21046533f;
      sa[393] = 0.13065355f;
      sa[394] = 0.013166921f;
      sa[395] = 0.33163002f;
      sa[396] = 0.2801799f;
      sa[397] = -0.30293185f;
      sa[398] = 0.14220215f;
      sa[399] = 0.052882023f;
      sa[400] = 0.19108571f;
      sa[401] = 0.23083127f;
      sa[402] = -0.12792172f;
      sa[403] = 0.06587172f;
      sa[404] = 0.23207648f;
      sa[405] = -0.23758817f;
      sa[406] = -0.040705834f;
      sa[407] = 0.102474086f;
      sa[408] = -0.20054355f;
      sa[409] = -0.24407718f;
      sa[410] = -0.114040986f;
      sa[411] = 0.16039331f;
      sa[412] = -0.14868844f;
      sa[413] = 0.09857923f;
      sa[414] = 0.13132304f;
      sa[415] = 0.3298982f;
      sa[416] = -0.14988089f;
      sa[417] = 0.062268835f;
      sa[418] = 0.011392988f;
      sa[419] = 0.30036628f;
      sa[420] = 0.21770453f;
      sa[421] = 0.2893501f;
      sa[422] = 0.22582135f;
      sa[423] = 0.010622299f;
      sa[424] = 0.11934235f;
      sa[425] = -0.034751955f;
      sa[426] = -0.2672513f;
      sa[427] = 0.20731509f;
      sa[428] = -0.040517736f;
      sa[429] = -0.17881195f;
      sa[430] = 0.17905127f;
      sa[431] = -0.02671664f;
      sa[432] = -0.020146567f;
      sa[433] = 0.11783411f;
      sa[434] = 0.21217695f;
      sa[435] = 0.050466318f;
      sa[436] = -0.27556026f;
      sa[437] = -0.29026425f;
      sa[438] = -0.027911562f;
      sa[439] = -0.05463423f;
      sa[440] = 0.30057955f;
      sa[441] = -0.2816024f;
      sa[442] = 0.07929762f;
      sa[443] = 0.039490294f;
      sa[444] = -0.21846409f;
      sa[445] = 0.024135532f;
      sa[446] = 0.18963985f;
      sa[447] = 0.039729502f;
      sa[448] = 0.1772172f;
      sa[449] = 0.21999368f;
      sa[450] = -0.11999117f;
      sa[451] = 0.1289469f;
      sa[452] = 0.17756693f;
      sa[453] = -0.042628657f;
      sa[454] = -0.15412374f;
      sa[455] = -0.050454963f;
      sa[456] = -0.088219255f;
      sa[457] = 0.060347598f;
      sa[458] = -0.2370423f;
      sa[459] = 0.23225582f;
      sa[460] = 0.21089515f;
      sa[461] = 0.2629769f;
      sa[462] = 0.02546354f;
      sa[463] = 0.2032711f;
      sa[464] = -0.2657866f;
      sa[465] = 0.2175465f;
      sa[466] = 0.058659684f;
      sa[467] = 0.11342079f;
      sa[468] = 0.1072092f;
      sa[469] = 0.26858827f;
      sa[470] = 0.16614679f;
      sa[471] = 0.06577683f;
      sa[472] = -0.022646146f;
      sa[473] = -0.14746417f;
      sa[474] = -0.0486007f;
      sa[475] = 0.042392436f;
      sa[476] = 0.25178042f;
      sa[477] = -0.16367488f;
      sa[478] = 0.09441981f;
      sa[479] = -0.17009792f;
      sa[480] = -0.30100498f;
      sa[481] = -0.22551075f;
      sa[482] = -0.26610687f;
      sa[483] = 0.17633258f;
      sa[484] = 0.20448981f;
      sa[485] = 0.12105832f;
      sa[486] = -0.034969185f;
      sa[487] = -0.13521875f;
      sa[488] = -0.19926158f;
      sa[489] = 0.058640435f;
      sa[490] = -0.026204692f;
      sa[491] = -0.23678774f;
      sa[492] = 0.18343705f;
      sa[493] = 0.23734955f;
      sa[494] = -0.23135847f;
      sa[495] = 0.17475611f;
      sa[496] = -0.019551234f;
      sa[497] = 0.033125084f;
      sa[498] = 0.13556251f;
      sa[499] = 0.1282623f;
      sa[500] = -0.04849374f;
      sa[501] = 0.072250314f;
      sa[502] = 0.26235148f;
      sa[503] = 0.059863277f;
      sa[504] = -0.17645629f;
      sa[505] = -0.19073376f;
      sa[506] = 0.2577912f;
      sa[507] = -0.09853024f;
      sa[508] = 0.07442907f;
      sa[509] = 0.19312847f;
      sa[510] = 0.13684647f;
      sa[511] = 0.016842324f;
      sa[512] = 0.050886296f;
      sa[513] = -0.07824702f;
      sa[514] = 0.26796266f;
      sa[515] = -0.2632723f;
      sa[516] = 0.009976029f;
      sa[517] = 0.07231978f;
      sa[518] = 0.116980925f;
      sa[519] = -0.094967514f;
      sa[520] = 0.21138996f;
      sa[521] = 0.14109132f;
      sa[522] = 0.07705108f;
      sa[523] = 0.2204553f;
      sa[524] = 0.17342614f;
      sa[525] = 0.15191199f;
      sa[526] = -0.017308336f;
      sa[527] = -0.10628862f;
      sa[528] = 0.032499075f;
      sa[529] = 0.14796795f;
      sa[530] = -0.18941484f;
      sa[531] = 0.123327635f;
      sa[532] = 0.12618627f;
      sa[533] = 0.112987906f;
      sa[534] = 0.115357675f;
      sa[535] = -0.09937874f;
      sa[536] = 0.0681593f;
      sa[537] = -0.22910555f;
      sa[538] = 0.19655524f;
      sa[539] = 0.33677757f;
      sa[540] = -0.23992346f;
      sa[541] = -0.14724721f;
      sa[542] = -0.17289764f;
      sa[543] = -0.23019174f;
      sa[544] = 0.1395345f;
      sa[545] = 0.12589481f;
      sa[546] = 0.09817595f;
      sa[547] = 0.1763961f;
      sa[548] = 0.06544068f;
      sa[549] = 0.14551814f;
      sa[550] = -0.02511712f;
      sa[551] = -0.06691689f;
      sa[552] = 0.041062415f;
      sa[553] = -0.030516759f;
      sa[554] = -0.12694013f;
      sa[555] = -0.14124095f;
      sa[556] = -0.16155645f;
      sa[557] = -0.23402551f;
      sa[558] = -0.17806244f;
      sa[559] = 0.07077395f;
      sa[560] = -0.30934203f;
      sa[561] = -0.11497721f;
      sa[562] = 0.17572238f;
      sa[563] = -0.10217954f;
      sa[564] = 0.22158204f;
      sa[565] = 0.008256862f;
      sa[566] = 0.27911517f;
      sa[567] = -0.038835127f;
      sa[568] = -0.08688733f;
      sa[569] = 0.0016760752f;
      sa[570] = -0.022538757f;
      sa[571] = -0.0745653f;
      sa[572] = -0.10969745f;
      sa[573] = 0.1478152f;
      sa[574] = 0.20726323f;
      sa[575] = -0.27360228f;
      sa[576] = -0.082619f;
      sa[577] = 0.017551256f;
      sa[578] = 0.09542234f;
      sa[579] = -0.04803971f;
      sa[580] = 0.10466245f;
      sa[581] = -0.11222279f;
      sa[582] = 0.11282515f;
      sa[583] = 0.007916966f;
      sa[584] = 0.12640814f;
      sa[585] = 0.15453844f;
      sa[586] = -0.19613373f;
      sa[587] = -0.08523243f;
      sa[588] = 0.08326563f;
      sa[589] = 0.14205061f;
      sa[590] = 8.477213E-4f;
      sa[591] = 0.035456903f;
      sa[592] = -0.30471945f;
      sa[593] = -0.18164155f;
      sa[594] = -0.05869856f;
      sa[595] = -0.02664531f;
      sa[596] = 0.2560896f;
      sa[597] = -0.020543491f;
      sa[598] = 0.22017103f;
      sa[599] = 0.040695526f;
      sa[600] = -0.27556232f;
      sa[601] = 0.23935734f;
      sa[602] = -0.050644077f;
      sa[603] = 0.25002128f;
      sa[604] = 0.2246946f;
      sa[605] = 0.16862382f;
      sa[606] = 0.20901471f;
      sa[607] = 0.06281661f;
      sa[608] = -0.017731376f;
      sa[609] = 0.08450808f;
      sa[610] = 0.112546176f;
      sa[611] = -0.09494119f;
      sa[612] = -0.07726273f;
      sa[613] = 0.06384525f;
      sa[614] = 0.01113416f;
      sa[615] = 0.0067986497f;
      sa[616] = 0.06978893f;
      sa[617] = -0.29266858f;
      sa[618] = -0.14100423f;
      sa[619] = -0.16138816f;
      sa[620] = -0.039891206f;
      sa[621] = -0.19036615f;
      sa[622] = -0.3059241f;
      sa[623] = -0.30852124f;
      sa[624] = -0.040084366f;
      sa[625] = 0.22453728f;
      sa[626] = -0.005051293f;
      sa[627] = 0.25114635f;
      sa[628] = -0.28563657f;
      sa[629] = -0.04271905f;
      sa[630] = -0.13191038f;
      sa[631] = 0.23187524f;
      sa[632] = 0.12214482f;
      sa[633] = -0.11676124f;
      sa[634] = -0.18332347f;
      sa[635] = 0.18164554f;
      sa[636] = -0.24491163f;
      sa[637] = -0.07985239f;
      sa[638] = -0.08953507f;
      sa[639] = -0.09574978f;
      sa[640] = -0.11800887f;
      sa[641] = -0.255834f;
      sa[642] = 0.18152398f;
      sa[643] = -0.28998202f;
      sa[644] = -0.07086413f;
      sa[645] = -0.19281904f;
      sa[646] = 0.32118922f;
      sa[647] = -0.22011696f;
      sa[648] = -0.04495912f;
      sa[649] = -0.030593898f;
      sa[650] = 0.048504524f;
      sa[651] = -0.13043422f;
      sa[652] = 0.076665945f;
      sa[653] = -0.1577223f;
      sa[654] = -0.1600813f;
      sa[655] = -0.14986949f;
      sa[656] = 0.08161115f;
      sa[657] = 0.16486508f;
      sa[658] = -0.25010118f;
      sa[659] = -0.24610361f;
      sa[660] = -0.23448823f;
      sa[661] = -0.114621386f;
      sa[662] = -0.2807709f;
      sa[663] = 0.1565192f;
      sa[664] = -0.17655347f;
      sa[665] = 0.29153422f;
      sa[666] = -0.014896464f;
      sa[667] = -0.24663286f;
      sa[668] = 0.26442832f;
      sa[669] = -0.1164256f;
      sa[670] = 0.13353314f;
      sa[671] = 0.052107f;
      sa[672] = -0.27696303f;
      sa[673] = 0.14235762f;
      sa[674] = 0.23299232f;
      sa[675] = -0.2581041f;
      sa[676] = -0.090399794f;
      sa[677] = -0.19844872f;
      sa[678] = 0.18390673f;
      sa[679] = -0.06632845f;
      sa[680] = 0.0488068f;
      sa[681] = 0.08276497f;
      sa[682] = 0.06926855f;
      sa[683] = -0.08633346f;
      sa[684] = -0.036667973f;
      sa[685] = 0.055408716f;
      sa[686] = -0.12907884f;
      sa[687] = -0.20244464f;
      sa[688] = -0.2861125f;
      sa[689] = -0.23332196f;
      sa[690] = -0.041562326f;
      sa[691] = 0.11087529f;
      sa[692] = -0.15851709f;
      sa[693] = -0.18101718f;
      sa[694] = 0.27418247f;
      sa[695] = -0.033969566f;
      sa[696] = -0.09198104f;
      sa[697] = -0.13466556f;
      sa[698] = -0.1715185f;
      sa[699] = 0.2904839f;
      sa[700] = 0.1669182f;
      sa[701] = 0.09845107f;
      sa[702] = 0.17430978f;
      sa[703] = -0.037465513f;
      sa[704] = -0.27294025f;
      sa[705] = -0.05488453f;
      sa[706] = -0.15024978f;
      sa[707] = 9.965232E-4f;
      sa[708] = 0.02005308f;
      sa[709] = -0.25467193f;
      sa[710] = 0.24856311f;
      sa[711] = -0.080320306f;
      sa[712] = 0.027634844f;
      sa[713] = 0.13299114f;
      sa[714] = 0.17963289f;
      sa[715] = 0.07215171f;
      sa[716] = 0.053655516f;
      sa[717] = 0.16916336f;
      sa[718] = -0.103415936f;
      sa[719] = 0.07144899f;
      sa[720] = -0.25719145f;
      sa[721] = 0.23315202f;
      sa[722] = -0.10492367f;
      sa[723] = 0.0018899142f;
      sa[724] = 0.048008937f;
      sa[725] = -0.2779876f;
      sa[726] = -0.21213478f;
      sa[727] = -0.2673476f;
      sa[728] = -0.12914015f;
      sa[729] = -0.06266289f;
      sa[730] = 0.1270594f;
      sa[731] = -0.24084531f;
      sa[732] = 0.15107132f;
      sa[733] = 0.20921019f;
      sa[734] = -0.14363502f;
      sa[735] = 0.28196973f;
      sa[736] = 0.02549369f;
      sa[737] = 0.13253976f;
      sa[738] = -0.1963707f;
      sa[739] = -0.31378192f;
      sa[740] = -0.29144716f;
      sa[741] = -0.30627707f;
      sa[742] = 0.06923059f;
      sa[743] = 0.027835697f;
      sa[744] = 0.07430555f;
      sa[745] = -0.211915f;
      sa[746] = 0.10159898f;
      sa[747] = -0.15632527f;
      sa[748] = -0.16084732f;
      sa[749] = -0.18692607f;
      sa[750] = 0.1830569f;
      sa[751] = 0.23878728f;
      sa[752] = -0.0364108f;
      sa[753] = 0.20750608f;
      sa[754] = -0.011395667f;
      sa[755] = 0.15928589f;
      sa[756] = -0.18698458f;
      sa[757] = 0.28230408f;
      sa[758] = -0.13470718f;
      sa[759] = -0.1287455f;
      sa[760] = -0.102792345f;
      sa[761] = 0.054125056f;
      sa[762] = -0.09934627f;
      sa[763] = 0.18430068f;
      sa[764] = 0.064924754f;
      sa[765] = -0.07338065f;
      sa[766] = -0.20564064f;
      sa[767] = 0.14224193f;
      sa[768] = -0.17829306f;
      sa[769] = -0.26507506f;
      sa[770] = -0.007854993f;
      sa[771] = 0.014803816f;
      sa[772] = 0.053279012f;
      sa[773] = -0.28890616f;
      sa[774] = -0.0056076194f;
      sa[775] = 0.2174153f;
      sa[776] = -0.07755266f;
      sa[777] = 0.03729877f;
      sa[778] = 0.14895104f;
      sa[779] = -0.1682673f;
      sa[780] = -1.5049073E-4f;
      sa[781] = -0.04317334f;
      sa[782] = 0.1352051f;
      sa[783] = -0.13181384f;
      sa[784] = -0.15352656f;
      sa[785] = -0.12810749f;
      sa[786] = -0.09048271f;
      sa[787] = -0.23425318f;
      sa[788] = -0.26516038f;
      sa[789] = 0.18813473f;
      sa[790] = -0.16900025f;
      sa[791] = -0.0927941f;
      sa[792] = 0.18548843f;
      sa[793] = -0.11820575f;
      sa[794] = -0.23752308f;
      sa[795] = -0.022115862f;
      sa[796] = 0.23952809f;
      sa[797] = -0.18287858f;
      sa[798] = -0.25228977f;
      sa[799] = -0.1498832f;
      sa[800] = 0.19294909f;
      sa[801] = 0.0729597f;
      sa[802] = 0.23253082f;
      sa[803] = 0.07404597f;
      sa[804] = 0.2314814f;
      sa[805] = 0.29569572f;
      sa[806] = 0.29108948f;
      sa[807] = 0.21911788f;
      sa[808] = -0.058070164f;
      sa[809] = -0.2004048f;
      sa[810] = 0.08954858f;
      sa[811] = 0.1775839f;
      sa[812] = 0.1671255f;
      sa[813] = -0.2760365f;
      sa[814] = 0.0913126f;
      sa[815] = -0.16434318f;
      sa[816] = -0.11294996f;
      sa[817] = -0.17001058f;
      sa[818] = 0.0040523317f;
      sa[819] = -0.07284124f;
      sa[820] = -0.27316764f;
      sa[821] = -0.19013026f;
      sa[822] = -0.2578296f;
      sa[823] = 0.07753762f;
      sa[824] = 0.09161946f;
      sa[825] = 0.30932736f;
      sa[826] = -0.25748643f;
      sa[827] = -0.24922557f;
      sa[828] = 0.11948411f;
      sa[829] = -0.0738184f;
      sa[830] = 0.10671298f;
      sa[831] = 0.16947594f;
      sa[832] = 0.12808916f;
      sa[833] = 0.07896829f;
      sa[834] = 0.19078971f;
      sa[835] = -0.08905745f;
      sa[836] = 0.19510046f;
      sa[837] = -0.15548179f;
      sa[838] = 0.13779198f;
      sa[839] = -0.21907255f;
      sa[840] = 0.18285313f;
      sa[841] = 0.114416756f;
      sa[842] = 0.16227543f;
      sa[843] = 0.031838942f;
      sa[844] = 0.04871787f;
      sa[845] = 0.12778321f;
      sa[846] = -0.23806499f;
      sa[847] = -0.09167107f;
      sa[848] = 0.18654494f;
      sa[849] = 0.21624362f;
      sa[850] = -0.022109434f;
      sa[851] = 0.08974583f;
      sa[852] = 0.23607033f;
      sa[853] = 0.13441154f;
      sa[854] = 0.25202706f;
      sa[855] = 0.14301115f;
      sa[856] = 0.0796419f;
      sa[857] = -0.16780627f;
      sa[858] = 0.1327215f;
      sa[859] = 0.0703387f;
      sa[860] = 0.27322757f;
      sa[861] = -0.20081882f;
      sa[862] = -0.09862278f;
      sa[863] = 0.025785431f;
      sa[864] = -0.18330587f;
      sa[865] = 0.22573797f;
      sa[866] = -0.11252647f;
      sa[867] = -0.0071135145f;
      sa[868] = -0.17498021f;
      sa[869] = 0.20102663f;
      sa[870] = -0.04380607f;
      sa[871] = 0.14883494f;
      sa[872] = 0.2501536f;
      sa[873] = -0.064171486f;
      sa[874] = -0.009043111f;
      sa[875] = -0.24826819f;
      sa[876] = -0.21924523f;
      sa[877] = -0.20940608f;
      sa[878] = 0.028580107f;
      sa[879] = 0.19024137f;
      sa[880] = -0.1220102f;
      sa[881] = -0.10207338f;
      sa[882] = 0.16327024f;
      sa[883] = 0.20858863f;
      sa[884] = -0.116402276f;
      sa[885] = -0.11415452f;
      sa[886] = 0.09915213f;
      sa[887] = -0.04699207f;
      sa[888] = -0.07039063f;
      sa[889] = 0.05214376f;
      sa[890] = -0.30895418f;
      sa[891] = 0.35540298f;
      sa[892] = 0.17365909f;
      sa[893] = 0.2656652f;
      sa[894] = 0.040786114f;
      sa[895] = 0.21473557f;
      sa[896] = -0.18884219f;
      sa[897] = 0.21507512f;
      sa[898] = -0.075997315f;
      sa[899] = 0.21417372f;
      sa[900] = -0.13496926f;
      sa[901] = 0.09742958f;
      sa[902] = -0.23630291f;
      sa[903] = -0.10469617f;
      sa[904] = 0.15984957f;
      sa[905] = 0.1477996f;
      sa[906] = -0.2570677f;
      sa[907] = -0.27668968f;
      sa[908] = -0.2334571f;
      sa[909] = 0.029500274f;
      sa[910] = 0.027145762f;
      sa[911] = -0.14021789f;
      sa[912] = -0.026059555f;
      sa[913] = 0.023400137f;
      sa[914] = -0.19865572f;
      sa[915] = 0.035996206f;
      sa[916] = 0.2106526f;
      sa[917] = -0.0022926298f;
      sa[918] = 0.17176576f;
      sa[919] = 0.0049106097f;
      sa[920] = 0.13985504f;
      sa[921] = -0.06938748f;
      sa[922] = -0.13248709f;
      sa[923] = -0.107723296f;
      sa[924] = -0.12818277f;
      sa[925] = -0.18459144f;
      sa[926] = 0.08399749f;
      sa[927] = -0.10247694f;
      sa[928] = 0.23132639f;
      sa[929] = 0.12620586f;
      sa[930] = 0.12759894f;
      sa[931] = -0.014075953f;
      sa[932] = 0.25731677f;
      sa[933] = 0.0026915069f;
      sa[934] = 0.24098927f;
      sa[935] = -0.25086245f;
      sa[936] = 0.079049215f;
      sa[937] = 0.192528f;
      sa[938] = -0.07516132f;
      sa[939] = -0.010943615f;
      sa[940] = -0.067676514f;
      sa[941] = -0.29926148f;
      sa[942] = -0.24262105f;
      sa[943] = -0.17123954f;
      sa[944] = -0.21160504f;
      sa[945] = 0.029362211f;
      sa[946] = 0.06581657f;
      sa[947] = 0.27123326f;
      sa[948] = 0.08508142f;
      sa[949] = -0.1762464f;
      sa[950] = 0.08581209f;
      sa[951] = -0.08149517f;
      sa[952] = -0.2112849f;
      sa[953] = -0.21131732f;
      sa[954] = -0.19790708f;
      sa[955] = 3.4063763E-4f;
      sa[956] = -0.028891742f;
      sa[957] = 0.01600239f;
      sa[958] = 0.07730603f;
      sa[959] = -0.16961218f;
      sa[960] = 0.35445973f;
      sa[961] = -0.120298035f;
      sa[962] = -0.009951246f;
      sa[963] = -0.033888318f;
      sa[964] = -0.17924012f;
      sa[965] = 0.23374149f;
      sa[966] = -0.0948302f;
      sa[967] = -0.27420083f;
      sa[968] = 0.12063873f;
      sa[969] = 0.06073158f;
      sa[970] = 0.24396329f;
      sa[971] = 0.0031922203f;
      sa[972] = -0.1755877f;
      sa[973] = -0.23500854f;
      sa[974] = -0.3963676f;
      sa[975] = -0.23661634f;
      sa[976] = -0.09559268f;
      sa[977] = 0.013663789f;
      sa[978] = -0.097946376f;
      sa[979] = 0.10171951f;
      sa[980] = 0.08075543f;
      sa[981] = -0.22875866f;
      sa[982] = 0.12556851f;
      sa[983] = -0.07671269f;
      sa[984] = -0.2907782f;
      sa[985] = 0.027889388f;
      sa[986] = -0.27846918f;
      sa[987] = 0.044920936f;
      sa[988] = 0.14414272f;
      sa[989] = 0.19725639f;
      sa[990] = 0.29951406f;
      sa[991] = -0.23223238f;
      sa[992] = -0.21270667f;
      sa[993] = -0.056846097f;
      sa[994] = -0.16463986f;
      sa[995] = -0.2717176f;
      sa[996] = 0.11768185f;
      sa[997] = 0.14163455f;
      sa[998] = 0.13001963f;
      sa[999] = 0.21011358f;
      sa[1000] = 0.0103751635f;
      sa[1001] = 0.21183313f;
      sa[1002] = 0.23261508f;
      sa[1003] = -0.080100164f;
      sa[1004] = 0.20673387f;
      sa[1005] = -0.20010623f;
      sa[1006] = -0.028881097f;
      sa[1007] = -0.0032786718f;
      sa[1008] = 0.18683231f;
      sa[1009] = 0.056126934f;
      sa[1010] = -0.0013875776f;
      sa[1011] = 0.2606852f;
      sa[1012] = -0.06871916f;
      sa[1013] = 0.16607633f;
      sa[1014] = 0.26961073f;
      sa[1015] = -0.23764051f;
      sa[1016] = 0.25725222f;
      sa[1017] = 0.079079896f;
      sa[1018] = -0.04259544f;
      sa[1019] = 0.07104276f;
      sa[1020] = -0.23013154f;
      sa[1021] = 0.09200947f;
      sa[1022] = 0.2421733f;
      sa[1023] = 0.09252809f;
      sa[1024] = -0.042881157f;
      sa[1025] = 0.10126067f;
      sa[1026] = 0.15444812f;
      sa[1027] = 0.21212305f;
      sa[1028] = 0.28662193f;
      sa[1029] = -0.035327353f;
      sa[1030] = -0.15978472f;
      sa[1031] = -0.024994556f;
      sa[1032] = -0.21941882f;
      sa[1033] = 0.008282283f;
      sa[1034] = -0.0316135f;
      sa[1035] = -0.25478342f;
      sa[1036] = 0.25158387f;
      sa[1037] = 0.020597847f;
      sa[1038] = -0.19879732f;
      sa[1039] = 0.2460039f;
      sa[1040] = -0.05544223f;
      sa[1041] = 0.08329221f;
      sa[1042] = -0.26881498f;
      sa[1043] = -0.01991489f;
      sa[1044] = 0.20380539f;
      sa[1045] = 0.2198301f;
      sa[1046] = -0.21158755f;
      sa[1047] = -0.19831842f;
      sa[1048] = 0.14504024f;
      sa[1049] = -0.1339129f;
      sa[1050] = 0.025402829f;
      sa[1051] = -0.19324178f;
      sa[1052] = 0.15328343f;
      sa[1053] = 0.26773685f;
      sa[1054] = 0.20898478f;
      sa[1055] = -0.07170065f;
      sa[1056] = 0.25081557f;
      sa[1057] = -0.23213007f;
      sa[1058] = 0.19715106f;
      sa[1059] = -0.17225406f;
      sa[1060] = -0.29004353f;
      sa[1061] = 0.034129422f;
      sa[1062] = 0.20577243f;
      sa[1063] = 0.0036372542f;
      sa[1064] = 0.12093011f;
      sa[1065] = -4.1312262E-4f;
      sa[1066] = 0.19074668f;
      sa[1067] = -0.2694368f;
      sa[1068] = -0.3569153f;
      sa[1069] = 0.17761222f;
      sa[1070] = 0.095322594f;
      sa[1071] = 0.19217865f;
      sa[1072] = -0.22601974f;
      sa[1073] = 0.12984943f;
      sa[1074] = 0.09899267f;
      sa[1075] = -0.15534371f;
      sa[1076] = -0.115065806f;
      sa[1077] = 0.1107566f;
      sa[1078] = 0.027480297f;
      sa[1079] = 0.042873144f;
      sa[1080] = 0.20686089f;
      sa[1081] = 0.24172257f;
      sa[1082] = -0.30503586f;
      sa[1083] = -0.18676661f;
      sa[1084] = 0.21977457f;
      sa[1085] = -0.20841804f;
      sa[1086] = -0.26165053f;
      sa[1087] = -0.23873311f;
      sa[1088] = -0.19745061f;
      sa[1089] = 0.056304537f;
      sa[1090] = -0.2281208f;
      sa[1091] = 0.16248576f;
      sa[1092] = -0.2546903f;
      sa[1093] = -0.25253037f;
      sa[1094] = 0.0019313799f;
      sa[1095] = -0.22104737f;
      sa[1096] = 0.11264379f;
      sa[1097] = -0.12995224f;
      sa[1098] = -0.012496512f;
      sa[1099] = -0.071600914f;
      sa[1100] = -0.14484602f;
      sa[1101] = 0.107211776f;
      sa[1102] = -0.15242758f;
      sa[1103] = 0.2140718f;
      sa[1104] = -0.2431812f;
      sa[1105] = -0.10521076f;
      sa[1106] = -0.10932791f;
      sa[1107] = 0.20559269f;
      sa[1108] = -0.20670393f;
      sa[1109] = 0.21751682f;
      sa[1110] = 0.16005254f;
      sa[1111] = -0.25055012f;
      sa[1112] = 0.13476272f;
      sa[1113] = 0.1922015f;
      sa[1114] = 0.08714965f;
      sa[1115] = 0.21928991f;
      sa[1116] = -0.082962915f;
      sa[1117] = -0.17520845f;
      sa[1118] = -0.15578812f;
      sa[1119] = -0.099431075f;
      sa[1120] = 0.18299682f;
      sa[1121] = 0.07006445f;
      sa[1122] = 0.2279845f;
      sa[1123] = 0.28718373f;
      sa[1124] = 0.010618234f;
      sa[1125] = -0.05996738f;
      sa[1126] = 0.22622648f;
      sa[1127] = 0.11678192f;
      sa[1128] = 0.0024615019f;
      sa[1129] = -0.114625864f;
      sa[1130] = 0.19109033f;
      sa[1131] = 0.2789678f;
      sa[1132] = -0.15489776f;
      sa[1133] = -0.16237693f;
      sa[1134] = 0.23284838f;
      sa[1135] = -0.31255785f;
      sa[1136] = -0.036930535f;
      sa[1137] = 0.18999748f;
      sa[1138] = -0.0886465f;
      sa[1139] = 0.14060287f;
      sa[1140] = 0.24727994f;
      sa[1141] = -0.2687873f;
      sa[1142] = 0.09143193f;
      sa[1143] = 0.0055048913f;
      sa[1144] = -0.2694586f;
      sa[1145] = 0.1695235f;
      sa[1146] = 0.21991557f;
      sa[1147] = -0.057751305f;
      sa[1148] = -0.0014555989f;
      sa[1149] = -0.0014400759f;
      sa[1150] = -0.2907724f;
      sa[1151] = -0.22914235f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_07_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_07_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_07_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2490326f;
      sa[1] = -0.12219406f;
      sa[2] = -0.560782f;
      sa[3] = -0.9284395f;
      sa[4] = 0.088735f;
      sa[5] = 0.23200043f;
      sa[6] = 1.220123f;
      sa[7] = -0.6613922f;
      sa[8] = -0.9279337f;
      sa[9] = 0.68647707f;
      sa[10] = -0.15888023f;
      sa[11] = 0.42081675f;
      sa[12] = 0.17891945f;
      sa[13] = 0.03416312f;
      sa[14] = -1.2666312f;
      sa[15] = 1.131367f;
      sa[16] = 1.5688299f;
      sa[17] = -0.4620325f;
      sa[18] = 0.037497584f;
      sa[19] = -0.46289077f;
      sa[20] = 1.1427256f;
      sa[21] = 0.013751773f;
      sa[22] = -1.0044053f;
      sa[23] = 0.7646002f;
      sa[24] = -1.3840728f;
      sa[25] = 0.45518407f;
      sa[26] = -0.21307223f;
      sa[27] = 1.4975605f;
      sa[28] = -1.4020649f;
      sa[29] = -0.47402844f;
      sa[30] = 0.41266626f;
      sa[31] = -0.6453531f;
      sa[32] = -1.1570089f;
      sa[33] = -1.4584582f;
      sa[34] = 0.07668579f;
      sa[35] = 1.386678f;
      sa[36] = -0.30017102f;
      sa[37] = -0.039502896f;
      sa[38] = 0.21988527f;
      sa[39] = 0.79498273f;
      sa[40] = -0.75887793f;
      sa[41] = -1.3124405f;
      sa[42] = -1.0290848f;
      sa[43] = -1.4470963f;
      sa[44] = 0.047950204f;
      sa[45] = -1.3072432f;
      sa[46] = 1.1730745f;
      sa[47] = 1.2947453f;
      sa[48] = -1.3422441f;
      sa[49] = -1.0836763f;
      sa[50] = 0.4055043f;
      sa[51] = -0.30351463f;
      sa[52] = 0.86240244f;
      sa[53] = 0.92661405f;
      sa[54] = -0.22774072f;
      sa[55] = 1.1384323f;
      sa[56] = -0.9938366f;
      sa[57] = -1.1118118f;
      sa[58] = 0.1671989f;
      sa[59] = -0.17608027f;
      sa[60] = 1.3799728f;
      sa[61] = -0.58681864f;
      sa[62] = -0.34681422f;
      sa[63] = 0.70256513f;
      sa[64] = 1.434005f;
      sa[65] = -0.6365661f;
      sa[66] = 0.5962661f;
      sa[67] = 1.5910764f;
      sa[68] = 0.71391404f;
      sa[69] = -1.0336245f;
      sa[70] = -1.5566647f;
      sa[71] = -0.41930372f;
      sa[72] = -1.2771469f;
      sa[73] = 1.1625433f;
      sa[74] = 1.3444799f;
      sa[75] = -0.113762334f;
      sa[76] = 0.9022861f;
      sa[77] = 0.49103802f;
      sa[78] = -1.2874392f;
      sa[79] = 0.9713085f;
      sa[80] = -0.7846194f;
      sa[81] = 0.2808274f;
      sa[82] = 0.81809914f;
      sa[83] = -0.62988377f;
      sa[84] = -1.5983188f;
      sa[85] = -1.2924088f;
      sa[86] = 0.25108126f;
      sa[87] = 1.2280273f;
      sa[88] = -1.546346f;
      sa[89] = -0.50285274f;
      sa[90] = -1.0496601f;
      sa[91] = 1.5189551f;
      sa[92] = -0.32063368f;
      sa[93] = 0.2699116f;
      sa[94] = -1.5242515f;
      sa[95] = -0.23281382f;
      sa[96] = -1.103349f;
      sa[97] = 0.16334337f;
      sa[98] = -0.074485235f;
      sa[99] = 0.31229982f;
      sa[100] = -1.2593036f;
      sa[101] = -0.42254516f;
      sa[102] = 1.2624035f;
      sa[103] = 0.020635225f;
      sa[104] = -0.17004485f;
      sa[105] = -0.6090958f;
      sa[106] = 1.4178721f;
      sa[107] = 1.18813f;
      sa[108] = 0.73936284f;
      sa[109] = 0.11885212f;
      sa[110] = 0.6904506f;
      sa[111] = -0.76573294f;
      sa[112] = -1.1233472f;
      sa[113] = 0.1716958f;
      sa[114] = 0.18739021f;
      sa[115] = -0.33158985f;
      sa[116] = 1.1587172f;
      sa[117] = 0.055053208f;
      sa[118] = -1.3101296f;
      sa[119] = -0.7879634f;
      sa[120] = -0.31223723f;
      sa[121] = 1.080951f;
      sa[122] = -0.079437055f;
      sa[123] = 0.3347673f;
      sa[124] = -0.7255272f;
      sa[125] = 0.7783473f;
      sa[126] = -0.9646815f;
      sa[127] = 0.43759176f;
      sa[128] = -0.8770149f;
      sa[129] = 0.759817f;
      sa[130] = -0.38568625f;
      sa[131] = 0.87687474f;
      sa[132] = 0.45127574f;
      sa[133] = 0.61505944f;
      sa[134] = 0.56811965f;
      sa[135] = -1.1091982f;
      sa[136] = 0.5320699f;
      sa[137] = -0.6861761f;
      sa[138] = -0.1415153f;
      sa[139] = 1.1869283f;
      sa[140] = -0.44602478f;
      sa[141] = -0.00811264f;
      sa[142] = 0.30066007f;
      sa[143] = -0.7935417f;
      sa[144] = 0.99141383f;
      sa[145] = -0.7846032f;
      sa[146] = 0.053256437f;
      sa[147] = -0.33780277f;
      sa[148] = -0.84204847f;
      sa[149] = 1.002306f;
      sa[150] = -1.1480212f;
      sa[151] = -1.5502566f;
      sa[152] = 1.5926605f;
      sa[153] = -0.6329417f;
      sa[154] = 1.2940315f;
      sa[155] = -1.5299774f;
      sa[156] = -1.4624039f;
      sa[157] = -1.1053022f;
      sa[158] = -0.23137121f;
      sa[159] = -0.6435493f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_07 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_07_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_07_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_07_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_07_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_07_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


