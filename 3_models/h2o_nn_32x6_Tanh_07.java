/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:08:06.652+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_07

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_07 > h2o_nn_32x6_Tanh_07.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_07.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_07", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_07 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_07_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_07_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_07_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_07_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_07_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_07_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_07_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_07_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_07_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_07.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_07_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_07() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(2427391668484970144L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_07_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_07_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_07_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_07_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_07_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_07_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_07_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_07_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_07_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.034784348772678865;
      sa[1] = 0.034098701270808746;
      sa[2] = -0.0518483113961627;
      sa[3] = -0.09787636467985905;
      sa[4] = -0.0472901831935279;
      sa[5] = 0.01903262008825394;
      sa[6] = 0.020421864540210184;
      sa[7] = -0.002615210932967865;
      sa[8] = 0.011461724659694217;
      sa[9] = 0.02016912559223987;
      sa[10] = 0.0034089709394165744;
      sa[11] = 0.02460105162737339;
      sa[12] = 0.031481280934868704;
      sa[13] = -0.04700297995030151;
      sa[14] = -0.0727086129725904;
      sa[15] = 8.305206265177661E-4;
      sa[16] = 0.038123052013442536;
      sa[17] = 0.025908175772352163;
      sa[18] = -0.045204197664894856;
      sa[19] = 0.022176120176622693;
      sa[20] = 0.08751435806231904;
      sa[21] = -0.010278876760811611;
      sa[22] = -0.016765487456606887;
      sa[23] = 0.08760257990314897;
      sa[24] = -0.05384087033448802;
      sa[25] = 0.07257636123551012;
      sa[26] = -0.026620595550511536;
      sa[27] = 0.0653887807797781;
      sa[28] = -0.008001870227942357;
      sa[29] = 0.030548637478689272;
      sa[30] = 0.029705020306614056;
      sa[31] = 0.057281244631800204;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_07_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_07_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.04662355694031533;
      sa[1] = -0.021657980608170115;
      sa[2] = -0.04121986899568808;
      sa[3] = 0.029017617878389794;
      sa[4] = -0.050022338564518;
    }
  }
}
class h2o_nn_32x6_Tanh_07_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_07_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_07_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.045003965f;
      sa[1] = 0.17309543f;
      sa[2] = 0.053687688f;
      sa[3] = 0.19453546f;
      sa[4] = -0.17266224f;
      sa[5] = -0.17088194f;
      sa[6] = -0.022897806f;
      sa[7] = 0.18316832f;
      sa[8] = 0.12495942f;
      sa[9] = -0.18440068f;
      sa[10] = -0.17148936f;
      sa[11] = -0.13376573f;
      sa[12] = 0.07999133f;
      sa[13] = -0.24933961f;
      sa[14] = -0.15182725f;
      sa[15] = -0.03390906f;
      sa[16] = 0.06515108f;
      sa[17] = 0.11579567f;
      sa[18] = -0.19044809f;
      sa[19] = 0.14615825f;
      sa[20] = 0.21573812f;
      sa[21] = -0.311278f;
      sa[22] = 0.23338886f;
      sa[23] = -0.19415322f;
      sa[24] = 0.19806434f;
      sa[25] = 0.13268843f;
      sa[26] = -0.238882f;
      sa[27] = 0.2011491f;
      sa[28] = 0.21240528f;
      sa[29] = -0.2946445f;
      sa[30] = -0.18050301f;
      sa[31] = 0.11764205f;
      sa[32] = 0.21926418f;
      sa[33] = -0.2048132f;
      sa[34] = 0.09379523f;
      sa[35] = -0.14555271f;
      sa[36] = 0.07885117f;
      sa[37] = 0.22065358f;
      sa[38] = -0.048500262f;
      sa[39] = 0.09918763f;
      sa[40] = 0.044081517f;
      sa[41] = -0.08903389f;
      sa[42] = -0.13870454f;
      sa[43] = 0.013293363f;
      sa[44] = 0.22298577f;
      sa[45] = -0.26772538f;
      sa[46] = 0.08756701f;
      sa[47] = -0.042689353f;
      sa[48] = 0.2273061f;
      sa[49] = 0.23140277f;
      sa[50] = 0.18778662f;
      sa[51] = -0.2865506f;
      sa[52] = -0.11475091f;
      sa[53] = 0.21899556f;
      sa[54] = 0.2048172f;
      sa[55] = 0.12014165f;
      sa[56] = -0.13405354f;
      sa[57] = -0.24191548f;
      sa[58] = 0.27293178f;
      sa[59] = -0.1386833f;
      sa[60] = -0.21052402f;
      sa[61] = 0.22925852f;
      sa[62] = 0.11956571f;
      sa[63] = 0.05689364f;
      sa[64] = 0.15448938f;
      sa[65] = 0.1477857f;
      sa[66] = 0.02271121f;
      sa[67] = 0.14727396f;
      sa[68] = -0.1108492f;
      sa[69] = 0.072375864f;
      sa[70] = -0.049710717f;
      sa[71] = 0.32813975f;
      sa[72] = -0.13204108f;
      sa[73] = 0.23264721f;
      sa[74] = -0.19763577f;
      sa[75] = 0.07473395f;
      sa[76] = -0.20883022f;
      sa[77] = -0.09233676f;
      sa[78] = -0.09063444f;
      sa[79] = 0.1178849f;
      sa[80] = -0.20243037f;
      sa[81] = -0.04462853f;
      sa[82] = -0.040894788f;
      sa[83] = 0.09597704f;
      sa[84] = -0.01943112f;
      sa[85] = -0.18581489f;
      sa[86] = 0.12472026f;
      sa[87] = 0.23756216f;
      sa[88] = 0.2440401f;
      sa[89] = 0.10159438f;
      sa[90] = -0.14357463f;
      sa[91] = 0.1438955f;
      sa[92] = 0.1106472f;
      sa[93] = -0.19482249f;
      sa[94] = -0.16985738f;
      sa[95] = -0.23951249f;
      sa[96] = 0.08961617f;
      sa[97] = 0.009623956f;
      sa[98] = 0.17419781f;
      sa[99] = -0.10509817f;
      sa[100] = -0.045835968f;
      sa[101] = -0.18889312f;
      sa[102] = -0.25701016f;
      sa[103] = -0.079289936f;
      sa[104] = -0.033524357f;
      sa[105] = -0.14562021f;
      sa[106] = -0.16923396f;
      sa[107] = 0.165263f;
      sa[108] = 0.14422894f;
      sa[109] = -0.16731654f;
      sa[110] = -0.14982523f;
      sa[111] = 0.11571027f;
      sa[112] = 0.08366237f;
      sa[113] = 3.462758E-4f;
      sa[114] = -0.1880702f;
      sa[115] = -0.05208942f;
      sa[116] = -0.24321648f;
      sa[117] = 0.044520423f;
      sa[118] = -0.27430767f;
      sa[119] = -0.21189395f;
      sa[120] = 0.18812016f;
      sa[121] = 0.18604977f;
      sa[122] = 0.25198016f;
      sa[123] = 0.24973898f;
      sa[124] = 0.2878665f;
      sa[125] = 0.3244432f;
      sa[126] = -0.2913139f;
      sa[127] = -0.20722058f;
      sa[128] = 0.06397518f;
      sa[129] = 0.13293242f;
      sa[130] = -0.13871577f;
      sa[131] = 0.28131276f;
      sa[132] = 0.19016655f;
      sa[133] = -0.30418307f;
      sa[134] = 0.043218862f;
      sa[135] = -0.10244473f;
      sa[136] = -0.2656308f;
      sa[137] = -0.040694475f;
      sa[138] = 0.094679214f;
      sa[139] = -0.072872385f;
      sa[140] = -0.13537379f;
      sa[141] = -0.20899396f;
      sa[142] = 0.20099652f;
      sa[143] = -0.15093067f;
      sa[144] = 0.2436256f;
      sa[145] = -0.15580454f;
      sa[146] = -0.31520832f;
      sa[147] = 0.20022686f;
      sa[148] = 0.15549293f;
      sa[149] = 0.1807672f;
      sa[150] = 0.2790698f;
      sa[151] = -0.26223022f;
      sa[152] = 0.022249773f;
      sa[153] = 0.27591062f;
      sa[154] = 0.19999151f;
      sa[155] = -0.13978845f;
      sa[156] = 0.121411376f;
      sa[157] = -0.18056273f;
      sa[158] = 0.08053392f;
      sa[159] = 0.074889526f;
      sa[160] = 0.07015262f;
      sa[161] = 0.22730465f;
      sa[162] = -0.13609965f;
      sa[163] = -0.0941619f;
      sa[164] = 0.21254608f;
      sa[165] = -0.044491034f;
      sa[166] = -0.07300908f;
      sa[167] = -0.09340934f;
      sa[168] = 0.15484095f;
      sa[169] = 0.27443826f;
      sa[170] = 0.04099872f;
      sa[171] = -0.048406985f;
      sa[172] = -0.06964497f;
      sa[173] = -0.1561447f;
      sa[174] = -0.024826135f;
      sa[175] = -0.24663332f;
      sa[176] = -0.014370905f;
      sa[177] = -0.007757885f;
      sa[178] = -0.04421067f;
      sa[179] = 0.11461204f;
      sa[180] = -0.06430522f;
      sa[181] = -0.27983093f;
      sa[182] = -0.094860144f;
      sa[183] = 0.05113991f;
      sa[184] = 0.2858705f;
      sa[185] = 0.18538052f;
      sa[186] = -0.2747238f;
      sa[187] = 0.099540435f;
      sa[188] = -0.037371453f;
      sa[189] = 0.17355838f;
      sa[190] = 0.07182941f;
      sa[191] = -0.04540614f;
      sa[192] = -0.12541969f;
      sa[193] = 0.23371863f;
      sa[194] = 0.08612302f;
      sa[195] = 0.25905153f;
      sa[196] = 0.2555892f;
      sa[197] = -0.028028123f;
      sa[198] = 0.13966417f;
      sa[199] = -0.105858795f;
      sa[200] = 0.009754241f;
      sa[201] = -0.2736504f;
      sa[202] = 0.11646213f;
      sa[203] = -0.01835883f;
      sa[204] = -0.12915635f;
      sa[205] = 0.25797376f;
      sa[206] = 0.23740263f;
      sa[207] = 0.19712809f;
      sa[208] = -0.2550662f;
      sa[209] = -0.06835339f;
      sa[210] = -0.26007184f;
      sa[211] = -0.23514009f;
      sa[212] = 0.24180746f;
      sa[213] = -0.24729763f;
      sa[214] = -0.1375914f;
      sa[215] = 0.053647477f;
      sa[216] = 0.09589351f;
      sa[217] = 0.14057545f;
      sa[218] = -0.13465212f;
      sa[219] = 0.2252148f;
      sa[220] = -0.20415165f;
      sa[221] = 0.047022395f;
      sa[222] = 0.22530247f;
      sa[223] = 0.07454571f;
      sa[224] = 0.097445324f;
      sa[225] = 0.24180049f;
      sa[226] = -0.18573463f;
      sa[227] = 0.28135785f;
      sa[228] = 0.10676228f;
      sa[229] = 0.08517484f;
      sa[230] = 0.25426176f;
      sa[231] = -0.24121319f;
      sa[232] = -0.23458555f;
      sa[233] = 0.033178315f;
      sa[234] = 0.17486197f;
      sa[235] = -0.29642f;
      sa[236] = -0.042918377f;
      sa[237] = -0.21942848f;
      sa[238] = -0.21332107f;
      sa[239] = 0.13895383f;
      sa[240] = 0.032029416f;
      sa[241] = -0.18526697f;
      sa[242] = -0.05031778f;
      sa[243] = -0.21866828f;
      sa[244] = -0.20308778f;
      sa[245] = -0.11754926f;
      sa[246] = -0.2527781f;
      sa[247] = -0.049545243f;
      sa[248] = 0.2668159f;
      sa[249] = 0.2513845f;
      sa[250] = -0.24405856f;
      sa[251] = -0.1467268f;
      sa[252] = -0.25307664f;
      sa[253] = -0.22899175f;
      sa[254] = -0.20026062f;
      sa[255] = 0.23027918f;
      sa[256] = -0.19010866f;
      sa[257] = 0.2558956f;
      sa[258] = -0.25225678f;
      sa[259] = -0.08406356f;
      sa[260] = -0.19533898f;
      sa[261] = -0.08225665f;
      sa[262] = -0.1767931f;
      sa[263] = 0.27544037f;
      sa[264] = -0.15545359f;
      sa[265] = 0.055034447f;
      sa[266] = -0.270811f;
      sa[267] = -0.19245332f;
      sa[268] = 0.18458126f;
      sa[269] = -0.1716783f;
      sa[270] = -0.052480653f;
      sa[271] = 0.09119499f;
      sa[272] = -0.09681893f;
      sa[273] = -0.13679512f;
      sa[274] = 0.09649872f;
      sa[275] = -0.04659009f;
      sa[276] = 0.04693894f;
      sa[277] = -0.2793681f;
      sa[278] = -0.15398878f;
      sa[279] = 0.16486415f;
      sa[280] = -0.16914973f;
      sa[281] = 0.25905126f;
      sa[282] = -0.09606626f;
      sa[283] = -0.028255733f;
      sa[284] = 0.0071054483f;
      sa[285] = -0.118460566f;
      sa[286] = 0.1879038f;
      sa[287] = 0.12489699f;
      sa[288] = -0.18939243f;
      sa[289] = -0.1352247f;
      sa[290] = -0.02433476f;
      sa[291] = -0.034839243f;
      sa[292] = 0.12918304f;
      sa[293] = -0.096410595f;
      sa[294] = 0.061644357f;
      sa[295] = 0.13016084f;
      sa[296] = 0.20860381f;
      sa[297] = 0.21915567f;
      sa[298] = 3.9879128E-4f;
      sa[299] = -0.098392f;
      sa[300] = -0.0025301492f;
      sa[301] = -0.065305f;
      sa[302] = 0.14942922f;
      sa[303] = 0.04009438f;
      sa[304] = -0.18594989f;
      sa[305] = -1.20857054E-4f;
      sa[306] = 0.18124503f;
      sa[307] = -0.09905409f;
      sa[308] = 0.092561334f;
      sa[309] = 0.16302931f;
      sa[310] = 0.2777847f;
      sa[311] = 0.31107986f;
      sa[312] = -0.1340574f;
      sa[313] = -0.12021643f;
      sa[314] = -0.17230745f;
      sa[315] = 0.045369066f;
      sa[316] = -0.011266547f;
      sa[317] = -0.06610628f;
      sa[318] = 0.09332216f;
      sa[319] = 0.28206033f;
      sa[320] = -0.0954945f;
      sa[321] = 0.060568787f;
      sa[322] = 0.22324343f;
      sa[323] = -0.11128032f;
      sa[324] = -0.011670674f;
      sa[325] = 0.22937511f;
      sa[326] = -0.3568538f;
      sa[327] = 0.039848167f;
      sa[328] = -0.040628906f;
      sa[329] = 0.24370089f;
      sa[330] = -0.15171644f;
      sa[331] = -0.04029056f;
      sa[332] = -0.24772793f;
      sa[333] = 0.09861843f;
      sa[334] = -0.108031265f;
      sa[335] = 0.2707153f;
      sa[336] = -0.14234479f;
      sa[337] = -0.14047307f;
      sa[338] = 0.2749271f;
      sa[339] = -0.21687569f;
      sa[340] = -0.32307947f;
      sa[341] = -0.26492068f;
      sa[342] = 0.18180862f;
      sa[343] = -0.07462781f;
      sa[344] = -0.15858541f;
      sa[345] = 0.19423203f;
      sa[346] = 0.21122347f;
      sa[347] = -0.17360698f;
      sa[348] = 0.21005836f;
      sa[349] = -0.3130361f;
      sa[350] = -0.2054996f;
      sa[351] = 0.0381574f;
      sa[352] = 0.18838617f;
      sa[353] = -0.042396106f;
      sa[354] = 0.083843194f;
      sa[355] = 0.092107765f;
      sa[356] = -0.1030338f;
      sa[357] = 0.27067855f;
      sa[358] = -0.24420917f;
      sa[359] = -0.009716379f;
      sa[360] = 0.109844446f;
      sa[361] = -0.08796845f;
      sa[362] = -0.18936397f;
      sa[363] = 0.14419723f;
      sa[364] = -0.10497327f;
      sa[365] = -0.2401456f;
      sa[366] = -0.0119832195f;
      sa[367] = -0.3114807f;
      sa[368] = -0.15392798f;
      sa[369] = 0.27420795f;
      sa[370] = -0.20651962f;
      sa[371] = 0.022529509f;
      sa[372] = 9.980885E-5f;
      sa[373] = 0.25790924f;
      sa[374] = -0.13421462f;
      sa[375] = -0.27652436f;
      sa[376] = -0.30457434f;
      sa[377] = -0.20182587f;
      sa[378] = 0.25624794f;
      sa[379] = 0.18991342f;
      sa[380] = -0.07044965f;
      sa[381] = -0.035064768f;
      sa[382] = 0.0011645879f;
      sa[383] = -0.052588675f;
      sa[384] = -0.18577424f;
      sa[385] = 0.0648788f;
      sa[386] = -0.25912657f;
      sa[387] = -0.19612244f;
      sa[388] = 0.1085873f;
      sa[389] = 0.030457076f;
      sa[390] = -0.0035354113f;
      sa[391] = -0.082174845f;
      sa[392] = 0.17868741f;
      sa[393] = 0.10282894f;
      sa[394] = 0.076114506f;
      sa[395] = 0.3204796f;
      sa[396] = 0.2797985f;
      sa[397] = -0.3069384f;
      sa[398] = 0.16068576f;
      sa[399] = 0.04506719f;
      sa[400] = 0.20155829f;
      sa[401] = 0.22643927f;
      sa[402] = -0.119229056f;
      sa[403] = 0.06563186f;
      sa[404] = 0.23029567f;
      sa[405] = -0.25159112f;
      sa[406] = -0.011401599f;
      sa[407] = 0.10091061f;
      sa[408] = -0.19673358f;
      sa[409] = -0.24759567f;
      sa[410] = -0.10744215f;
      sa[411] = 0.15911719f;
      sa[412] = -0.17464797f;
      sa[413] = 0.09525415f;
      sa[414] = 0.13677323f;
      sa[415] = 0.34124902f;
      sa[416] = -0.14345537f;
      sa[417] = 0.06660952f;
      sa[418] = 0.020686204f;
      sa[419] = 0.3054929f;
      sa[420] = 0.23134388f;
      sa[421] = 0.30442673f;
      sa[422] = 0.22841235f;
      sa[423] = -6.590671E-4f;
      sa[424] = 0.12515788f;
      sa[425] = -0.030065266f;
      sa[426] = -0.2643718f;
      sa[427] = 0.20992896f;
      sa[428] = -0.034195766f;
      sa[429] = -0.16842066f;
      sa[430] = 0.19583659f;
      sa[431] = -0.039788123f;
      sa[432] = -0.021381171f;
      sa[433] = 0.119186886f;
      sa[434] = 0.21153423f;
      sa[435] = 0.034635745f;
      sa[436] = -0.24042328f;
      sa[437] = -0.24954091f;
      sa[438] = 0.0059544127f;
      sa[439] = -0.019390725f;
      sa[440] = 0.30259946f;
      sa[441] = -0.26973626f;
      sa[442] = 0.08130628f;
      sa[443] = 0.029032528f;
      sa[444] = -0.2020984f;
      sa[445] = 0.05129313f;
      sa[446] = 0.21855663f;
      sa[447] = 0.06845073f;
      sa[448] = 0.17628086f;
      sa[449] = 0.22772571f;
      sa[450] = -0.115470774f;
      sa[451] = 0.13224846f;
      sa[452] = 0.19346344f;
      sa[453] = -0.019552026f;
      sa[454] = -0.13202398f;
      sa[455] = -0.034887545f;
      sa[456] = -0.0839054f;
      sa[457] = 0.06993531f;
      sa[458] = -0.22372013f;
      sa[459] = 0.2298482f;
      sa[460] = 0.22976351f;
      sa[461] = 0.28957775f;
      sa[462] = 0.054551713f;
      sa[463] = 0.22052969f;
      sa[464] = -0.2859182f;
      sa[465] = 0.20456317f;
      sa[466] = 0.060674597f;
      sa[467] = 0.1202835f;
      sa[468] = 0.10396263f;
      sa[469] = 0.23384972f;
      sa[470] = 0.12606147f;
      sa[471] = 0.039395556f;
      sa[472] = 0.0071233576f;
      sa[473] = -0.13001636f;
      sa[474] = -0.017258635f;
      sa[475] = 0.028737228f;
      sa[476] = 0.2535775f;
      sa[477] = -0.18348439f;
      sa[478] = 0.0861065f;
      sa[479] = -0.16586478f;
      sa[480] = -0.28586876f;
      sa[481] = -0.2168359f;
      sa[482] = -0.25209686f;
      sa[483] = 0.17287233f;
      sa[484] = 0.17839713f;
      sa[485] = 0.103130706f;
      sa[486] = -0.026301103f;
      sa[487] = -0.08952564f;
      sa[488] = -0.17523833f;
      sa[489] = 0.09451056f;
      sa[490] = 0.0063010114f;
      sa[491] = -0.20538549f;
      sa[492] = 0.16193841f;
      sa[493] = 0.21758969f;
      sa[494] = -0.21937488f;
      sa[495] = 0.12791947f;
      sa[496] = -0.0031260443f;
      sa[497] = 0.05652382f;
      sa[498] = 0.14396746f;
      sa[499] = 0.13384414f;
      sa[500] = -0.05273367f;
      sa[501] = 0.049877442f;
      sa[502] = 0.30762628f;
      sa[503] = 0.047787223f;
      sa[504] = -0.16734363f;
      sa[505] = -0.1790743f;
      sa[506] = 0.25939488f;
      sa[507] = -0.07894634f;
      sa[508] = 0.040328037f;
      sa[509] = 0.17246565f;
      sa[510] = 0.114354566f;
      sa[511] = 0.0040459456f;
      sa[512] = 0.05636421f;
      sa[513] = -0.07327901f;
      sa[514] = 0.27130428f;
      sa[515] = -0.26709753f;
      sa[516] = -0.009277879f;
      sa[517] = 0.051968496f;
      sa[518] = 0.094230235f;
      sa[519] = -0.10621171f;
      sa[520] = 0.22670388f;
      sa[521] = 0.13015954f;
      sa[522] = 0.07215316f;
      sa[523] = 0.17692633f;
      sa[524] = 0.15281439f;
      sa[525] = 0.12253794f;
      sa[526] = -0.044755973f;
      sa[527] = -0.12623851f;
      sa[528] = 0.03793294f;
      sa[529] = 0.14753447f;
      sa[530] = -0.1983171f;
      sa[531] = 0.15470724f;
      sa[532] = 0.10811376f;
      sa[533] = 0.093420975f;
      sa[534] = 0.094581306f;
      sa[535] = -0.10265965f;
      sa[536] = 0.0633592f;
      sa[537] = -0.2395812f;
      sa[538] = 0.17168097f;
      sa[539] = 0.30708012f;
      sa[540] = -0.2420606f;
      sa[541] = -0.15526344f;
      sa[542] = -0.15484315f;
      sa[543] = -0.20630375f;
      sa[544] = 0.13352765f;
      sa[545] = 0.13698083f;
      sa[546] = 0.10807477f;
      sa[547] = 0.16504925f;
      sa[548] = 0.066415854f;
      sa[549] = 0.13706604f;
      sa[550] = -0.033671424f;
      sa[551] = -0.027090494f;
      sa[552] = 0.03995122f;
      sa[553] = -0.028337998f;
      sa[554] = -0.12446342f;
      sa[555] = -0.14581753f;
      sa[556] = -0.16304676f;
      sa[557] = -0.23968796f;
      sa[558] = -0.17425029f;
      sa[559] = 0.050916735f;
      sa[560] = -0.3179569f;
      sa[561] = -0.12402447f;
      sa[562] = 0.17353056f;
      sa[563] = -0.12101791f;
      sa[564] = 0.20209233f;
      sa[565] = -0.006198759f;
      sa[566] = 0.28170234f;
      sa[567] = -0.06083298f;
      sa[568] = -0.09634471f;
      sa[569] = -0.009613223f;
      sa[570] = -0.027181726f;
      sa[571] = -0.08989678f;
      sa[572] = -0.09436712f;
      sa[573] = 0.1780114f;
      sa[574] = 0.19258569f;
      sa[575] = -0.27453205f;
      sa[576] = -0.0959658f;
      sa[577] = 0.005560403f;
      sa[578] = 0.09014482f;
      sa[579] = -0.03925597f;
      sa[580] = 0.122858204f;
      sa[581] = -0.09608582f;
      sa[582] = 0.12552737f;
      sa[583] = 0.012570908f;
      sa[584] = 0.11905452f;
      sa[585] = 0.15133397f;
      sa[586] = -0.18216501f;
      sa[587] = -0.064796634f;
      sa[588] = 0.09634455f;
      sa[589] = 0.1578124f;
      sa[590] = 0.01622891f;
      sa[591] = 0.032221302f;
      sa[592] = -0.3222163f;
      sa[593] = -0.18807235f;
      sa[594] = -0.048591442f;
      sa[595] = -0.02022431f;
      sa[596] = 0.2530068f;
      sa[597] = -0.009726453f;
      sa[598] = 0.23465367f;
      sa[599] = 0.05627268f;
      sa[600] = -0.2708714f;
      sa[601] = 0.26512393f;
      sa[602] = -0.040315855f;
      sa[603] = 0.20889577f;
      sa[604] = 0.22954148f;
      sa[605] = 0.18104783f;
      sa[606] = 0.2236514f;
      sa[607] = 0.047362275f;
      sa[608] = 0.060824938f;
      sa[609] = 0.12593763f;
      sa[610] = 0.1079071f;
      sa[611] = -0.09607725f;
      sa[612] = -0.06990359f;
      sa[613] = 0.031799663f;
      sa[614] = 0.010287969f;
      sa[615] = 0.0016802528f;
      sa[616] = 0.0600174f;
      sa[617] = -0.31528714f;
      sa[618] = -0.15007909f;
      sa[619] = -0.20337397f;
      sa[620] = -0.035663314f;
      sa[621] = -0.21313459f;
      sa[622] = -0.30614153f;
      sa[623] = -0.31474173f;
      sa[624] = -0.04507953f;
      sa[625] = 0.2133324f;
      sa[626] = -0.010298717f;
      sa[627] = 0.2384224f;
      sa[628] = -0.29327682f;
      sa[629] = -0.08134492f;
      sa[630] = -0.14293465f;
      sa[631] = 0.26344967f;
      sa[632] = 0.12093282f;
      sa[633] = -0.12273819f;
      sa[634] = -0.18249115f;
      sa[635] = 0.18055402f;
      sa[636] = -0.23633479f;
      sa[637] = -0.07371035f;
      sa[638] = -0.101796806f;
      sa[639] = -0.114772424f;
      sa[640] = -0.12200634f;
      sa[641] = -0.2641932f;
      sa[642] = 0.17007604f;
      sa[643] = -0.30699557f;
      sa[644] = -0.07076598f;
      sa[645] = -0.21156064f;
      sa[646] = 0.38106588f;
      sa[647] = -0.24457607f;
      sa[648] = -0.0437621f;
      sa[649] = -0.023060163f;
      sa[650] = 0.033870958f;
      sa[651] = -0.11752378f;
      sa[652] = 0.057763558f;
      sa[653] = -0.17607617f;
      sa[654] = -0.17712846f;
      sa[655] = -0.17457467f;
      sa[656] = 0.08364148f;
      sa[657] = 0.17177829f;
      sa[658] = -0.2588574f;
      sa[659] = -0.23195384f;
      sa[660] = -0.24022941f;
      sa[661] = -0.1288621f;
      sa[662] = -0.2968888f;
      sa[663] = 0.14453483f;
      sa[664] = -0.1747879f;
      sa[665] = 0.2854767f;
      sa[666] = -0.02420217f;
      sa[667] = -0.25363454f;
      sa[668] = 0.25749964f;
      sa[669] = -0.12988935f;
      sa[670] = 0.12365951f;
      sa[671] = 0.035010394f;
      sa[672] = -0.2962164f;
      sa[673] = 0.12952602f;
      sa[674] = 0.2232145f;
      sa[675] = -0.2682491f;
      sa[676] = -0.099019326f;
      sa[677] = -0.21657424f;
      sa[678] = 0.16902532f;
      sa[679] = -0.081281f;
      sa[680] = 0.056886293f;
      sa[681] = 0.09971613f;
      sa[682] = 0.0739771f;
      sa[683] = -0.073773965f;
      sa[684] = -0.0326862f;
      sa[685] = 0.058096934f;
      sa[686] = -0.10021727f;
      sa[687] = -0.20937064f;
      sa[688] = -0.28305808f;
      sa[689] = -0.23169021f;
      sa[690] = -0.042361446f;
      sa[691] = 0.11859587f;
      sa[692] = -0.15778686f;
      sa[693] = -0.1815824f;
      sa[694] = 0.28472197f;
      sa[695] = -0.0445841f;
      sa[696] = -0.09257782f;
      sa[697] = -0.13434596f;
      sa[698] = -0.17244011f;
      sa[699] = 0.29270273f;
      sa[700] = 0.169218f;
      sa[701] = 0.10374843f;
      sa[702] = 0.17507781f;
      sa[703] = -0.035281327f;
      sa[704] = -0.27199057f;
      sa[705] = -0.05079807f;
      sa[706] = -0.15126164f;
      sa[707] = 0.008190146f;
      sa[708] = 0.041700955f;
      sa[709] = -0.23990853f;
      sa[710] = 0.24974847f;
      sa[711] = -0.06457756f;
      sa[712] = 0.029922567f;
      sa[713] = 0.13987145f;
      sa[714] = 0.18441911f;
      sa[715] = 0.07725826f;
      sa[716] = 0.050535012f;
      sa[717] = 0.15792388f;
      sa[718] = -0.1063847f;
      sa[719] = 0.07181936f;
      sa[720] = -0.24531488f;
      sa[721] = 0.21742444f;
      sa[722] = -0.094364785f;
      sa[723] = -0.0035379047f;
      sa[724] = 0.08358296f;
      sa[725] = -0.24470507f;
      sa[726] = -0.16670375f;
      sa[727] = -0.2302554f;
      sa[728] = -0.12034116f;
      sa[729] = -0.06881228f;
      sa[730] = 0.13884513f;
      sa[731] = -0.25704598f;
      sa[732] = 0.1667063f;
      sa[733] = 0.23840606f;
      sa[734] = -0.10812926f;
      sa[735] = 0.30254f;
      sa[736] = 0.02297353f;
      sa[737] = 0.1328766f;
      sa[738] = -0.18091245f;
      sa[739] = -0.29524696f;
      sa[740] = -0.27599144f;
      sa[741] = -0.28196877f;
      sa[742] = 0.092917785f;
      sa[743] = 0.041010574f;
      sa[744] = 0.07936055f;
      sa[745] = -0.200903f;
      sa[746] = 0.12025841f;
      sa[747] = -0.13968422f;
      sa[748] = -0.14656238f;
      sa[749] = -0.16329286f;
      sa[750] = 0.20481287f;
      sa[751] = 0.25716648f;
      sa[752] = -0.04935661f;
      sa[753] = 0.18790753f;
      sa[754] = -0.013076588f;
      sa[755] = 0.112269945f;
      sa[756] = -0.18846926f;
      sa[757] = 0.29163483f;
      sa[758] = -0.10585915f;
      sa[759] = -0.14767686f;
      sa[760] = -0.105412826f;
      sa[761] = 0.048004143f;
      sa[762] = -0.11585969f;
      sa[763] = 0.18366931f;
      sa[764] = 0.060911655f;
      sa[765] = -0.052774932f;
      sa[766] = -0.19547164f;
      sa[767] = 0.10392246f;
      sa[768] = -0.18017626f;
      sa[769] = -0.26955664f;
      sa[770] = -0.018205546f;
      sa[771] = 0.017829107f;
      sa[772] = 0.05759618f;
      sa[773] = -0.24935707f;
      sa[774] = -0.01445697f;
      sa[775] = 0.23237024f;
      sa[776] = -0.07731226f;
      sa[777] = 0.04005126f;
      sa[778] = 0.141823f;
      sa[779] = -0.15604044f;
      sa[780] = 0.027905438f;
      sa[781] = -0.025332445f;
      sa[782] = 0.12695317f;
      sa[783] = -0.109357655f;
      sa[784] = -0.1487855f;
      sa[785] = -0.115710706f;
      sa[786] = -0.08598358f;
      sa[787] = -0.22285047f;
      sa[788] = -0.27721822f;
      sa[789] = 0.15071788f;
      sa[790] = -0.17548795f;
      sa[791] = -0.07454768f;
      sa[792] = 0.18365528f;
      sa[793] = -0.11633025f;
      sa[794] = -0.26088873f;
      sa[795] = 6.4083654E-4f;
      sa[796] = 0.21446222f;
      sa[797] = -0.20032391f;
      sa[798] = -0.26853135f;
      sa[799] = -0.1842912f;
      sa[800] = 0.19305326f;
      sa[801] = 0.072731465f;
      sa[802] = 0.22104454f;
      sa[803] = 0.088322975f;
      sa[804] = 0.22612515f;
      sa[805] = 0.28921533f;
      sa[806] = 0.2791593f;
      sa[807] = 0.20724788f;
      sa[808] = -0.053275917f;
      sa[809] = -0.20916724f;
      sa[810] = 0.086206585f;
      sa[811] = 0.16328338f;
      sa[812] = 0.15671284f;
      sa[813] = -0.29507616f;
      sa[814] = 0.07929026f;
      sa[815] = -0.18725382f;
      sa[816] = -0.13771397f;
      sa[817] = -0.18586415f;
      sa[818] = -5.4234784E-4f;
      sa[819] = -0.095899805f;
      sa[820] = -0.2843036f;
      sa[821] = -0.21370474f;
      sa[822] = -0.27228224f;
      sa[823] = 0.053886447f;
      sa[824] = 0.107621625f;
      sa[825] = 0.32042742f;
      sa[826] = -0.261068f;
      sa[827] = -0.24044682f;
      sa[828] = 0.117539555f;
      sa[829] = -0.07937774f;
      sa[830] = 0.1162129f;
      sa[831] = 0.15625043f;
      sa[832] = 0.16372281f;
      sa[833] = 0.12006195f;
      sa[834] = 0.23005435f;
      sa[835] = -0.061267525f;
      sa[836] = 0.19590037f;
      sa[837] = -0.14153756f;
      sa[838] = 0.13656129f;
      sa[839] = -0.21368298f;
      sa[840] = 0.2019962f;
      sa[841] = 0.13920666f;
      sa[842] = 0.1856544f;
      sa[843] = 0.05357213f;
      sa[844] = 0.041126445f;
      sa[845] = 0.14609183f;
      sa[846] = -0.23600453f;
      sa[847] = -0.0867932f;
      sa[848] = 0.20500153f;
      sa[849] = 0.241937f;
      sa[850] = 0.0019888969f;
      sa[851] = 0.09943089f;
      sa[852] = 0.23800321f;
      sa[853] = 0.1282344f;
      sa[854] = 0.25568196f;
      sa[855] = 0.12710091f;
      sa[856] = 0.09561617f;
      sa[857] = -0.14867339f;
      sa[858] = 0.15698637f;
      sa[859] = 0.08114489f;
      sa[860] = 0.25824717f;
      sa[861] = -0.19910681f;
      sa[862] = -0.08598623f;
      sa[863] = 0.06411106f;
      sa[864] = -0.18505248f;
      sa[865] = 0.23529218f;
      sa[866] = -0.12983604f;
      sa[867] = -0.0022216104f;
      sa[868] = -0.19822368f;
      sa[869] = 0.17478725f;
      sa[870] = -0.08304105f;
      sa[871] = 0.13031942f;
      sa[872] = 0.24674648f;
      sa[873] = -0.0424935f;
      sa[874] = -0.013406075f;
      sa[875] = -0.24685806f;
      sa[876] = -0.2349766f;
      sa[877] = -0.2307911f;
      sa[878] = 0.0081473095f;
      sa[879] = 0.1711162f;
      sa[880] = -0.11865294f;
      sa[881] = -0.09386662f;
      sa[882] = 0.16040179f;
      sa[883] = 0.2063576f;
      sa[884] = -0.1323337f;
      sa[885] = -0.13535814f;
      sa[886] = 0.076280326f;
      sa[887] = -0.05551569f;
      sa[888] = -0.072054096f;
      sa[889] = 0.05317926f;
      sa[890] = -0.3146662f;
      sa[891] = 0.3535783f;
      sa[892] = 0.15959382f;
      sa[893] = 0.25112548f;
      sa[894] = 0.02412894f;
      sa[895] = 0.20800483f;
      sa[896] = -0.18263519f;
      sa[897] = 0.21542186f;
      sa[898] = -0.08721639f;
      sa[899] = 0.18879002f;
      sa[900] = -0.13135889f;
      sa[901] = 0.113615595f;
      sa[902] = -0.27665028f;
      sa[903] = -0.10934993f;
      sa[904] = 0.19900079f;
      sa[905] = 0.18201347f;
      sa[906] = -0.2176613f;
      sa[907] = -0.243712f;
      sa[908] = -0.22990052f;
      sa[909] = 0.02658761f;
      sa[910] = 0.052934293f;
      sa[911] = -0.1329881f;
      sa[912] = 3.968679E-5f;
      sa[913] = 0.04951228f;
      sa[914] = -0.16336705f;
      sa[915] = 0.056254175f;
      sa[916] = 0.18091656f;
      sa[917] = -0.006230779f;
      sa[918] = 0.18175451f;
      sa[919] = 0.0011465237f;
      sa[920] = 0.16293333f;
      sa[921] = -0.04622537f;
      sa[922] = -0.09885023f;
      sa[923] = -0.09189999f;
      sa[924] = -0.15142281f;
      sa[925] = -0.18804039f;
      sa[926] = 0.101389654f;
      sa[927] = -0.11795738f;
      sa[928] = 0.25120747f;
      sa[929] = 0.14808491f;
      sa[930] = 0.14997332f;
      sa[931] = 0.0038747082f;
      sa[932] = 0.25651807f;
      sa[933] = 0.01660115f;
      sa[934] = 0.23892877f;
      sa[935] = -0.27499902f;
      sa[936] = 0.06603358f;
      sa[937] = 0.20539023f;
      sa[938] = -0.069913365f;
      sa[939] = -0.043561272f;
      sa[940] = -0.05840831f;
      sa[941] = -0.2989316f;
      sa[942] = -0.2521845f;
      sa[943] = -0.1574314f;
      sa[944] = -0.22441657f;
      sa[945] = 0.05906196f;
      sa[946] = 0.05816426f;
      sa[947] = 0.23354734f;
      sa[948] = 0.08261823f;
      sa[949] = -0.17938966f;
      sa[950] = 0.073917516f;
      sa[951] = -0.08428423f;
      sa[952] = -0.20843673f;
      sa[953] = -0.1658816f;
      sa[954] = -0.2304869f;
      sa[955] = 0.046520155f;
      sa[956] = -0.022647262f;
      sa[957] = 0.02744324f;
      sa[958] = 0.08010096f;
      sa[959] = -0.1510004f;
      sa[960] = 0.34814167f;
      sa[961] = -0.10522727f;
      sa[962] = -0.031040402f;
      sa[963] = -0.018320955f;
      sa[964] = -0.17200725f;
      sa[965] = 0.24985027f;
      sa[966] = -0.08639683f;
      sa[967] = -0.25533223f;
      sa[968] = 0.098251745f;
      sa[969] = 0.02192605f;
      sa[970] = 0.254323f;
      sa[971] = 0.02401554f;
      sa[972] = -0.17495807f;
      sa[973] = -0.2429265f;
      sa[974] = -0.3643938f;
      sa[975] = -0.2548704f;
      sa[976] = -0.052295554f;
      sa[977] = 0.05412343f;
      sa[978] = -0.06157882f;
      sa[979] = 0.14205821f;
      sa[980] = 0.081303515f;
      sa[981] = -0.22617535f;
      sa[982] = 0.132778f;
      sa[983] = -0.077574946f;
      sa[984] = -0.2616297f;
      sa[985] = 0.06603857f;
      sa[986] = -0.23979263f;
      sa[987] = 0.08626292f;
      sa[988] = 0.13825138f;
      sa[989] = 0.19819127f;
      sa[990] = 0.29632172f;
      sa[991] = -0.22076935f;
      sa[992] = -0.1832817f;
      sa[993] = -0.017674943f;
      sa[994] = -0.12466867f;
      sa[995] = -0.2506971f;
      sa[996] = 0.119613454f;
      sa[997] = 0.14204422f;
      sa[998] = 0.14581881f;
      sa[999] = 0.18317467f;
      sa[1000] = 0.035958763f;
      sa[1001] = 0.24254343f;
      sa[1002] = 0.26524255f;
      sa[1003] = -0.06791172f;
      sa[1004] = 0.19178605f;
      sa[1005] = -0.206689f;
      sa[1006] = -0.02428181f;
      sa[1007] = 0.045793016f;
      sa[1008] = 0.19905226f;
      sa[1009] = 0.043479618f;
      sa[1010] = 0.006618909f;
      sa[1011] = 0.29617453f;
      sa[1012] = -0.0921826f;
      sa[1013] = 0.14160857f;
      sa[1014] = 0.24975982f;
      sa[1015] = -0.2607138f;
      sa[1016] = 0.27125704f;
      sa[1017] = 0.07174199f;
      sa[1018] = -0.06247607f;
      sa[1019] = 0.09131642f;
      sa[1020] = -0.24048263f;
      sa[1021] = 0.07670845f;
      sa[1022] = 0.22618902f;
      sa[1023] = 0.094355345f;
      sa[1024] = -0.036386896f;
      sa[1025] = 0.08975177f;
      sa[1026] = 0.15612893f;
      sa[1027] = 0.15887436f;
      sa[1028] = 0.27199066f;
      sa[1029] = -0.060315594f;
      sa[1030] = -0.17728813f;
      sa[1031] = -0.056425385f;
      sa[1032] = -0.22190754f;
      sa[1033] = -0.027782222f;
      sa[1034] = -0.0361457f;
      sa[1035] = -0.26316333f;
      sa[1036] = 0.23744392f;
      sa[1037] = -0.0067020706f;
      sa[1038] = -0.2176547f;
      sa[1039] = 0.2354793f;
      sa[1040] = -0.036276117f;
      sa[1041] = 0.105785444f;
      sa[1042] = -0.28351235f;
      sa[1043] = -0.027151916f;
      sa[1044] = 0.20686805f;
      sa[1045] = 0.21992207f;
      sa[1046] = -0.2317638f;
      sa[1047] = -0.20869525f;
      sa[1048] = 0.17191964f;
      sa[1049] = -0.11049755f;
      sa[1050] = 0.052877553f;
      sa[1051] = -0.1714437f;
      sa[1052] = 0.15498854f;
      sa[1053] = 0.2679052f;
      sa[1054] = 0.21548626f;
      sa[1055] = -0.07645535f;
      sa[1056] = 0.2753912f;
      sa[1057] = -0.20792267f;
      sa[1058] = 0.22561239f;
      sa[1059] = -0.1499698f;
      sa[1060] = -0.2886856f;
      sa[1061] = 0.030527063f;
      sa[1062] = 0.21871078f;
      sa[1063] = 0.0032423865f;
      sa[1064] = 0.14368849f;
      sa[1065] = 0.023020666f;
      sa[1066] = 0.21693161f;
      sa[1067] = -0.2550176f;
      sa[1068] = -0.35568354f;
      sa[1069] = 0.17239758f;
      sa[1070] = 0.10379915f;
      sa[1071] = 0.18677929f;
      sa[1072] = -0.2103217f;
      sa[1073] = 0.14806359f;
      sa[1074] = 0.11727282f;
      sa[1075] = -0.14375964f;
      sa[1076] = -0.13289595f;
      sa[1077] = 0.11112582f;
      sa[1078] = 0.034113057f;
      sa[1079] = 0.03256581f;
      sa[1080] = 0.18894817f;
      sa[1081] = 0.22413561f;
      sa[1082] = -0.29370004f;
      sa[1083] = -0.16732384f;
      sa[1084] = 0.24975069f;
      sa[1085] = -0.17268261f;
      sa[1086] = -0.2299488f;
      sa[1087] = -0.21485588f;
      sa[1088] = -0.20623545f;
      sa[1089] = 0.039093323f;
      sa[1090] = -0.23569989f;
      sa[1091] = 0.19347493f;
      sa[1092] = -0.23581919f;
      sa[1093] = -0.21961786f;
      sa[1094] = 0.026177589f;
      sa[1095] = -0.20605816f;
      sa[1096] = 0.101583935f;
      sa[1097] = -0.15124635f;
      sa[1098] = 0.010488422f;
      sa[1099] = -0.10896851f;
      sa[1100] = -0.1408336f;
      sa[1101] = 0.118727006f;
      sa[1102] = -0.1393684f;
      sa[1103] = 0.21781048f;
      sa[1104] = -0.22560671f;
      sa[1105] = -0.09832499f;
      sa[1106] = -0.0857764f;
      sa[1107] = 0.19302166f;
      sa[1108] = -0.20075811f;
      sa[1109] = 0.23009908f;
      sa[1110] = 0.18551683f;
      sa[1111] = -0.24804446f;
      sa[1112] = 0.18034169f;
      sa[1113] = 0.25989977f;
      sa[1114] = 0.032899383f;
      sa[1115] = 0.19596544f;
      sa[1116] = -0.08200267f;
      sa[1117] = -0.18527329f;
      sa[1118] = -0.13961045f;
      sa[1119] = -0.09848214f;
      sa[1120] = 0.19101526f;
      sa[1121] = 0.076015785f;
      sa[1122] = 0.24244082f;
      sa[1123] = 0.29945827f;
      sa[1124] = 0.014305716f;
      sa[1125] = -0.079097986f;
      sa[1126] = 0.2347907f;
      sa[1127] = 0.11820386f;
      sa[1128] = 0.018341748f;
      sa[1129] = -0.104158744f;
      sa[1130] = 0.21055901f;
      sa[1131] = 0.29943404f;
      sa[1132] = -0.16934645f;
      sa[1133] = -0.17771418f;
      sa[1134] = 0.2231917f;
      sa[1135] = -0.3094532f;
      sa[1136] = -0.025478669f;
      sa[1137] = 0.19890596f;
      sa[1138] = -0.07003445f;
      sa[1139] = 0.15121683f;
      sa[1140] = 0.24004155f;
      sa[1141] = -0.26685086f;
      sa[1142] = 0.0889703f;
      sa[1143] = -0.004792694f;
      sa[1144] = -0.26180795f;
      sa[1145] = 0.17499663f;
      sa[1146] = 0.2235272f;
      sa[1147] = -0.052581374f;
      sa[1148] = 0.007736608f;
      sa[1149] = 0.0027894618f;
      sa[1150] = -0.29619703f;
      sa[1151] = -0.25896958f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_07_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_07_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2220365f;
      sa[1] = -0.116531245f;
      sa[2] = -0.57217073f;
      sa[3] = -0.9229336f;
      sa[4] = 0.08391237f;
      sa[5] = 0.28554496f;
      sa[6] = 1.2842236f;
      sa[7] = -0.6383487f;
      sa[8] = -0.9113928f;
      sa[9] = 0.7373677f;
      sa[10] = -0.08923775f;
      sa[11] = 0.450258f;
      sa[12] = 0.09280369f;
      sa[13] = 0.017769538f;
      sa[14] = -1.3295816f;
      sa[15] = 1.1573558f;
      sa[16] = 1.5571438f;
      sa[17] = -0.47713217f;
      sa[18] = 0.0855482f;
      sa[19] = -0.39890954f;
      sa[20] = 1.113753f;
      sa[21] = 0.015626691f;
      sa[22] = -0.9034722f;
      sa[23] = 0.75166154f;
      sa[24] = -1.5431743f;
      sa[25] = 0.5289356f;
      sa[26] = -0.22918755f;
      sa[27] = 1.4957501f;
      sa[28] = -1.3080571f;
      sa[29] = -0.47850737f;
      sa[30] = 0.41027656f;
      sa[31] = -0.6056785f;
      sa[32] = -1.15215f;
      sa[33] = -1.4516904f;
      sa[34] = 0.099165246f;
      sa[35] = 1.3650478f;
      sa[36] = -0.30060095f;
      sa[37] = -0.032903347f;
      sa[38] = 0.27458042f;
      sa[39] = 0.8127478f;
      sa[40] = -0.8016666f;
      sa[41] = -1.2670363f;
      sa[42] = -1.0549397f;
      sa[43] = -1.5135292f;
      sa[44] = 0.06741809f;
      sa[45] = -1.3094487f;
      sa[46] = 1.1286383f;
      sa[47] = 1.1971234f;
      sa[48] = -1.3773719f;
      sa[49] = -1.1177108f;
      sa[50] = 0.3884801f;
      sa[51] = -0.28814152f;
      sa[52] = 0.86896765f;
      sa[53] = 0.90924f;
      sa[54] = -0.24633865f;
      sa[55] = 1.1112926f;
      sa[56] = -1.0011063f;
      sa[57] = -1.1500629f;
      sa[58] = 0.17043254f;
      sa[59] = -0.19928902f;
      sa[60] = 1.3763769f;
      sa[61] = -0.6078004f;
      sa[62] = -0.3463957f;
      sa[63] = 0.6972255f;
      sa[64] = 1.4332179f;
      sa[65] = -0.63478166f;
      sa[66] = 0.62411636f;
      sa[67] = 1.6096426f;
      sa[68] = 0.710144f;
      sa[69] = -1.0379514f;
      sa[70] = -1.5140038f;
      sa[71] = -0.3949239f;
      sa[72] = -1.2674186f;
      sa[73] = 1.1937265f;
      sa[74] = 1.3925859f;
      sa[75] = -0.14435367f;
      sa[76] = 0.8838338f;
      sa[77] = 0.48754206f;
      sa[78] = -1.2944499f;
      sa[79] = 0.9744991f;
      sa[80] = -0.78809994f;
      sa[81] = 0.33074093f;
      sa[82] = 0.86399746f;
      sa[83] = -0.60906506f;
      sa[84] = -1.580206f;
      sa[85] = -1.267614f;
      sa[86] = 0.26350895f;
      sa[87] = 1.203655f;
      sa[88] = -1.5486575f;
      sa[89] = -0.48225382f;
      sa[90] = -1.0267712f;
      sa[91] = 1.4734038f;
      sa[92] = -0.30406043f;
      sa[93] = 0.27102268f;
      sa[94] = -1.4923675f;
      sa[95] = -0.2497331f;
      sa[96] = -1.0708574f;
      sa[97] = 0.16478862f;
      sa[98] = -0.08059338f;
      sa[99] = 0.32093856f;
      sa[100] = -1.2498975f;
      sa[101] = -0.424854f;
      sa[102] = 1.277331f;
      sa[103] = 0.0058780136f;
      sa[104] = -0.15213792f;
      sa[105] = -0.6457953f;
      sa[106] = 1.4156061f;
      sa[107] = 1.240336f;
      sa[108] = 0.7634855f;
      sa[109] = 0.14400388f;
      sa[110] = 0.7266092f;
      sa[111] = -0.7471488f;
      sa[112] = -1.101311f;
      sa[113] = 0.2131108f;
      sa[114] = 0.18329978f;
      sa[115] = -0.320306f;
      sa[116] = 1.1567018f;
      sa[117] = 0.064305566f;
      sa[118] = -1.3186702f;
      sa[119] = -0.76432496f;
      sa[120] = -0.27741012f;
      sa[121] = 1.0686072f;
      sa[122] = -0.08224371f;
      sa[123] = 0.33594286f;
      sa[124] = -0.7344854f;
      sa[125] = 0.7960924f;
      sa[126] = -0.9904989f;
      sa[127] = 0.41877025f;
      sa[128] = -0.81618035f;
      sa[129] = 0.7501157f;
      sa[130] = -0.3667627f;
      sa[131] = 0.8634837f;
      sa[132] = 0.46419293f;
      sa[133] = 0.6559883f;
      sa[134] = 0.63993025f;
      sa[135] = -1.0901501f;
      sa[136] = 0.5148096f;
      sa[137] = -0.6424534f;
      sa[138] = -0.14046068f;
      sa[139] = 1.2123697f;
      sa[140] = -0.42231837f;
      sa[141] = 0.0531826f;
      sa[142] = 0.32021275f;
      sa[143] = -0.7740742f;
      sa[144] = 0.9857857f;
      sa[145] = -0.79643136f;
      sa[146] = 0.042556513f;
      sa[147] = -0.2992571f;
      sa[148] = -0.81922895f;
      sa[149] = 1.094945f;
      sa[150] = -1.1188154f;
      sa[151] = -1.5502049f;
      sa[152] = 1.6107559f;
      sa[153] = -0.61503017f;
      sa[154] = 1.3300306f;
      sa[155] = -1.4451882f;
      sa[156] = -1.4660256f;
      sa[157] = -1.1042796f;
      sa[158] = -0.22415958f;
      sa[159] = -0.6693071f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_07 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_07_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_07_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_07_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_07_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


