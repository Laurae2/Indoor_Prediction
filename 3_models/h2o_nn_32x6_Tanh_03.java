/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:07:06.774+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_03

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_03 > h2o_nn_32x6_Tanh_03.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_03.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_03", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_03 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_03_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_03_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_03_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_03_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_03_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_03_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_03_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_03_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_03_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_03.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_03_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.27956989247311825,0.13978494623655913,0.15053763440860216,0.27956989247311825,0.15053763440860216};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_03() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(6803990465889807960L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_03_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_03_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_03_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_03_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_03_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_03_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_03_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_03_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_03_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.024383847387211863;
      sa[1] = 0.07006169629263012;
      sa[2] = -0.010649136538064945;
      sa[3] = -0.035573147318044375;
      sa[4] = 0.02259958585918124;
      sa[5] = 0.008574000826963996;
      sa[6] = 0.028726175504878885;
      sa[7] = -0.07662055369672703;
      sa[8] = -0.032736277912476255;
      sa[9] = 0.03095020713776322;
      sa[10] = 0.01956253869549955;
      sa[11] = 0.045358276682989265;
      sa[12] = 0.002843448690780838;
      sa[13] = 0.03514045008441721;
      sa[14] = -0.07679677176332374;
      sa[15] = 0.006184223675756089;
      sa[16] = 0.052102969775833466;
      sa[17] = -0.01400283738617765;
      sa[18] = -0.053922489265591976;
      sa[19] = -0.007294257744911267;
      sa[20] = 0.03801050841534057;
      sa[21] = -0.03675963335535509;
      sa[22] = -6.434970508327262E-4;
      sa[23] = 0.04740679136858093;
      sa[24] = -0.0522149542117609;
      sa[25] = 0.05453574445280945;
      sa[26] = -0.034867221096939044;
      sa[27] = 0.0445566245770941;
      sa[28] = -0.061786322572616265;
      sa[29] = -0.016649268048992503;
      sa[30] = 0.023662010473678514;
      sa[31] = -0.013358280140380431;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_03_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_03_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.025353384615914135;
      sa[1] = -0.050435011487900305;
      sa[2] = -0.03588395711419345;
      sa[3] = -0.02412382859090931;
      sa[4] = -0.01818355960524066;
    }
  }
}
class h2o_nn_32x6_Tanh_03_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_03_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_03_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.019259628f;
      sa[1] = 0.20003168f;
      sa[2] = 0.15768631f;
      sa[3] = 0.20163733f;
      sa[4] = -0.20565218f;
      sa[5] = -0.1613569f;
      sa[6] = -0.038761076f;
      sa[7] = 0.15943193f;
      sa[8] = 0.10005532f;
      sa[9] = -0.2164885f;
      sa[10] = -0.18596366f;
      sa[11] = -0.14883275f;
      sa[12] = 0.111626014f;
      sa[13] = -0.20556462f;
      sa[14] = -0.11351466f;
      sa[15] = -0.04574775f;
      sa[16] = 0.08059958f;
      sa[17] = 0.11863631f;
      sa[18] = -0.19671704f;
      sa[19] = 0.31057754f;
      sa[20] = 0.20930226f;
      sa[21] = -0.35904226f;
      sa[22] = 0.2122465f;
      sa[23] = -0.23713586f;
      sa[24] = 0.31557655f;
      sa[25] = 0.14650245f;
      sa[26] = -0.24156792f;
      sa[27] = 0.14702353f;
      sa[28] = 0.2229397f;
      sa[29] = -0.29265833f;
      sa[30] = -0.15961711f;
      sa[31] = 0.07573415f;
      sa[32] = 0.22185634f;
      sa[33] = -0.25215125f;
      sa[34] = 0.020475492f;
      sa[35] = -0.13614713f;
      sa[36] = 0.081814244f;
      sa[37] = 0.17514619f;
      sa[38] = -0.060723912f;
      sa[39] = 0.084319524f;
      sa[40] = 0.03042995f;
      sa[41] = -0.09694674f;
      sa[42] = -0.13731828f;
      sa[43] = 0.042977635f;
      sa[44] = 0.21085888f;
      sa[45] = -0.28211805f;
      sa[46] = 0.069200955f;
      sa[47] = -0.079313554f;
      sa[48] = 0.18353803f;
      sa[49] = 0.18415709f;
      sa[50] = 0.16326223f;
      sa[51] = -0.32474464f;
      sa[52] = -0.1801928f;
      sa[53] = 0.11321287f;
      sa[54] = 0.21210775f;
      sa[55] = 0.121107005f;
      sa[56] = -0.16806833f;
      sa[57] = -0.2617726f;
      sa[58] = 0.26563355f;
      sa[59] = -0.12040265f;
      sa[60] = -0.221959f;
      sa[61] = 0.19178416f;
      sa[62] = 0.1091411f;
      sa[63] = 0.051009193f;
      sa[64] = 0.1066931f;
      sa[65] = 0.101684116f;
      sa[66] = -0.01815744f;
      sa[67] = 0.084726766f;
      sa[68] = -0.13958235f;
      sa[69] = 0.0023994062f;
      sa[70] = -0.06673402f;
      sa[71] = 0.36447138f;
      sa[72] = -0.115329914f;
      sa[73] = 0.27310297f;
      sa[74] = -0.19719294f;
      sa[75] = 0.042324647f;
      sa[76] = -0.18714665f;
      sa[77] = -0.032425784f;
      sa[78] = -0.061765667f;
      sa[79] = 0.10250953f;
      sa[80] = -0.18676125f;
      sa[81] = -0.059307445f;
      sa[82] = -0.021762747f;
      sa[83] = 0.17776753f;
      sa[84] = 0.010579824f;
      sa[85] = -0.123509176f;
      sa[86] = 0.16087085f;
      sa[87] = 0.25567392f;
      sa[88] = 0.27942446f;
      sa[89] = 0.11211151f;
      sa[90] = -0.1672299f;
      sa[91] = 0.15739867f;
      sa[92] = 0.12591507f;
      sa[93] = -0.18407457f;
      sa[94] = -0.16847976f;
      sa[95] = -0.26726165f;
      sa[96] = 0.11162342f;
      sa[97] = 0.023714248f;
      sa[98] = 0.15917839f;
      sa[99] = -0.1005154f;
      sa[100] = -0.006755255f;
      sa[101] = -0.14542042f;
      sa[102] = -0.1931645f;
      sa[103] = -0.043317735f;
      sa[104] = -0.035068776f;
      sa[105] = -0.17770508f;
      sa[106] = -0.15139517f;
      sa[107] = 0.17071909f;
      sa[108] = 0.21241869f;
      sa[109] = -0.13329108f;
      sa[110] = -0.17794459f;
      sa[111] = 0.090513766f;
      sa[112] = 0.13793404f;
      sa[113] = 0.0565489f;
      sa[114] = -0.14946759f;
      sa[115] = -0.019487683f;
      sa[116] = -0.21250333f;
      sa[117] = 0.040260993f;
      sa[118] = -0.20986049f;
      sa[119] = -0.13848725f;
      sa[120] = 0.2064796f;
      sa[121] = 0.2387148f;
      sa[122] = 0.28041223f;
      sa[123] = 0.28474414f;
      sa[124] = 0.31216463f;
      sa[125] = 0.3373693f;
      sa[126] = -0.32469004f;
      sa[127] = -0.22633414f;
      sa[128] = 0.08061273f;
      sa[129] = 0.17791787f;
      sa[130] = -0.117411084f;
      sa[131] = 0.3003752f;
      sa[132] = 0.14399986f;
      sa[133] = -0.24886565f;
      sa[134] = 0.038246583f;
      sa[135] = -0.094070315f;
      sa[136] = -0.2357144f;
      sa[137] = 0.006290912f;
      sa[138] = 0.14685906f;
      sa[139] = -0.03581098f;
      sa[140] = -0.118596636f;
      sa[141] = -0.16361699f;
      sa[142] = 0.22607832f;
      sa[143] = -0.22007361f;
      sa[144] = 0.14473191f;
      sa[145] = -0.0952368f;
      sa[146] = -0.22906338f;
      sa[147] = 0.11627186f;
      sa[148] = 0.16296498f;
      sa[149] = 0.22427666f;
      sa[150] = 0.30504948f;
      sa[151] = -0.20441692f;
      sa[152] = -0.01683978f;
      sa[153] = 0.26139012f;
      sa[154] = 0.26695925f;
      sa[155] = -0.15636864f;
      sa[156] = 0.1574983f;
      sa[157] = -0.12310552f;
      sa[158] = 0.12333791f;
      sa[159] = 0.15494052f;
      sa[160] = 0.14407118f;
      sa[161] = 0.27132395f;
      sa[162] = -0.20653774f;
      sa[163] = 0.074404456f;
      sa[164] = 0.21234415f;
      sa[165] = -0.060575f;
      sa[166] = -0.07336187f;
      sa[167] = -0.07523086f;
      sa[168] = 0.21768379f;
      sa[169] = 0.38287896f;
      sa[170] = -0.009916869f;
      sa[171] = -0.013744429f;
      sa[172] = -0.03424537f;
      sa[173] = -0.1349216f;
      sa[174] = 0.042347413f;
      sa[175] = -0.22811629f;
      sa[176] = -0.0067983395f;
      sa[177] = 0.0066227983f;
      sa[178] = -0.09247872f;
      sa[179] = 0.047995258f;
      sa[180] = -0.047276877f;
      sa[181] = -0.33435845f;
      sa[182] = -0.092451885f;
      sa[183] = 0.057977755f;
      sa[184] = 0.29874903f;
      sa[185] = 0.15694085f;
      sa[186] = -0.27169722f;
      sa[187] = 0.14056925f;
      sa[188] = -0.042685423f;
      sa[189] = 0.1790387f;
      sa[190] = 0.10800077f;
      sa[191] = -0.11413228f;
      sa[192] = -0.14687702f;
      sa[193] = 0.18536039f;
      sa[194] = 0.058571402f;
      sa[195] = 0.2793404f;
      sa[196] = 0.22391523f;
      sa[197] = -0.046997353f;
      sa[198] = 0.13111612f;
      sa[199] = -0.104261436f;
      sa[200] = 0.008384588f;
      sa[201] = -0.26058343f;
      sa[202] = 0.13665879f;
      sa[203] = 0.035110872f;
      sa[204] = -0.15600272f;
      sa[205] = 0.26762834f;
      sa[206] = 0.24700591f;
      sa[207] = 0.21490262f;
      sa[208] = -0.2709648f;
      sa[209] = -0.08251194f;
      sa[210] = -0.2900505f;
      sa[211] = -0.23768802f;
      sa[212] = 0.24874337f;
      sa[213] = -0.19543666f;
      sa[214] = -0.15091613f;
      sa[215] = -3.1782818E-4f;
      sa[216] = 0.106338166f;
      sa[217] = 0.04306337f;
      sa[218] = -0.17395096f;
      sa[219] = 0.3015504f;
      sa[220] = -0.19871809f;
      sa[221] = -7.290286E-4f;
      sa[222] = 0.21733066f;
      sa[223] = 0.082693025f;
      sa[224] = 0.08931599f;
      sa[225] = 0.24087514f;
      sa[226] = -0.27800998f;
      sa[227] = 0.21336481f;
      sa[228] = 0.08503842f;
      sa[229] = 0.012454185f;
      sa[230] = 0.22600147f;
      sa[231] = -0.26596949f;
      sa[232] = -0.31832296f;
      sa[233] = -0.0022460113f;
      sa[234] = 0.26239625f;
      sa[235] = -0.34783813f;
      sa[236] = -0.033204146f;
      sa[237] = -0.1946272f;
      sa[238] = -0.18515301f;
      sa[239] = 0.1831792f;
      sa[240] = -0.015141115f;
      sa[241] = -0.26847965f;
      sa[242] = -0.0019036566f;
      sa[243] = -0.24619395f;
      sa[244] = -0.23129794f;
      sa[245] = -0.13572037f;
      sa[246] = -0.3103329f;
      sa[247] = -0.06988438f;
      sa[248] = 0.28926903f;
      sa[249] = 0.2756035f;
      sa[250] = -0.23295107f;
      sa[251] = -0.13066016f;
      sa[252] = -0.18864815f;
      sa[253] = -0.22404668f;
      sa[254] = -0.29350448f;
      sa[255] = 0.25030088f;
      sa[256] = -0.17391898f;
      sa[257] = 0.243266f;
      sa[258] = -0.25330794f;
      sa[259] = -0.12935758f;
      sa[260] = -0.17015529f;
      sa[261] = -0.04799876f;
      sa[262] = -0.16894779f;
      sa[263] = 0.32639137f;
      sa[264] = -0.14504242f;
      sa[265] = 0.040143505f;
      sa[266] = -0.28708073f;
      sa[267] = -0.20937712f;
      sa[268] = 0.13793302f;
      sa[269] = -0.14461148f;
      sa[270] = -0.0036343657f;
      sa[271] = 0.0630916f;
      sa[272] = -0.06598099f;
      sa[273] = -0.10223143f;
      sa[274] = 0.11551812f;
      sa[275] = -0.056040864f;
      sa[276] = 0.022078501f;
      sa[277] = -0.27857655f;
      sa[278] = -0.1180237f;
      sa[279] = 0.16388324f;
      sa[280] = -0.15511738f;
      sa[281] = 0.28446206f;
      sa[282] = -0.087343045f;
      sa[283] = -0.0013510397f;
      sa[284] = 0.036336955f;
      sa[285] = -0.1092648f;
      sa[286] = 0.25292784f;
      sa[287] = 0.12735416f;
      sa[288] = -0.15708277f;
      sa[289] = -0.1470499f;
      sa[290] = -0.030373381f;
      sa[291] = -0.06627056f;
      sa[292] = 0.14383583f;
      sa[293] = -0.10589926f;
      sa[294] = 0.0775614f;
      sa[295] = 0.15745306f;
      sa[296] = 0.21246348f;
      sa[297] = 0.2352435f;
      sa[298] = 0.065440685f;
      sa[299] = -0.088545665f;
      sa[300] = -0.057000335f;
      sa[301] = -0.11325202f;
      sa[302] = 0.0869509f;
      sa[303] = 0.026276385f;
      sa[304] = -0.19636026f;
      sa[305] = -0.016415242f;
      sa[306] = 0.1484804f;
      sa[307] = -0.15946811f;
      sa[308] = 0.07466095f;
      sa[309] = 0.16765684f;
      sa[310] = 0.2816469f;
      sa[311] = 0.33109552f;
      sa[312] = -0.17754278f;
      sa[313] = -0.11782782f;
      sa[314] = -0.20173925f;
      sa[315] = 0.072373524f;
      sa[316] = -0.044169962f;
      sa[317] = -0.0854927f;
      sa[318] = 0.06068171f;
      sa[319] = 0.2772529f;
      sa[320] = -0.113098875f;
      sa[321] = 0.09498485f;
      sa[322] = 0.28918728f;
      sa[323] = -0.09728859f;
      sa[324] = -0.09934562f;
      sa[325] = 0.24355564f;
      sa[326] = -0.2546109f;
      sa[327] = 0.021731f;
      sa[328] = -0.09869739f;
      sa[329] = 0.23869361f;
      sa[330] = -0.1787822f;
      sa[331] = -0.088432334f;
      sa[332] = -0.2772855f;
      sa[333] = 0.07349143f;
      sa[334] = -0.10308046f;
      sa[335] = 0.2564735f;
      sa[336] = -0.12841043f;
      sa[337] = -0.1174846f;
      sa[338] = 0.3035185f;
      sa[339] = -0.26910692f;
      sa[340] = -0.31043294f;
      sa[341] = -0.28153932f;
      sa[342] = 0.17807233f;
      sa[343] = 0.05608127f;
      sa[344] = -0.19087274f;
      sa[345] = 0.13145772f;
      sa[346] = 0.16771437f;
      sa[347] = -0.23223747f;
      sa[348] = 0.32853186f;
      sa[349] = -0.28627732f;
      sa[350] = -0.22082192f;
      sa[351] = -0.008747366f;
      sa[352] = 0.17630208f;
      sa[353] = -0.06925245f;
      sa[354] = 0.07978508f;
      sa[355] = 0.018884197f;
      sa[356] = -0.10713633f;
      sa[357] = 0.18244636f;
      sa[358] = -0.31262913f;
      sa[359] = 0.0051568523f;
      sa[360] = 0.084193304f;
      sa[361] = -0.03869448f;
      sa[362] = -0.16148296f;
      sa[363] = 0.13077392f;
      sa[364] = -0.12543719f;
      sa[365] = -0.21846987f;
      sa[366] = -0.013464791f;
      sa[367] = -0.362006f;
      sa[368] = -0.1694579f;
      sa[369] = 0.2772143f;
      sa[370] = -0.20458457f;
      sa[371] = 0.11716953f;
      sa[372] = -0.011388281f;
      sa[373] = 0.27980128f;
      sa[374] = -0.12727174f;
      sa[375] = -0.3387106f;
      sa[376] = -0.30534172f;
      sa[377] = -0.22369075f;
      sa[378] = 0.29625806f;
      sa[379] = 0.1877409f;
      sa[380] = -0.09445218f;
      sa[381] = -0.07571162f;
      sa[382] = -0.031373624f;
      sa[383] = -0.13821256f;
      sa[384] = -0.12437801f;
      sa[385] = 0.049125444f;
      sa[386] = -0.2567723f;
      sa[387] = -0.24864687f;
      sa[388] = 0.0879055f;
      sa[389] = -0.0012872777f;
      sa[390] = -0.009641468f;
      sa[391] = -0.12895724f;
      sa[392] = 0.16974844f;
      sa[393] = 0.060884297f;
      sa[394] = 0.062879056f;
      sa[395] = 0.3987253f;
      sa[396] = 0.26920006f;
      sa[397] = -0.3725876f;
      sa[398] = 0.14161924f;
      sa[399] = 0.020879727f;
      sa[400] = 0.18146832f;
      sa[401] = 0.20783465f;
      sa[402] = -0.12735237f;
      sa[403] = 0.061955925f;
      sa[404] = 0.22315413f;
      sa[405] = -0.26078337f;
      sa[406] = -0.043102648f;
      sa[407] = 0.06301022f;
      sa[408] = -0.24055117f;
      sa[409] = -0.2856837f;
      sa[410] = -0.130252f;
      sa[411] = 0.11507354f;
      sa[412] = -0.26436374f;
      sa[413] = 0.0034746071f;
      sa[414] = 0.16503683f;
      sa[415] = 0.34247044f;
      sa[416] = -0.17337011f;
      sa[417] = 0.048726425f;
      sa[418] = 0.011397079f;
      sa[419] = 0.3167181f;
      sa[420] = 0.22697517f;
      sa[421] = 0.2497738f;
      sa[422] = 0.22790314f;
      sa[423] = -0.0079042f;
      sa[424] = 0.07320369f;
      sa[425] = -0.07684784f;
      sa[426] = -0.31842333f;
      sa[427] = 0.1516499f;
      sa[428] = -0.092886f;
      sa[429] = -0.29173744f;
      sa[430] = 0.22452834f;
      sa[431] = 0.044566497f;
      sa[432] = -0.053313635f;
      sa[433] = 0.14808628f;
      sa[434] = 0.22040127f;
      sa[435] = 0.053994928f;
      sa[436] = -0.2788629f;
      sa[437] = -0.24729083f;
      sa[438] = -0.0193929f;
      sa[439] = -0.08361663f;
      sa[440] = 0.29315346f;
      sa[441] = -0.2709451f;
      sa[442] = 0.01910338f;
      sa[443] = 0.109301865f;
      sa[444] = -0.1910886f;
      sa[445] = 0.07438149f;
      sa[446] = 0.23037942f;
      sa[447] = 0.012045732f;
      sa[448] = 0.17493011f;
      sa[449] = 0.20772734f;
      sa[450] = -0.07081804f;
      sa[451] = 0.14535944f;
      sa[452] = 0.18251124f;
      sa[453] = -0.05473983f;
      sa[454] = -0.16381818f;
      sa[455] = -0.10197f;
      sa[456] = -0.042255457f;
      sa[457] = 0.03366203f;
      sa[458] = -0.21037701f;
      sa[459] = 0.18216158f;
      sa[460] = 0.22219296f;
      sa[461] = 0.27174035f;
      sa[462] = 0.055170454f;
      sa[463] = 0.18582444f;
      sa[464] = -0.2941703f;
      sa[465] = 0.12763493f;
      sa[466] = 0.07041688f;
      sa[467] = 0.18778963f;
      sa[468] = 0.05411749f;
      sa[469] = 0.25549358f;
      sa[470] = 0.19942617f;
      sa[471] = 0.0016059366f;
      sa[472] = -0.015692195f;
      sa[473] = -0.106338926f;
      sa[474] = -0.013618184f;
      sa[475] = 0.025805607f;
      sa[476] = 0.24028058f;
      sa[477] = -0.18524978f;
      sa[478] = 0.09460106f;
      sa[479] = -0.1368191f;
      sa[480] = -0.28682557f;
      sa[481] = -0.18430713f;
      sa[482] = -0.22338381f;
      sa[483] = 0.14013532f;
      sa[484] = 0.18993856f;
      sa[485] = 0.084954634f;
      sa[486] = -0.014063112f;
      sa[487] = -0.07046999f;
      sa[488] = -0.20619908f;
      sa[489] = 0.052531358f;
      sa[490] = -0.018064141f;
      sa[491] = -0.2676592f;
      sa[492] = 0.24806514f;
      sa[493] = 0.22723584f;
      sa[494] = -0.23357128f;
      sa[495] = 0.039937105f;
      sa[496] = -0.024715617f;
      sa[497] = 0.0302259f;
      sa[498] = 0.14304595f;
      sa[499] = 0.0892084f;
      sa[500] = -0.08437774f;
      sa[501] = -0.046501495f;
      sa[502] = 0.28424972f;
      sa[503] = 0.115400866f;
      sa[504] = -0.07389321f;
      sa[505] = -0.18160702f;
      sa[506] = 0.15432838f;
      sa[507] = -0.08259142f;
      sa[508] = 0.09792298f;
      sa[509] = 0.1759746f;
      sa[510] = 0.13418993f;
      sa[511] = 0.05144775f;
      sa[512] = 0.080590785f;
      sa[513] = -0.03747426f;
      sa[514] = 0.2549152f;
      sa[515] = -0.23345174f;
      sa[516] = -0.026503904f;
      sa[517] = 0.017643088f;
      sa[518] = 0.059606545f;
      sa[519] = -0.07678929f;
      sa[520] = 0.20717649f;
      sa[521] = 0.1447744f;
      sa[522] = 0.067511976f;
      sa[523] = 0.08162266f;
      sa[524] = 0.18829286f;
      sa[525] = 0.19088562f;
      sa[526] = -0.0048322394f;
      sa[527] = -0.058074426f;
      sa[528] = -0.076656714f;
      sa[529] = 0.10577938f;
      sa[530] = -0.19637525f;
      sa[531] = 0.21810764f;
      sa[532] = 0.12116509f;
      sa[533] = 0.12507066f;
      sa[534] = 0.10096041f;
      sa[535] = -0.054950744f;
      sa[536] = 0.05968561f;
      sa[537] = -0.18273143f;
      sa[538] = 0.265801f;
      sa[539] = 0.3248929f;
      sa[540] = -0.2796223f;
      sa[541] = -0.14849234f;
      sa[542] = -0.09840899f;
      sa[543] = -0.1610608f;
      sa[544] = 0.11643219f;
      sa[545] = 0.12657905f;
      sa[546] = 0.078586705f;
      sa[547] = 0.14118126f;
      sa[548] = 0.063505515f;
      sa[549] = 0.12465888f;
      sa[550] = -0.04784148f;
      sa[551] = -0.064895056f;
      sa[552] = 0.08881286f;
      sa[553] = 0.007334115f;
      sa[554] = -0.093249835f;
      sa[555] = -0.1104681f;
      sa[556] = -0.14693777f;
      sa[557] = -0.21024719f;
      sa[558] = -0.18915458f;
      sa[559] = 0.07674315f;
      sa[560] = -0.299108f;
      sa[561] = -0.13807534f;
      sa[562] = 0.16505921f;
      sa[563] = -0.13362235f;
      sa[564] = 0.25076276f;
      sa[565] = 0.016223913f;
      sa[566] = 0.286855f;
      sa[567] = -0.067441285f;
      sa[568] = -0.062284518f;
      sa[569] = 0.014002842f;
      sa[570] = 0.006457024f;
      sa[571] = -0.058179222f;
      sa[572] = -0.061805297f;
      sa[573] = 0.1835894f;
      sa[574] = 0.14745806f;
      sa[575] = -0.33320785f;
      sa[576] = -0.12760861f;
      sa[577] = -9.182062E-4f;
      sa[578] = 0.13465087f;
      sa[579] = -0.053442236f;
      sa[580] = 0.10054131f;
      sa[581] = -0.11777797f;
      sa[582] = 0.11404458f;
      sa[583] = 0.04009573f;
      sa[584] = 0.113253795f;
      sa[585] = 0.14489262f;
      sa[586] = -0.21200627f;
      sa[587] = -0.16314591f;
      sa[588] = 0.093063526f;
      sa[589] = 0.13628136f;
      sa[590] = 0.013752709f;
      sa[591] = 0.04718581f;
      sa[592] = -0.309742f;
      sa[593] = -0.1960946f;
      sa[594] = -0.05345885f;
      sa[595] = 0.033895385f;
      sa[596] = 0.2592894f;
      sa[597] = -0.022337597f;
      sa[598] = 0.23144373f;
      sa[599] = 0.07191583f;
      sa[600] = -0.24431346f;
      sa[601] = 0.2334409f;
      sa[602] = -0.049197674f;
      sa[603] = 0.2412456f;
      sa[604] = 0.22131391f;
      sa[605] = 0.16418476f;
      sa[606] = 0.20077892f;
      sa[607] = 0.041453786f;
      sa[608] = -0.012197125f;
      sa[609] = 0.08536777f;
      sa[610] = 0.06326677f;
      sa[611] = -0.084619656f;
      sa[612] = -0.11731058f;
      sa[613] = 0.066758f;
      sa[614] = 0.03967477f;
      sa[615] = -0.005210302f;
      sa[616] = 0.0059246053f;
      sa[617] = -0.32179126f;
      sa[618] = -0.19153224f;
      sa[619] = -0.27532795f;
      sa[620] = -0.05763524f;
      sa[621] = -0.21847886f;
      sa[622] = -0.32919893f;
      sa[623] = -0.25193977f;
      sa[624] = -0.06049542f;
      sa[625] = 0.22437489f;
      sa[626] = -0.013547587f;
      sa[627] = 0.15964966f;
      sa[628] = -0.30082688f;
      sa[629] = -0.11622715f;
      sa[630] = -0.10523203f;
      sa[631] = 0.281326f;
      sa[632] = 0.08749682f;
      sa[633] = -0.17624627f;
      sa[634] = -0.23073803f;
      sa[635] = 0.095105655f;
      sa[636] = -0.15588383f;
      sa[637] = -0.1090358f;
      sa[638] = -0.09945615f;
      sa[639] = -0.16794553f;
      sa[640] = -0.14723368f;
      sa[641] = -0.30617f;
      sa[642] = 0.15100005f;
      sa[643] = -0.36126062f;
      sa[644] = -0.09402245f;
      sa[645] = -0.32466868f;
      sa[646] = 0.363489f;
      sa[647] = -0.15112059f;
      sa[648] = -0.039491568f;
      sa[649] = 0.029357467f;
      sa[650] = 0.030770738f;
      sa[651] = -0.12563151f;
      sa[652] = 0.0610001f;
      sa[653] = -0.13255534f;
      sa[654] = -0.16683884f;
      sa[655] = -0.19029589f;
      sa[656] = 0.09900311f;
      sa[657] = 0.18120196f;
      sa[658] = -0.24404836f;
      sa[659] = -0.15809324f;
      sa[660] = -0.2213335f;
      sa[661] = -0.0708325f;
      sa[662] = -0.2705385f;
      sa[663] = 0.16790235f;
      sa[664] = -0.110851005f;
      sa[665] = 0.33194253f;
      sa[666] = -0.06599412f;
      sa[667] = -0.2433414f;
      sa[668] = 0.25900275f;
      sa[669] = -0.13691418f;
      sa[670] = 0.10257272f;
      sa[671] = -0.007171332f;
      sa[672] = -0.28401425f;
      sa[673] = 0.15165989f;
      sa[674] = 0.20700611f;
      sa[675] = -0.27454582f;
      sa[676] = -0.071791135f;
      sa[677] = -0.18440573f;
      sa[678] = 0.21954952f;
      sa[679] = -0.050695352f;
      sa[680] = 0.050624795f;
      sa[681] = 0.07689276f;
      sa[682] = 0.076613195f;
      sa[683] = -0.08955708f;
      sa[684] = 0.03357874f;
      sa[685] = 0.009805711f;
      sa[686] = -0.15752918f;
      sa[687] = -0.19939433f;
      sa[688] = -0.24285135f;
      sa[689] = -0.24691877f;
      sa[690] = -0.024198644f;
      sa[691] = 0.15935384f;
      sa[692] = -0.13846636f;
      sa[693] = -0.15581971f;
      sa[694] = 0.30276543f;
      sa[695] = -0.06762965f;
      sa[696] = -0.12253965f;
      sa[697] = -0.1854014f;
      sa[698] = -0.2139453f;
      sa[699] = 0.33120477f;
      sa[700] = 0.12752147f;
      sa[701] = 0.09885733f;
      sa[702] = 0.19586043f;
      sa[703] = -0.2287795f;
      sa[704] = -0.25900066f;
      sa[705] = -0.00932771f;
      sa[706] = -0.116380274f;
      sa[707] = 0.061824664f;
      sa[708] = -0.079985656f;
      sa[709] = -0.24124517f;
      sa[710] = 0.2576625f;
      sa[711] = -0.017256703f;
      sa[712] = 0.020458058f;
      sa[713] = 0.1418251f;
      sa[714] = 0.16020298f;
      sa[715] = 0.13490427f;
      sa[716] = 0.046681717f;
      sa[717] = 0.21912938f;
      sa[718] = -0.057463765f;
      sa[719] = 0.07697655f;
      sa[720] = -0.22802758f;
      sa[721] = 0.1115086f;
      sa[722] = -0.13544415f;
      sa[723] = 0.14883748f;
      sa[724] = 0.05649405f;
      sa[725] = -0.3104614f;
      sa[726] = -0.21998574f;
      sa[727] = -0.28914496f;
      sa[728] = -0.11933954f;
      sa[729] = -0.076963805f;
      sa[730] = 0.021705432f;
      sa[731] = -0.30134818f;
      sa[732] = 0.15600699f;
      sa[733] = 0.17292497f;
      sa[734] = -0.14897694f;
      sa[735] = 0.2573259f;
      sa[736] = -0.07524949f;
      sa[737] = 0.08666211f;
      sa[738] = -0.08659768f;
      sa[739] = -0.4282022f;
      sa[740] = -0.26274255f;
      sa[741] = -0.27404726f;
      sa[742] = 0.104283236f;
      sa[743] = 0.03780712f;
      sa[744] = 0.018174645f;
      sa[745] = -0.32260936f;
      sa[746] = 0.17982416f;
      sa[747] = -0.21658477f;
      sa[748] = -0.16886145f;
      sa[749] = -0.18810411f;
      sa[750] = 0.14243111f;
      sa[751] = 0.2361344f;
      sa[752] = -0.0063392385f;
      sa[753] = 0.20415851f;
      sa[754] = -0.029556656f;
      sa[755] = 0.14615092f;
      sa[756] = -0.15055917f;
      sa[757] = 0.21401547f;
      sa[758] = -0.14654092f;
      sa[759] = -0.12750019f;
      sa[760] = -0.058922917f;
      sa[761] = 0.035018865f;
      sa[762] = -0.09220614f;
      sa[763] = 0.22539234f;
      sa[764] = 0.06955178f;
      sa[765] = -0.031732652f;
      sa[766] = -0.14632343f;
      sa[767] = 0.041280188f;
      sa[768] = -0.20143324f;
      sa[769] = -0.31372902f;
      sa[770] = -0.045990746f;
      sa[771] = 0.062382292f;
      sa[772] = 0.027173907f;
      sa[773] = -0.19383165f;
      sa[774] = -0.036601536f;
      sa[775] = 0.1584783f;
      sa[776] = -0.063047215f;
      sa[777] = 0.07952272f;
      sa[778] = 0.17783518f;
      sa[779] = -0.095937f;
      sa[780] = -0.07050576f;
      sa[781] = -0.011218696f;
      sa[782] = 0.13273999f;
      sa[783] = -0.05245061f;
      sa[784] = -0.15154947f;
      sa[785] = -0.107983276f;
      sa[786] = -0.10064553f;
      sa[787] = -0.17975797f;
      sa[788] = -0.22859693f;
      sa[789] = 0.29095492f;
      sa[790] = -0.23063678f;
      sa[791] = -0.15338928f;
      sa[792] = 0.18291615f;
      sa[793] = 0.0027149592f;
      sa[794] = -0.22537558f;
      sa[795] = -0.0015976803f;
      sa[796] = 0.22008075f;
      sa[797] = -0.14055909f;
      sa[798] = -0.24605396f;
      sa[799] = -0.19640774f;
      sa[800] = 0.21678291f;
      sa[801] = 0.09963632f;
      sa[802] = 0.24175893f;
      sa[803] = 0.16004495f;
      sa[804] = 0.28483275f;
      sa[805] = 0.38715747f;
      sa[806] = 0.33619562f;
      sa[807] = 0.2724124f;
      sa[808] = 0.07353433f;
      sa[809] = -0.120197564f;
      sa[810] = 0.016284727f;
      sa[811] = 0.19524093f;
      sa[812] = 0.16931234f;
      sa[813] = -0.3063767f;
      sa[814] = 0.070271775f;
      sa[815] = -0.23342246f;
      sa[816] = -0.11233211f;
      sa[817] = -0.13748379f;
      sa[818] = -0.049633432f;
      sa[819] = -0.10077913f;
      sa[820] = -0.23211282f;
      sa[821] = -0.17518556f;
      sa[822] = -0.19255309f;
      sa[823] = 0.11054731f;
      sa[824] = 0.11481128f;
      sa[825] = 0.3267979f;
      sa[826] = -0.2830579f;
      sa[827] = -0.3140834f;
      sa[828] = 0.091588356f;
      sa[829] = -0.07350687f;
      sa[830] = 0.13104254f;
      sa[831] = 0.2192398f;
      sa[832] = 0.12334195f;
      sa[833] = 0.10128194f;
      sa[834] = 0.18978725f;
      sa[835] = -0.12709682f;
      sa[836] = 0.19174525f;
      sa[837] = -0.17828357f;
      sa[838] = 0.11280587f;
      sa[839] = -0.20832884f;
      sa[840] = 0.24817283f;
      sa[841] = 0.17565571f;
      sa[842] = 0.21529964f;
      sa[843] = 0.066616975f;
      sa[844] = 0.06626939f;
      sa[845] = 0.16090477f;
      sa[846] = -0.2371904f;
      sa[847] = -0.07346651f;
      sa[848] = 0.21130627f;
      sa[849] = 0.21241798f;
      sa[850] = -0.016050797f;
      sa[851] = 0.05396558f;
      sa[852] = 0.2593498f;
      sa[853] = 0.13139097f;
      sa[854] = 0.26459712f;
      sa[855] = 0.09382619f;
      sa[856] = 0.11322355f;
      sa[857] = -0.13977262f;
      sa[858] = 0.1768834f;
      sa[859] = 0.094336115f;
      sa[860] = 0.31553772f;
      sa[861] = -0.17942744f;
      sa[862] = -0.14890648f;
      sa[863] = -0.01984832f;
      sa[864] = -0.15206157f;
      sa[865] = 0.24246123f;
      sa[866] = -0.1281606f;
      sa[867] = -0.06205037f;
      sa[868] = -0.1641506f;
      sa[869] = 0.19091287f;
      sa[870] = -0.030676402f;
      sa[871] = 0.18635061f;
      sa[872] = 0.2516851f;
      sa[873] = -0.038492903f;
      sa[874] = 0.058578134f;
      sa[875] = -0.24468918f;
      sa[876] = -0.2857227f;
      sa[877] = -0.2643224f;
      sa[878] = -0.024268882f;
      sa[879] = 0.18506876f;
      sa[880] = -0.1076364f;
      sa[881] = -0.08172182f;
      sa[882] = 0.11668153f;
      sa[883] = 0.18443161f;
      sa[884] = -0.13826579f;
      sa[885] = -0.11245092f;
      sa[886] = 0.09572639f;
      sa[887] = -0.025550984f;
      sa[888] = -0.09011047f;
      sa[889] = 0.072086535f;
      sa[890] = -0.3533172f;
      sa[891] = 0.3949562f;
      sa[892] = 0.14561296f;
      sa[893] = 0.2478594f;
      sa[894] = 0.015164698f;
      sa[895] = 0.21158497f;
      sa[896] = -0.19920273f;
      sa[897] = 0.25512657f;
      sa[898] = -0.0382383f;
      sa[899] = 0.19912346f;
      sa[900] = -0.16414598f;
      sa[901] = 0.044255696f;
      sa[902] = -0.24929929f;
      sa[903] = -0.079654545f;
      sa[904] = 0.15503003f;
      sa[905] = 0.12946776f;
      sa[906] = -0.25788003f;
      sa[907] = -0.32063937f;
      sa[908] = -0.25176913f;
      sa[909] = -0.00454935f;
      sa[910] = -0.03669939f;
      sa[911] = -0.14799319f;
      sa[912] = -0.030058453f;
      sa[913] = -0.0019832249f;
      sa[914] = -0.19067161f;
      sa[915] = -0.03479702f;
      sa[916] = 0.100423634f;
      sa[917] = -0.10246077f;
      sa[918] = 0.27027756f;
      sa[919] = -0.0050614257f;
      sa[920] = 0.1397299f;
      sa[921] = -0.07532086f;
      sa[922] = -0.122385055f;
      sa[923] = -0.14374565f;
      sa[924] = -0.099696405f;
      sa[925] = -0.26948965f;
      sa[926] = 0.15620947f;
      sa[927] = -0.2897119f;
      sa[928] = 0.20576474f;
      sa[929] = 0.09251592f;
      sa[930] = 0.08623343f;
      sa[931] = -0.08121758f;
      sa[932] = 0.24551843f;
      sa[933] = -0.054784074f;
      sa[934] = 0.22096634f;
      sa[935] = -0.16632777f;
      sa[936] = 0.1072958f;
      sa[937] = 0.19329706f;
      sa[938] = -0.094394766f;
      sa[939] = -0.09923845f;
      sa[940] = -0.020319121f;
      sa[941] = -0.29666704f;
      sa[942] = -0.21863255f;
      sa[943] = -0.099455714f;
      sa[944] = -0.21107431f;
      sa[945] = 0.08197719f;
      sa[946] = 0.16678105f;
      sa[947] = 0.19731997f;
      sa[948] = 0.04630341f;
      sa[949] = -0.21438557f;
      sa[950] = 0.048865065f;
      sa[951] = -0.05415265f;
      sa[952] = -0.19726108f;
      sa[953] = -0.13620698f;
      sa[954] = -0.2910978f;
      sa[955] = 0.012118728f;
      sa[956] = -0.021034477f;
      sa[957] = 0.057768364f;
      sa[958] = 0.105195604f;
      sa[959] = -0.10652555f;
      sa[960] = 0.3131042f;
      sa[961] = -0.079235956f;
      sa[962] = -0.062222835f;
      sa[963] = 0.029400352f;
      sa[964] = -0.18435216f;
      sa[965] = 0.24936688f;
      sa[966] = -0.10092521f;
      sa[967] = -0.23465964f;
      sa[968] = 0.08765107f;
      sa[969] = 0.09049704f;
      sa[970] = 0.29526863f;
      sa[971] = 0.022941854f;
      sa[972] = -0.22352631f;
      sa[973] = -0.2438415f;
      sa[974] = -0.3265929f;
      sa[975] = -0.21379139f;
      sa[976] = -0.106081046f;
      sa[977] = 0.029249765f;
      sa[978] = -0.10327714f;
      sa[979] = 0.08362354f;
      sa[980] = 0.06285286f;
      sa[981] = -0.23797621f;
      sa[982] = 0.06517881f;
      sa[983] = -0.083485246f;
      sa[984] = -0.24044618f;
      sa[985] = 0.07733204f;
      sa[986] = -0.22892962f;
      sa[987] = 0.04260599f;
      sa[988] = 0.12400106f;
      sa[989] = 0.18449365f;
      sa[990] = 0.34026212f;
      sa[991] = -0.14082044f;
      sa[992] = -0.19558972f;
      sa[993] = -0.06231734f;
      sa[994] = -0.16048504f;
      sa[995] = -0.30093738f;
      sa[996] = 0.20649898f;
      sa[997] = 0.12832949f;
      sa[998] = 0.16623153f;
      sa[999] = 0.15390486f;
      sa[1000] = 0.032153606f;
      sa[1001] = 0.22396462f;
      sa[1002] = 0.25797632f;
      sa[1003] = -0.10392941f;
      sa[1004] = 0.19023032f;
      sa[1005] = -0.27588984f;
      sa[1006] = -0.076162726f;
      sa[1007] = 0.061005153f;
      sa[1008] = 0.23701678f;
      sa[1009] = 0.07628354f;
      sa[1010] = -0.042084947f;
      sa[1011] = 0.2798345f;
      sa[1012] = -0.07484751f;
      sa[1013] = 0.1571347f;
      sa[1014] = 0.25400114f;
      sa[1015] = -0.27937385f;
      sa[1016] = 0.28464973f;
      sa[1017] = 0.087656416f;
      sa[1018] = -0.025431417f;
      sa[1019] = 0.110448726f;
      sa[1020] = -0.23296228f;
      sa[1021] = 0.09256521f;
      sa[1022] = 0.22132969f;
      sa[1023] = 0.097078234f;
      sa[1024] = -0.012639603f;
      sa[1025] = 0.1252821f;
      sa[1026] = 0.13653563f;
      sa[1027] = 0.19252841f;
      sa[1028] = 0.291729f;
      sa[1029] = -0.031279188f;
      sa[1030] = -0.17309183f;
      sa[1031] = -0.04843751f;
      sa[1032] = -0.25200567f;
      sa[1033] = 0.028425243f;
      sa[1034] = -0.043603703f;
      sa[1035] = -0.22992773f;
      sa[1036] = 0.26136523f;
      sa[1037] = 0.038705394f;
      sa[1038] = -0.18193297f;
      sa[1039] = 0.27010065f;
      sa[1040] = -0.018670596f;
      sa[1041] = 0.11311052f;
      sa[1042] = -0.22843343f;
      sa[1043] = -0.06399814f;
      sa[1044] = 0.20577918f;
      sa[1045] = 0.23321421f;
      sa[1046] = -0.21650583f;
      sa[1047] = -0.20951171f;
      sa[1048] = 0.14073984f;
      sa[1049] = -0.12656814f;
      sa[1050] = 0.016397819f;
      sa[1051] = -0.2453325f;
      sa[1052] = 0.16000713f;
      sa[1053] = 0.29498965f;
      sa[1054] = 0.19544391f;
      sa[1055] = -0.002752725f;
      sa[1056] = 0.25981718f;
      sa[1057] = -0.2038478f;
      sa[1058] = 0.20947808f;
      sa[1059] = -0.21794778f;
      sa[1060] = -0.2986943f;
      sa[1061] = 0.008532885f;
      sa[1062] = 0.27115574f;
      sa[1063] = -0.021059206f;
      sa[1064] = 0.122703336f;
      sa[1065] = -0.0011194274f;
      sa[1066] = 0.18770698f;
      sa[1067] = -0.3188456f;
      sa[1068] = -0.2988174f;
      sa[1069] = 0.15227512f;
      sa[1070] = 0.133555f;
      sa[1071] = 0.15698975f;
      sa[1072] = -0.22578998f;
      sa[1073] = 0.12786447f;
      sa[1074] = 0.10709689f;
      sa[1075] = -0.18023267f;
      sa[1076] = -0.15257104f;
      sa[1077] = 0.0401972f;
      sa[1078] = 0.05689546f;
      sa[1079] = 0.12825005f;
      sa[1080] = 0.18250106f;
      sa[1081] = 0.17898443f;
      sa[1082] = -0.27937305f;
      sa[1083] = -0.121574394f;
      sa[1084] = 0.24014875f;
      sa[1085] = -0.21236166f;
      sa[1086] = -0.2471921f;
      sa[1087] = -0.18538487f;
      sa[1088] = -0.21015044f;
      sa[1089] = 0.042528737f;
      sa[1090] = -0.2623339f;
      sa[1091] = 0.08239583f;
      sa[1092] = -0.23757833f;
      sa[1093] = -0.26810756f;
      sa[1094] = 0.011161258f;
      sa[1095] = -0.18700384f;
      sa[1096] = 0.07141167f;
      sa[1097] = -0.14402723f;
      sa[1098] = 0.012259407f;
      sa[1099] = -0.08048835f;
      sa[1100] = -0.13136613f;
      sa[1101] = 0.12626424f;
      sa[1102] = -0.12683092f;
      sa[1103] = 0.2667001f;
      sa[1104] = -0.247191f;
      sa[1105] = -0.09955572f;
      sa[1106] = -0.08186051f;
      sa[1107] = 0.21523045f;
      sa[1108] = -0.20369153f;
      sa[1109] = 0.22298323f;
      sa[1110] = 0.15532534f;
      sa[1111] = -0.23884441f;
      sa[1112] = 0.18246885f;
      sa[1113] = 0.25435376f;
      sa[1114] = 0.015488309f;
      sa[1115] = 0.16688293f;
      sa[1116] = -0.016924102f;
      sa[1117] = -0.201877f;
      sa[1118] = -0.2327999f;
      sa[1119] = -0.053088434f;
      sa[1120] = 0.1982349f;
      sa[1121] = 0.05625094f;
      sa[1122] = 0.23146172f;
      sa[1123] = 0.24167836f;
      sa[1124] = 0.03267054f;
      sa[1125] = -0.060217667f;
      sa[1126] = 0.18091466f;
      sa[1127] = 0.17243686f;
      sa[1128] = 0.009339789f;
      sa[1129] = -0.13266875f;
      sa[1130] = 0.18234544f;
      sa[1131] = 0.26641503f;
      sa[1132] = -0.22065818f;
      sa[1133] = -0.19421127f;
      sa[1134] = 0.2970557f;
      sa[1135] = -0.42076126f;
      sa[1136] = -0.009228508f;
      sa[1137] = 0.23087502f;
      sa[1138] = -0.06702784f;
      sa[1139] = 0.12302573f;
      sa[1140] = 0.19130066f;
      sa[1141] = -0.37795377f;
      sa[1142] = 0.13543542f;
      sa[1143] = -0.03234685f;
      sa[1144] = -0.2580785f;
      sa[1145] = 0.18389066f;
      sa[1146] = 0.21621992f;
      sa[1147] = -0.029712772f;
      sa[1148] = 0.0025550104f;
      sa[1149] = -0.0047923136f;
      sa[1150] = -0.21102002f;
      sa[1151] = -0.21175835f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_03_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_03_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2583172f;
      sa[1] = -0.16252294f;
      sa[2] = -0.5428258f;
      sa[3] = -0.9795279f;
      sa[4] = 0.052019972f;
      sa[5] = 0.23277347f;
      sa[6] = 1.2783791f;
      sa[7] = -0.6859332f;
      sa[8] = -0.9585809f;
      sa[9] = 0.74935627f;
      sa[10] = -0.11749066f;
      sa[11] = 0.42898485f;
      sa[12] = 0.13038844f;
      sa[13] = -0.008427822f;
      sa[14] = -1.3287355f;
      sa[15] = 1.2005458f;
      sa[16] = 1.5009882f;
      sa[17] = -0.42997524f;
      sa[18] = 0.06330178f;
      sa[19] = -0.405596f;
      sa[20] = 1.1711161f;
      sa[21] = 0.20519601f;
      sa[22] = -0.9581307f;
      sa[23] = 0.7892124f;
      sa[24] = -1.4256326f;
      sa[25] = 0.52412105f;
      sa[26] = -0.24759719f;
      sa[27] = 1.4967208f;
      sa[28] = -1.36512f;
      sa[29] = -0.67833906f;
      sa[30] = 0.37893546f;
      sa[31] = -0.6146031f;
      sa[32] = -1.2004596f;
      sa[33] = -1.475412f;
      sa[34] = 0.012853422f;
      sa[35] = 1.39811f;
      sa[36] = -0.28497204f;
      sa[37] = -0.057590842f;
      sa[38] = 0.23353809f;
      sa[39] = 0.7772459f;
      sa[40] = -0.7322698f;
      sa[41] = -1.334674f;
      sa[42] = -1.0595192f;
      sa[43] = -1.5172638f;
      sa[44] = 0.058644745f;
      sa[45] = -1.3117543f;
      sa[46] = 1.1149086f;
      sa[47] = 1.2807839f;
      sa[48] = -1.3182894f;
      sa[49] = -1.2614442f;
      sa[50] = 0.46951124f;
      sa[51] = -0.25858197f;
      sa[52] = 0.8757868f;
      sa[53] = 0.88688684f;
      sa[54] = -0.18593164f;
      sa[55] = 1.122219f;
      sa[56] = -0.9793226f;
      sa[57] = -1.1083771f;
      sa[58] = 0.14805807f;
      sa[59] = -0.2530325f;
      sa[60] = 1.4083593f;
      sa[61] = -0.5147938f;
      sa[62] = -0.24981523f;
      sa[63] = 0.6991869f;
      sa[64] = 1.4943082f;
      sa[65] = -0.6265036f;
      sa[66] = 0.70461893f;
      sa[67] = 1.6507562f;
      sa[68] = 0.753361f;
      sa[69] = -1.0725495f;
      sa[70] = -1.5726657f;
      sa[71] = -0.37561348f;
      sa[72] = -1.3683317f;
      sa[73] = 1.1317161f;
      sa[74] = 1.3449136f;
      sa[75] = -0.12711859f;
      sa[76] = 0.9746712f;
      sa[77] = 0.54019517f;
      sa[78] = -1.2249879f;
      sa[79] = 0.9178556f;
      sa[80] = -0.8369132f;
      sa[81] = 0.3121348f;
      sa[82] = 0.7813964f;
      sa[83] = -0.64389795f;
      sa[84] = -1.6015396f;
      sa[85] = -1.2757732f;
      sa[86] = 0.22898029f;
      sa[87] = 1.2218412f;
      sa[88] = -1.5910504f;
      sa[89] = -0.4979601f;
      sa[90] = -0.992555f;
      sa[91] = 1.5188881f;
      sa[92] = -0.30736622f;
      sa[93] = 0.19976531f;
      sa[94] = -1.5484167f;
      sa[95] = -0.29783678f;
      sa[96] = -1.119673f;
      sa[97] = 0.19698136f;
      sa[98] = -0.085861236f;
      sa[99] = 0.33105814f;
      sa[100] = -1.2842355f;
      sa[101] = -0.4061314f;
      sa[102] = 1.2490509f;
      sa[103] = 0.12621498f;
      sa[104] = -0.11416064f;
      sa[105] = -0.61896044f;
      sa[106] = 1.5479879f;
      sa[107] = 1.2958869f;
      sa[108] = 0.70881474f;
      sa[109] = 0.14759725f;
      sa[110] = 0.79868007f;
      sa[111] = -0.76068175f;
      sa[112] = -1.0993214f;
      sa[113] = 0.3424799f;
      sa[114] = 0.15994148f;
      sa[115] = -0.35730726f;
      sa[116] = 1.1532865f;
      sa[117] = -0.0023870391f;
      sa[118] = -1.3974478f;
      sa[119] = -0.84109396f;
      sa[120] = -0.33092618f;
      sa[121] = 1.0725565f;
      sa[122] = 5.437194E-4f;
      sa[123] = 0.36613706f;
      sa[124] = -0.795904f;
      sa[125] = 0.88186127f;
      sa[126] = -0.9164088f;
      sa[127] = 0.44093937f;
      sa[128] = -0.8189588f;
      sa[129] = 0.7495569f;
      sa[130] = -0.38510543f;
      sa[131] = 0.83686644f;
      sa[132] = 0.5471655f;
      sa[133] = 0.64970505f;
      sa[134] = 0.59490967f;
      sa[135] = -1.1322784f;
      sa[136] = 0.53416485f;
      sa[137] = -0.6976141f;
      sa[138] = -0.17952348f;
      sa[139] = 1.1946416f;
      sa[140] = -0.34272686f;
      sa[141] = 0.12317143f;
      sa[142] = 0.38668847f;
      sa[143] = -0.74658555f;
      sa[144] = 1.0187093f;
      sa[145] = -0.8844379f;
      sa[146] = 0.024770068f;
      sa[147] = -0.30899253f;
      sa[148] = -0.86526465f;
      sa[149] = 1.0595527f;
      sa[150] = -1.1589477f;
      sa[151] = -1.5356144f;
      sa[152] = 1.6747822f;
      sa[153] = -0.6885869f;
      sa[154] = 1.3188126f;
      sa[155] = -1.4932804f;
      sa[156] = -1.5105935f;
      sa[157] = -1.0082512f;
      sa[158] = -0.20072743f;
      sa[159] = -0.72020966f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_03 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_03_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_03_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_03_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_03_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


