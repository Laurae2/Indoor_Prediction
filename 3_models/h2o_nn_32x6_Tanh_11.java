/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:09:14.158+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_11

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_11 > h2o_nn_32x6_Tanh_11.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_11.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_11", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_11 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_11_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_11_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_11_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_11_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_11_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_11_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_11_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_11_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_11_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_11.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_11_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2548076923076923,0.18269230769230768,0.057692307692307696,0.125,0.2548076923076923,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_11() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-8751805716838475048L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_11_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_11_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_11_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_11_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_11_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_11_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_11_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_11_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_11_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.017059259306358265;
      sa[1] = 0.009211693307966489;
      sa[2] = 0.025222516408954083;
      sa[3] = -0.18316707335864266;
      sa[4] = 0.007083298668832841;
      sa[5] = 1.4790478925476563E-4;
      sa[6] = 0.19073799993604784;
      sa[7] = -0.13683871704411188;
      sa[8] = -0.03228065006762498;
      sa[9] = -0.01894582319413682;
      sa[10] = 0.03219714768242818;
      sa[11] = 0.06972054253633277;
      sa[12] = 0.1937736311087982;
      sa[13] = -0.014985891315718574;
      sa[14] = -0.009933147370386182;
      sa[15] = -0.007558364358049677;
      sa[16] = 0.02720286840021465;
      sa[17] = 0.12793768289715074;
      sa[18] = -0.09717669860871041;
      sa[19] = 0.037953599430298475;
      sa[20] = 0.03241772328743747;
      sa[21] = -0.04272768861462811;
      sa[22] = -0.1263606349919718;
      sa[23] = -0.0026814614548531534;
      sa[24] = -0.061837085340601304;
      sa[25] = 0.12054809775607321;
      sa[26] = -0.07235238001619589;
      sa[27] = 0.045239864674156714;
      sa[28] = -0.0927386000810501;
      sa[29] = -0.006768586259667557;
      sa[30] = 0.18804539856572366;
      sa[31] = -0.011803179211277787;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_11_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_11_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.07277461743773289;
      sa[1] = -0.0961882033217171;
      sa[2] = -0.11823815803284111;
      sa[3] = 0.006800639304646988;
      sa[4] = -0.06729965382988845;
      sa[5] = 6.90089627260226E-4;
    }
  }
}
class h2o_nn_32x6_Tanh_11_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_11_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_11_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.021271808f;
      sa[1] = 0.14476904f;
      sa[2] = 0.035071805f;
      sa[3] = 0.19581208f;
      sa[4] = -0.17575319f;
      sa[5] = -0.17475462f;
      sa[6] = -0.13351582f;
      sa[7] = 0.13143814f;
      sa[8] = 0.06736707f;
      sa[9] = -0.17313974f;
      sa[10] = -0.1395583f;
      sa[11] = 0.005134878f;
      sa[12] = 0.039528653f;
      sa[13] = -0.27094558f;
      sa[14] = -0.23731227f;
      sa[15] = -0.081380896f;
      sa[16] = 0.0449879f;
      sa[17] = 0.059658296f;
      sa[18] = -0.15332334f;
      sa[19] = 0.040570214f;
      sa[20] = 0.16729747f;
      sa[21] = -0.33625504f;
      sa[22] = 0.14628921f;
      sa[23] = -0.18306832f;
      sa[24] = 0.27533236f;
      sa[25] = 0.15984468f;
      sa[26] = -0.053428832f;
      sa[27] = 0.21106808f;
      sa[28] = 0.2047052f;
      sa[29] = -0.26151773f;
      sa[30] = -0.15498406f;
      sa[31] = 0.09574393f;
      sa[32] = 0.31100935f;
      sa[33] = -0.13229826f;
      sa[34] = -0.029996356f;
      sa[35] = -0.2380371f;
      sa[36] = 0.13357963f;
      sa[37] = 0.12817287f;
      sa[38] = -0.25104344f;
      sa[39] = 0.16182938f;
      sa[40] = -0.035810407f;
      sa[41] = -0.087754354f;
      sa[42] = -0.11999653f;
      sa[43] = -0.037500236f;
      sa[44] = 0.29777086f;
      sa[45] = -0.3228706f;
      sa[46] = 0.13090798f;
      sa[47] = 0.031328164f;
      sa[48] = 0.26240775f;
      sa[49] = 0.2668423f;
      sa[50] = 0.2505011f;
      sa[51] = -0.26773274f;
      sa[52] = -0.19714889f;
      sa[53] = 0.12376046f;
      sa[54] = 0.09759578f;
      sa[55] = 0.2392331f;
      sa[56] = -0.12588072f;
      sa[57] = -0.3206673f;
      sa[58] = 0.3020448f;
      sa[59] = -0.14761108f;
      sa[60] = -0.370541f;
      sa[61] = 0.19937132f;
      sa[62] = 0.02189963f;
      sa[63] = -0.089229494f;
      sa[64] = 0.14180627f;
      sa[65] = 0.08066618f;
      sa[66] = 0.0021810338f;
      sa[67] = 0.123391494f;
      sa[68] = -0.148257f;
      sa[69] = 0.08862204f;
      sa[70] = 0.06271938f;
      sa[71] = 0.19155595f;
      sa[72] = -0.18639381f;
      sa[73] = 0.27005303f;
      sa[74] = -0.07478081f;
      sa[75] = 0.008786363f;
      sa[76] = -0.16018637f;
      sa[77] = -0.12387192f;
      sa[78] = -0.22407722f;
      sa[79] = 0.16900028f;
      sa[80] = -0.27465022f;
      sa[81] = 0.018976513f;
      sa[82] = -0.046935827f;
      sa[83] = 0.010820349f;
      sa[84] = -0.09209789f;
      sa[85] = -0.2585897f;
      sa[86] = -0.0041586226f;
      sa[87] = 0.20905796f;
      sa[88] = 0.27066606f;
      sa[89] = 0.12801239f;
      sa[90] = -0.0675426f;
      sa[91] = 0.0119968895f;
      sa[92] = 0.103798896f;
      sa[93] = -0.13933979f;
      sa[94] = -0.20649202f;
      sa[95] = -0.21035114f;
      sa[96] = 0.20934732f;
      sa[97] = 0.03433801f;
      sa[98] = 0.27240545f;
      sa[99] = -4.866483E-4f;
      sa[100] = -0.021138022f;
      sa[101] = -0.103386775f;
      sa[102] = -0.21652298f;
      sa[103] = -0.04200188f;
      sa[104] = -0.023839122f;
      sa[105] = -0.19658054f;
      sa[106] = -0.27216703f;
      sa[107] = 0.24744059f;
      sa[108] = 0.2200391f;
      sa[109] = -0.11401159f;
      sa[110] = -0.08261062f;
      sa[111] = 0.06360829f;
      sa[112] = 0.059019238f;
      sa[113] = -0.07123825f;
      sa[114] = -0.16676192f;
      sa[115] = 0.10536427f;
      sa[116] = -0.1713975f;
      sa[117] = 0.008444868f;
      sa[118] = -0.3649892f;
      sa[119] = -0.22205827f;
      sa[120] = 0.19906574f;
      sa[121] = 0.1435974f;
      sa[122] = 0.31140724f;
      sa[123] = 0.3314071f;
      sa[124] = 0.3135927f;
      sa[125] = 0.15729071f;
      sa[126] = -0.40560585f;
      sa[127] = -0.35315055f;
      sa[128] = 0.12504579f;
      sa[129] = 0.18047929f;
      sa[130] = -0.052208968f;
      sa[131] = 0.27208447f;
      sa[132] = 0.15294483f;
      sa[133] = -0.36681923f;
      sa[134] = -0.16667551f;
      sa[135] = -0.2733563f;
      sa[136] = -0.28715008f;
      sa[137] = -0.07149454f;
      sa[138] = -1.245973E-4f;
      sa[139] = -0.053394105f;
      sa[140] = -0.109796785f;
      sa[141] = -0.108208686f;
      sa[142] = 0.102618515f;
      sa[143] = -0.33872697f;
      sa[144] = 0.19585173f;
      sa[145] = -0.19334309f;
      sa[146] = -0.29349357f;
      sa[147] = 0.13670103f;
      sa[148] = 0.15856235f;
      sa[149] = 0.13781385f;
      sa[150] = 0.20811535f;
      sa[151] = -0.25023797f;
      sa[152] = -0.013644907f;
      sa[153] = 0.21860646f;
      sa[154] = 0.21279415f;
      sa[155] = -0.20031916f;
      sa[156] = 0.08700685f;
      sa[157] = -0.23035654f;
      sa[158] = 0.025927976f;
      sa[159] = 0.05477889f;
      sa[160] = 0.036608778f;
      sa[161] = 0.073710844f;
      sa[162] = 0.027329873f;
      sa[163] = -0.23276521f;
      sa[164] = 0.19716978f;
      sa[165] = -0.028719878f;
      sa[166] = -0.12728934f;
      sa[167] = -0.06289867f;
      sa[168] = 0.20712274f;
      sa[169] = 0.28675562f;
      sa[170] = 0.206533f;
      sa[171] = -0.028853633f;
      sa[172] = -0.046488494f;
      sa[173] = -0.063415885f;
      sa[174] = -0.011904354f;
      sa[175] = -0.15036507f;
      sa[176] = 0.047506656f;
      sa[177] = 0.04401979f;
      sa[178] = -0.13291235f;
      sa[179] = 0.04994357f;
      sa[180] = -0.12663132f;
      sa[181] = -0.4327949f;
      sa[182] = -0.16368183f;
      sa[183] = 0.08799908f;
      sa[184] = 0.28610086f;
      sa[185] = 0.19739129f;
      sa[186] = -0.27586246f;
      sa[187] = 0.09744396f;
      sa[188] = -0.063838944f;
      sa[189] = 0.14781478f;
      sa[190] = 0.08689965f;
      sa[191] = -0.14224428f;
      sa[192] = -0.10013382f;
      sa[193] = 0.2637822f;
      sa[194] = 0.122979045f;
      sa[195] = 0.26277316f;
      sa[196] = 0.20480171f;
      sa[197] = -0.017543418f;
      sa[198] = 0.2897572f;
      sa[199] = 0.033867285f;
      sa[200] = 0.0011835048f;
      sa[201] = -0.2962042f;
      sa[202] = 0.08259267f;
      sa[203] = -0.013292303f;
      sa[204] = -0.27054352f;
      sa[205] = 0.26859835f;
      sa[206] = 0.29200518f;
      sa[207] = 0.14075403f;
      sa[208] = -0.22014543f;
      sa[209] = -0.029621476f;
      sa[210] = -0.23108716f;
      sa[211] = -0.15601118f;
      sa[212] = 0.24900952f;
      sa[213] = -0.21788126f;
      sa[214] = -0.022876488f;
      sa[215] = 0.05756207f;
      sa[216] = 0.107466355f;
      sa[217] = 0.093470246f;
      sa[218] = -0.19118883f;
      sa[219] = 0.22699946f;
      sa[220] = -0.10251464f;
      sa[221] = 0.17241439f;
      sa[222] = 0.2981731f;
      sa[223] = 0.05972899f;
      sa[224] = 0.1015869f;
      sa[225] = 0.28721488f;
      sa[226] = -0.17124116f;
      sa[227] = 0.10463354f;
      sa[228] = 0.15271124f;
      sa[229] = 0.14681579f;
      sa[230] = 0.274502f;
      sa[231] = -0.26157388f;
      sa[232] = -0.23011972f;
      sa[233] = 0.16410601f;
      sa[234] = 0.21652882f;
      sa[235] = -0.035000566f;
      sa[236] = -0.005467705f;
      sa[237] = -0.1711597f;
      sa[238] = -0.18186554f;
      sa[239] = 0.1717471f;
      sa[240] = 0.027815644f;
      sa[241] = -0.20473093f;
      sa[242] = 0.04774063f;
      sa[243] = -0.10943395f;
      sa[244] = -0.14437687f;
      sa[245] = -0.04889154f;
      sa[246] = -0.14394714f;
      sa[247] = -0.030157382f;
      sa[248] = 0.14820102f;
      sa[249] = 0.11428186f;
      sa[250] = -0.07231847f;
      sa[251] = 0.013939273f;
      sa[252] = -0.14707334f;
      sa[253] = -0.112557344f;
      sa[254] = -0.1481784f;
      sa[255] = 0.30630887f;
      sa[256] = -0.18663116f;
      sa[257] = 0.28396985f;
      sa[258] = -0.19003856f;
      sa[259] = -0.08526941f;
      sa[260] = -0.14162828f;
      sa[261] = -0.031846136f;
      sa[262] = -0.21132396f;
      sa[263] = 0.34045705f;
      sa[264] = -0.13332206f;
      sa[265] = 0.07563865f;
      sa[266] = -0.2317286f;
      sa[267] = -0.18176553f;
      sa[268] = 0.2473205f;
      sa[269] = -0.034097876f;
      sa[270] = -0.16983211f;
      sa[271] = 0.1706251f;
      sa[272] = -0.0839963f;
      sa[273] = -0.1396744f;
      sa[274] = 0.14980032f;
      sa[275] = -0.10257762f;
      sa[276] = 0.046763048f;
      sa[277] = -0.26235136f;
      sa[278] = -0.2149167f;
      sa[279] = 0.14387994f;
      sa[280] = -0.21499202f;
      sa[281] = 0.17240904f;
      sa[282] = -0.12779109f;
      sa[283] = -0.10579844f;
      sa[284] = 0.028271087f;
      sa[285] = -0.14386788f;
      sa[286] = 0.19882739f;
      sa[287] = 0.13320132f;
      sa[288] = -0.2610677f;
      sa[289] = -0.12151647f;
      sa[290] = -0.046745732f;
      sa[291] = -0.13701226f;
      sa[292] = 0.11712354f;
      sa[293] = -0.16035242f;
      sa[294] = -0.036246486f;
      sa[295] = 0.13223752f;
      sa[296] = 0.12946391f;
      sa[297] = 0.2838849f;
      sa[298] = 0.062274985f;
      sa[299] = -0.24539168f;
      sa[300] = -0.042209417f;
      sa[301] = -0.1358242f;
      sa[302] = 0.0482318f;
      sa[303] = -8.454225E-4f;
      sa[304] = -0.1353523f;
      sa[305] = 0.060249228f;
      sa[306] = 0.31747475f;
      sa[307] = -0.073283456f;
      sa[308] = 0.099385485f;
      sa[309] = 0.18246323f;
      sa[310] = 0.22818953f;
      sa[311] = 0.37429205f;
      sa[312] = -0.12418668f;
      sa[313] = -0.13301861f;
      sa[314] = -0.09839392f;
      sa[315] = 0.13963258f;
      sa[316] = 0.028280964f;
      sa[317] = -0.014935704f;
      sa[318] = 0.10655091f;
      sa[319] = 0.36951935f;
      sa[320] = -0.15869713f;
      sa[321] = -0.02147891f;
      sa[322] = 0.3778847f;
      sa[323] = 0.05790875f;
      sa[324] = 0.024639282f;
      sa[325] = 0.18763763f;
      sa[326] = -0.40664664f;
      sa[327] = 0.09804883f;
      sa[328] = -0.10944558f;
      sa[329] = 0.25799847f;
      sa[330] = -0.14829181f;
      sa[331] = -0.15371192f;
      sa[332] = -0.21221086f;
      sa[333] = -0.015029384f;
      sa[334] = -0.04597019f;
      sa[335] = 0.42222753f;
      sa[336] = -0.16652621f;
      sa[337] = -0.12880394f;
      sa[338] = 0.3000187f;
      sa[339] = -0.26320785f;
      sa[340] = -0.4256397f;
      sa[341] = -0.47075576f;
      sa[342] = 0.033565093f;
      sa[343] = 0.007892375f;
      sa[344] = -0.20916641f;
      sa[345] = 0.12640774f;
      sa[346] = 0.180396f;
      sa[347] = -0.20154002f;
      sa[348] = 0.16828097f;
      sa[349] = -0.25379357f;
      sa[350] = -0.30041522f;
      sa[351] = -0.044225868f;
      sa[352] = 0.11123426f;
      sa[353] = -0.13907431f;
      sa[354] = 0.033648573f;
      sa[355] = -0.03176951f;
      sa[356] = -0.04181544f;
      sa[357] = 0.36134115f;
      sa[358] = -0.30958143f;
      sa[359] = -0.2495586f;
      sa[360] = 0.19537225f;
      sa[361] = -0.06750181f;
      sa[362] = -0.22034316f;
      sa[363] = 0.15506245f;
      sa[364] = -0.1480637f;
      sa[365] = -0.22542763f;
      sa[366] = -0.017879557f;
      sa[367] = -0.3422057f;
      sa[368] = -0.1273294f;
      sa[369] = 0.34455642f;
      sa[370] = -0.19125031f;
      sa[371] = 0.15924793f;
      sa[372] = 0.009027235f;
      sa[373] = 0.26849234f;
      sa[374] = -0.14153993f;
      sa[375] = -0.27106193f;
      sa[376] = -0.29279843f;
      sa[377] = -0.18679883f;
      sa[378] = -0.1059486f;
      sa[379] = 0.17541213f;
      sa[380] = -0.07250604f;
      sa[381] = -0.0681078f;
      sa[382] = 0.016021596f;
      sa[383] = -0.061936755f;
      sa[384] = -0.13436958f;
      sa[385] = 0.07757517f;
      sa[386] = -0.40123418f;
      sa[387] = -0.18142976f;
      sa[388] = 0.0852493f;
      sa[389] = -0.059339594f;
      sa[390] = -0.013529151f;
      sa[391] = -0.15328097f;
      sa[392] = 0.12457023f;
      sa[393] = 0.07420685f;
      sa[394] = 0.0721182f;
      sa[395] = 0.27029568f;
      sa[396] = 0.30611587f;
      sa[397] = -0.3438057f;
      sa[398] = 0.0013698603f;
      sa[399] = 0.053851727f;
      sa[400] = 0.16446686f;
      sa[401] = 0.24117239f;
      sa[402] = -0.12817323f;
      sa[403] = 0.017992815f;
      sa[404] = 0.2496436f;
      sa[405] = -0.24196714f;
      sa[406] = -0.014623109f;
      sa[407] = 0.13395204f;
      sa[408] = -0.17766017f;
      sa[409] = -0.22327143f;
      sa[410] = -0.096704185f;
      sa[411] = 0.14743686f;
      sa[412] = -0.20588027f;
      sa[413] = 0.061778158f;
      sa[414] = 0.066561714f;
      sa[415] = 0.47087094f;
      sa[416] = -0.14254393f;
      sa[417] = 0.029687742f;
      sa[418] = 0.0339866f;
      sa[419] = 0.36122698f;
      sa[420] = 0.18785618f;
      sa[421] = 0.27201477f;
      sa[422] = 0.23600753f;
      sa[423] = -0.050320208f;
      sa[424] = 0.1292667f;
      sa[425] = -0.0468525f;
      sa[426] = -0.25273222f;
      sa[427] = 0.18958841f;
      sa[428] = -0.11692686f;
      sa[429] = -0.2457124f;
      sa[430] = 0.32999042f;
      sa[431] = -0.02148932f;
      sa[432] = -0.017324142f;
      sa[433] = 0.29830864f;
      sa[434] = 0.32000625f;
      sa[435] = -0.044724893f;
      sa[436] = -0.20116794f;
      sa[437] = -0.21450676f;
      sa[438] = 0.017823795f;
      sa[439] = 0.044957068f;
      sa[440] = 0.2647931f;
      sa[441] = -0.16830839f;
      sa[442] = 0.06080726f;
      sa[443] = 1.179434E-5f;
      sa[444] = -0.18932949f;
      sa[445] = 0.06618577f;
      sa[446] = 0.18756129f;
      sa[447] = 0.12120087f;
      sa[448] = 0.31838834f;
      sa[449] = 0.3810979f;
      sa[450] = -0.30265322f;
      sa[451] = 0.17811461f;
      sa[452] = 0.22702505f;
      sa[453] = 0.022202587f;
      sa[454] = -0.0974476f;
      sa[455] = 0.010666329f;
      sa[456] = 0.051696718f;
      sa[457] = 0.0351067f;
      sa[458] = -0.21589482f;
      sa[459] = 0.3986347f;
      sa[460] = 0.25698078f;
      sa[461] = 0.30529884f;
      sa[462] = 0.10239745f;
      sa[463] = 0.2097625f;
      sa[464] = -0.3065574f;
      sa[465] = 0.10735145f;
      sa[466] = 0.07567434f;
      sa[467] = 0.16307408f;
      sa[468] = 0.029885333f;
      sa[469] = 0.22212024f;
      sa[470] = 0.13704988f;
      sa[471] = 0.024134636f;
      sa[472] = -0.005376604f;
      sa[473] = -0.17665243f;
      sa[474] = -0.135329f;
      sa[475] = 0.0052154055f;
      sa[476] = 0.16808905f;
      sa[477] = -0.12177918f;
      sa[478] = 0.108198024f;
      sa[479] = -0.18593825f;
      sa[480] = -0.38310474f;
      sa[481] = -0.2900869f;
      sa[482] = -0.4137776f;
      sa[483] = 0.07986893f;
      sa[484] = 0.1831865f;
      sa[485] = 0.11431805f;
      sa[486] = -0.04170489f;
      sa[487] = -0.11221288f;
      sa[488] = -0.22979504f;
      sa[489] = 0.08100206f;
      sa[490] = -0.08135105f;
      sa[491] = -0.20163135f;
      sa[492] = 0.24086265f;
      sa[493] = 0.23937976f;
      sa[494] = -0.15163739f;
      sa[495] = 0.20708738f;
      sa[496] = -0.011895319f;
      sa[497] = 0.09023669f;
      sa[498] = 0.15604837f;
      sa[499] = 0.13381587f;
      sa[500] = -0.077148415f;
      sa[501] = 0.0033266013f;
      sa[502] = 0.33968955f;
      sa[503] = 0.08836299f;
      sa[504] = -0.11982329f;
      sa[505] = -0.13060111f;
      sa[506] = 0.34362683f;
      sa[507] = -0.116059095f;
      sa[508] = 0.09569407f;
      sa[509] = 0.1874466f;
      sa[510] = 0.17323877f;
      sa[511] = 0.106516846f;
      sa[512] = 0.082919285f;
      sa[513] = -0.019287419f;
      sa[514] = 0.21628347f;
      sa[515] = -0.40432814f;
      sa[516] = 0.04678643f;
      sa[517] = 0.07816431f;
      sa[518] = 0.1425427f;
      sa[519] = -0.019673388f;
      sa[520] = 0.26912427f;
      sa[521] = 0.24823076f;
      sa[522] = 0.10458966f;
      sa[523] = 0.096381366f;
      sa[524] = 0.23457678f;
      sa[525] = 0.23196898f;
      sa[526] = 0.06739216f;
      sa[527] = -0.09691797f;
      sa[528] = 0.044719193f;
      sa[529] = 0.1159348f;
      sa[530] = -0.22872481f;
      sa[531] = 0.29131606f;
      sa[532] = 0.15308264f;
      sa[533] = 0.122383036f;
      sa[534] = 0.11266591f;
      sa[535] = -0.010792685f;
      sa[536] = -0.013680592f;
      sa[537] = -0.3093617f;
      sa[538] = 0.21806732f;
      sa[539] = 0.49707195f;
      sa[540] = -0.3238276f;
      sa[541] = -0.13865167f;
      sa[542] = -0.032366917f;
      sa[543] = -0.15430562f;
      sa[544] = 0.18060447f;
      sa[545] = 0.15367904f;
      sa[546] = 0.10216466f;
      sa[547] = 0.20003548f;
      sa[548] = -0.0010503706f;
      sa[549] = 0.13702786f;
      sa[550] = -0.052543703f;
      sa[551] = 0.061779145f;
      sa[552] = -0.004613631f;
      sa[553] = -0.033045698f;
      sa[554] = -0.16146833f;
      sa[555] = -0.18647495f;
      sa[556] = -0.13939637f;
      sa[557] = -0.20853975f;
      sa[558] = -0.06518585f;
      sa[559] = -0.1300359f;
      sa[560] = -0.37057468f;
      sa[561] = -0.14334089f;
      sa[562] = 0.1116207f;
      sa[563] = -0.17208982f;
      sa[564] = 0.23686402f;
      sa[565] = 0.02426001f;
      sa[566] = 0.34099475f;
      sa[567] = -0.05023205f;
      sa[568] = -0.1146459f;
      sa[569] = 0.007477218f;
      sa[570] = -0.009860129f;
      sa[571] = -0.1008239f;
      sa[572] = 0.09190514f;
      sa[573] = 0.32633874f;
      sa[574] = -0.018775437f;
      sa[575] = -0.33941004f;
      sa[576] = -0.15296754f;
      sa[577] = -0.082769774f;
      sa[578] = -0.0418206f;
      sa[579] = -0.015989456f;
      sa[580] = 0.095768414f;
      sa[581] = -0.0933255f;
      sa[582] = 0.11109249f;
      sa[583] = -0.06516113f;
      sa[584] = 0.09303938f;
      sa[585] = 0.11176773f;
      sa[586] = -0.117012426f;
      sa[587] = 0.010924325f;
      sa[588] = 0.09840182f;
      sa[589] = 0.16415696f;
      sa[590] = 0.03799151f;
      sa[591] = 0.004840436f;
      sa[592] = -0.41147295f;
      sa[593] = -0.2362247f;
      sa[594] = -0.0021362628f;
      sa[595] = 0.19154872f;
      sa[596] = 0.23257226f;
      sa[597] = -0.10234214f;
      sa[598] = 0.15427393f;
      sa[599] = 0.0885941f;
      sa[600] = -0.40739793f;
      sa[601] = 0.3162528f;
      sa[602] = -0.02091657f;
      sa[603] = 0.14046638f;
      sa[604] = 0.24150623f;
      sa[605] = 0.19623768f;
      sa[606] = 0.22610041f;
      sa[607] = 0.09266219f;
      sa[608] = 0.02402938f;
      sa[609] = 0.18428925f;
      sa[610] = 0.15910019f;
      sa[611] = -0.10759641f;
      sa[612] = -0.04411551f;
      sa[613] = 0.052505635f;
      sa[614] = 0.064689815f;
      sa[615] = -0.1345351f;
      sa[616] = 0.05602649f;
      sa[617] = -0.29635668f;
      sa[618] = -0.14986464f;
      sa[619] = -0.18087919f;
      sa[620] = -0.036215838f;
      sa[621] = -0.10322142f;
      sa[622] = -0.28319877f;
      sa[623] = -0.27560857f;
      sa[624] = -0.015527869f;
      sa[625] = 0.23302622f;
      sa[626] = -0.0062117865f;
      sa[627] = 0.2957529f;
      sa[628] = -0.28451386f;
      sa[629] = 0.061637692f;
      sa[630] = -0.5119879f;
      sa[631] = 0.40672272f;
      sa[632] = 0.14452654f;
      sa[633] = -0.10793853f;
      sa[634] = -0.109259084f;
      sa[635] = 0.27757204f;
      sa[636] = -0.13559231f;
      sa[637] = -0.056751624f;
      sa[638] = -0.17439228f;
      sa[639] = 0.0419534f;
      sa[640] = -0.11264093f;
      sa[641] = -0.29210502f;
      sa[642] = 0.19788356f;
      sa[643] = -0.33700994f;
      sa[644] = -0.19936453f;
      sa[645] = -0.36842668f;
      sa[646] = 0.47122875f;
      sa[647] = -0.22454171f;
      sa[648] = 0.09686268f;
      sa[649] = 0.0057552736f;
      sa[650] = 0.053588256f;
      sa[651] = -0.09022989f;
      sa[652] = 0.014495207f;
      sa[653] = -0.17227636f;
      sa[654] = -0.08966193f;
      sa[655] = -0.16198198f;
      sa[656] = 0.23093699f;
      sa[657] = 0.021220446f;
      sa[658] = -0.28073284f;
      sa[659] = -0.12615447f;
      sa[660] = -0.22279249f;
      sa[661] = -0.10086954f;
      sa[662] = -0.16714121f;
      sa[663] = 0.21318221f;
      sa[664] = -0.21556138f;
      sa[665] = 0.12528571f;
      sa[666] = -0.20828153f;
      sa[667] = -0.35796925f;
      sa[668] = 0.2636702f;
      sa[669] = -0.14849827f;
      sa[670] = 0.16789958f;
      sa[671] = 0.01601021f;
      sa[672] = -0.31212327f;
      sa[673] = 0.14818121f;
      sa[674] = 0.11231679f;
      sa[675] = -0.3449246f;
      sa[676] = -0.13778618f;
      sa[677] = -0.27184296f;
      sa[678] = 0.11360645f;
      sa[679] = -0.13872142f;
      sa[680] = 0.10000915f;
      sa[681] = 0.2028384f;
      sa[682] = -0.06243252f;
      sa[683] = -0.32222348f;
      sa[684] = -0.08852657f;
      sa[685] = 0.10272085f;
      sa[686] = -0.037218597f;
      sa[687] = -0.27733296f;
      sa[688] = -0.21543148f;
      sa[689] = -0.25098023f;
      sa[690] = -0.09215405f;
      sa[691] = 0.21342428f;
      sa[692] = -0.20489712f;
      sa[693] = -0.10401985f;
      sa[694] = 0.26749936f;
      sa[695] = -0.27957943f;
      sa[696] = -0.106799126f;
      sa[697] = -0.155128f;
      sa[698] = -0.20834643f;
      sa[699] = 0.3028581f;
      sa[700] = 0.20551981f;
      sa[701] = 0.20546846f;
      sa[702] = 0.39662483f;
      sa[703] = -0.05563345f;
      sa[704] = -0.24949174f;
      sa[705] = 0.005342541f;
      sa[706] = -0.16773865f;
      sa[707] = 0.059275925f;
      sa[708] = 0.0722859f;
      sa[709] = -0.24814163f;
      sa[710] = 0.42743456f;
      sa[711] = 0.033021465f;
      sa[712] = 0.0862279f;
      sa[713] = 0.31112415f;
      sa[714] = 0.25552326f;
      sa[715] = 0.29039142f;
      sa[716] = 0.0039582574f;
      sa[717] = 0.06602061f;
      sa[718] = -0.0120739415f;
      sa[719] = 0.24619398f;
      sa[720] = -0.20792772f;
      sa[721] = 0.26181445f;
      sa[722] = -0.09766719f;
      sa[723] = 0.09697389f;
      sa[724] = 0.12076053f;
      sa[725] = -0.15327725f;
      sa[726] = -0.07884808f;
      sa[727] = -0.24881922f;
      sa[728] = -0.09316904f;
      sa[729] = -0.022829248f;
      sa[730] = 0.14391935f;
      sa[731] = -0.14039627f;
      sa[732] = 0.21258098f;
      sa[733] = 0.3212921f;
      sa[734] = -0.030479627f;
      sa[735] = 0.32455727f;
      sa[736] = 0.051730353f;
      sa[737] = 0.33190605f;
      sa[738] = -0.24432813f;
      sa[739] = -0.1603572f;
      sa[740] = -0.25827804f;
      sa[741] = -0.30461904f;
      sa[742] = 0.14437088f;
      sa[743] = 0.005833714f;
      sa[744] = 0.016969664f;
      sa[745] = -0.19638804f;
      sa[746] = 0.030623f;
      sa[747] = -0.15624854f;
      sa[748] = -0.15530926f;
      sa[749] = -0.24861167f;
      sa[750] = 0.22067474f;
      sa[751] = 0.18562388f;
      sa[752] = -0.073180415f;
      sa[753] = 0.14606488f;
      sa[754] = 0.09222564f;
      sa[755] = 0.21450678f;
      sa[756] = -0.20399886f;
      sa[757] = 0.3506791f;
      sa[758] = -0.1459546f;
      sa[759] = -0.13864687f;
      sa[760] = -0.0908887f;
      sa[761] = 0.075723775f;
      sa[762] = -0.05673044f;
      sa[763] = 0.271137f;
      sa[764] = 0.08512873f;
      sa[765] = -0.081586696f;
      sa[766] = -0.19366582f;
      sa[767] = 0.006504022f;
      sa[768] = -0.10111287f;
      sa[769] = -0.20530249f;
      sa[770] = 0.09249849f;
      sa[771] = 0.087002195f;
      sa[772] = 0.0647401f;
      sa[773] = -0.227057f;
      sa[774] = 0.13626948f;
      sa[775] = 0.33268887f;
      sa[776] = -0.01371871f;
      sa[777] = 0.06022577f;
      sa[778] = 0.17780106f;
      sa[779] = -0.14828983f;
      sa[780] = -0.07306267f;
      sa[781] = -0.015795738f;
      sa[782] = 0.09126508f;
      sa[783] = -0.1670072f;
      sa[784] = -0.09157654f;
      sa[785] = -0.08645028f;
      sa[786] = -0.061790824f;
      sa[787] = -0.13580896f;
      sa[788] = -0.30267838f;
      sa[789] = 0.09701589f;
      sa[790] = -0.05447501f;
      sa[791] = -0.018596388f;
      sa[792] = 0.09676352f;
      sa[793] = -0.08520065f;
      sa[794] = -0.089432396f;
      sa[795] = -0.04117106f;
      sa[796] = 0.19480993f;
      sa[797] = -0.2659574f;
      sa[798] = -0.3542858f;
      sa[799] = -0.13242064f;
      sa[800] = 0.11635978f;
      sa[801] = 0.1288773f;
      sa[802] = 0.15670985f;
      sa[803] = 0.09192199f;
      sa[804] = 0.14555813f;
      sa[805] = 0.21132003f;
      sa[806] = 0.16972914f;
      sa[807] = 0.1832789f;
      sa[808] = -0.015620664f;
      sa[809] = -0.19728675f;
      sa[810] = 0.17416146f;
      sa[811] = -0.028603325f;
      sa[812] = 0.09381978f;
      sa[813] = -0.31693572f;
      sa[814] = -0.015346922f;
      sa[815] = -0.20366637f;
      sa[816] = -0.026529707f;
      sa[817] = -0.22881912f;
      sa[818] = 0.08297702f;
      sa[819] = -0.014374112f;
      sa[820] = -0.31878713f;
      sa[821] = -0.19807862f;
      sa[822] = -0.30219075f;
      sa[823] = 0.07216383f;
      sa[824] = 0.23528816f;
      sa[825] = 0.3944027f;
      sa[826] = -0.37997904f;
      sa[827] = -0.35890567f;
      sa[828] = 0.11000869f;
      sa[829] = -0.05299065f;
      sa[830] = 0.22205937f;
      sa[831] = 0.2561551f;
      sa[832] = 0.16325305f;
      sa[833] = 0.1279155f;
      sa[834] = 0.24071379f;
      sa[835] = -0.062490948f;
      sa[836] = 0.18761022f;
      sa[837] = -0.16589695f;
      sa[838] = 0.11455284f;
      sa[839] = -0.07239804f;
      sa[840] = 0.18599497f;
      sa[841] = 0.14931813f;
      sa[842] = 0.19097124f;
      sa[843] = 0.046456587f;
      sa[844] = 0.06949892f;
      sa[845] = 0.14066412f;
      sa[846] = -0.2417815f;
      sa[847] = -0.25867468f;
      sa[848] = 0.1554964f;
      sa[849] = 0.20702721f;
      sa[850] = -0.011870408f;
      sa[851] = 0.014987739f;
      sa[852] = 0.24855982f;
      sa[853] = 0.15295593f;
      sa[854] = 0.21900262f;
      sa[855] = 0.11749337f;
      sa[856] = 0.038368944f;
      sa[857] = -0.20522223f;
      sa[858] = 0.12930329f;
      sa[859] = -0.009043059f;
      sa[860] = 0.39282748f;
      sa[861] = -0.05610512f;
      sa[862] = -0.31841877f;
      sa[863] = -0.057956003f;
      sa[864] = -0.23915532f;
      sa[865] = 0.21132605f;
      sa[866] = -0.16665782f;
      sa[867] = -0.10883504f;
      sa[868] = -0.21214397f;
      sa[869] = 0.10482738f;
      sa[870] = -0.14406551f;
      sa[871] = 0.14754267f;
      sa[872] = 0.1971475f;
      sa[873] = -0.05882502f;
      sa[874] = 0.017256925f;
      sa[875] = -0.41386738f;
      sa[876] = -0.27746704f;
      sa[877] = -0.29877192f;
      sa[878] = -0.0546646f;
      sa[879] = 0.150671f;
      sa[880] = -0.14271942f;
      sa[881] = -0.13583246f;
      sa[882] = 0.29486802f;
      sa[883] = 0.15224497f;
      sa[884] = -0.12995003f;
      sa[885] = -0.108482026f;
      sa[886] = 0.040268194f;
      sa[887] = -0.0034698786f;
      sa[888] = -0.05044387f;
      sa[889] = 0.0523961f;
      sa[890] = -0.23876414f;
      sa[891] = 0.4110102f;
      sa[892] = 0.1941555f;
      sa[893] = 0.3242018f;
      sa[894] = 0.027925586f;
      sa[895] = 0.30420697f;
      sa[896] = -0.20475265f;
      sa[897] = 0.14453165f;
      sa[898] = 0.04247776f;
      sa[899] = 0.28238103f;
      sa[900] = -0.11591579f;
      sa[901] = 0.09450943f;
      sa[902] = -0.25790134f;
      sa[903] = -0.08399176f;
      sa[904] = 0.21801092f;
      sa[905] = 0.2188235f;
      sa[906] = -0.2115361f;
      sa[907] = -0.27924037f;
      sa[908] = -0.2340185f;
      sa[909] = 0.11261857f;
      sa[910] = 0.079286486f;
      sa[911] = -0.11967689f;
      sa[912] = 0.0028743527f;
      sa[913] = 0.072953075f;
      sa[914] = -0.19273028f;
      sa[915] = 0.04093733f;
      sa[916] = 0.22627196f;
      sa[917] = 0.20581977f;
      sa[918] = 0.024964914f;
      sa[919] = 0.09923866f;
      sa[920] = 0.15422836f;
      sa[921] = -0.059362847f;
      sa[922] = -0.10951205f;
      sa[923] = -0.066718675f;
      sa[924] = -0.0805939f;
      sa[925] = -0.1591349f;
      sa[926] = 0.12926523f;
      sa[927] = 0.04343158f;
      sa[928] = 0.25315246f;
      sa[929] = 0.13867952f;
      sa[930] = 0.1873156f;
      sa[931] = -0.023717124f;
      sa[932] = 0.1507646f;
      sa[933] = -0.096884444f;
      sa[934] = 0.34363234f;
      sa[935] = -0.060697876f;
      sa[936] = 0.040550046f;
      sa[937] = 0.19077684f;
      sa[938] = -0.14068097f;
      sa[939] = -0.06391361f;
      sa[940] = -0.08899069f;
      sa[941] = -0.35003632f;
      sa[942] = -0.2686467f;
      sa[943] = -0.16460173f;
      sa[944] = -0.22050966f;
      sa[945] = -0.0318902f;
      sa[946] = 0.07200534f;
      sa[947] = 0.1274339f;
      sa[948] = 0.104030825f;
      sa[949] = -0.20050792f;
      sa[950] = 0.11242661f;
      sa[951] = -0.07564516f;
      sa[952] = -0.23309575f;
      sa[953] = -0.25579327f;
      sa[954] = -0.14386775f;
      sa[955] = 0.13194296f;
      sa[956] = 0.0075956387f;
      sa[957] = 0.026831537f;
      sa[958] = 0.07801533f;
      sa[959] = -0.13875203f;
      sa[960] = 0.27666184f;
      sa[961] = -0.09700601f;
      sa[962] = -0.058845658f;
      sa[963] = -0.056393966f;
      sa[964] = -0.13734381f;
      sa[965] = 0.27655393f;
      sa[966] = -0.104870014f;
      sa[967] = -0.19842355f;
      sa[968] = 0.08032509f;
      sa[969] = -0.020212393f;
      sa[970] = 0.41105026f;
      sa[971] = 0.043912813f;
      sa[972] = -0.12042455f;
      sa[973] = -0.2915797f;
      sa[974] = -0.36653012f;
      sa[975] = -0.13890317f;
      sa[976] = -0.07456742f;
      sa[977] = 0.10162563f;
      sa[978] = -0.01641494f;
      sa[979] = 0.08098004f;
      sa[980] = 0.13726693f;
      sa[981] = -0.21920402f;
      sa[982] = 0.15231062f;
      sa[983] = 0.14630756f;
      sa[984] = -0.24991995f;
      sa[985] = 0.11139545f;
      sa[986] = -0.20392762f;
      sa[987] = 0.07236294f;
      sa[988] = 0.13500403f;
      sa[989] = 0.21852173f;
      sa[990] = 0.14813152f;
      sa[991] = -0.17822942f;
      sa[992] = -0.22967623f;
      sa[993] = -0.08918007f;
      sa[994] = -0.12716502f;
      sa[995] = -0.29680982f;
      sa[996] = 0.07665337f;
      sa[997] = 0.16526839f;
      sa[998] = 0.062432956f;
      sa[999] = 0.14796019f;
      sa[1000] = -0.032400016f;
      sa[1001] = 0.13570465f;
      sa[1002] = 0.23887032f;
      sa[1003] = -0.27999687f;
      sa[1004] = 0.22861035f;
      sa[1005] = -0.12379647f;
      sa[1006] = -0.13501035f;
      sa[1007] = -0.05058999f;
      sa[1008] = 0.17615649f;
      sa[1009] = 0.16023982f;
      sa[1010] = 0.112233065f;
      sa[1011] = 0.27034068f;
      sa[1012] = -0.07130307f;
      sa[1013] = 0.13867196f;
      sa[1014] = 0.2585879f;
      sa[1015] = -0.22860111f;
      sa[1016] = 0.24885574f;
      sa[1017] = 0.10691655f;
      sa[1018] = -0.14055923f;
      sa[1019] = 0.05633139f;
      sa[1020] = -0.23995543f;
      sa[1021] = 0.0679845f;
      sa[1022] = 0.21374935f;
      sa[1023] = 0.10612512f;
      sa[1024] = 0.17804885f;
      sa[1025] = 0.1673158f;
      sa[1026] = 0.17829132f;
      sa[1027] = 0.07294296f;
      sa[1028] = 0.29657063f;
      sa[1029] = -0.00824864f;
      sa[1030] = -0.16562308f;
      sa[1031] = -0.09731288f;
      sa[1032] = -0.16498941f;
      sa[1033] = -0.016080767f;
      sa[1034] = -0.045730755f;
      sa[1035] = -0.17641799f;
      sa[1036] = 0.23381796f;
      sa[1037] = -0.008648998f;
      sa[1038] = -0.22588775f;
      sa[1039] = 0.23436785f;
      sa[1040] = 0.02011382f;
      sa[1041] = 0.126775f;
      sa[1042] = -0.38845482f;
      sa[1043] = -0.0011030341f;
      sa[1044] = 0.3126268f;
      sa[1045] = 0.24146326f;
      sa[1046] = -0.19110136f;
      sa[1047] = -0.13547915f;
      sa[1048] = 0.14504734f;
      sa[1049] = -0.05858061f;
      sa[1050] = 0.11913259f;
      sa[1051] = -0.19553499f;
      sa[1052] = 0.2043845f;
      sa[1053] = 0.32535592f;
      sa[1054] = 0.23082256f;
      sa[1055] = 0.085134625f;
      sa[1056] = 0.29244307f;
      sa[1057] = -0.1421168f;
      sa[1058] = 0.2702639f;
      sa[1059] = -0.13769412f;
      sa[1060] = -0.24237168f;
      sa[1061] = 0.07448092f;
      sa[1062] = -0.08809561f;
      sa[1063] = 0.15844722f;
      sa[1064] = 0.12765506f;
      sa[1065] = -0.021829646f;
      sa[1066] = 0.25492573f;
      sa[1067] = -0.29563558f;
      sa[1068] = -0.32963756f;
      sa[1069] = 0.19625844f;
      sa[1070] = -0.04395059f;
      sa[1071] = 0.13788918f;
      sa[1072] = -0.2777423f;
      sa[1073] = 0.0051218304f;
      sa[1074] = 0.09069761f;
      sa[1075] = -0.30649287f;
      sa[1076] = -0.15741308f;
      sa[1077] = 0.09280469f;
      sa[1078] = 0.05318068f;
      sa[1079] = -0.011840007f;
      sa[1080] = 0.1579074f;
      sa[1081] = 0.04631184f;
      sa[1082] = -0.41431963f;
      sa[1083] = -0.098264396f;
      sa[1084] = 0.2956053f;
      sa[1085] = -0.07484528f;
      sa[1086] = -0.13892975f;
      sa[1087] = -0.18853508f;
      sa[1088] = -0.19346279f;
      sa[1089] = -0.028702883f;
      sa[1090] = -0.203227f;
      sa[1091] = 0.18228574f;
      sa[1092] = -0.08904657f;
      sa[1093] = -0.006232568f;
      sa[1094] = 0.26076192f;
      sa[1095] = -0.15941338f;
      sa[1096] = -0.084818766f;
      sa[1097] = -0.13101132f;
      sa[1098] = 0.13002399f;
      sa[1099] = 0.09820068f;
      sa[1100] = -0.12113761f;
      sa[1101] = 0.117041f;
      sa[1102] = -0.1173225f;
      sa[1103] = 0.23092267f;
      sa[1104] = -0.4357874f;
      sa[1105] = -0.11228665f;
      sa[1106] = -0.045083757f;
      sa[1107] = 0.1530248f;
      sa[1108] = -0.10809403f;
      sa[1109] = 0.30552268f;
      sa[1110] = 0.3170816f;
      sa[1111] = -0.1705935f;
      sa[1112] = 0.23851351f;
      sa[1113] = 0.29534173f;
      sa[1114] = 0.07940978f;
      sa[1115] = 0.14437063f;
      sa[1116] = 0.0033519398f;
      sa[1117] = -0.14810367f;
      sa[1118] = -0.118079856f;
      sa[1119] = -0.02292596f;
      sa[1120] = 0.18554229f;
      sa[1121] = 0.11579126f;
      sa[1122] = 0.34500015f;
      sa[1123] = 0.32821113f;
      sa[1124] = 0.05671152f;
      sa[1125] = -0.050216686f;
      sa[1126] = 0.23007767f;
      sa[1127] = 0.23475023f;
      sa[1128] = 0.049179275f;
      sa[1129] = -0.044893652f;
      sa[1130] = 0.30826092f;
      sa[1131] = 0.34123763f;
      sa[1132] = -0.15494058f;
      sa[1133] = -0.11584048f;
      sa[1134] = 0.095312126f;
      sa[1135] = -0.30628282f;
      sa[1136] = -0.012041122f;
      sa[1137] = 0.18826391f;
      sa[1138] = 0.009494174f;
      sa[1139] = 0.11703236f;
      sa[1140] = 0.21082276f;
      sa[1141] = -0.2655782f;
      sa[1142] = -0.044641223f;
      sa[1143] = -0.05583435f;
      sa[1144] = -0.29463047f;
      sa[1145] = 0.07184403f;
      sa[1146] = 0.19168231f;
      sa[1147] = -0.12117731f;
      sa[1148] = 0.0077542798f;
      sa[1149] = -0.03686073f;
      sa[1150] = -0.28281283f;
      sa[1151] = -0.2781409f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_11_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_11_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.1812377f;
      sa[1] = 0.048098695f;
      sa[2] = -0.58328325f;
      sa[3] = -0.99279547f;
      sa[4] = 0.09265601f;
      sa[5] = 0.3922818f;
      sa[6] = 1.3387057f;
      sa[7] = -0.5727972f;
      sa[8] = -0.94932693f;
      sa[9] = 0.8525465f;
      sa[10] = 0.07526898f;
      sa[11] = 0.5931454f;
      sa[12] = 0.070488274f;
      sa[13] = -0.045222353f;
      sa[14] = -1.3541046f;
      sa[15] = 1.1735536f;
      sa[16] = 1.5543381f;
      sa[17] = -0.4693431f;
      sa[18] = 0.052346006f;
      sa[19] = -0.45060617f;
      sa[20] = 1.085436f;
      sa[21] = 0.020647664f;
      sa[22] = -0.8986679f;
      sa[23] = 0.7298383f;
      sa[24] = -1.4463964f;
      sa[25] = 0.5581407f;
      sa[26] = -0.24962845f;
      sa[27] = 1.5386326f;
      sa[28] = -1.2745593f;
      sa[29] = -0.43161178f;
      sa[30] = 0.44813243f;
      sa[31] = -0.5992354f;
      sa[32] = -1.119505f;
      sa[33] = -1.4859948f;
      sa[34] = 0.180817f;
      sa[35] = 1.3363793f;
      sa[36] = -0.3126787f;
      sa[37] = -0.022157466f;
      sa[38] = 0.2279493f;
      sa[39] = 0.75524706f;
      sa[40] = -0.767483f;
      sa[41] = -1.3231465f;
      sa[42] = -1.0814762f;
      sa[43] = -1.5961187f;
      sa[44] = 0.17691012f;
      sa[45] = -1.2246019f;
      sa[46] = 1.2051347f;
      sa[47] = 1.1928228f;
      sa[48] = -1.3960392f;
      sa[49] = -1.2172014f;
      sa[50] = 0.47916144f;
      sa[51] = -0.20812333f;
      sa[52] = 0.8508469f;
      sa[53] = 0.8261858f;
      sa[54] = -0.24071498f;
      sa[55] = 1.1618167f;
      sa[56] = -0.9743126f;
      sa[57] = -1.1173227f;
      sa[58] = 0.08820771f;
      sa[59] = -0.15367794f;
      sa[60] = 1.4036766f;
      sa[61] = -0.6379854f;
      sa[62] = -0.3687499f;
      sa[63] = 0.694278f;
      sa[64] = 1.452555f;
      sa[65] = -0.68173784f;
      sa[66] = 0.60241824f;
      sa[67] = 1.5924667f;
      sa[68] = 0.6386598f;
      sa[69] = -1.1158762f;
      sa[70] = -1.4362594f;
      sa[71] = -0.40666187f;
      sa[72] = -1.3631936f;
      sa[73] = 1.2863278f;
      sa[74] = 1.4013097f;
      sa[75] = -0.20559572f;
      sa[76] = 0.83226466f;
      sa[77] = 0.47059014f;
      sa[78] = -1.4198569f;
      sa[79] = 1.0378509f;
      sa[80] = -0.7979012f;
      sa[81] = 0.2520364f;
      sa[82] = 0.92056286f;
      sa[83] = -0.6678945f;
      sa[84] = -1.5432028f;
      sa[85] = -1.190336f;
      sa[86] = 0.35945562f;
      sa[87] = 1.1719432f;
      sa[88] = -1.571693f;
      sa[89] = -0.5822636f;
      sa[90] = -0.9647077f;
      sa[91] = 1.4281025f;
      sa[92] = -0.28573528f;
      sa[93] = 0.27299637f;
      sa[94] = -1.4532963f;
      sa[95] = -0.18888418f;
      sa[96] = -1.0183442f;
      sa[97] = 0.18640639f;
      sa[98] = -0.085195445f;
      sa[99] = 0.421311f;
      sa[100] = -1.2067325f;
      sa[101] = -0.5165379f;
      sa[102] = 1.2301339f;
      sa[103] = 0.08443322f;
      sa[104] = -0.16461603f;
      sa[105] = -0.6558566f;
      sa[106] = 1.4364434f;
      sa[107] = 1.2191615f;
      sa[108] = 0.87780344f;
      sa[109] = 0.16825652f;
      sa[110] = 0.76757556f;
      sa[111] = -0.88288814f;
      sa[112] = -1.1016514f;
      sa[113] = 0.3494251f;
      sa[114] = 0.114513606f;
      sa[115] = -0.4503629f;
      sa[116] = 1.1587962f;
      sa[117] = 0.072403766f;
      sa[118] = -1.3741556f;
      sa[119] = -0.76721025f;
      sa[120] = -0.33379123f;
      sa[121] = 0.99168956f;
      sa[122] = 0.0060765645f;
      sa[123] = 0.02642458f;
      sa[124] = -0.69371283f;
      sa[125] = 0.81378955f;
      sa[126] = -1.0254132f;
      sa[127] = 0.31410939f;
      sa[128] = -0.8825358f;
      sa[129] = 0.7746745f;
      sa[130] = -0.38900256f;
      sa[131] = 0.7949472f;
      sa[132] = 0.34790874f;
      sa[133] = 0.5402437f;
      sa[134] = 0.621658f;
      sa[135] = -1.0977889f;
      sa[136] = 0.5837766f;
      sa[137] = -0.6049611f;
      sa[138] = -0.094091855f;
      sa[139] = 1.2714636f;
      sa[140] = -0.5248753f;
      sa[141] = -0.027316365f;
      sa[142] = 0.33433154f;
      sa[143] = -0.7083579f;
      sa[144] = 1.0126908f;
      sa[145] = -0.6888382f;
      sa[146] = 0.10781348f;
      sa[147] = -0.18259868f;
      sa[148] = -0.84886134f;
      sa[149] = 1.1347998f;
      sa[150] = -1.0684735f;
      sa[151] = -1.6291491f;
      sa[152] = 1.6446787f;
      sa[153] = -0.49558103f;
      sa[154] = 1.3324699f;
      sa[155] = -1.4378043f;
      sa[156] = -1.470967f;
      sa[157] = -1.0804857f;
      sa[158] = -0.1925085f;
      sa[159] = -0.63000685f;
      sa[160] = 1.3233511f;
      sa[161] = -1.1595101f;
      sa[162] = 1.6304047f;
      sa[163] = -0.7718866f;
      sa[164] = 0.7874958f;
      sa[165] = -0.45114085f;
      sa[166] = 1.3239043f;
      sa[167] = -1.3812524f;
      sa[168] = 1.0150206f;
      sa[169] = -1.5724828f;
      sa[170] = 1.0867486f;
      sa[171] = 0.88619566f;
      sa[172] = 1.4943533f;
      sa[173] = 1.599993f;
      sa[174] = -0.08050684f;
      sa[175] = 0.017198581f;
      sa[176] = -0.8502072f;
      sa[177] = 0.06715943f;
      sa[178] = -1.0592464f;
      sa[179] = -0.12337903f;
      sa[180] = -1.3184277f;
      sa[181] = -0.9782056f;
      sa[182] = 0.27544823f;
      sa[183] = -0.9568943f;
      sa[184] = 1.4970502f;
      sa[185] = 1.2634385f;
      sa[186] = -0.48507088f;
      sa[187] = -0.8221053f;
      sa[188] = -0.5476962f;
      sa[189] = -0.78271806f;
      sa[190] = -1.4714484f;
      sa[191] = -1.0392238f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_11_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_11_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_11_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


