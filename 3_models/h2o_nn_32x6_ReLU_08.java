/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:08:21.559+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_08

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_08 > h2o_nn_32x6_ReLU_08.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_08.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_08", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_08 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_08_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_08_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_08_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_08_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_08_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_08_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_08_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_08_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_08_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_08.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_08_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24528301886792453,0.12264150943396226,0.12264150943396226,0.1320754716981132,0.24528301886792453,0.1320754716981132};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_08() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-5745841948133415488L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_08_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_08_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_08_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_08_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_08_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_08_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_08_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_08_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_08_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.36482277990164563;
      sa[1] = 0.46569037760576604;
      sa[2] = 0.491005236178874;
      sa[3] = 0.4053952049523494;
      sa[4] = 0.4923283077418801;
      sa[5] = 0.5092978752169457;
      sa[6] = 0.4930796102230679;
      sa[7] = 0.3738429231033677;
      sa[8] = 0.5417789436655643;
      sa[9] = 0.48698842569652284;
      sa[10] = 0.44282804571886486;
      sa[11] = 0.6052299336073558;
      sa[12] = 0.6385138811583795;
      sa[13] = 0.4722520572209933;
      sa[14] = 0.6190757542355056;
      sa[15] = 0.5065525246939385;
      sa[16] = 0.4609605167081085;
      sa[17] = 0.5229662924699406;
      sa[18] = 0.4465865309670026;
      sa[19] = 0.5303721094997236;
      sa[20] = 0.6073935093386053;
      sa[21] = 0.47387727004807256;
      sa[22] = 0.4292683778222081;
      sa[23] = 0.49697347984129103;
      sa[24] = 0.5144758256789599;
      sa[25] = 0.5321549740494295;
      sa[26] = 0.5172934388673283;
      sa[27] = 0.4993075636694211;
      sa[28] = 0.5095264967744971;
      sa[29] = 0.5325762591236163;
      sa[30] = 0.4379252952605938;
      sa[31] = 0.4834025162719348;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_08_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_08_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.001214980313702789;
      sa[1] = -0.016230925434157512;
      sa[2] = -0.03286372207951873;
      sa[3] = 7.311295215637107E-4;
      sa[4] = -0.046164728500203873;
      sa[5] = 0.02318330640675884;
    }
  }
}
class h2o_nn_32x6_ReLU_08_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_08_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_08_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.02233617f;
      sa[1] = 0.16660208f;
      sa[2] = 0.12663184f;
      sa[3] = 0.17802647f;
      sa[4] = -0.19804955f;
      sa[5] = -0.24975733f;
      sa[6] = -0.07571166f;
      sa[7] = 0.2146031f;
      sa[8] = 0.07777657f;
      sa[9] = -0.19085743f;
      sa[10] = -0.1351729f;
      sa[11] = -0.20383278f;
      sa[12] = 0.011334545f;
      sa[13] = -0.32833338f;
      sa[14] = -0.21749736f;
      sa[15] = -0.086605825f;
      sa[16] = 0.05446841f;
      sa[17] = 0.10828874f;
      sa[18] = -0.15966946f;
      sa[19] = 0.1904194f;
      sa[20] = 0.17053127f;
      sa[21] = -0.32537f;
      sa[22] = 0.21117415f;
      sa[23] = -0.15093607f;
      sa[24] = 0.21905322f;
      sa[25] = 0.18124937f;
      sa[26] = -0.21814036f;
      sa[27] = 0.29770473f;
      sa[28] = 0.16207704f;
      sa[29] = -0.32872826f;
      sa[30] = -0.23424661f;
      sa[31] = 0.04453095f;
      sa[32] = 0.21232808f;
      sa[33] = -0.19448166f;
      sa[34] = 0.07113155f;
      sa[35] = -0.102851026f;
      sa[36] = 0.07324028f;
      sa[37] = 0.21571964f;
      sa[38] = -0.05184689f;
      sa[39] = 0.18733534f;
      sa[40] = -0.05797632f;
      sa[41] = -0.123945884f;
      sa[42] = -0.2002556f;
      sa[43] = -0.13714789f;
      sa[44] = 0.29939654f;
      sa[45] = -0.27071434f;
      sa[46] = 0.04174018f;
      sa[47] = 0.017211273f;
      sa[48] = 0.22100393f;
      sa[49] = 0.26496875f;
      sa[50] = 0.1956823f;
      sa[51] = -0.41487074f;
      sa[52] = -0.12650654f;
      sa[53] = 0.124523416f;
      sa[54] = 0.22596994f;
      sa[55] = 0.229563f;
      sa[56] = -0.18600643f;
      sa[57] = -0.3381401f;
      sa[58] = 0.20674238f;
      sa[59] = -0.27160844f;
      sa[60] = -0.16617432f;
      sa[61] = 0.15650329f;
      sa[62] = 0.11094636f;
      sa[63] = -0.19242708f;
      sa[64] = 0.11249375f;
      sa[65] = 0.06080651f;
      sa[66] = -0.011798478f;
      sa[67] = 0.0013299118f;
      sa[68] = -0.10399749f;
      sa[69] = -0.05868443f;
      sa[70] = -0.08060147f;
      sa[71] = 0.38403326f;
      sa[72] = -0.1700542f;
      sa[73] = 0.23958795f;
      sa[74] = -0.19794872f;
      sa[75] = -0.030991474f;
      sa[76] = -0.1376595f;
      sa[77] = -0.04578345f;
      sa[78] = -0.030476093f;
      sa[79] = 0.23248813f;
      sa[80] = -0.291565f;
      sa[81] = -0.018284446f;
      sa[82] = -0.0017959288f;
      sa[83] = 0.15206628f;
      sa[84] = -0.049704805f;
      sa[85] = -0.2013368f;
      sa[86] = 0.09138629f;
      sa[87] = 0.30025306f;
      sa[88] = 0.24858086f;
      sa[89] = 0.10658239f;
      sa[90] = -0.13973507f;
      sa[91] = 0.007268801f;
      sa[92] = 0.10055617f;
      sa[93] = -0.15575412f;
      sa[94] = -0.14933473f;
      sa[95] = -0.14611012f;
      sa[96] = 0.08026189f;
      sa[97] = 0.06582234f;
      sa[98] = 0.14057262f;
      sa[99] = 0.028811896f;
      sa[100] = -0.060662657f;
      sa[101] = -0.16202442f;
      sa[102] = -0.24875356f;
      sa[103] = -0.021907084f;
      sa[104] = -0.038178105f;
      sa[105] = -0.028485678f;
      sa[106] = -0.21949786f;
      sa[107] = 0.18419194f;
      sa[108] = 0.2507507f;
      sa[109] = -0.12761852f;
      sa[110] = -0.20989972f;
      sa[111] = 0.05480143f;
      sa[112] = 0.14792733f;
      sa[113] = 0.06080514f;
      sa[114] = -0.1461824f;
      sa[115] = 0.0028927478f;
      sa[116] = -0.18655801f;
      sa[117] = 0.14910232f;
      sa[118] = -0.23308341f;
      sa[119] = 0.12363992f;
      sa[120] = 0.22851656f;
      sa[121] = 0.2574345f;
      sa[122] = 0.28154805f;
      sa[123] = 0.35604426f;
      sa[124] = 0.2859036f;
      sa[125] = 0.38895437f;
      sa[126] = -0.2702822f;
      sa[127] = -0.40077138f;
      sa[128] = 0.10961771f;
      sa[129] = 0.19409448f;
      sa[130] = -0.11693935f;
      sa[131] = 0.27214134f;
      sa[132] = 0.12181942f;
      sa[133] = -0.26678038f;
      sa[134] = 0.050910193f;
      sa[135] = -0.22920528f;
      sa[136] = -0.21637146f;
      sa[137] = 0.036530674f;
      sa[138] = 0.17505655f;
      sa[139] = 0.0708359f;
      sa[140] = -0.11576971f;
      sa[141] = -0.06633198f;
      sa[142] = 0.15148078f;
      sa[143] = -0.22369063f;
      sa[144] = 0.24079771f;
      sa[145] = -0.26646274f;
      sa[146] = -0.37833947f;
      sa[147] = 0.10917919f;
      sa[148] = 0.21350414f;
      sa[149] = 0.13790102f;
      sa[150] = 0.31005666f;
      sa[151] = -0.14054386f;
      sa[152] = -0.022588072f;
      sa[153] = 0.2463618f;
      sa[154] = 0.17972061f;
      sa[155] = -0.13182412f;
      sa[156] = 0.085346214f;
      sa[157] = -0.25763744f;
      sa[158] = 0.058945775f;
      sa[159] = 0.087088004f;
      sa[160] = -0.059535142f;
      sa[161] = 0.07779132f;
      sa[162] = 0.0242687f;
      sa[163] = -0.27007172f;
      sa[164] = 0.23195179f;
      sa[165] = 0.03036723f;
      sa[166] = -0.0039364784f;
      sa[167] = 0.062108748f;
      sa[168] = 0.06447897f;
      sa[169] = 0.24833797f;
      sa[170] = 0.08899125f;
      sa[171] = -0.026824608f;
      sa[172] = -0.09953119f;
      sa[173] = -0.15710276f;
      sa[174] = -0.08273127f;
      sa[175] = -0.23447081f;
      sa[176] = -0.0035483385f;
      sa[177] = 0.056639213f;
      sa[178] = -0.06998612f;
      sa[179] = 0.1554438f;
      sa[180] = -0.071662426f;
      sa[181] = -0.39653805f;
      sa[182] = -0.19701928f;
      sa[183] = 0.4286542f;
      sa[184] = 0.23231564f;
      sa[185] = 0.096354246f;
      sa[186] = -0.33733693f;
      sa[187] = -0.042943224f;
      sa[188] = -0.013231553f;
      sa[189] = 0.05513663f;
      sa[190] = 9.597277E-4f;
      sa[191] = -0.343361f;
      sa[192] = -0.13291022f;
      sa[193] = 0.15421784f;
      sa[194] = 0.057669204f;
      sa[195] = 0.09915057f;
      sa[196] = 0.13152544f;
      sa[197] = -0.19566867f;
      sa[198] = 0.20721532f;
      sa[199] = -0.07029208f;
      sa[200] = 0.013360272f;
      sa[201] = -0.29697007f;
      sa[202] = 0.115701176f;
      sa[203] = -0.10307962f;
      sa[204] = -0.21573205f;
      sa[205] = 0.15712143f;
      sa[206] = 0.32466587f;
      sa[207] = 0.07156633f;
      sa[208] = -0.27305922f;
      sa[209] = -0.11304643f;
      sa[210] = -0.3250651f;
      sa[211] = -0.33281094f;
      sa[212] = 0.32191426f;
      sa[213] = -0.42969218f;
      sa[214] = -0.020154482f;
      sa[215] = 0.017461998f;
      sa[216] = 0.022765843f;
      sa[217] = 0.16600993f;
      sa[218] = -0.085052945f;
      sa[219] = 0.34448206f;
      sa[220] = -0.2781248f;
      sa[221] = 0.006580037f;
      sa[222] = 0.1464857f;
      sa[223] = -0.07907642f;
      sa[224] = 0.09434362f;
      sa[225] = 0.1260851f;
      sa[226] = -0.2098608f;
      sa[227] = 0.061658647f;
      sa[228] = 0.09870446f;
      sa[229] = 0.071680605f;
      sa[230] = 0.21688344f;
      sa[231] = -0.33585513f;
      sa[232] = -0.21394393f;
      sa[233] = 0.011412502f;
      sa[234] = 0.075479604f;
      sa[235] = -0.15421687f;
      sa[236] = -0.07854754f;
      sa[237] = -0.28698975f;
      sa[238] = -0.26410586f;
      sa[239] = 0.03540285f;
      sa[240] = 0.061700683f;
      sa[241] = -0.22917996f;
      sa[242] = -0.09060883f;
      sa[243] = -0.18641654f;
      sa[244] = -0.21498558f;
      sa[245] = -0.15854524f;
      sa[246] = -0.2607223f;
      sa[247] = -0.12798756f;
      sa[248] = 0.27589417f;
      sa[249] = 0.07233869f;
      sa[250] = -0.14879388f;
      sa[251] = -0.1361146f;
      sa[252] = -0.28588462f;
      sa[253] = -0.061960246f;
      sa[254] = -0.071887694f;
      sa[255] = 0.17968453f;
      sa[256] = -0.23563217f;
      sa[257] = 0.2500486f;
      sa[258] = -0.28105497f;
      sa[259] = -0.18849215f;
      sa[260] = -0.18779577f;
      sa[261] = -0.12289314f;
      sa[262] = -0.09612171f;
      sa[263] = 0.33951688f;
      sa[264] = -0.1362883f;
      sa[265] = 0.08073293f;
      sa[266] = -0.25946605f;
      sa[267] = -0.2512355f;
      sa[268] = 0.28754476f;
      sa[269] = -0.096426316f;
      sa[270] = -0.12825115f;
      sa[271] = 0.21223174f;
      sa[272] = -0.12451532f;
      sa[273] = -0.2003477f;
      sa[274] = 0.061598584f;
      sa[275] = -0.10186365f;
      sa[276] = 0.2527991f;
      sa[277] = -0.16787064f;
      sa[278] = -0.2145379f;
      sa[279] = 0.14360271f;
      sa[280] = -0.17079039f;
      sa[281] = 0.22953507f;
      sa[282] = -0.088997975f;
      sa[283] = -0.10015992f;
      sa[284] = 0.013263019f;
      sa[285] = -0.14034994f;
      sa[286] = 0.1800572f;
      sa[287] = 0.027096158f;
      sa[288] = -0.17486276f;
      sa[289] = -0.13254799f;
      sa[290] = -0.12751733f;
      sa[291] = -0.1275793f;
      sa[292] = 0.17225221f;
      sa[293] = -0.10284003f;
      sa[294] = 0.09038847f;
      sa[295] = 0.1489788f;
      sa[296] = 0.1724634f;
      sa[297] = 0.19439103f;
      sa[298] = -0.0136274565f;
      sa[299] = -0.16957183f;
      sa[300] = -0.047343813f;
      sa[301] = -0.11532238f;
      sa[302] = 0.10628371f;
      sa[303] = -0.01752924f;
      sa[304] = -0.21880804f;
      sa[305] = -0.05588657f;
      sa[306] = 0.17934567f;
      sa[307] = -0.112353355f;
      sa[308] = 0.10375208f;
      sa[309] = 0.20890883f;
      sa[310] = 0.31262118f;
      sa[311] = 0.3528235f;
      sa[312] = -0.25472155f;
      sa[313] = -0.17692451f;
      sa[314] = -0.16191946f;
      sa[315] = 0.15470444f;
      sa[316] = -0.03402353f;
      sa[317] = -0.06588125f;
      sa[318] = 0.06517306f;
      sa[319] = 0.25893527f;
      sa[320] = -0.16085382f;
      sa[321] = 0.024499664f;
      sa[322] = 0.43105137f;
      sa[323] = -0.022434399f;
      sa[324] = -0.03823478f;
      sa[325] = 0.15434727f;
      sa[326] = -0.2242216f;
      sa[327] = -0.0066489233f;
      sa[328] = -0.1061143f;
      sa[329] = 0.20537542f;
      sa[330] = -0.187198f;
      sa[331] = -0.03529811f;
      sa[332] = -0.24865589f;
      sa[333] = 0.07133218f;
      sa[334] = -0.066602126f;
      sa[335] = 0.34048116f;
      sa[336] = -0.14799179f;
      sa[337] = -0.15073065f;
      sa[338] = 0.29907086f;
      sa[339] = -0.23811783f;
      sa[340] = -0.352456f;
      sa[341] = -0.33961758f;
      sa[342] = 0.25967383f;
      sa[343] = -0.03951486f;
      sa[344] = -0.18577743f;
      sa[345] = 0.14080879f;
      sa[346] = 0.1711774f;
      sa[347] = -0.18094109f;
      sa[348] = 0.31198767f;
      sa[349] = -0.2424019f;
      sa[350] = -0.18328407f;
      sa[351] = -0.09685274f;
      sa[352] = 0.15795416f;
      sa[353] = -0.076344185f;
      sa[354] = 0.04591218f;
      sa[355] = 0.060907297f;
      sa[356] = -0.08664284f;
      sa[357] = 0.27320772f;
      sa[358] = -0.43670356f;
      sa[359] = -0.01731342f;
      sa[360] = 0.03482146f;
      sa[361] = 7.798813E-4f;
      sa[362] = -0.05689609f;
      sa[363] = -0.036135733f;
      sa[364] = -0.12524675f;
      sa[365] = -0.20156668f;
      sa[366] = -0.015186413f;
      sa[367] = -0.25415748f;
      sa[368] = -0.22871691f;
      sa[369] = 0.31967443f;
      sa[370] = -0.1543239f;
      sa[371] = 0.34822294f;
      sa[372] = -0.02592821f;
      sa[373] = 0.28863096f;
      sa[374] = -0.14439388f;
      sa[375] = -0.25682458f;
      sa[376] = -0.23517893f;
      sa[377] = -0.15942895f;
      sa[378] = 0.24008556f;
      sa[379] = 0.13991846f;
      sa[380] = -0.12993675f;
      sa[381] = -0.10571483f;
      sa[382] = -0.067629494f;
      sa[383] = -0.076496646f;
      sa[384] = -0.055604752f;
      sa[385] = 0.13998656f;
      sa[386] = -0.29074138f;
      sa[387] = -0.21174347f;
      sa[388] = 0.08033971f;
      sa[389] = -0.0058404254f;
      sa[390] = 0.005135428f;
      sa[391] = -0.087491535f;
      sa[392] = 0.17929141f;
      sa[393] = 0.22849864f;
      sa[394] = -0.0765561f;
      sa[395] = 0.3284431f;
      sa[396] = 0.26188177f;
      sa[397] = -0.26232874f;
      sa[398] = 0.15820454f;
      sa[399] = 0.004472138f;
      sa[400] = 0.16767845f;
      sa[401] = 0.2376895f;
      sa[402] = -0.12729359f;
      sa[403] = 0.025946736f;
      sa[404] = 0.27299285f;
      sa[405] = -0.2523701f;
      sa[406] = -0.052847445f;
      sa[407] = 0.07418187f;
      sa[408] = -0.19330087f;
      sa[409] = -0.21614803f;
      sa[410] = -0.09039001f;
      sa[411] = 0.11111171f;
      sa[412] = -0.13189848f;
      sa[413] = 0.017942779f;
      sa[414] = 0.14809774f;
      sa[415] = 0.4631047f;
      sa[416] = -0.15058604f;
      sa[417] = 0.043087844f;
      sa[418] = 0.010431395f;
      sa[419] = 0.27848563f;
      sa[420] = 0.25145674f;
      sa[421] = 0.23991823f;
      sa[422] = 0.21858434f;
      sa[423] = -0.10770064f;
      sa[424] = 0.10371389f;
      sa[425] = -0.06955921f;
      sa[426] = -0.2790877f;
      sa[427] = 0.12911592f;
      sa[428] = -0.067962505f;
      sa[429] = -0.29664832f;
      sa[430] = 0.19262657f;
      sa[431] = 0.058824778f;
      sa[432] = -0.050413232f;
      sa[433] = 0.23821975f;
      sa[434] = 0.32688215f;
      sa[435] = -0.15486579f;
      sa[436] = -0.17053358f;
      sa[437] = -0.15553871f;
      sa[438] = 0.059101302f;
      sa[439] = 0.09809962f;
      sa[440] = 0.19982521f;
      sa[441] = -0.22596431f;
      sa[442] = 0.13511989f;
      sa[443] = 0.10104677f;
      sa[444] = -0.19708043f;
      sa[445] = 0.11334114f;
      sa[446] = 0.22825044f;
      sa[447] = 0.19757493f;
      sa[448] = 0.29682806f;
      sa[449] = 0.3553329f;
      sa[450] = -0.23262206f;
      sa[451] = 0.1964575f;
      sa[452] = 0.20147082f;
      sa[453] = 0.018434811f;
      sa[454] = -0.12710676f;
      sa[455] = 0.050866093f;
      sa[456] = 0.03426111f;
      sa[457] = 0.14349028f;
      sa[458] = -0.31076863f;
      sa[459] = 0.38218328f;
      sa[460] = 0.25676665f;
      sa[461] = 0.33180034f;
      sa[462] = 0.11409875f;
      sa[463] = 0.28030956f;
      sa[464] = -0.36235124f;
      sa[465] = 0.32703418f;
      sa[466] = -0.005623265f;
      sa[467] = 0.14731932f;
      sa[468] = 0.0774832f;
      sa[469] = 0.31332558f;
      sa[470] = 0.21273741f;
      sa[471] = -0.056844298f;
      sa[472] = 0.03433066f;
      sa[473] = -0.12627424f;
      sa[474] = 0.0077380724f;
      sa[475] = 0.16779643f;
      sa[476] = 0.1731074f;
      sa[477] = -0.08749455f;
      sa[478] = 0.0917841f;
      sa[479] = -0.15467879f;
      sa[480] = -0.3374736f;
      sa[481] = -0.26074317f;
      sa[482] = -0.27234933f;
      sa[483] = 0.20006894f;
      sa[484] = 0.22224563f;
      sa[485] = 0.22537512f;
      sa[486] = -0.005099489f;
      sa[487] = -0.12439632f;
      sa[488] = -0.1961536f;
      sa[489] = 0.13154465f;
      sa[490] = 0.020230638f;
      sa[491] = -0.11693278f;
      sa[492] = 0.21085398f;
      sa[493] = 0.24473098f;
      sa[494] = -0.20957267f;
      sa[495] = 0.31430238f;
      sa[496] = -0.053634103f;
      sa[497] = 0.03627777f;
      sa[498] = 0.10519995f;
      sa[499] = 0.12752688f;
      sa[500] = -0.102716334f;
      sa[501] = 0.076450236f;
      sa[502] = 0.34800103f;
      sa[503] = 0.1513909f;
      sa[504] = -0.078436054f;
      sa[505] = -0.11399993f;
      sa[506] = 0.17238393f;
      sa[507] = -0.10580643f;
      sa[508] = 0.15258849f;
      sa[509] = 0.2761579f;
      sa[510] = 0.20105879f;
      sa[511] = 0.049505956f;
      sa[512] = 0.10395882f;
      sa[513] = -0.05153482f;
      sa[514] = 0.25001907f;
      sa[515] = -0.33847538f;
      sa[516] = 0.06381152f;
      sa[517] = 0.15327847f;
      sa[518] = 0.15237105f;
      sa[519] = -0.0133722965f;
      sa[520] = 0.23429497f;
      sa[521] = 0.18668307f;
      sa[522] = 0.017898733f;
      sa[523] = 0.15481949f;
      sa[524] = 0.22326542f;
      sa[525] = 0.20125954f;
      sa[526] = 0.020074112f;
      sa[527] = -0.09736411f;
      sa[528] = -0.02238658f;
      sa[529] = 0.10791276f;
      sa[530] = -0.20558576f;
      sa[531] = 0.278251f;
      sa[532] = 0.19558091f;
      sa[533] = 0.17623554f;
      sa[534] = 0.20484892f;
      sa[535] = -0.016855378f;
      sa[536] = 0.039254606f;
      sa[537] = -0.26275635f;
      sa[538] = 0.2812522f;
      sa[539] = 0.27080336f;
      sa[540] = -0.2741821f;
      sa[541] = -0.24567339f;
      sa[542] = -0.1521019f;
      sa[543] = -0.06352687f;
      sa[544] = 0.1673045f;
      sa[545] = 0.09853266f;
      sa[546] = 0.10891051f;
      sa[547] = 0.24174069f;
      sa[548] = 0.02009394f;
      sa[549] = 0.09733626f;
      sa[550] = -0.050828326f;
      sa[551] = -0.10192235f;
      sa[552] = 0.02862615f;
      sa[553] = -0.09036541f;
      sa[554] = -0.13810617f;
      sa[555] = -0.086401924f;
      sa[556] = -0.19987401f;
      sa[557] = -0.2434961f;
      sa[558] = -0.1487799f;
      sa[559] = -0.07821664f;
      sa[560] = -0.30642864f;
      sa[561] = -0.09865075f;
      sa[562] = 0.20048232f;
      sa[563] = -0.057530697f;
      sa[564] = 0.17831142f;
      sa[565] = 0.018318623f;
      sa[566] = 0.31637496f;
      sa[567] = -0.03636691f;
      sa[568] = -0.10681392f;
      sa[569] = 0.005329994f;
      sa[570] = -0.05215789f;
      sa[571] = -0.04532555f;
      sa[572] = -0.016666075f;
      sa[573] = 0.26662874f;
      sa[574] = 0.08684579f;
      sa[575] = -0.38551968f;
      sa[576] = -0.15811856f;
      sa[577] = -0.08542771f;
      sa[578] = 0.041832298f;
      sa[579] = 0.10543825f;
      sa[580] = 0.018320978f;
      sa[581] = -0.25128266f;
      sa[582] = 0.04662666f;
      sa[583] = -0.09992984f;
      sa[584] = 0.07388907f;
      sa[585] = 0.08207828f;
      sa[586] = -0.25612f;
      sa[587] = -0.20706259f;
      sa[588] = 0.048189554f;
      sa[589] = 0.041094966f;
      sa[590] = -0.026278395f;
      sa[591] = -0.16385701f;
      sa[592] = -0.38787997f;
      sa[593] = -0.3076715f;
      sa[594] = 0.041620936f;
      sa[595] = 0.055402327f;
      sa[596] = 0.23035268f;
      sa[597] = -0.08218311f;
      sa[598] = 0.20802486f;
      sa[599] = -0.019964889f;
      sa[600] = -0.2916915f;
      sa[601] = 0.14900999f;
      sa[602] = 0.026334513f;
      sa[603] = 0.015369577f;
      sa[604] = 0.15169954f;
      sa[605] = 0.100166f;
      sa[606] = 0.10180023f;
      sa[607] = -0.070647016f;
      sa[608] = 0.040501542f;
      sa[609] = 0.01106504f;
      sa[610] = 0.09388793f;
      sa[611] = -0.06408123f;
      sa[612] = -0.108193316f;
      sa[613] = 0.2678527f;
      sa[614] = 0.13028339f;
      sa[615] = -0.08424798f;
      sa[616] = 0.044583485f;
      sa[617] = -0.230436f;
      sa[618] = -0.15664493f;
      sa[619] = -0.14439036f;
      sa[620] = 0.0018238078f;
      sa[621] = -0.18908212f;
      sa[622] = -0.22073074f;
      sa[623] = -0.3013152f;
      sa[624] = -0.052561995f;
      sa[625] = 0.32380944f;
      sa[626] = -0.0010909314f;
      sa[627] = 0.25712493f;
      sa[628] = -0.08433185f;
      sa[629] = 0.025363985f;
      sa[630] = -0.24918881f;
      sa[631] = 0.39021334f;
      sa[632] = 0.08325761f;
      sa[633] = -0.16411275f;
      sa[634] = -0.2250448f;
      sa[635] = 0.19262795f;
      sa[636] = -0.07523365f;
      sa[637] = 0.056206554f;
      sa[638] = -0.20834099f;
      sa[639] = 0.04954527f;
      sa[640] = -0.123766705f;
      sa[641] = -0.2752035f;
      sa[642] = 0.21897782f;
      sa[643] = -0.3176157f;
      sa[644] = -0.08947504f;
      sa[645] = -0.25036246f;
      sa[646] = 0.34276012f;
      sa[647] = -0.19334282f;
      sa[648] = -2.0441001E-4f;
      sa[649] = -0.025700437f;
      sa[650] = 0.08437636f;
      sa[651] = -0.104838856f;
      sa[652] = 0.05854129f;
      sa[653] = -0.1258995f;
      sa[654] = -0.16373298f;
      sa[655] = -0.16678181f;
      sa[656] = 0.14431304f;
      sa[657] = 0.23336796f;
      sa[658] = -0.22151093f;
      sa[659] = -0.100779094f;
      sa[660] = -0.2048591f;
      sa[661] = -0.062086474f;
      sa[662] = -0.24285944f;
      sa[663] = 0.20336322f;
      sa[664] = -0.1612053f;
      sa[665] = 0.33245155f;
      sa[666] = 0.021717938f;
      sa[667] = -0.332777f;
      sa[668] = 0.2620634f;
      sa[669] = -0.14882533f;
      sa[670] = 0.098476455f;
      sa[671] = -0.0017005476f;
      sa[672] = -0.22754622f;
      sa[673] = 0.1890555f;
      sa[674] = 0.24641444f;
      sa[675] = -0.3514273f;
      sa[676] = -0.06630098f;
      sa[677] = -0.18291888f;
      sa[678] = 0.2166992f;
      sa[679] = -0.02466911f;
      sa[680] = 0.0850307f;
      sa[681] = 0.1377848f;
      sa[682] = -0.09244535f;
      sa[683] = -0.17437491f;
      sa[684] = -0.016898483f;
      sa[685] = 0.09424231f;
      sa[686] = -0.19595616f;
      sa[687] = -0.1709035f;
      sa[688] = -0.26297957f;
      sa[689] = -0.22315179f;
      sa[690] = -0.03492532f;
      sa[691] = 0.09710862f;
      sa[692] = -0.16834699f;
      sa[693] = -0.17985132f;
      sa[694] = 0.26713857f;
      sa[695] = -0.20975949f;
      sa[696] = -0.09722814f;
      sa[697] = -0.1455792f;
      sa[698] = -0.19669484f;
      sa[699] = 0.26778442f;
      sa[700] = 0.17558491f;
      sa[701] = 0.12992746f;
      sa[702] = 0.11936441f;
      sa[703] = -0.025599856f;
      sa[704] = -0.25613472f;
      sa[705] = -0.022901408f;
      sa[706] = -0.13155887f;
      sa[707] = 0.01673414f;
      sa[708] = -0.0489123f;
      sa[709] = -0.28989595f;
      sa[710] = 0.22982886f;
      sa[711] = 0.096274264f;
      sa[712] = 0.038190745f;
      sa[713] = 0.15153283f;
      sa[714] = 0.19365218f;
      sa[715] = 0.07766352f;
      sa[716] = 0.017565355f;
      sa[717] = 0.10237299f;
      sa[718] = 0.030581892f;
      sa[719] = 0.1195858f;
      sa[720] = -0.26326227f;
      sa[721] = 0.24983746f;
      sa[722] = -0.042777624f;
      sa[723] = 0.20448731f;
      sa[724] = 0.03444648f;
      sa[725] = -0.21919052f;
      sa[726] = -0.18639873f;
      sa[727] = -0.3360128f;
      sa[728] = -0.06942443f;
      sa[729] = -0.12576856f;
      sa[730] = 0.10950505f;
      sa[731] = -0.3764696f;
      sa[732] = 0.2297841f;
      sa[733] = 0.30776578f;
      sa[734] = -0.06249369f;
      sa[735] = 0.29117182f;
      sa[736] = 0.07432599f;
      sa[737] = 0.19756708f;
      sa[738] = -0.31919715f;
      sa[739] = -0.129143f;
      sa[740] = -0.27654102f;
      sa[741] = -0.33862233f;
      sa[742] = 0.06466778f;
      sa[743] = -0.0646831f;
      sa[744] = 0.15548922f;
      sa[745] = -0.21128365f;
      sa[746] = 0.05890007f;
      sa[747] = -0.18479083f;
      sa[748] = -0.11579375f;
      sa[749] = -0.15977998f;
      sa[750] = 0.24642943f;
      sa[751] = 0.23921478f;
      sa[752] = -0.009111698f;
      sa[753] = 0.0888169f;
      sa[754] = -0.010961506f;
      sa[755] = -0.0027594366f;
      sa[756] = -0.16951321f;
      sa[757] = 0.24847387f;
      sa[758] = -0.19888109f;
      sa[759] = 0.109983824f;
      sa[760] = -0.1176489f;
      sa[761] = 0.027495181f;
      sa[762] = -0.13518682f;
      sa[763] = 0.078900844f;
      sa[764] = 0.09830495f;
      sa[765] = -0.16539027f;
      sa[766] = -0.23447846f;
      sa[767] = -0.04909345f;
      sa[768] = -0.15920867f;
      sa[769] = -0.2711633f;
      sa[770] = -0.024166863f;
      sa[771] = -0.06274388f;
      sa[772] = 0.014235768f;
      sa[773] = -0.30263048f;
      sa[774] = -0.016362227f;
      sa[775] = 0.2361124f;
      sa[776] = -0.056172546f;
      sa[777] = 0.040593915f;
      sa[778] = 0.14720112f;
      sa[779] = -0.22217032f;
      sa[780] = -0.051516052f;
      sa[781] = -0.08588182f;
      sa[782] = 0.16573182f;
      sa[783] = -0.1643167f;
      sa[784] = -0.13320474f;
      sa[785] = -0.11365846f;
      sa[786] = -0.07769584f;
      sa[787] = -0.24847831f;
      sa[788] = -0.24714215f;
      sa[789] = 0.021371448f;
      sa[790] = -0.034773726f;
      sa[791] = -0.10865324f;
      sa[792] = 0.185285f;
      sa[793] = -0.12279654f;
      sa[794] = -0.2725623f;
      sa[795] = -0.11179437f;
      sa[796] = 0.25773185f;
      sa[797] = -0.22664727f;
      sa[798] = -0.25206593f;
      sa[799] = -0.09810179f;
      sa[800] = 0.1512883f;
      sa[801] = 0.0797948f;
      sa[802] = 0.20346111f;
      sa[803] = 0.23611906f;
      sa[804] = 0.19324423f;
      sa[805] = 0.23492359f;
      sa[806] = 0.23274553f;
      sa[807] = 0.25645292f;
      sa[808] = -0.05695481f;
      sa[809] = -0.17717771f;
      sa[810] = 0.11690865f;
      sa[811] = 0.040946513f;
      sa[812] = 0.15915486f;
      sa[813] = -0.25043038f;
      sa[814] = 0.09539678f;
      sa[815] = -0.10199875f;
      sa[816] = -0.17858863f;
      sa[817] = -0.18827346f;
      sa[818] = 0.024436226f;
      sa[819] = -0.056275778f;
      sa[820] = -0.29588783f;
      sa[821] = -0.1921463f;
      sa[822] = -0.29674888f;
      sa[823] = 0.11702071f;
      sa[824] = 0.12472967f;
      sa[825] = 0.42591432f;
      sa[826] = -0.3077254f;
      sa[827] = -0.34386864f;
      sa[828] = 0.091874644f;
      sa[829] = -0.121155076f;
      sa[830] = 0.15022963f;
      sa[831] = 0.27674246f;
      sa[832] = 0.14033155f;
      sa[833] = 0.089069314f;
      sa[834] = 0.19811845f;
      sa[835] = -0.040916044f;
      sa[836] = 0.18770567f;
      sa[837] = -0.16601953f;
      sa[838] = 0.121396564f;
      sa[839] = -0.17154111f;
      sa[840] = 0.2061679f;
      sa[841] = 0.12298046f;
      sa[842] = 0.18035248f;
      sa[843] = 0.11955307f;
      sa[844] = 0.054991163f;
      sa[845] = 0.1642734f;
      sa[846] = -0.2341747f;
      sa[847] = -0.20143688f;
      sa[848] = 0.19035356f;
      sa[849] = 0.21709393f;
      sa[850] = -0.014575574f;
      sa[851] = 0.10586272f;
      sa[852] = 0.24895972f;
      sa[853] = 0.17619814f;
      sa[854] = 0.25175464f;
      sa[855] = 0.0814185f;
      sa[856] = 0.091695026f;
      sa[857] = -0.15199725f;
      sa[858] = 0.15528148f;
      sa[859] = 0.12809037f;
      sa[860] = 0.36404952f;
      sa[861] = -0.07642661f;
      sa[862] = -0.2898217f;
      sa[863] = -0.11485813f;
      sa[864] = -0.1559228f;
      sa[865] = 0.2085908f;
      sa[866] = -0.2478467f;
      sa[867] = -0.09879478f;
      sa[868] = -0.1381697f;
      sa[869] = 0.17064048f;
      sa[870] = -0.026241066f;
      sa[871] = 0.16456185f;
      sa[872] = 0.19756128f;
      sa[873] = -0.07153749f;
      sa[874] = -0.023001604f;
      sa[875] = -0.3081619f;
      sa[876] = -0.27467215f;
      sa[877] = -0.28565866f;
      sa[878] = -0.02415021f;
      sa[879] = 0.10589274f;
      sa[880] = -0.18063398f;
      sa[881] = -0.17414407f;
      sa[882] = 0.20314465f;
      sa[883] = 0.15617737f;
      sa[884] = -0.10848442f;
      sa[885] = -0.07193957f;
      sa[886] = 0.12652355f;
      sa[887] = -0.011247538f;
      sa[888] = -0.2059196f;
      sa[889] = -0.011411137f;
      sa[890] = -0.28157213f;
      sa[891] = 0.46959135f;
      sa[892] = 0.14566685f;
      sa[893] = 0.26482233f;
      sa[894] = -0.0012067594f;
      sa[895] = 0.19413593f;
      sa[896] = -0.25632858f;
      sa[897] = 0.16986886f;
      sa[898] = 0.17357072f;
      sa[899] = 0.29854965f;
      sa[900] = -0.20656897f;
      sa[901] = 0.22125264f;
      sa[902] = -0.14390217f;
      sa[903] = -0.23051226f;
      sa[904] = 0.13257176f;
      sa[905] = 0.18326339f;
      sa[906] = -0.2649315f;
      sa[907] = -0.2838417f;
      sa[908] = -0.24424794f;
      sa[909] = 0.012614347f;
      sa[910] = 0.046601195f;
      sa[911] = -0.21243386f;
      sa[912] = -0.020856863f;
      sa[913] = 0.068638295f;
      sa[914] = -0.18549913f;
      sa[915] = 0.011565506f;
      sa[916] = 0.32026398f;
      sa[917] = 0.043156408f;
      sa[918] = 0.098146096f;
      sa[919] = 0.22773351f;
      sa[920] = 0.11095116f;
      sa[921] = -0.1261561f;
      sa[922] = -0.16886792f;
      sa[923] = -0.12629333f;
      sa[924] = -0.027014637f;
      sa[925] = -0.16176957f;
      sa[926] = 0.02870345f;
      sa[927] = -0.058254935f;
      sa[928] = 0.22521298f;
      sa[929] = 0.10189317f;
      sa[930] = 0.14750901f;
      sa[931] = -0.0834226f;
      sa[932] = 0.20923813f;
      sa[933] = -0.048847552f;
      sa[934] = 0.23696294f;
      sa[935] = -0.18810004f;
      sa[936] = 0.10213085f;
      sa[937] = 0.12208766f;
      sa[938] = -0.18020736f;
      sa[939] = 0.08328832f;
      sa[940] = -0.06494771f;
      sa[941] = -0.31602f;
      sa[942] = -0.24924795f;
      sa[943] = -0.21875297f;
      sa[944] = -0.17074816f;
      sa[945] = 0.0043869605f;
      sa[946] = 0.019775001f;
      sa[947] = 0.16532972f;
      sa[948] = 0.100581825f;
      sa[949] = -0.18266374f;
      sa[950] = 0.08686602f;
      sa[951] = -0.15808377f;
      sa[952] = -0.2899334f;
      sa[953] = -0.2577727f;
      sa[954] = -0.18939331f;
      sa[955] = 0.00815213f;
      sa[956] = 0.0027164007f;
      sa[957] = 0.041011937f;
      sa[958] = 0.100940265f;
      sa[959] = -0.19614576f;
      sa[960] = 0.25351238f;
      sa[961] = -0.18280894f;
      sa[962] = -0.0073172143f;
      sa[963] = -0.08165234f;
      sa[964] = -0.16254842f;
      sa[965] = 0.24088745f;
      sa[966] = -0.09737933f;
      sa[967] = -0.2898181f;
      sa[968] = 0.117332324f;
      sa[969] = -0.082344435f;
      sa[970] = 0.36778432f;
      sa[971] = 0.0734029f;
      sa[972] = -0.22722538f;
      sa[973] = -0.2388013f;
      sa[974] = -0.2349225f;
      sa[975] = -0.22714566f;
      sa[976] = -0.12561336f;
      sa[977] = 0.041828997f;
      sa[978] = -0.10574646f;
      sa[979] = 0.11640703f;
      sa[980] = 0.1062543f;
      sa[981] = -0.23100293f;
      sa[982] = 0.15107712f;
      sa[983] = -0.012481783f;
      sa[984] = -0.24739945f;
      sa[985] = 0.12843654f;
      sa[986] = -0.22478591f;
      sa[987] = 0.11044957f;
      sa[988] = 0.19088599f;
      sa[989] = 0.24166447f;
      sa[990] = 0.2762645f;
      sa[991] = -0.08788374f;
      sa[992] = -0.22606161f;
      sa[993] = -0.098392434f;
      sa[994] = -0.18422426f;
      sa[995] = -0.29229212f;
      sa[996] = 0.29177266f;
      sa[997] = 0.20560049f;
      sa[998] = 0.10772726f;
      sa[999] = 0.06260336f;
      sa[1000] = 0.020818532f;
      sa[1001] = 0.19767697f;
      sa[1002] = 0.26095074f;
      sa[1003] = -0.09409351f;
      sa[1004] = 0.23658669f;
      sa[1005] = -0.1702047f;
      sa[1006] = -0.26951638f;
      sa[1007] = -0.008992109f;
      sa[1008] = 0.26131493f;
      sa[1009] = 0.16277808f;
      sa[1010] = -0.07324217f;
      sa[1011] = 0.26383942f;
      sa[1012] = 0.0028350216f;
      sa[1013] = 0.22458816f;
      sa[1014] = 0.31503865f;
      sa[1015] = -0.12070068f;
      sa[1016] = 0.27904016f;
      sa[1017] = 0.12893717f;
      sa[1018] = -0.019452661f;
      sa[1019] = 0.14244628f;
      sa[1020] = -0.20384708f;
      sa[1021] = 0.123435974f;
      sa[1022] = 0.23411104f;
      sa[1023] = 0.23823686f;
      sa[1024] = 0.04912292f;
      sa[1025] = 0.23138742f;
      sa[1026] = 0.101139836f;
      sa[1027] = 0.049765754f;
      sa[1028] = 0.33018222f;
      sa[1029] = 0.037251193f;
      sa[1030] = -0.12975217f;
      sa[1031] = 0.056864038f;
      sa[1032] = -0.32315016f;
      sa[1033] = 0.06290978f;
      sa[1034] = -0.08749401f;
      sa[1035] = 0.17401513f;
      sa[1036] = 0.32779416f;
      sa[1037] = 0.11647227f;
      sa[1038] = -0.10088166f;
      sa[1039] = 0.4304605f;
      sa[1040] = -0.04024369f;
      sa[1041] = 0.33018187f;
      sa[1042] = -0.22909005f;
      sa[1043] = -0.093885385f;
      sa[1044] = 0.2142761f;
      sa[1045] = 0.396351f;
      sa[1046] = -0.019086635f;
      sa[1047] = -0.39023304f;
      sa[1048] = 0.11784887f;
      sa[1049] = -0.0029491978f;
      sa[1050] = 0.04496811f;
      sa[1051] = -0.18515012f;
      sa[1052] = 0.21643661f;
      sa[1053] = 0.35127145f;
      sa[1054] = 0.33437932f;
      sa[1055] = 0.13158157f;
      sa[1056] = 0.32344797f;
      sa[1057] = -0.05893099f;
      sa[1058] = 0.2781184f;
      sa[1059] = -0.040230412f;
      sa[1060] = -0.10428212f;
      sa[1061] = 0.18213086f;
      sa[1062] = 0.0642188f;
      sa[1063] = 0.2690444f;
      sa[1064] = 0.10204564f;
      sa[1065] = -0.060495663f;
      sa[1066] = 0.1363211f;
      sa[1067] = -0.33137962f;
      sa[1068] = -0.11283325f;
      sa[1069] = 0.31459713f;
      sa[1070] = 0.03713004f;
      sa[1071] = 0.12377463f;
      sa[1072] = -0.16341433f;
      sa[1073] = 0.14931622f;
      sa[1074] = 0.21211584f;
      sa[1075] = -0.12298297f;
      sa[1076] = -0.17280814f;
      sa[1077] = 0.10500974f;
      sa[1078] = -0.11172647f;
      sa[1079] = 0.033113975f;
      sa[1080] = 0.1993939f;
      sa[1081] = 0.22702557f;
      sa[1082] = -0.35143802f;
      sa[1083] = 0.10915259f;
      sa[1084] = 0.16493005f;
      sa[1085] = -0.2800425f;
      sa[1086] = -0.31758544f;
      sa[1087] = -0.36387122f;
      sa[1088] = -0.16529095f;
      sa[1089] = -0.0060921586f;
      sa[1090] = -0.2709553f;
      sa[1091] = -0.004295509f;
      sa[1092] = -0.24255027f;
      sa[1093] = -0.3049166f;
      sa[1094] = -0.005594167f;
      sa[1095] = -0.32797506f;
      sa[1096] = 0.065882124f;
      sa[1097] = -0.19744189f;
      sa[1098] = 0.028886523f;
      sa[1099] = -0.024171755f;
      sa[1100] = -0.13939026f;
      sa[1101] = 0.07852449f;
      sa[1102] = -0.15549365f;
      sa[1103] = 0.13336803f;
      sa[1104] = -0.27789113f;
      sa[1105] = -0.12827398f;
      sa[1106] = -0.060916245f;
      sa[1107] = 0.106649086f;
      sa[1108] = -0.22633307f;
      sa[1109] = 0.17836168f;
      sa[1110] = 0.11193741f;
      sa[1111] = -0.3360727f;
      sa[1112] = 0.21899532f;
      sa[1113] = 0.13822605f;
      sa[1114] = 0.1057428f;
      sa[1115] = 0.1697576f;
      sa[1116] = -0.026960924f;
      sa[1117] = 0.0055831303f;
      sa[1118] = -0.07320905f;
      sa[1119] = -0.04804188f;
      sa[1120] = 0.17113246f;
      sa[1121] = 0.18787645f;
      sa[1122] = 0.23361358f;
      sa[1123] = 0.23443545f;
      sa[1124] = 0.08031478f;
      sa[1125] = 0.0031597672f;
      sa[1126] = 0.2649819f;
      sa[1127] = 0.25469822f;
      sa[1128] = 0.06811674f;
      sa[1129] = 0.0070879026f;
      sa[1130] = 0.23479676f;
      sa[1131] = 0.34994084f;
      sa[1132] = -0.024983514f;
      sa[1133] = -0.012223993f;
      sa[1134] = 0.109669216f;
      sa[1135] = -0.28280696f;
      sa[1136] = -0.028516348f;
      sa[1137] = 0.15188694f;
      sa[1138] = -0.1374439f;
      sa[1139] = -0.008991887f;
      sa[1140] = 0.30246633f;
      sa[1141] = -0.20855732f;
      sa[1142] = 0.02479807f;
      sa[1143] = 0.03318609f;
      sa[1144] = -0.18832289f;
      sa[1145] = 0.21308059f;
      sa[1146] = 0.3313796f;
      sa[1147] = 0.024785137f;
      sa[1148] = -0.007205445f;
      sa[1149] = -0.019016346f;
      sa[1150] = -0.28621083f;
      sa[1151] = -0.31707066f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_08_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_08_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2551975f;
      sa[1] = -0.12757614f;
      sa[2] = -0.55127364f;
      sa[3] = -0.93754774f;
      sa[4] = 0.05774706f;
      sa[5] = 0.2860659f;
      sa[6] = 1.220197f;
      sa[7] = -0.69171697f;
      sa[8] = -0.9396945f;
      sa[9] = 0.6830523f;
      sa[10] = -0.1669134f;
      sa[11] = 0.4321518f;
      sa[12] = 0.0764461f;
      sa[13] = -0.002373472f;
      sa[14] = -1.2822527f;
      sa[15] = 1.186056f;
      sa[16] = 1.564842f;
      sa[17] = -0.44897586f;
      sa[18] = 0.065644994f;
      sa[19] = -0.45095128f;
      sa[20] = 1.158298f;
      sa[21] = 0.07502085f;
      sa[22] = -0.9637588f;
      sa[23] = 0.7898227f;
      sa[24] = -1.3680466f;
      sa[25] = 0.462226f;
      sa[26] = -0.20347442f;
      sa[27] = 1.5067178f;
      sa[28] = -1.3991132f;
      sa[29] = -0.53477293f;
      sa[30] = 0.3348024f;
      sa[31] = -0.6288983f;
      sa[32] = -1.1691383f;
      sa[33] = -1.48477f;
      sa[34] = -0.058886357f;
      sa[35] = 1.4092082f;
      sa[36] = -0.29139447f;
      sa[37] = -0.08798601f;
      sa[38] = 0.18563771f;
      sa[39] = 0.7285345f;
      sa[40] = -0.72862947f;
      sa[41] = -1.3505645f;
      sa[42] = -1.0705419f;
      sa[43] = -1.4762713f;
      sa[44] = 0.048413828f;
      sa[45] = -1.3270658f;
      sa[46] = 1.0408139f;
      sa[47] = 1.258186f;
      sa[48] = -1.3050159f;
      sa[49] = -1.0722744f;
      sa[50] = 0.4436457f;
      sa[51] = -0.3288584f;
      sa[52] = 0.88660675f;
      sa[53] = 0.7990959f;
      sa[54] = -0.23481598f;
      sa[55] = 1.1371841f;
      sa[56] = -0.9779237f;
      sa[57] = -1.0743654f;
      sa[58] = -0.059847515f;
      sa[59] = -0.2070487f;
      sa[60] = 1.3740226f;
      sa[61] = -0.5900246f;
      sa[62] = -0.2872945f;
      sa[63] = 0.6801626f;
      sa[64] = 1.3079274f;
      sa[65] = -0.62919563f;
      sa[66] = 0.6227887f;
      sa[67] = 1.544885f;
      sa[68] = 0.69985014f;
      sa[69] = -1.1068809f;
      sa[70] = -1.4748075f;
      sa[71] = -0.47215435f;
      sa[72] = -1.2881627f;
      sa[73] = 1.2154005f;
      sa[74] = 1.3791593f;
      sa[75] = -0.13570435f;
      sa[76] = 0.90319544f;
      sa[77] = 0.44809163f;
      sa[78] = -1.3935063f;
      sa[79] = 0.94085586f;
      sa[80] = -0.81332815f;
      sa[81] = 0.11460233f;
      sa[82] = 0.8192126f;
      sa[83] = -0.5949728f;
      sa[84] = -1.6363713f;
      sa[85] = -1.2908853f;
      sa[86] = 0.29764527f;
      sa[87] = 1.1740189f;
      sa[88] = -1.5813028f;
      sa[89] = -0.5803902f;
      sa[90] = -1.1435902f;
      sa[91] = 1.4926295f;
      sa[92] = -0.29461372f;
      sa[93] = 0.3043366f;
      sa[94] = -1.5218681f;
      sa[95] = -0.19085507f;
      sa[96] = -1.0370138f;
      sa[97] = 0.19068162f;
      sa[98] = -0.031980544f;
      sa[99] = 0.32293528f;
      sa[100] = -1.2414939f;
      sa[101] = -0.44069925f;
      sa[102] = 1.1986389f;
      sa[103] = 0.04900553f;
      sa[104] = -0.20142373f;
      sa[105] = -0.7020889f;
      sa[106] = 1.3684766f;
      sa[107] = 1.202939f;
      sa[108] = 0.80546016f;
      sa[109] = 0.16474696f;
      sa[110] = 0.73199815f;
      sa[111] = -0.821707f;
      sa[112] = -1.1426618f;
      sa[113] = 0.21393517f;
      sa[114] = 0.059088126f;
      sa[115] = -0.3913026f;
      sa[116] = 1.182828f;
      sa[117] = 0.04712079f;
      sa[118] = -1.3966639f;
      sa[119] = -0.7556931f;
      sa[120] = -0.3287889f;
      sa[121] = 1.0606922f;
      sa[122] = -0.071387656f;
      sa[123] = 0.3373473f;
      sa[124] = -0.709604f;
      sa[125] = 0.78466666f;
      sa[126] = -1.1305757f;
      sa[127] = 0.41691583f;
      sa[128] = -0.942647f;
      sa[129] = 0.7535526f;
      sa[130] = -0.4271626f;
      sa[131] = 0.8398694f;
      sa[132] = 0.4339169f;
      sa[133] = 0.64628536f;
      sa[134] = 0.5799529f;
      sa[135] = -1.0748843f;
      sa[136] = 0.54563576f;
      sa[137] = -0.6383836f;
      sa[138] = -0.09115757f;
      sa[139] = 1.1655532f;
      sa[140] = -0.7480201f;
      sa[141] = -0.1201058f;
      sa[142] = 0.27441472f;
      sa[143] = -0.8274129f;
      sa[144] = 0.9674892f;
      sa[145] = -0.77377826f;
      sa[146] = 0.0480324f;
      sa[147] = -0.3202365f;
      sa[148] = -0.9087781f;
      sa[149] = 1.0604222f;
      sa[150] = -1.1954998f;
      sa[151] = -1.5902114f;
      sa[152] = 1.5289567f;
      sa[153] = -0.6093809f;
      sa[154] = 1.3613023f;
      sa[155] = -1.5318143f;
      sa[156] = -1.4746537f;
      sa[157] = -1.1350304f;
      sa[158] = -0.19268438f;
      sa[159] = -0.6686506f;
      sa[160] = 1.3214064f;
      sa[161] = -1.0975299f;
      sa[162] = 1.5171424f;
      sa[163] = -0.735202f;
      sa[164] = 0.7467488f;
      sa[165] = -0.5356744f;
      sa[166] = 1.3436575f;
      sa[167] = -1.3710271f;
      sa[168] = 1.0629196f;
      sa[169] = -1.4998205f;
      sa[170] = 1.1319432f;
      sa[171] = 0.87981874f;
      sa[172] = 1.5262315f;
      sa[173] = 1.5307032f;
      sa[174] = -0.09050891f;
      sa[175] = 0.01266295f;
      sa[176] = -0.7592774f;
      sa[177] = 0.1434997f;
      sa[178] = -1.0321692f;
      sa[179] = -0.22288272f;
      sa[180] = -1.3922188f;
      sa[181] = -0.94040745f;
      sa[182] = 0.3049347f;
      sa[183] = -1.007197f;
      sa[184] = 1.5241178f;
      sa[185] = 1.2291349f;
      sa[186] = -0.48482075f;
      sa[187] = -0.99555355f;
      sa[188] = -0.5310501f;
      sa[189] = -0.7118243f;
      sa[190] = -1.4386797f;
      sa[191] = -1.0336756f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_08 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_08_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_08_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_08_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_08_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


