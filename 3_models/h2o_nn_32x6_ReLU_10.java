/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:08:55.218+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_10

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_10 > h2o_nn_32x6_ReLU_10.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_10.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_10", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_10 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_10_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_10_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_10_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_10_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_10_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_10_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_10_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_10_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_10_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_10.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_10_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24761904761904763,0.18571428571428572,0.06190476190476191,0.12857142857142856,0.24761904761904763,0.12857142857142856};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_10() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-246386958878025652L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_10_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_10_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_10_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_10_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_10_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_10_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_10_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_10_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_10_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.3591126235674102;
      sa[1] = 0.44977310268881027;
      sa[2] = 0.48072782748192544;
      sa[3] = 0.39411000962895654;
      sa[4] = 0.5502772385730245;
      sa[5] = 0.5019079507880267;
      sa[6] = 0.5647846984971849;
      sa[7] = 0.4276340476287153;
      sa[8] = 0.5200862862186021;
      sa[9] = 0.47093106083826153;
      sa[10] = 0.48518793599693294;
      sa[11] = 0.6043478958299061;
      sa[12] = 0.523178443253013;
      sa[13] = 0.3589266796054235;
      sa[14] = 0.659467939487911;
      sa[15] = 0.5224479719641336;
      sa[16] = 0.4575547142357244;
      sa[17] = 0.49816022298321216;
      sa[18] = 0.4765440337239398;
      sa[19] = 0.5296071134577368;
      sa[20] = 0.594300902934469;
      sa[21] = 0.5245012180962728;
      sa[22] = 0.42240676559252643;
      sa[23] = 0.4819194768595267;
      sa[24] = 0.5181537503092932;
      sa[25] = 0.4300782332174969;
      sa[26] = 0.49097084834505467;
      sa[27] = 0.4486246027297168;
      sa[28] = 0.48998572460083434;
      sa[29] = 0.4607866121685427;
      sa[30] = 0.45886839938023594;
      sa[31] = 0.4874673253443572;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_10_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_10_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -8.299972616444184E-4;
      sa[1] = 0.008310514276397923;
      sa[2] = -0.05912011212328297;
      sa[3] = -0.025099446945709536;
      sa[4] = -0.018323913642348453;
      sa[5] = 0.012986643541032928;
    }
  }
}
class h2o_nn_32x6_ReLU_10_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_10_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_10_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.09139735f;
      sa[1] = 0.18845189f;
      sa[2] = 0.12412891f;
      sa[3] = 0.18011416f;
      sa[4] = -0.18563862f;
      sa[5] = -0.20702773f;
      sa[6] = -0.079636596f;
      sa[7] = 0.1925182f;
      sa[8] = 0.08090487f;
      sa[9] = -0.15863173f;
      sa[10] = -0.13716064f;
      sa[11] = -0.16300085f;
      sa[12] = 0.015513638f;
      sa[13] = -0.3002151f;
      sa[14] = -0.21071658f;
      sa[15] = -0.07920688f;
      sa[16] = 0.038689554f;
      sa[17] = 0.13579354f;
      sa[18] = -0.10741449f;
      sa[19] = 0.11936042f;
      sa[20] = 0.14557068f;
      sa[21] = -0.3358129f;
      sa[22] = 0.17182457f;
      sa[23] = -0.19226393f;
      sa[24] = 0.2338768f;
      sa[25] = 0.2250104f;
      sa[26] = -0.14329578f;
      sa[27] = 0.29929566f;
      sa[28] = 0.14971013f;
      sa[29] = -0.30861285f;
      sa[30] = -0.21621457f;
      sa[31] = 0.09110171f;
      sa[32] = 0.18316339f;
      sa[33] = -0.20073146f;
      sa[34] = 0.05993269f;
      sa[35] = -0.04213336f;
      sa[36] = 0.068880074f;
      sa[37] = 0.17517468f;
      sa[38] = -0.07081415f;
      sa[39] = 0.14207053f;
      sa[40] = -0.02468271f;
      sa[41] = -0.11687898f;
      sa[42] = -0.15715492f;
      sa[43] = -0.053683385f;
      sa[44] = 0.3025614f;
      sa[45] = -0.25068188f;
      sa[46] = 0.08607324f;
      sa[47] = 0.006524062f;
      sa[48] = 0.23989928f;
      sa[49] = 0.24355881f;
      sa[50] = 0.21872813f;
      sa[51] = -0.29584807f;
      sa[52] = -0.12156272f;
      sa[53] = 0.15178184f;
      sa[54] = 0.17169333f;
      sa[55] = 0.20773052f;
      sa[56] = -0.13831618f;
      sa[57] = -0.27984178f;
      sa[58] = 0.2665525f;
      sa[59] = -0.16564289f;
      sa[60] = -0.24903695f;
      sa[61] = 0.13902597f;
      sa[62] = 0.053345643f;
      sa[63] = -0.14813463f;
      sa[64] = 0.14410116f;
      sa[65] = 0.1079892f;
      sa[66] = -0.0067965756f;
      sa[67] = 0.115499474f;
      sa[68] = -0.100323565f;
      sa[69] = -0.06397877f;
      sa[70] = 0.01777981f;
      sa[71] = 0.24939728f;
      sa[72] = -0.14057548f;
      sa[73] = 0.20898081f;
      sa[74] = -0.2215887f;
      sa[75] = 0.024988698f;
      sa[76] = -0.16359071f;
      sa[77] = -0.077611044f;
      sa[78] = -0.0914402f;
      sa[79] = 0.16934825f;
      sa[80] = -0.26883215f;
      sa[81] = -0.054822426f;
      sa[82] = -0.0071924287f;
      sa[83] = 0.06989457f;
      sa[84] = -0.08513259f;
      sa[85] = -0.2232535f;
      sa[86] = 0.054132253f;
      sa[87] = 0.19774121f;
      sa[88] = 0.23018609f;
      sa[89] = 0.07502386f;
      sa[90] = -0.0913013f;
      sa[91] = 0.016906222f;
      sa[92] = 0.060401816f;
      sa[93] = -0.19339298f;
      sa[94] = -0.20424914f;
      sa[95] = -0.24400353f;
      sa[96] = 0.0817088f;
      sa[97] = 0.06964695f;
      sa[98] = 0.13902709f;
      sa[99] = 0.02701835f;
      sa[100] = -0.07447262f;
      sa[101] = -0.17305692f;
      sa[102] = -0.25076875f;
      sa[103] = -0.06917698f;
      sa[104] = -0.05461285f;
      sa[105] = -0.10732051f;
      sa[106] = -0.26395792f;
      sa[107] = 0.21252573f;
      sa[108] = 0.20522028f;
      sa[109] = -0.060065325f;
      sa[110] = -0.12903437f;
      sa[111] = -0.019755274f;
      sa[112] = 0.066578634f;
      sa[113] = -0.027256122f;
      sa[114] = -0.22567715f;
      sa[115] = -0.015174768f;
      sa[116] = -0.1855824f;
      sa[117] = 0.07124773f;
      sa[118] = -0.27557755f;
      sa[119] = -0.19582534f;
      sa[120] = 0.16912028f;
      sa[121] = 0.15542305f;
      sa[122] = 0.21193331f;
      sa[123] = 0.27452537f;
      sa[124] = 0.31262222f;
      sa[125] = 0.29489088f;
      sa[126] = -0.25664464f;
      sa[127] = -0.2996873f;
      sa[128] = 0.09025828f;
      sa[129] = 0.16142148f;
      sa[130] = -0.1922218f;
      sa[131] = 0.24440828f;
      sa[132] = 0.106998906f;
      sa[133] = -0.34662375f;
      sa[134] = 0.03467232f;
      sa[135] = -0.11561901f;
      sa[136] = -0.20944801f;
      sa[137] = 0.029315162f;
      sa[138] = 0.09728711f;
      sa[139] = 0.024450675f;
      sa[140] = -0.14509808f;
      sa[141] = -0.072750546f;
      sa[142] = 0.12572555f;
      sa[143] = -0.24643122f;
      sa[144] = 0.3303182f;
      sa[145] = -0.26322848f;
      sa[146] = -0.2998245f;
      sa[147] = 0.14435509f;
      sa[148] = 0.2620581f;
      sa[149] = 0.16560133f;
      sa[150] = 0.28505957f;
      sa[151] = -0.15960276f;
      sa[152] = -0.040550828f;
      sa[153] = 0.22372063f;
      sa[154] = 0.23056248f;
      sa[155] = -0.19587374f;
      sa[156] = 0.032970637f;
      sa[157] = -0.23902306f;
      sa[158] = 0.049734924f;
      sa[159] = 0.07296219f;
      sa[160] = -0.035778284f;
      sa[161] = -0.010308223f;
      sa[162] = 0.18594384f;
      sa[163] = -0.3953287f;
      sa[164] = 0.18559799f;
      sa[165] = 0.04106045f;
      sa[166] = -0.07952699f;
      sa[167] = -0.011219167f;
      sa[168] = 0.13553612f;
      sa[169] = 0.32140768f;
      sa[170] = 0.23392323f;
      sa[171] = -0.026403923f;
      sa[172] = -0.09868093f;
      sa[173] = -0.07696616f;
      sa[174] = -0.052629523f;
      sa[175] = -0.1547415f;
      sa[176] = -0.015939314f;
      sa[177] = 0.07904691f;
      sa[178] = -0.21157074f;
      sa[179] = 0.09669864f;
      sa[180] = -0.11918796f;
      sa[181] = -0.29681873f;
      sa[182] = -0.1300618f;
      sa[183] = 0.1434114f;
      sa[184] = 0.2755821f;
      sa[185] = 0.17950542f;
      sa[186] = -0.26241615f;
      sa[187] = 0.08792622f;
      sa[188] = -0.118824616f;
      sa[189] = 0.13833378f;
      sa[190] = 0.09365955f;
      sa[191] = -0.13840194f;
      sa[192] = -0.10364387f;
      sa[193] = 0.24123107f;
      sa[194] = 0.13494565f;
      sa[195] = 0.27280366f;
      sa[196] = 0.25039822f;
      sa[197] = -0.10393362f;
      sa[198] = 0.19256017f;
      sa[199] = -0.018501466f;
      sa[200] = 0.020433862f;
      sa[201] = -0.2734506f;
      sa[202] = 0.13511461f;
      sa[203] = -0.017862555f;
      sa[204] = -0.17433608f;
      sa[205] = 0.20820725f;
      sa[206] = 0.3136042f;
      sa[207] = 0.08749348f;
      sa[208] = -0.24511789f;
      sa[209] = -0.051448647f;
      sa[210] = -0.26494944f;
      sa[211] = -0.21149482f;
      sa[212] = 0.26783496f;
      sa[213] = -0.3772033f;
      sa[214] = -0.020755794f;
      sa[215] = -0.022642706f;
      sa[216] = 0.008227229f;
      sa[217] = 0.14481984f;
      sa[218] = -0.14940652f;
      sa[219] = 0.3626108f;
      sa[220] = -0.18317676f;
      sa[221] = 0.090472735f;
      sa[222] = 0.26642326f;
      sa[223] = 0.058207966f;
      sa[224] = 0.07110528f;
      sa[225] = 0.26226944f;
      sa[226] = -0.19216244f;
      sa[227] = 0.14579265f;
      sa[228] = 0.21756224f;
      sa[229] = 0.14555588f;
      sa[230] = 0.31981033f;
      sa[231] = -0.20234802f;
      sa[232] = -0.21596222f;
      sa[233] = 0.10375067f;
      sa[234] = 0.07454176f;
      sa[235] = -0.11494741f;
      sa[236] = 0.008818407f;
      sa[237] = -0.20663592f;
      sa[238] = -0.123940535f;
      sa[239] = 0.21657757f;
      sa[240] = 0.0906177f;
      sa[241] = -0.22832753f;
      sa[242] = -0.09606191f;
      sa[243] = -0.20259658f;
      sa[244] = -0.18110976f;
      sa[245] = -0.13966388f;
      sa[246] = -0.21589527f;
      sa[247] = -0.09054308f;
      sa[248] = 0.27900726f;
      sa[249] = 0.11981623f;
      sa[250] = -0.0795763f;
      sa[251] = -0.09715093f;
      sa[252] = -0.29423314f;
      sa[253] = -0.12585942f;
      sa[254] = -0.2053344f;
      sa[255] = 0.21762829f;
      sa[256] = -0.20583993f;
      sa[257] = 0.24920048f;
      sa[258] = -0.27370432f;
      sa[259] = -0.17395906f;
      sa[260] = -0.14309011f;
      sa[261] = -0.04460288f;
      sa[262] = -0.12298115f;
      sa[263] = 0.31697014f;
      sa[264] = -0.1022253f;
      sa[265] = 0.093608774f;
      sa[266] = -0.25001037f;
      sa[267] = -0.23549983f;
      sa[268] = 0.2720325f;
      sa[269] = -0.06560535f;
      sa[270] = -0.30662304f;
      sa[271] = 0.2619273f;
      sa[272] = -0.07771066f;
      sa[273] = -0.13471347f;
      sa[274] = 0.11114523f;
      sa[275] = -0.05600125f;
      sa[276] = 0.11074694f;
      sa[277] = -0.22952318f;
      sa[278] = -0.29628408f;
      sa[279] = 0.14195952f;
      sa[280] = -0.143632f;
      sa[281] = 0.24443063f;
      sa[282] = -0.07873616f;
      sa[283] = -0.068361916f;
      sa[284] = 0.043725815f;
      sa[285] = -0.14492571f;
      sa[286] = 0.24112952f;
      sa[287] = 0.052744005f;
      sa[288] = -0.15828957f;
      sa[289] = -0.12728573f;
      sa[290] = -0.04209364f;
      sa[291] = -0.035360515f;
      sa[292] = 0.13536544f;
      sa[293] = -0.12434836f;
      sa[294] = 0.05114308f;
      sa[295] = 0.1369182f;
      sa[296] = 0.14509203f;
      sa[297] = 0.21660618f;
      sa[298] = 0.050281458f;
      sa[299] = -0.15614678f;
      sa[300] = -0.02972005f;
      sa[301] = -0.11097876f;
      sa[302] = 0.12162345f;
      sa[303] = 0.023528766f;
      sa[304] = -0.21173768f;
      sa[305] = -0.031627566f;
      sa[306] = 0.18032196f;
      sa[307] = -0.07277351f;
      sa[308] = 0.103609756f;
      sa[309] = 0.19353022f;
      sa[310] = 0.28564936f;
      sa[311] = 0.33072984f;
      sa[312] = -0.17051029f;
      sa[313] = -0.11670056f;
      sa[314] = -0.17646489f;
      sa[315] = 0.08121315f;
      sa[316] = -0.015004557f;
      sa[317] = -0.045052048f;
      sa[318] = 0.07316846f;
      sa[319] = 0.3062062f;
      sa[320] = -0.1447777f;
      sa[321] = -0.02903997f;
      sa[322] = 0.39432913f;
      sa[323] = -0.03375129f;
      sa[324] = -0.007304011f;
      sa[325] = 0.115471445f;
      sa[326] = -0.33036494f;
      sa[327] = 0.03555211f;
      sa[328] = -0.067477316f;
      sa[329] = 0.23273633f;
      sa[330] = -0.15275511f;
      sa[331] = -0.07834671f;
      sa[332] = -0.2254043f;
      sa[333] = 0.071903974f;
      sa[334] = -0.061102442f;
      sa[335] = 0.35141212f;
      sa[336] = -0.15483509f;
      sa[337] = -0.14253141f;
      sa[338] = 0.28686744f;
      sa[339] = -0.24839261f;
      sa[340] = -0.3500517f;
      sa[341] = -0.31383213f;
      sa[342] = 0.25209132f;
      sa[343] = 0.054016486f;
      sa[344] = -0.1928386f;
      sa[345] = 0.14591365f;
      sa[346] = 0.19088854f;
      sa[347] = -0.16970392f;
      sa[348] = 0.25795165f;
      sa[349] = -0.2445174f;
      sa[350] = -0.1892404f;
      sa[351] = -0.03292471f;
      sa[352] = 0.15739153f;
      sa[353] = -0.07125734f;
      sa[354] = 0.059958983f;
      sa[355] = 0.047548156f;
      sa[356] = -0.061556384f;
      sa[357] = 0.31553224f;
      sa[358] = -0.35819182f;
      sa[359] = -0.068738855f;
      sa[360] = 0.10591875f;
      sa[361] = -0.07534553f;
      sa[362] = -0.15741079f;
      sa[363] = -0.008907701f;
      sa[364] = -0.10783794f;
      sa[365] = -0.22179525f;
      sa[366] = -0.009139161f;
      sa[367] = -0.3074758f;
      sa[368] = -0.15770206f;
      sa[369] = 0.3604808f;
      sa[370] = -0.201473f;
      sa[371] = 0.2287141f;
      sa[372] = -0.0017391074f;
      sa[373] = 0.27023432f;
      sa[374] = -0.14452033f;
      sa[375] = -0.2668222f;
      sa[376] = -0.28473672f;
      sa[377] = -0.10951708f;
      sa[378] = 0.16967058f;
      sa[379] = 0.24969907f;
      sa[380] = -0.0780935f;
      sa[381] = -0.04374771f;
      sa[382] = -0.012509337f;
      sa[383] = -0.032845706f;
      sa[384] = -0.13618854f;
      sa[385] = 0.0783875f;
      sa[386] = -0.33842593f;
      sa[387] = -0.1780498f;
      sa[388] = 0.109490365f;
      sa[389] = -0.015747264f;
      sa[390] = -0.006867482f;
      sa[391] = -0.11552539f;
      sa[392] = 0.15288645f;
      sa[393] = 0.18839186f;
      sa[394] = -0.024503186f;
      sa[395] = 0.33089378f;
      sa[396] = 0.28680414f;
      sa[397] = -0.3285185f;
      sa[398] = 0.13513628f;
      sa[399] = 0.03309439f;
      sa[400] = 0.19760212f;
      sa[401] = 0.23795538f;
      sa[402] = -0.10643841f;
      sa[403] = 0.040692147f;
      sa[404] = 0.26985556f;
      sa[405] = -0.21995129f;
      sa[406] = -0.027290843f;
      sa[407] = 0.10575504f;
      sa[408] = -0.16364434f;
      sa[409] = -0.22031751f;
      sa[410] = -0.07377804f;
      sa[411] = 0.15920946f;
      sa[412] = -0.20715018f;
      sa[413] = 0.061155215f;
      sa[414] = 0.10614792f;
      sa[415] = 0.42361805f;
      sa[416] = -0.10878418f;
      sa[417] = 0.09616045f;
      sa[418] = 0.05595533f;
      sa[419] = 0.38105768f;
      sa[420] = 0.23247708f;
      sa[421] = 0.26976523f;
      sa[422] = 0.19706665f;
      sa[423] = -0.11289263f;
      sa[424] = 0.13600637f;
      sa[425] = -0.035238042f;
      sa[426] = -0.2653693f;
      sa[427] = 0.1855451f;
      sa[428] = -0.067988545f;
      sa[429] = -0.35206476f;
      sa[430] = 0.22159047f;
      sa[431] = -0.0029741325f;
      sa[432] = 0.0065788273f;
      sa[433] = 0.12151714f;
      sa[434] = 0.2623384f;
      sa[435] = 0.029389f;
      sa[436] = -0.23609792f;
      sa[437] = -0.23775013f;
      sa[438] = -0.0023910722f;
      sa[439] = -0.01458988f;
      sa[440] = 0.3046051f;
      sa[441] = -0.24029207f;
      sa[442] = 0.097264774f;
      sa[443] = 0.071154416f;
      sa[444] = -0.22121744f;
      sa[445] = 0.046211466f;
      sa[446] = 0.18238868f;
      sa[447] = 0.05618217f;
      sa[448] = 0.16162004f;
      sa[449] = 0.31270903f;
      sa[450] = -0.19454749f;
      sa[451] = 0.063868105f;
      sa[452] = 0.17028196f;
      sa[453] = -0.030902147f;
      sa[454] = -0.14542346f;
      sa[455] = -0.037345987f;
      sa[456] = -0.008925865f;
      sa[457] = 0.14068258f;
      sa[458] = -0.27630305f;
      sa[459] = 0.35482383f;
      sa[460] = 0.20104179f;
      sa[461] = 0.25658947f;
      sa[462] = 0.050058436f;
      sa[463] = 0.1876737f;
      sa[464] = -0.29113573f;
      sa[465] = 0.23295343f;
      sa[466] = -0.0091471225f;
      sa[467] = 0.22627985f;
      sa[468] = 0.17248575f;
      sa[469] = 0.2624562f;
      sa[470] = 0.18752262f;
      sa[471] = 0.05183318f;
      sa[472] = 0.005154951f;
      sa[473] = -0.15787135f;
      sa[474] = -0.058142f;
      sa[475] = 0.061958928f;
      sa[476] = 0.20819382f;
      sa[477] = -0.06942445f;
      sa[478] = 0.17015322f;
      sa[479] = -0.17398745f;
      sa[480] = -0.34245628f;
      sa[481] = -0.2651057f;
      sa[482] = -0.3047413f;
      sa[483] = 0.14603756f;
      sa[484] = 0.17660299f;
      sa[485] = 0.22972949f;
      sa[486] = -0.0078100525f;
      sa[487] = -0.14291751f;
      sa[488] = -0.21406747f;
      sa[489] = 0.08650244f;
      sa[490] = -0.032928787f;
      sa[491] = -0.18804835f;
      sa[492] = 0.22647318f;
      sa[493] = 0.3378571f;
      sa[494] = -0.21097375f;
      sa[495] = 0.25370243f;
      sa[496] = -0.07132653f;
      sa[497] = 0.03398407f;
      sa[498] = 0.096651256f;
      sa[499] = 0.09843483f;
      sa[500] = -0.10634409f;
      sa[501] = 0.044206485f;
      sa[502] = 0.30539662f;
      sa[503] = 0.1897522f;
      sa[504] = -0.124840885f;
      sa[505] = -0.10050547f;
      sa[506] = 0.22381248f;
      sa[507] = -0.12678179f;
      sa[508] = 0.1008926f;
      sa[509] = 0.21315485f;
      sa[510] = 0.15064695f;
      sa[511] = 0.07162555f;
      sa[512] = 0.098603435f;
      sa[513] = -0.044565815f;
      sa[514] = 0.23741421f;
      sa[515] = -0.3691385f;
      sa[516] = 0.072081126f;
      sa[517] = 0.11158734f;
      sa[518] = 0.14313322f;
      sa[519] = -0.022805836f;
      sa[520] = 0.22359502f;
      sa[521] = 0.1841666f;
      sa[522] = 0.027145566f;
      sa[523] = 0.084737964f;
      sa[524] = 0.25104788f;
      sa[525] = 0.2303936f;
      sa[526] = 0.02975897f;
      sa[527] = -0.096874215f;
      sa[528] = -0.008761845f;
      sa[529] = 0.07973019f;
      sa[530] = -0.20786637f;
      sa[531] = 0.24342458f;
      sa[532] = 0.20142835f;
      sa[533] = 0.18909007f;
      sa[534] = 0.164264f;
      sa[535] = -0.006717898f;
      sa[536] = 0.024026481f;
      sa[537] = -0.28499708f;
      sa[538] = 0.22210926f;
      sa[539] = 0.33550203f;
      sa[540] = -0.26875994f;
      sa[541] = -0.15557286f;
      sa[542] = -0.1457595f;
      sa[543] = -0.15243298f;
      sa[544] = 0.17333801f;
      sa[545] = 0.15966077f;
      sa[546] = 0.12476341f;
      sa[547] = 0.22504322f;
      sa[548] = 0.013260462f;
      sa[549] = 0.099115394f;
      sa[550] = -0.059705537f;
      sa[551] = -0.023305232f;
      sa[552] = 0.021875294f;
      sa[553] = -0.027000418f;
      sa[554] = -0.12849495f;
      sa[555] = -0.13592708f;
      sa[556] = -0.14146595f;
      sa[557] = -0.24850133f;
      sa[558] = -0.09522684f;
      sa[559] = -0.1652647f;
      sa[560] = -0.35563123f;
      sa[561] = -0.1377245f;
      sa[562] = 0.15938136f;
      sa[563] = -0.13387947f;
      sa[564] = 0.21906039f;
      sa[565] = 0.027133103f;
      sa[566] = 0.37513956f;
      sa[567] = -0.013589321f;
      sa[568] = -0.11876433f;
      sa[569] = 2.6162146E-4f;
      sa[570] = -0.010746154f;
      sa[571] = -0.08158085f;
      sa[572] = -0.022008283f;
      sa[573] = 0.311078f;
      sa[574] = 0.098480165f;
      sa[575] = -0.35178903f;
      sa[576] = -0.12615691f;
      sa[577] = -0.07417357f;
      sa[578] = 0.06755245f;
      sa[579] = 0.03396444f;
      sa[580] = 0.10030601f;
      sa[581] = -0.11266101f;
      sa[582] = 0.14111495f;
      sa[583] = -0.020511761f;
      sa[584] = 0.07511276f;
      sa[585] = 0.0735815f;
      sa[586] = -0.1774041f;
      sa[587] = -0.10135686f;
      sa[588] = 0.08538153f;
      sa[589] = 0.14153643f;
      sa[590] = 0.062354404f;
      sa[591] = 0.0037886486f;
      sa[592] = -0.32904926f;
      sa[593] = -0.28131795f;
      sa[594] = 0.039744f;
      sa[595] = 0.22087896f;
      sa[596] = 0.23742124f;
      sa[597] = -0.03330268f;
      sa[598] = 0.2352122f;
      sa[599] = 0.0690746f;
      sa[600] = -0.27140287f;
      sa[601] = 0.21705003f;
      sa[602] = 0.022507358f;
      sa[603] = 0.13565227f;
      sa[604] = 0.19693981f;
      sa[605] = 0.17052232f;
      sa[606] = 0.17854135f;
      sa[607] = 0.04778236f;
      sa[608] = 0.042632964f;
      sa[609] = 0.069802895f;
      sa[610] = 0.13931385f;
      sa[611] = -0.15234809f;
      sa[612] = -0.107366554f;
      sa[613] = 0.10306751f;
      sa[614] = 0.06465008f;
      sa[615] = -0.018594248f;
      sa[616] = 0.06332225f;
      sa[617] = -0.2662643f;
      sa[618] = -0.119705915f;
      sa[619] = -0.1855363f;
      sa[620] = -0.014569299f;
      sa[621] = -0.13780947f;
      sa[622] = -0.26706198f;
      sa[623] = -0.24806608f;
      sa[624] = -0.04221621f;
      sa[625] = 0.25546998f;
      sa[626] = -0.007889509f;
      sa[627] = 0.23314422f;
      sa[628] = -0.23835833f;
      sa[629] = 0.04792692f;
      sa[630] = -0.32328007f;
      sa[631] = 0.29759592f;
      sa[632] = 0.1028635f;
      sa[633] = -0.1447014f;
      sa[634] = -0.18913932f;
      sa[635] = 0.17306335f;
      sa[636] = -0.15367796f;
      sa[637] = -0.0011226006f;
      sa[638] = -0.2372175f;
      sa[639] = 0.011750574f;
      sa[640] = -0.14864299f;
      sa[641] = -0.30993414f;
      sa[642] = 0.1803348f;
      sa[643] = -0.3539773f;
      sa[644] = -0.13919464f;
      sa[645] = -0.323017f;
      sa[646] = 0.36050993f;
      sa[647] = -0.10379575f;
      sa[648] = 0.07976747f;
      sa[649] = -0.02569542f;
      sa[650] = 0.041766617f;
      sa[651] = -0.139643f;
      sa[652] = 0.056274123f;
      sa[653] = -0.16404267f;
      sa[654] = -0.1942452f;
      sa[655] = -0.188747f;
      sa[656] = 0.27876118f;
      sa[657] = 0.15246452f;
      sa[658] = -0.25952944f;
      sa[659] = -0.1807911f;
      sa[660] = -0.2287018f;
      sa[661] = -0.093535885f;
      sa[662] = -0.2959707f;
      sa[663] = 0.14600793f;
      sa[664] = -0.16954014f;
      sa[665] = 0.23103602f;
      sa[666] = 0.04009017f;
      sa[667] = -0.4105928f;
      sa[668] = 0.25962332f;
      sa[669] = -0.14463016f;
      sa[670] = 0.08818622f;
      sa[671] = 0.0082241045f;
      sa[672] = -0.30024898f;
      sa[673] = 0.15816744f;
      sa[674] = 0.25965235f;
      sa[675] = -0.31401715f;
      sa[676] = -0.050433394f;
      sa[677] = -0.18613887f;
      sa[678] = 0.2065197f;
      sa[679] = -0.05844182f;
      sa[680] = 0.086768344f;
      sa[681] = 0.23271675f;
      sa[682] = -0.36112073f;
      sa[683] = -0.16064459f;
      sa[684] = -0.028753638f;
      sa[685] = 0.14813755f;
      sa[686] = -0.109960735f;
      sa[687] = -0.19492598f;
      sa[688] = -0.2705763f;
      sa[689] = -0.23957066f;
      sa[690] = -0.056571227f;
      sa[691] = 0.15953965f;
      sa[692] = -0.21084695f;
      sa[693] = -0.16616356f;
      sa[694] = 0.29167283f;
      sa[695] = -0.19438994f;
      sa[696] = -0.10133718f;
      sa[697] = -0.15868519f;
      sa[698] = -0.202346f;
      sa[699] = 0.30199942f;
      sa[700] = 0.18088199f;
      sa[701] = 0.11909526f;
      sa[702] = 0.14552732f;
      sa[703] = -0.13824442f;
      sa[704] = -0.25439158f;
      sa[705] = -0.019778468f;
      sa[706] = -0.14822751f;
      sa[707] = 0.01768632f;
      sa[708] = -0.003974082f;
      sa[709] = -0.25283572f;
      sa[710] = 0.24616937f;
      sa[711] = 0.041789357f;
      sa[712] = 0.05023612f;
      sa[713] = 0.17319685f;
      sa[714] = 0.19564167f;
      sa[715] = 0.12742566f;
      sa[716] = 0.004719092f;
      sa[717] = 0.066260055f;
      sa[718] = 0.02144716f;
      sa[719] = 0.1853295f;
      sa[720] = -0.35136384f;
      sa[721] = 0.2506912f;
      sa[722] = -0.11878675f;
      sa[723] = 0.11749368f;
      sa[724] = 0.05540066f;
      sa[725] = -0.18680331f;
      sa[726] = -0.1316134f;
      sa[727] = -0.28298372f;
      sa[728] = -0.07588695f;
      sa[729] = -0.047509152f;
      sa[730] = 0.08977718f;
      sa[731] = -0.23385061f;
      sa[732] = 0.270725f;
      sa[733] = 0.3574649f;
      sa[734] = -0.013596217f;
      sa[735] = 0.325287f;
      sa[736] = 0.07170248f;
      sa[737] = 0.22030891f;
      sa[738] = -0.35606363f;
      sa[739] = -0.25737375f;
      sa[740] = -0.26140836f;
      sa[741] = -0.3325669f;
      sa[742] = 0.12964092f;
      sa[743] = -0.013260017f;
      sa[744] = 0.083789416f;
      sa[745] = -0.25413182f;
      sa[746] = 0.0382611f;
      sa[747] = -0.16622095f;
      sa[748] = -0.12554269f;
      sa[749] = -0.2198137f;
      sa[750] = 0.25166166f;
      sa[751] = 0.20004739f;
      sa[752] = 0.021560734f;
      sa[753] = 0.089817084f;
      sa[754] = 0.02943473f;
      sa[755] = 0.09117089f;
      sa[756] = -0.26169065f;
      sa[757] = 0.30557463f;
      sa[758] = -0.1303633f;
      sa[759] = -0.12201397f;
      sa[760] = -0.09996199f;
      sa[761] = 0.049949106f;
      sa[762] = -0.10018093f;
      sa[763] = 0.18534382f;
      sa[764] = 0.038505796f;
      sa[765] = -0.0803265f;
      sa[766] = -0.15964366f;
      sa[767] = 0.013052202f;
      sa[768] = -0.13714392f;
      sa[769] = -0.24830034f;
      sa[770] = 0.021832662f;
      sa[771] = 0.04703783f;
      sa[772] = 0.08076007f;
      sa[773] = -0.28235614f;
      sa[774] = -0.014782931f;
      sa[775] = 0.27159443f;
      sa[776] = -0.03320147f;
      sa[777] = 0.062834956f;
      sa[778] = 0.17049536f;
      sa[779] = -0.15178165f;
      sa[780] = -0.025210554f;
      sa[781] = -0.10844732f;
      sa[782] = 0.16413477f;
      sa[783] = -0.15712532f;
      sa[784] = -0.103856094f;
      sa[785] = -0.083404295f;
      sa[786] = -0.06440354f;
      sa[787] = -0.18257923f;
      sa[788] = -0.2645084f;
      sa[789] = 0.008121724f;
      sa[790] = -0.012910491f;
      sa[791] = -0.14869817f;
      sa[792] = 0.20063448f;
      sa[793] = -0.076385275f;
      sa[794] = -0.24235125f;
      sa[795] = -0.07015165f;
      sa[796] = 0.20806503f;
      sa[797] = -0.23867938f;
      sa[798] = -0.31785274f;
      sa[799] = -0.146229f;
      sa[800] = 0.14028417f;
      sa[801] = 0.03812491f;
      sa[802] = 0.11600274f;
      sa[803] = 0.15130544f;
      sa[804] = 0.12855512f;
      sa[805] = 0.2242442f;
      sa[806] = 0.21204795f;
      sa[807] = 0.18081455f;
      sa[808] = -0.00792741f;
      sa[809] = -0.23828596f;
      sa[810] = 0.18726763f;
      sa[811] = -0.048504088f;
      sa[812] = 0.09340838f;
      sa[813] = -0.33244765f;
      sa[814] = 4.6410775E-4f;
      sa[815] = -0.24195902f;
      sa[816] = -0.15485033f;
      sa[817] = -0.23825483f;
      sa[818] = 0.05243484f;
      sa[819] = -9.3114795E-4f;
      sa[820] = -0.32430157f;
      sa[821] = -0.20846148f;
      sa[822] = -0.30552596f;
      sa[823] = 0.07500988f;
      sa[824] = 0.11845826f;
      sa[825] = 0.49255568f;
      sa[826] = -0.39140084f;
      sa[827] = -0.32471564f;
      sa[828] = 0.09973846f;
      sa[829] = -0.06932578f;
      sa[830] = 0.13318406f;
      sa[831] = 0.21109547f;
      sa[832] = 0.13760915f;
      sa[833] = 0.11254938f;
      sa[834] = 0.20957202f;
      sa[835] = -0.07553682f;
      sa[836] = 0.20301346f;
      sa[837] = -0.19116718f;
      sa[838] = 0.09876075f;
      sa[839] = -0.14541006f;
      sa[840] = 0.17765465f;
      sa[841] = 0.13145734f;
      sa[842] = 0.16419578f;
      sa[843] = 0.035757888f;
      sa[844] = 0.077262454f;
      sa[845] = 0.13678686f;
      sa[846] = -0.19295993f;
      sa[847] = -0.3196201f;
      sa[848] = 0.15123296f;
      sa[849] = 0.18262482f;
      sa[850] = -0.042173702f;
      sa[851] = 0.04025213f;
      sa[852] = 0.2494544f;
      sa[853] = 0.14695211f;
      sa[854] = 0.31110772f;
      sa[855] = 0.14557794f;
      sa[856] = 0.05787165f;
      sa[857] = -0.18665566f;
      sa[858] = 0.14619005f;
      sa[859] = 0.036416378f;
      sa[860] = 0.3482408f;
      sa[861] = -0.014585358f;
      sa[862] = -0.25217685f;
      sa[863] = -0.08695377f;
      sa[864] = -0.129792f;
      sa[865] = 0.22491391f;
      sa[866] = -0.14944193f;
      sa[867] = -0.022214599f;
      sa[868] = -0.17136599f;
      sa[869] = 0.1642621f;
      sa[870] = -0.064833365f;
      sa[871] = 0.16302948f;
      sa[872] = 0.19248341f;
      sa[873] = -0.07428534f;
      sa[874] = 0.03567802f;
      sa[875] = -0.3129467f;
      sa[876] = -0.24680872f;
      sa[877] = -0.26317677f;
      sa[878] = 0.003933059f;
      sa[879] = 0.17801847f;
      sa[880] = -0.15677296f;
      sa[881] = -0.15728275f;
      sa[882] = 0.21335301f;
      sa[883] = 0.25999945f;
      sa[884] = -0.10491897f;
      sa[885] = -0.08142512f;
      sa[886] = 0.101640865f;
      sa[887] = -0.021253083f;
      sa[888] = -0.10974445f;
      sa[889] = 0.06134124f;
      sa[890] = -0.2961802f;
      sa[891] = 0.38369057f;
      sa[892] = 0.17816754f;
      sa[893] = 0.297573f;
      sa[894] = 0.02074543f;
      sa[895] = 0.26166257f;
      sa[896] = -0.22279051f;
      sa[897] = 0.11967699f;
      sa[898] = 0.03822904f;
      sa[899] = 0.2777539f;
      sa[900] = -0.21538983f;
      sa[901] = 0.10071357f;
      sa[902] = -0.2780558f;
      sa[903] = -0.050768517f;
      sa[904] = 0.15304302f;
      sa[905] = 0.18338384f;
      sa[906] = -0.23613672f;
      sa[907] = -0.32418838f;
      sa[908] = -0.2451081f;
      sa[909] = 0.085487045f;
      sa[910] = 0.060668547f;
      sa[911] = -0.06830497f;
      sa[912] = -0.009520232f;
      sa[913] = 0.06591568f;
      sa[914] = -0.17691375f;
      sa[915] = 0.014740047f;
      sa[916] = 0.21431236f;
      sa[917] = 0.10022904f;
      sa[918] = 0.08729303f;
      sa[919] = 0.055665303f;
      sa[920] = 0.12131459f;
      sa[921] = -0.11128256f;
      sa[922] = -0.11916327f;
      sa[923] = -0.123777546f;
      sa[924] = -0.07474608f;
      sa[925] = -0.11842563f;
      sa[926] = 0.040980726f;
      sa[927] = -0.11461187f;
      sa[928] = 0.1947473f;
      sa[929] = 0.035349105f;
      sa[930] = 0.12121216f;
      sa[931] = -0.123044446f;
      sa[932] = 0.2609758f;
      sa[933] = -0.07148803f;
      sa[934] = 0.2921169f;
      sa[935] = -0.15390484f;
      sa[936] = 0.046192907f;
      sa[937] = 0.17137404f;
      sa[938] = -0.09223901f;
      sa[939] = -0.024683738f;
      sa[940] = -0.072156705f;
      sa[941] = -0.32463804f;
      sa[942] = -0.24901839f;
      sa[943] = -0.17414491f;
      sa[944] = -0.24153814f;
      sa[945] = 0.017871393f;
      sa[946] = 0.1261545f;
      sa[947] = 0.19625103f;
      sa[948] = 0.08899462f;
      sa[949] = -0.19595078f;
      sa[950] = 0.09544292f;
      sa[951] = -0.0869517f;
      sa[952] = -0.22641878f;
      sa[953] = -0.23864508f;
      sa[954] = -0.18965814f;
      sa[955] = 0.10972225f;
      sa[956] = 0.0020292848f;
      sa[957] = 0.04175175f;
      sa[958] = 0.09691049f;
      sa[959] = -0.15059367f;
      sa[960] = 0.32726628f;
      sa[961] = -0.14850023f;
      sa[962] = -0.06462752f;
      sa[963] = -0.07569937f;
      sa[964] = -0.15810645f;
      sa[965] = 0.26082033f;
      sa[966] = -0.10232274f;
      sa[967] = -0.23731214f;
      sa[968] = 0.11718749f;
      sa[969] = -0.062490467f;
      sa[970] = 0.3518369f;
      sa[971] = 0.035360835f;
      sa[972] = -0.2303559f;
      sa[973] = -0.24905132f;
      sa[974] = -0.3211028f;
      sa[975] = -0.2244023f;
      sa[976] = -0.09883073f;
      sa[977] = 0.047769167f;
      sa[978] = -0.066523165f;
      sa[979] = 0.10824867f;
      sa[980] = 0.17540188f;
      sa[981] = -0.20380764f;
      sa[982] = 0.12888043f;
      sa[983] = 0.004293315f;
      sa[984] = -0.26769233f;
      sa[985] = 0.07571695f;
      sa[986] = -0.23627116f;
      sa[987] = 0.068809904f;
      sa[988] = 0.17897622f;
      sa[989] = 0.2410921f;
      sa[990] = 0.24456589f;
      sa[991] = -0.16375464f;
      sa[992] = -0.2318445f;
      sa[993] = -0.095903456f;
      sa[994] = -0.1622748f;
      sa[995] = -0.28264597f;
      sa[996] = 0.20395887f;
      sa[997] = 0.18091112f;
      sa[998] = 0.11111425f;
      sa[999] = 0.17456466f;
      sa[1000] = -0.008167543f;
      sa[1001] = 0.17294082f;
      sa[1002] = 0.24256276f;
      sa[1003] = -0.13550453f;
      sa[1004] = 0.23965259f;
      sa[1005] = -0.13449538f;
      sa[1006] = -0.27138576f;
      sa[1007] = -0.022578685f;
      sa[1008] = 0.19862685f;
      sa[1009] = 0.21804379f;
      sa[1010] = -0.019964086f;
      sa[1011] = 0.28325948f;
      sa[1012] = -0.07084154f;
      sa[1013] = 0.15341984f;
      sa[1014] = 0.24045306f;
      sa[1015] = -0.2151951f;
      sa[1016] = 0.25229293f;
      sa[1017] = 0.09056703f;
      sa[1018] = -0.07076961f;
      sa[1019] = 0.06007596f;
      sa[1020] = -0.25818634f;
      sa[1021] = 0.06703784f;
      sa[1022] = 0.18159091f;
      sa[1023] = 0.08774526f;
      sa[1024] = 0.06851929f;
      sa[1025] = 0.17722662f;
      sa[1026] = 0.14800608f;
      sa[1027] = 0.05815932f;
      sa[1028] = 0.26649958f;
      sa[1029] = -0.050676182f;
      sa[1030] = -0.19743587f;
      sa[1031] = -0.117376916f;
      sa[1032] = -0.26553416f;
      sa[1033] = 0.0011790018f;
      sa[1034] = -0.020425538f;
      sa[1035] = -0.025677849f;
      sa[1036] = 0.24953069f;
      sa[1037] = 0.019728899f;
      sa[1038] = -0.19176883f;
      sa[1039] = 0.26908755f;
      sa[1040] = -0.03846391f;
      sa[1041] = 0.18249309f;
      sa[1042] = -0.30541053f;
      sa[1043] = -0.030181339f;
      sa[1044] = 0.20667808f;
      sa[1045] = 0.23616314f;
      sa[1046] = -0.18149173f;
      sa[1047] = -0.2041647f;
      sa[1048] = 0.12483995f;
      sa[1049] = -0.0968147f;
      sa[1050] = 0.036946133f;
      sa[1051] = -0.22993803f;
      sa[1052] = 0.25534895f;
      sa[1053] = 0.32226136f;
      sa[1054] = 0.21513893f;
      sa[1055] = 0.048752878f;
      sa[1056] = 0.29036933f;
      sa[1057] = -0.16082384f;
      sa[1058] = 0.22795956f;
      sa[1059] = -0.16880324f;
      sa[1060] = -0.23833233f;
      sa[1061] = 0.14452597f;
      sa[1062] = 0.10922954f;
      sa[1063] = 0.13578586f;
      sa[1064] = 0.11662414f;
      sa[1065] = -0.03687456f;
      sa[1066] = 0.18644983f;
      sa[1067] = -0.3146541f;
      sa[1068] = -0.27684784f;
      sa[1069] = 0.19861637f;
      sa[1070] = 0.008815897f;
      sa[1071] = 0.17054681f;
      sa[1072] = -0.22279836f;
      sa[1073] = 0.080258876f;
      sa[1074] = 0.12402f;
      sa[1075] = -0.23870225f;
      sa[1076] = -0.12282283f;
      sa[1077] = 0.08473939f;
      sa[1078] = -0.03389995f;
      sa[1079] = 0.0477402f;
      sa[1080] = 0.15892965f;
      sa[1081] = 0.23116001f;
      sa[1082] = -0.3378997f;
      sa[1083] = -0.14859678f;
      sa[1084] = 0.21904264f;
      sa[1085] = -0.18903348f;
      sa[1086] = -0.23539768f;
      sa[1087] = -0.25331488f;
      sa[1088] = -0.19995911f;
      sa[1089] = -0.0635249f;
      sa[1090] = -0.2389956f;
      sa[1091] = 0.08731622f;
      sa[1092] = -0.21212713f;
      sa[1093] = -0.22473325f;
      sa[1094] = 0.06689179f;
      sa[1095] = -0.23808484f;
      sa[1096] = 0.11224042f;
      sa[1097] = -0.18245167f;
      sa[1098] = 0.025878388f;
      sa[1099] = 0.022584183f;
      sa[1100] = -0.14096823f;
      sa[1101] = 0.09057211f;
      sa[1102] = -0.14256816f;
      sa[1103] = 0.20837058f;
      sa[1104] = -0.27740154f;
      sa[1105] = -0.12293123f;
      sa[1106] = -0.008668226f;
      sa[1107] = 0.16111355f;
      sa[1108] = -0.1972308f;
      sa[1109] = 0.22835335f;
      sa[1110] = 0.16864683f;
      sa[1111] = -0.2577607f;
      sa[1112] = 0.16244267f;
      sa[1113] = 0.14546673f;
      sa[1114] = 0.16924223f;
      sa[1115] = 0.195856f;
      sa[1116] = -0.096334636f;
      sa[1117] = 0.026660588f;
      sa[1118] = -0.14514935f;
      sa[1119] = -0.07274622f;
      sa[1120] = 0.13330688f;
      sa[1121] = 0.087720275f;
      sa[1122] = 0.21550772f;
      sa[1123] = 0.25897416f;
      sa[1124] = 0.10694963f;
      sa[1125] = -0.0016603697f;
      sa[1126] = 0.18995924f;
      sa[1127] = 0.19204119f;
      sa[1128] = 0.06258926f;
      sa[1129] = -0.05238143f;
      sa[1130] = 0.20759661f;
      sa[1131] = 0.3299859f;
      sa[1132] = -0.08581689f;
      sa[1133] = 0.013849617f;
      sa[1134] = 0.06535642f;
      sa[1135] = -0.44479752f;
      sa[1136] = -0.006777254f;
      sa[1137] = 0.15186654f;
      sa[1138] = -0.091936536f;
      sa[1139] = 0.028074313f;
      sa[1140] = 0.21024212f;
      sa[1141] = -0.33619633f;
      sa[1142] = -0.0052680047f;
      sa[1143] = 0.074524984f;
      sa[1144] = -0.17286208f;
      sa[1145] = 0.1421447f;
      sa[1146] = 0.3089953f;
      sa[1147] = -0.05326444f;
      sa[1148] = -0.016351312f;
      sa[1149] = -0.020174278f;
      sa[1150] = -0.30945325f;
      sa[1151] = -0.262836f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_10_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_10_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2198356f;
      sa[1] = -0.108447336f;
      sa[2] = -0.5480561f;
      sa[3] = -0.9003036f;
      sa[4] = 0.08559437f;
      sa[5] = 0.26225272f;
      sa[6] = 1.2277501f;
      sa[7] = -0.68149287f;
      sa[8] = -0.9279003f;
      sa[9] = 0.6809451f;
      sa[10] = -0.15405397f;
      sa[11] = 0.435903f;
      sa[12] = 0.11730824f;
      sa[13] = 0.012629948f;
      sa[14] = -1.2658621f;
      sa[15] = 1.1413523f;
      sa[16] = 1.5442967f;
      sa[17] = -0.4322026f;
      sa[18] = 0.029594593f;
      sa[19] = -0.49590075f;
      sa[20] = 1.1346892f;
      sa[21] = 0.02177093f;
      sa[22] = -0.9649844f;
      sa[23] = 0.7808977f;
      sa[24] = -1.3932273f;
      sa[25] = 0.47578987f;
      sa[26] = -0.20435737f;
      sa[27] = 1.4659226f;
      sa[28] = -1.3704947f;
      sa[29] = -0.5351156f;
      sa[30] = 0.324692f;
      sa[31] = -0.61678094f;
      sa[32] = -1.1318235f;
      sa[33] = -1.4578632f;
      sa[34] = 0.081405364f;
      sa[35] = 1.3993146f;
      sa[36] = -0.28681272f;
      sa[37] = -0.04047103f;
      sa[38] = 0.1897641f;
      sa[39] = 0.7654862f;
      sa[40] = -0.7607748f;
      sa[41] = -1.3095336f;
      sa[42] = -1.0824083f;
      sa[43] = -1.5164346f;
      sa[44] = 0.04856212f;
      sa[45] = -1.3234102f;
      sa[46] = 1.1203728f;
      sa[47] = 1.276885f;
      sa[48] = -1.3200065f;
      sa[49] = -1.1183702f;
      sa[50] = 0.46103385f;
      sa[51] = -0.28141764f;
      sa[52] = 0.87310916f;
      sa[53] = 0.83015805f;
      sa[54] = -0.2371383f;
      sa[55] = 1.157299f;
      sa[56] = -0.9791264f;
      sa[57] = -1.0697935f;
      sa[58] = -0.090033956f;
      sa[59] = -0.13614173f;
      sa[60] = 1.3539655f;
      sa[61] = -0.5866369f;
      sa[62] = -0.30792135f;
      sa[63] = 0.69811374f;
      sa[64] = 1.3490983f;
      sa[65] = -0.6537241f;
      sa[66] = 0.573801f;
      sa[67] = 1.4888356f;
      sa[68] = 0.65828f;
      sa[69] = -1.112621f;
      sa[70] = -1.5013117f;
      sa[71] = -0.4782363f;
      sa[72] = -1.3113033f;
      sa[73] = 1.1775625f;
      sa[74] = 1.3669642f;
      sa[75] = -0.13550162f;
      sa[76] = 0.8731778f;
      sa[77] = 0.4337357f;
      sa[78] = -1.4022332f;
      sa[79] = 0.95195395f;
      sa[80] = -0.81744444f;
      sa[81] = 0.11293889f;
      sa[82] = 0.83811516f;
      sa[83] = -0.61662984f;
      sa[84] = -1.6419048f;
      sa[85] = -1.2611527f;
      sa[86] = 0.28893512f;
      sa[87] = 1.1628006f;
      sa[88] = -1.5658346f;
      sa[89] = -0.5866561f;
      sa[90] = -1.1003051f;
      sa[91] = 1.500755f;
      sa[92] = -0.3176991f;
      sa[93] = 0.27453214f;
      sa[94] = -1.513319f;
      sa[95] = -0.22107366f;
      sa[96] = -1.0335555f;
      sa[97] = 0.17239311f;
      sa[98] = -0.092995614f;
      sa[99] = 0.33947676f;
      sa[100] = -1.2985067f;
      sa[101] = -0.4645607f;
      sa[102] = 1.2391902f;
      sa[103] = 0.1295128f;
      sa[104] = -0.17024407f;
      sa[105] = -0.6810804f;
      sa[106] = 1.3948703f;
      sa[107] = 1.1927477f;
      sa[108] = 0.7991698f;
      sa[109] = 0.15917905f;
      sa[110] = 0.75587493f;
      sa[111] = -0.8514537f;
      sa[112] = -1.1185324f;
      sa[113] = 0.2376166f;
      sa[114] = -6.390936E-4f;
      sa[115] = -0.4439313f;
      sa[116] = 1.1371478f;
      sa[117] = 0.05129504f;
      sa[118] = -1.4191493f;
      sa[119] = -0.77700824f;
      sa[120] = -0.32547563f;
      sa[121] = 0.9906737f;
      sa[122] = -0.011651778f;
      sa[123] = 0.26071426f;
      sa[124] = -0.7204192f;
      sa[125] = 0.7585448f;
      sa[126] = -1.04362f;
      sa[127] = 0.35752255f;
      sa[128] = -0.8931148f;
      sa[129] = 0.73758763f;
      sa[130] = -0.41073248f;
      sa[131] = 0.8569636f;
      sa[132] = 0.4047553f;
      sa[133] = 0.57513094f;
      sa[134] = 0.5557109f;
      sa[135] = -1.0917138f;
      sa[136] = 0.54324096f;
      sa[137] = -0.61544406f;
      sa[138] = -0.13616614f;
      sa[139] = 1.178783f;
      sa[140] = -0.4745338f;
      sa[141] = -0.055357713f;
      sa[142] = 0.28579125f;
      sa[143] = -0.7934576f;
      sa[144] = 0.9735889f;
      sa[145] = -0.7442125f;
      sa[146] = 0.0745367f;
      sa[147] = -0.2815226f;
      sa[148] = -0.8719391f;
      sa[149] = 1.0867804f;
      sa[150] = -1.0982538f;
      sa[151] = -1.5726678f;
      sa[152] = 1.560897f;
      sa[153] = -0.5588861f;
      sa[154] = 1.3099463f;
      sa[155] = -1.5428191f;
      sa[156] = -1.4399816f;
      sa[157] = -1.1021947f;
      sa[158] = -0.22736244f;
      sa[159] = -0.6506033f;
      sa[160] = 1.334577f;
      sa[161] = -1.0915529f;
      sa[162] = 1.5160261f;
      sa[163] = -0.74269193f;
      sa[164] = 0.76905113f;
      sa[165] = -0.4955183f;
      sa[166] = 1.3254287f;
      sa[167] = -1.3906838f;
      sa[168] = 1.0204422f;
      sa[169] = -1.5057487f;
      sa[170] = 1.1262293f;
      sa[171] = 0.88836193f;
      sa[172] = 1.5172658f;
      sa[173] = 1.5458255f;
      sa[174] = -0.10034211f;
      sa[175] = -0.014226073f;
      sa[176] = -0.77912676f;
      sa[177] = 0.09387201f;
      sa[178] = -1.0633922f;
      sa[179] = -0.21990961f;
      sa[180] = -1.3934584f;
      sa[181] = -0.9869775f;
      sa[182] = 0.27787358f;
      sa[183] = -0.9805732f;
      sa[184] = 1.5088024f;
      sa[185] = 1.1661352f;
      sa[186] = -0.4967576f;
      sa[187] = -0.9549842f;
      sa[188] = -0.5500426f;
      sa[189] = -0.7027777f;
      sa[190] = -1.4294133f;
      sa[191] = -1.0143827f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_10_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_10_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_10_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


