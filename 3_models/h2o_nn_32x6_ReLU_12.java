/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:09:28.301+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_12

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_12 > h2o_nn_32x6_ReLU_12.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_12.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_12", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_12 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_12_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_12_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_12_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_12_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_12_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_12_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_12_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_12_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_12_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_12.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_12_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2864864864864865,0.13513513513513514,0.14594594594594595,0.2864864864864865,0.14594594594594595};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_12() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(4218649987992233536L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_12_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_12_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_12_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_12_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_12_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_12_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_12_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_12_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_12_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.4644315053261524;
      sa[1] = 0.4684545931011223;
      sa[2] = 0.5815426894405427;
      sa[3] = 0.5630627239494013;
      sa[4] = 0.6694280889005478;
      sa[5] = 0.581372310040538;
      sa[6] = 0.6101639660790411;
      sa[7] = 0.3516361866585346;
      sa[8] = 0.4993214281356622;
      sa[9] = 0.533308996201633;
      sa[10] = 0.5152712711962;
      sa[11] = 0.5439602330036947;
      sa[12] = 0.4842541786799263;
      sa[13] = 0.4814724130927761;
      sa[14] = 0.49695267530247605;
      sa[15] = 0.5388046893840414;
      sa[16] = 0.5488846650381715;
      sa[17] = 0.5015297802258716;
      sa[18] = 0.4973757169954378;
      sa[19] = 0.516612967418314;
      sa[20] = 0.5117398549900405;
      sa[21] = 0.5151454109661425;
      sa[22] = 0.6358702816546526;
      sa[23] = 0.523367901155332;
      sa[24] = 0.5083668464629857;
      sa[25] = 0.4392481853761226;
      sa[26] = 0.4844399376769767;
      sa[27] = 0.4598181201586465;
      sa[28] = 0.5252795338983635;
      sa[29] = 0.3980107128704388;
      sa[30] = 0.6077263297237853;
      sa[31] = 0.4346414083159646;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_12_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_12_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.012621511182796091;
      sa[1] = 0.005671787189271863;
      sa[2] = -0.009078092410759537;
      sa[3] = -0.06078704955691008;
      sa[4] = 0.02432559340420937;
    }
  }
}
class h2o_nn_32x6_ReLU_12_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_12_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_12_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.10107192f;
      sa[1] = 0.22082035f;
      sa[2] = 0.12806335f;
      sa[3] = 0.20313622f;
      sa[4] = -0.22379643f;
      sa[5] = -0.1778405f;
      sa[6] = -0.06722685f;
      sa[7] = 0.13653207f;
      sa[8] = 0.16465534f;
      sa[9] = -0.18220454f;
      sa[10] = -0.12954122f;
      sa[11] = -0.13450842f;
      sa[12] = 0.07183511f;
      sa[13] = -0.22765303f;
      sa[14] = -0.1640551f;
      sa[15] = -0.08408485f;
      sa[16] = 0.064214766f;
      sa[17] = 0.13422622f;
      sa[18] = -0.22084124f;
      sa[19] = 0.26316413f;
      sa[20] = 0.19213733f;
      sa[21] = -0.34661293f;
      sa[22] = 0.20025393f;
      sa[23] = -0.25677255f;
      sa[24] = 0.25836644f;
      sa[25] = 0.1691655f;
      sa[26] = -0.26607442f;
      sa[27] = 0.17497079f;
      sa[28] = 0.19951108f;
      sa[29] = -0.31270617f;
      sa[30] = -0.18542607f;
      sa[31] = 0.038470406f;
      sa[32] = 0.18875936f;
      sa[33] = -0.28594762f;
      sa[34] = 0.052995116f;
      sa[35] = -0.113149464f;
      sa[36] = 0.08795099f;
      sa[37] = 0.23729384f;
      sa[38] = -0.122164674f;
      sa[39] = 0.05205568f;
      sa[40] = -0.00254849f;
      sa[41] = -0.1179756f;
      sa[42] = -0.17858438f;
      sa[43] = 0.010740951f;
      sa[44] = 0.19674592f;
      sa[45] = -0.2529431f;
      sa[46] = 0.08867027f;
      sa[47] = -0.051683318f;
      sa[48] = 0.15874672f;
      sa[49] = 0.18720289f;
      sa[50] = 0.13306849f;
      sa[51] = -0.32564086f;
      sa[52] = -0.10855935f;
      sa[53] = 0.17431013f;
      sa[54] = 0.19997327f;
      sa[55] = 0.09054647f;
      sa[56] = -0.19828169f;
      sa[57] = -0.2975993f;
      sa[58] = 0.22295354f;
      sa[59] = -0.16607079f;
      sa[60] = -0.2111238f;
      sa[61] = 0.21446492f;
      sa[62] = 0.11949842f;
      sa[63] = 0.06199563f;
      sa[64] = 0.09167837f;
      sa[65] = 0.088707745f;
      sa[66] = -0.02477041f;
      sa[67] = 0.102882445f;
      sa[68] = -0.1450148f;
      sa[69] = 0.033910125f;
      sa[70] = -0.052405406f;
      sa[71] = 0.3693947f;
      sa[72] = -0.099651225f;
      sa[73] = 0.28790787f;
      sa[74] = -0.16224043f;
      sa[75] = 0.112183005f;
      sa[76] = -0.16655986f;
      sa[77] = 5.48629E-4f;
      sa[78] = 0.0025245196f;
      sa[79] = 0.11378651f;
      sa[80] = -0.18046355f;
      sa[81] = -0.069067925f;
      sa[82] = -0.0585642f;
      sa[83] = 0.18605225f;
      sa[84] = 0.042094875f;
      sa[85] = -0.08325254f;
      sa[86] = 0.21301574f;
      sa[87] = 0.29497412f;
      sa[88] = 0.29258257f;
      sa[89] = 0.116276346f;
      sa[90] = -0.18972966f;
      sa[91] = 0.16354097f;
      sa[92] = 0.15576832f;
      sa[93] = -0.16238035f;
      sa[94] = -0.10091087f;
      sa[95] = -0.24871583f;
      sa[96] = 0.11292167f;
      sa[97] = 0.03612235f;
      sa[98] = 0.109353304f;
      sa[99] = -0.16313653f;
      sa[100] = -0.0057742745f;
      sa[101] = -0.1534068f;
      sa[102] = -0.20197316f;
      sa[103] = -0.07240185f;
      sa[104] = -0.20075154f;
      sa[105] = -0.24562833f;
      sa[106] = -0.055860803f;
      sa[107] = 0.32484764f;
      sa[108] = 0.16591585f;
      sa[109] = -0.09969447f;
      sa[110] = -0.08871647f;
      sa[111] = 0.12174643f;
      sa[112] = 0.18944152f;
      sa[113] = 0.111380644f;
      sa[114] = -0.077475175f;
      sa[115] = 0.043971825f;
      sa[116] = -0.20441325f;
      sa[117] = 0.041516997f;
      sa[118] = -0.25493804f;
      sa[119] = -0.17468908f;
      sa[120] = 0.2960244f;
      sa[121] = 0.316154f;
      sa[122] = 0.36321723f;
      sa[123] = 0.38379088f;
      sa[124] = 0.3856749f;
      sa[125] = 0.34917206f;
      sa[126] = -0.37556985f;
      sa[127] = -0.23012003f;
      sa[128] = 0.16283368f;
      sa[129] = 0.23463508f;
      sa[130] = -0.049253862f;
      sa[131] = 0.36912417f;
      sa[132] = 0.17231779f;
      sa[133] = -0.27357444f;
      sa[134] = -0.032243706f;
      sa[135] = -0.09730619f;
      sa[136] = -0.15084055f;
      sa[137] = 0.072384894f;
      sa[138] = 0.22370675f;
      sa[139] = 0.08595299f;
      sa[140] = -0.14402294f;
      sa[141] = -0.24636468f;
      sa[142] = 0.27208692f;
      sa[143] = -0.19622886f;
      sa[144] = 0.21419592f;
      sa[145] = -0.09263673f;
      sa[146] = -0.16935222f;
      sa[147] = 0.08884375f;
      sa[148] = 0.20342845f;
      sa[149] = 0.29645953f;
      sa[150] = 0.328925f;
      sa[151] = -0.15253192f;
      sa[152] = -0.0027798507f;
      sa[153] = 0.27872083f;
      sa[154] = 0.27825966f;
      sa[155] = -0.19853452f;
      sa[156] = 0.18841903f;
      sa[157] = -0.0572776f;
      sa[158] = 0.14410016f;
      sa[159] = 0.18461667f;
      sa[160] = 0.16528375f;
      sa[161] = 0.29215544f;
      sa[162] = -0.26556885f;
      sa[163] = 0.12740996f;
      sa[164] = 0.24480988f;
      sa[165] = -0.016845653f;
      sa[166] = -0.05693086f;
      sa[167] = -0.04013452f;
      sa[168] = 0.27686417f;
      sa[169] = 0.33110183f;
      sa[170] = 0.025874132f;
      sa[171] = 0.023392018f;
      sa[172] = 0.019749258f;
      sa[173] = -0.068118125f;
      sa[174] = 0.10028843f;
      sa[175] = -0.14690898f;
      sa[176] = 0.005869807f;
      sa[177] = -7.4699864E-4f;
      sa[178] = -0.14594226f;
      sa[179] = -0.0054351627f;
      sa[180] = -0.08236209f;
      sa[181] = -0.32583213f;
      sa[182] = -0.026464745f;
      sa[183] = -0.050946303f;
      sa[184] = 0.32902995f;
      sa[185] = 0.17289029f;
      sa[186] = -0.2812986f;
      sa[187] = 0.20243081f;
      sa[188] = -0.07042494f;
      sa[189] = 0.22677319f;
      sa[190] = 0.11903984f;
      sa[191] = -0.15484518f;
      sa[192] = -0.1385129f;
      sa[193] = 0.18626024f;
      sa[194] = 0.049308766f;
      sa[195] = 0.31129766f;
      sa[196] = 0.23624836f;
      sa[197] = 0.010037341f;
      sa[198] = 0.16074179f;
      sa[199] = -0.06365809f;
      sa[200] = 0.021444075f;
      sa[201] = -0.2310691f;
      sa[202] = 0.12769705f;
      sa[203] = 0.074385524f;
      sa[204] = -0.14445423f;
      sa[205] = 0.2463825f;
      sa[206] = 0.2770853f;
      sa[207] = 0.25550634f;
      sa[208] = -0.23794857f;
      sa[209] = -0.032894935f;
      sa[210] = -0.25329646f;
      sa[211] = -0.16798535f;
      sa[212] = 0.29647875f;
      sa[213] = -0.09552385f;
      sa[214] = -0.24516869f;
      sa[215] = 0.001538267f;
      sa[216] = 0.11444112f;
      sa[217] = -0.05272125f;
      sa[218] = -0.29494914f;
      sa[219] = 0.16811194f;
      sa[220] = -0.20793973f;
      sa[221] = -0.026561774f;
      sa[222] = 0.17506714f;
      sa[223] = 0.019122664f;
      sa[224] = 0.10282604f;
      sa[225] = 0.14111638f;
      sa[226] = -0.22355351f;
      sa[227] = 0.15096433f;
      sa[228] = 0.0671568f;
      sa[229] = -0.015388993f;
      sa[230] = 0.18929355f;
      sa[231] = -0.37177512f;
      sa[232] = -0.476854f;
      sa[233] = -0.061275285f;
      sa[234] = 0.29643005f;
      sa[235] = -0.31925863f;
      sa[236] = -0.05818577f;
      sa[237] = -0.21607564f;
      sa[238] = -0.22103491f;
      sa[239] = 0.15447542f;
      sa[240] = 0.0062419865f;
      sa[241] = -0.26604053f;
      sa[242] = 0.07576558f;
      sa[243] = -0.32584095f;
      sa[244] = -0.23683006f;
      sa[245] = -0.1398663f;
      sa[246] = -0.32722554f;
      sa[247] = -0.10428436f;
      sa[248] = 0.2748401f;
      sa[249] = 0.23460601f;
      sa[250] = -0.25598663f;
      sa[251] = -0.1068699f;
      sa[252] = -0.25043744f;
      sa[253] = -0.24411663f;
      sa[254] = -0.2464418f;
      sa[255] = 0.24030472f;
      sa[256] = -0.21046616f;
      sa[257] = 0.21372451f;
      sa[258] = -0.24492119f;
      sa[259] = -0.17786473f;
      sa[260] = -0.16633226f;
      sa[261] = -0.08882043f;
      sa[262] = -0.15633032f;
      sa[263] = 0.32788533f;
      sa[264] = -0.18589701f;
      sa[265] = -0.0027454547f;
      sa[266] = -0.27217257f;
      sa[267] = -0.27788675f;
      sa[268] = 0.10481981f;
      sa[269] = -0.17346564f;
      sa[270] = 2.0684816E-5f;
      sa[271] = 0.13794506f;
      sa[272] = -0.13562742f;
      sa[273] = -0.18640284f;
      sa[274] = 0.08661448f;
      sa[275] = -0.09429865f;
      sa[276] = 0.04565062f;
      sa[277] = -0.20823315f;
      sa[278] = -0.1633671f;
      sa[279] = 0.14921926f;
      sa[280] = -0.23835135f;
      sa[281] = 0.1847158f;
      sa[282] = -0.16744283f;
      sa[283] = -0.12680845f;
      sa[284] = 0.009279347f;
      sa[285] = -0.1501823f;
      sa[286] = 0.27461445f;
      sa[287] = 0.15369147f;
      sa[288] = -0.19406909f;
      sa[289] = -0.12768258f;
      sa[290] = -0.031533767f;
      sa[291] = -0.16276044f;
      sa[292] = 0.15130389f;
      sa[293] = -0.10406812f;
      sa[294] = 0.060355403f;
      sa[295] = 0.17584485f;
      sa[296] = 0.1968831f;
      sa[297] = 0.2688035f;
      sa[298] = 0.032940384f;
      sa[299] = -0.12970339f;
      sa[300] = -0.019634424f;
      sa[301] = -0.100620106f;
      sa[302] = 0.09910742f;
      sa[303] = 0.065604046f;
      sa[304] = -0.16694774f;
      sa[305] = 0.004135693f;
      sa[306] = 0.1734655f;
      sa[307] = -0.14215015f;
      sa[308] = 0.097045995f;
      sa[309] = 0.17828314f;
      sa[310] = 0.28115454f;
      sa[311] = 0.35031497f;
      sa[312] = -0.1633007f;
      sa[313] = -0.138526f;
      sa[314] = -0.14314373f;
      sa[315] = 0.09958059f;
      sa[316] = -0.0031851318f;
      sa[317] = -0.051430646f;
      sa[318] = 0.10162783f;
      sa[319] = 0.3383439f;
      sa[320] = -0.122149795f;
      sa[321] = 0.08030752f;
      sa[322] = 0.30452183f;
      sa[323] = -0.064856365f;
      sa[324] = -0.002609505f;
      sa[325] = 0.23579875f;
      sa[326] = -0.30407065f;
      sa[327] = 0.0038972006f;
      sa[328] = -0.10890769f;
      sa[329] = 0.23304749f;
      sa[330] = -0.19793159f;
      sa[331] = -0.07804219f;
      sa[332] = -0.2535167f;
      sa[333] = 0.08918041f;
      sa[334] = -0.03690959f;
      sa[335] = 0.23620725f;
      sa[336] = -0.16821434f;
      sa[337] = -0.1363568f;
      sa[338] = 0.2503998f;
      sa[339] = -0.27472633f;
      sa[340] = -0.35851923f;
      sa[341] = -0.2736048f;
      sa[342] = 0.1500588f;
      sa[343] = 0.0060084537f;
      sa[344] = -0.20842345f;
      sa[345] = 0.12249282f;
      sa[346] = 0.16763857f;
      sa[347] = -0.23819764f;
      sa[348] = 0.2776066f;
      sa[349] = -0.2288019f;
      sa[350] = -0.23633222f;
      sa[351] = 9.41292E-4f;
      sa[352] = 0.15072708f;
      sa[353] = -0.08944447f;
      sa[354] = 0.060574133f;
      sa[355] = -0.03176658f;
      sa[356] = -0.14883783f;
      sa[357] = 0.13342473f;
      sa[358] = -0.27710396f;
      sa[359] = 0.024741571f;
      sa[360] = 0.14028306f;
      sa[361] = -0.047829714f;
      sa[362] = -0.2259872f;
      sa[363] = 0.1402532f;
      sa[364] = -0.13598998f;
      sa[365] = -0.21249011f;
      sa[366] = -0.02097575f;
      sa[367] = -0.3293122f;
      sa[368] = -0.14907752f;
      sa[369] = 0.24125269f;
      sa[370] = -0.18066593f;
      sa[371] = 0.09368458f;
      sa[372] = -0.015949514f;
      sa[373] = 0.27480054f;
      sa[374] = -0.14208016f;
      sa[375] = -0.32471982f;
      sa[376] = -0.341684f;
      sa[377] = -0.2529313f;
      sa[378] = 0.28077745f;
      sa[379] = 0.12652932f;
      sa[380] = -0.10745031f;
      sa[381] = -0.09692091f;
      sa[382] = -0.036982995f;
      sa[383] = -0.16118504f;
      sa[384] = -0.15007961f;
      sa[385] = 0.07606856f;
      sa[386] = -0.23999658f;
      sa[387] = -0.26115096f;
      sa[388] = 0.081203915f;
      sa[389] = -0.009649776f;
      sa[390] = -0.003796113f;
      sa[391] = -0.13233154f;
      sa[392] = 0.11172006f;
      sa[393] = -0.08515955f;
      sa[394] = 0.12019121f;
      sa[395] = 0.43694192f;
      sa[396] = 0.29334646f;
      sa[397] = -0.2972873f;
      sa[398] = 0.073571116f;
      sa[399] = -0.01801631f;
      sa[400] = 0.17353018f;
      sa[401] = 0.22316368f;
      sa[402] = -0.15213752f;
      sa[403] = 0.059698503f;
      sa[404] = 0.2325346f;
      sa[405] = -0.24876979f;
      sa[406] = -0.035037745f;
      sa[407] = 0.06764799f;
      sa[408] = -0.22623456f;
      sa[409] = -0.26182762f;
      sa[410] = -0.14363955f;
      sa[411] = 0.12109444f;
      sa[412] = -0.20899579f;
      sa[413] = 0.035871353f;
      sa[414] = 0.1614205f;
      sa[415] = 0.3110476f;
      sa[416] = -0.17008092f;
      sa[417] = 0.03801766f;
      sa[418] = -0.0043792087f;
      sa[419] = 0.2944261f;
      sa[420] = 0.22639199f;
      sa[421] = 0.22281532f;
      sa[422] = 0.2725893f;
      sa[423] = 0.02530205f;
      sa[424] = 0.09702015f;
      sa[425] = -0.056059185f;
      sa[426] = -0.2797556f;
      sa[427] = 0.18911783f;
      sa[428] = -0.07960932f;
      sa[429] = -0.29330373f;
      sa[430] = 0.19690734f;
      sa[431] = 0.022620887f;
      sa[432] = -0.018171234f;
      sa[433] = 0.09248395f;
      sa[434] = 0.14957874f;
      sa[435] = 0.10945347f;
      sa[436] = -0.28855887f;
      sa[437] = -0.24891426f;
      sa[438] = -0.008023482f;
      sa[439] = -0.08712727f;
      sa[440] = 0.31669658f;
      sa[441] = -0.3153214f;
      sa[442] = 0.0326663f;
      sa[443] = 0.105185844f;
      sa[444] = -0.21126388f;
      sa[445] = 0.07050822f;
      sa[446] = 0.22531842f;
      sa[447] = 0.01194965f;
      sa[448] = 0.120145544f;
      sa[449] = 0.19040884f;
      sa[450] = -0.06872553f;
      sa[451] = 0.099136524f;
      sa[452] = 0.15708417f;
      sa[453] = -0.08237329f;
      sa[454] = -0.16147554f;
      sa[455] = -0.12949455f;
      sa[456] = -0.06643338f;
      sa[457] = 0.03843802f;
      sa[458] = -0.20749007f;
      sa[459] = 0.15098736f;
      sa[460] = 0.19011818f;
      sa[461] = 0.23490454f;
      sa[462] = 0.031397443f;
      sa[463] = 0.144632f;
      sa[464] = -0.29714212f;
      sa[465] = 0.083985075f;
      sa[466] = 0.050725706f;
      sa[467] = 0.12931177f;
      sa[468] = 0.100774415f;
      sa[469] = 0.30307627f;
      sa[470] = 0.16996212f;
      sa[471] = 0.0472528f;
      sa[472] = -0.0066529023f;
      sa[473] = -0.10406014f;
      sa[474] = -0.024216207f;
      sa[475] = 0.060214896f;
      sa[476] = 0.25119865f;
      sa[477] = -0.16183728f;
      sa[478] = 0.1004572f;
      sa[479] = -0.12546635f;
      sa[480] = -0.2913031f;
      sa[481] = -0.19259727f;
      sa[482] = -0.25319555f;
      sa[483] = 0.17126073f;
      sa[484] = 0.22229856f;
      sa[485] = 0.12809387f;
      sa[486] = -0.022299081f;
      sa[487] = -0.1344682f;
      sa[488] = -0.19186838f;
      sa[489] = 0.062425714f;
      sa[490] = -0.012099291f;
      sa[491] = -0.26181644f;
      sa[492] = 0.22726966f;
      sa[493] = 0.2251215f;
      sa[494] = -0.21914653f;
      sa[495] = 0.09731683f;
      sa[496] = -0.006441007f;
      sa[497] = 0.049783166f;
      sa[498] = 0.16185074f;
      sa[499] = 0.13517158f;
      sa[500] = -0.096988454f;
      sa[501] = -0.06285033f;
      sa[502] = 0.2756051f;
      sa[503] = 0.08057028f;
      sa[504] = -0.14832397f;
      sa[505] = -0.18853725f;
      sa[506] = 0.21630387f;
      sa[507] = -0.08042517f;
      sa[508] = 0.13456284f;
      sa[509] = 0.20439744f;
      sa[510] = 0.1775657f;
      sa[511] = 0.07535287f;
      sa[512] = 0.073120356f;
      sa[513] = -0.06359108f;
      sa[514] = 0.22251353f;
      sa[515] = -0.26275277f;
      sa[516] = 0.03504174f;
      sa[517] = 0.075776786f;
      sa[518] = 0.13843586f;
      sa[519] = -0.029125534f;
      sa[520] = 0.22434935f;
      sa[521] = 0.14565486f;
      sa[522] = 0.11341297f;
      sa[523] = 0.11386717f;
      sa[524] = 0.2131539f;
      sa[525] = 0.22485529f;
      sa[526] = 0.019307736f;
      sa[527] = -0.026576314f;
      sa[528] = -0.026313579f;
      sa[529] = 0.10523573f;
      sa[530] = -0.16240908f;
      sa[531] = 0.17828308f;
      sa[532] = 0.16525657f;
      sa[533] = 0.16663687f;
      sa[534] = 0.14702003f;
      sa[535] = 0.004365883f;
      sa[536] = 0.06973324f;
      sa[537] = -0.19397259f;
      sa[538] = 0.24930002f;
      sa[539] = 0.3127895f;
      sa[540] = -0.24526355f;
      sa[541] = -0.15296367f;
      sa[542] = -0.05905952f;
      sa[543] = -0.12156787f;
      sa[544] = 0.13946012f;
      sa[545] = 0.14023514f;
      sa[546] = 0.11117907f;
      sa[547] = 0.15551998f;
      sa[548] = 0.07851904f;
      sa[549] = 0.14611927f;
      sa[550] = -0.04448287f;
      sa[551] = -0.041167118f;
      sa[552] = 0.07775676f;
      sa[553] = -0.002494808f;
      sa[554] = -0.083867446f;
      sa[555] = -0.12668897f;
      sa[556] = -0.15932867f;
      sa[557] = -0.19315319f;
      sa[558] = -0.18881455f;
      sa[559] = 0.0888047f;
      sa[560] = -0.2941005f;
      sa[561] = -0.113252506f;
      sa[562] = 0.18845724f;
      sa[563] = -0.13137713f;
      sa[564] = 0.23721232f;
      sa[565] = 0.03810017f;
      sa[566] = 0.25175026f;
      sa[567] = -0.089376144f;
      sa[568] = -0.07850395f;
      sa[569] = 6.4013014E-4f;
      sa[570] = -0.021385659f;
      sa[571] = -0.10215025f;
      sa[572] = -0.04277061f;
      sa[573] = 0.2047379f;
      sa[574] = 0.09888391f;
      sa[575] = -0.321794f;
      sa[576] = -0.11309518f;
      sa[577] = -0.018873237f;
      sa[578] = 0.11140676f;
      sa[579] = -0.15183537f;
      sa[580] = 0.08555681f;
      sa[581] = -0.1281152f;
      sa[582] = 0.06964506f;
      sa[583] = 0.0119921975f;
      sa[584] = 0.10235146f;
      sa[585] = 0.16753891f;
      sa[586] = -0.16064261f;
      sa[587] = -0.16823208f;
      sa[588] = 0.04987483f;
      sa[589] = 0.0995188f;
      sa[590] = -0.04291907f;
      sa[591] = -0.0036809556f;
      sa[592] = -0.3324424f;
      sa[593] = -0.17783928f;
      sa[594] = -0.058108f;
      sa[595] = 0.08727494f;
      sa[596] = 0.230253f;
      sa[597] = -0.03855412f;
      sa[598] = 0.19079675f;
      sa[599] = 0.0459324f;
      sa[600] = -0.2328627f;
      sa[601] = 0.23146516f;
      sa[602] = 0.02072311f;
      sa[603] = 0.25702706f;
      sa[604] = 0.21259093f;
      sa[605] = 0.16930057f;
      sa[606] = 0.20264506f;
      sa[607] = 0.042712603f;
      sa[608] = 0.023207493f;
      sa[609] = 0.11570418f;
      sa[610] = -0.003449685f;
      sa[611] = -0.16854136f;
      sa[612] = -0.026875718f;
      sa[613] = 0.058310702f;
      sa[614] = -0.022238987f;
      sa[615] = 0.030146804f;
      sa[616] = 0.00884233f;
      sa[617] = -0.31186065f;
      sa[618] = -0.17718822f;
      sa[619] = -0.2535591f;
      sa[620] = -0.012068802f;
      sa[621] = -0.24234436f;
      sa[622] = -0.3058217f;
      sa[623] = -0.26400653f;
      sa[624] = -0.06549204f;
      sa[625] = 0.21859565f;
      sa[626] = -0.02512129f;
      sa[627] = 0.16909105f;
      sa[628] = -0.35480392f;
      sa[629] = -0.10859138f;
      sa[630] = -0.11850619f;
      sa[631] = 0.23248589f;
      sa[632] = 0.07912909f;
      sa[633] = -0.18584265f;
      sa[634] = -0.2130399f;
      sa[635] = 0.047597375f;
      sa[636] = -0.21069384f;
      sa[637] = -0.06885771f;
      sa[638] = -0.115451925f;
      sa[639] = -0.17414492f;
      sa[640] = -0.17093684f;
      sa[641] = -0.32909f;
      sa[642] = 0.13716383f;
      sa[643] = -0.3865576f;
      sa[644] = -0.120374165f;
      sa[645] = -0.4225268f;
      sa[646] = 0.37916046f;
      sa[647] = -0.17983149f;
      sa[648] = -0.025429802f;
      sa[649] = 0.100211054f;
      sa[650] = 0.11847799f;
      sa[651] = 0.02173753f;
      sa[652] = 0.092913955f;
      sa[653] = -0.05122784f;
      sa[654] = -0.059472773f;
      sa[655] = -0.17364594f;
      sa[656] = 0.10465877f;
      sa[657] = 0.17692812f;
      sa[658] = -0.28843632f;
      sa[659] = -0.102353126f;
      sa[660] = -0.16536285f;
      sa[661] = -0.003751111f;
      sa[662] = -0.19172415f;
      sa[663] = 0.29291692f;
      sa[664] = -0.03201728f;
      sa[665] = 0.41352963f;
      sa[666] = -0.11935818f;
      sa[667] = -0.27064934f;
      sa[668] = 0.30318558f;
      sa[669] = -0.1089013f;
      sa[670] = 0.1845239f;
      sa[671] = -0.011684478f;
      sa[672] = -0.28403667f;
      sa[673] = 0.16559589f;
      sa[674] = 0.14751549f;
      sa[675] = -0.3233656f;
      sa[676] = -0.04360088f;
      sa[677] = -0.18027528f;
      sa[678] = 0.24163313f;
      sa[679] = -0.0533519f;
      sa[680] = -0.006355319f;
      sa[681] = 0.025491064f;
      sa[682] = 0.17457339f;
      sa[683] = -0.052748222f;
      sa[684] = -0.026713679f;
      sa[685] = 0.026555877f;
      sa[686] = -0.1360633f;
      sa[687] = -0.23733637f;
      sa[688] = -0.23158649f;
      sa[689] = -0.24697946f;
      sa[690] = -0.018494869f;
      sa[691] = 0.222301f;
      sa[692] = -0.14720993f;
      sa[693] = -0.14393346f;
      sa[694] = 0.24920417f;
      sa[695] = -0.08577658f;
      sa[696] = -0.08781339f;
      sa[697] = -0.17087612f;
      sa[698] = -0.18236186f;
      sa[699] = 0.37684533f;
      sa[700] = 0.15882257f;
      sa[701] = 0.10987071f;
      sa[702] = 0.21841715f;
      sa[703] = -0.12955038f;
      sa[704] = -0.23585436f;
      sa[705] = 0.01096051f;
      sa[706] = -0.113178164f;
      sa[707] = 0.1220092f;
      sa[708] = -0.004305677f;
      sa[709] = -0.28773552f;
      sa[710] = 0.27890363f;
      sa[711] = 0.11075357f;
      sa[712] = 0.056479696f;
      sa[713] = 0.17704904f;
      sa[714] = 0.1899855f;
      sa[715] = 0.19410592f;
      sa[716] = 0.056311917f;
      sa[717] = 0.2032485f;
      sa[718] = -0.0510395f;
      sa[719] = 0.13580132f;
      sa[720] = -0.19393763f;
      sa[721] = 0.081429444f;
      sa[722] = -0.24621403f;
      sa[723] = 0.10388763f;
      sa[724] = 0.04216195f;
      sa[725] = -0.33288985f;
      sa[726] = -0.20439214f;
      sa[727] = -0.30766293f;
      sa[728] = -0.07316492f;
      sa[729] = -0.063510485f;
      sa[730] = 0.006166605f;
      sa[731] = -0.23721033f;
      sa[732] = 0.123060524f;
      sa[733] = 0.1394984f;
      sa[734] = -0.14489385f;
      sa[735] = 0.22419837f;
      sa[736] = -0.17801543f;
      sa[737] = 0.05277012f;
      sa[738] = -0.019753752f;
      sa[739] = -0.4262857f;
      sa[740] = -0.30396208f;
      sa[741] = -0.30384305f;
      sa[742] = 0.08945442f;
      sa[743] = -4.2487305E-4f;
      sa[744] = -0.024650991f;
      sa[745] = -0.28113392f;
      sa[746] = 0.16258058f;
      sa[747] = -0.19505975f;
      sa[748] = -0.22140841f;
      sa[749] = -0.24053702f;
      sa[750] = 0.092818186f;
      sa[751] = 0.15439051f;
      sa[752] = -0.009626937f;
      sa[753] = 0.24767785f;
      sa[754] = -0.047680095f;
      sa[755] = 0.13651367f;
      sa[756] = -0.21907142f;
      sa[757] = 0.25033897f;
      sa[758] = -0.07285346f;
      sa[759] = -0.16631216f;
      sa[760] = -0.0489752f;
      sa[761] = 0.044475105f;
      sa[762] = -0.08044296f;
      sa[763] = 0.26368648f;
      sa[764] = 0.045561597f;
      sa[765] = -0.017305875f;
      sa[766] = -0.2339593f;
      sa[767] = 0.08012296f;
      sa[768] = -0.16543797f;
      sa[769] = -0.2874322f;
      sa[770] = -0.011123732f;
      sa[771] = 0.10209129f;
      sa[772] = 0.0789301f;
      sa[773] = -0.21315272f;
      sa[774] = 0.006331939f;
      sa[775] = 0.22206752f;
      sa[776] = -0.036426734f;
      sa[777] = 0.10898815f;
      sa[778] = 0.18194552f;
      sa[779] = -0.02901537f;
      sa[780] = -0.0060230196f;
      sa[781] = -0.08314961f;
      sa[782] = 0.15367158f;
      sa[783] = 0.037531413f;
      sa[784] = -0.11391255f;
      sa[785] = -0.070474006f;
      sa[786] = -0.06934637f;
      sa[787] = -0.16324408f;
      sa[788] = -0.19813749f;
      sa[789] = 0.307503f;
      sa[790] = -0.17181715f;
      sa[791] = -0.1357496f;
      sa[792] = 0.19998863f;
      sa[793] = -0.027161919f;
      sa[794] = -0.1351238f;
      sa[795] = 0.06472482f;
      sa[796] = 0.28880042f;
      sa[797] = -0.084873624f;
      sa[798] = -0.15881574f;
      sa[799] = -0.10818313f;
      sa[800] = 0.23117918f;
      sa[801] = 0.05161742f;
      sa[802] = 0.20839483f;
      sa[803] = 0.13758291f;
      sa[804] = 0.33282346f;
      sa[805] = 0.4276053f;
      sa[806] = 0.40958714f;
      sa[807] = 0.34562624f;
      sa[808] = 0.095184684f;
      sa[809] = -0.17133671f;
      sa[810] = 0.0131836245f;
      sa[811] = 0.18410848f;
      sa[812] = 0.23068929f;
      sa[813] = -0.2419827f;
      sa[814] = 0.1445246f;
      sa[815] = -0.16650985f;
      sa[816] = -0.1364899f;
      sa[817] = -0.098584294f;
      sa[818] = -0.06218934f;
      sa[819] = -0.12439548f;
      sa[820] = -0.19288783f;
      sa[821] = -0.140342f;
      sa[822] = -0.16818914f;
      sa[823] = 0.12852533f;
      sa[824] = 0.117753215f;
      sa[825] = 0.2996451f;
      sa[826] = -0.29002643f;
      sa[827] = -0.33939838f;
      sa[828] = 0.1243944f;
      sa[829] = -0.07399046f;
      sa[830] = 0.15952115f;
      sa[831] = 0.27117044f;
      sa[832] = 0.12219045f;
      sa[833] = 0.097721614f;
      sa[834] = 0.20710997f;
      sa[835] = -0.123514906f;
      sa[836] = 0.2234815f;
      sa[837] = -0.16527204f;
      sa[838] = 0.094930135f;
      sa[839] = -0.18377785f;
      sa[840] = 0.22516146f;
      sa[841] = 0.15739235f;
      sa[842] = 0.20420007f;
      sa[843] = 0.03755163f;
      sa[844] = 0.050135728f;
      sa[845] = 0.16336685f;
      sa[846] = -0.24514851f;
      sa[847] = -0.07297357f;
      sa[848] = 0.19832009f;
      sa[849] = 0.21665296f;
      sa[850] = -0.00951924f;
      sa[851] = 0.053931504f;
      sa[852] = 0.2457539f;
      sa[853] = 0.15035366f;
      sa[854] = 0.22068682f;
      sa[855] = 0.098411754f;
      sa[856] = 0.084764615f;
      sa[857] = -0.16939348f;
      sa[858] = 0.13400462f;
      sa[859] = 0.03784908f;
      sa[860] = 0.3076145f;
      sa[861] = -0.1710413f;
      sa[862] = -0.16599247f;
      sa[863] = -0.0015890916f;
      sa[864] = -0.18300459f;
      sa[865] = 0.25419065f;
      sa[866] = -0.10483682f;
      sa[867] = -0.093180045f;
      sa[868] = -0.15136215f;
      sa[869] = 0.20984328f;
      sa[870] = -0.040499598f;
      sa[871] = 0.19859347f;
      sa[872] = 0.2394003f;
      sa[873] = 0.0021182143f;
      sa[874] = 0.036152165f;
      sa[875] = -0.27864793f;
      sa[876] = -0.22917698f;
      sa[877] = -0.21982475f;
      sa[878] = -0.003995454f;
      sa[879] = 0.22510403f;
      sa[880] = -0.08164745f;
      sa[881] = -0.052108105f;
      sa[882] = 0.11897546f;
      sa[883] = 0.20176432f;
      sa[884] = -0.109911904f;
      sa[885] = -0.09705062f;
      sa[886] = 0.10252586f;
      sa[887] = -0.004282114f;
      sa[888] = -0.058733426f;
      sa[889] = 0.05020603f;
      sa[890] = -0.30639306f;
      sa[891] = 0.41634393f;
      sa[892] = 0.19041866f;
      sa[893] = 0.28770232f;
      sa[894] = 0.06356233f;
      sa[895] = 0.278271f;
      sa[896] = -0.20671137f;
      sa[897] = 0.23511286f;
      sa[898] = -0.020629598f;
      sa[899] = 0.22592497f;
      sa[900] = -0.08140994f;
      sa[901] = 0.08773362f;
      sa[902] = -0.32607567f;
      sa[903] = -0.10493311f;
      sa[904] = 0.10949673f;
      sa[905] = 0.10256205f;
      sa[906] = -0.2924993f;
      sa[907] = -0.36186022f;
      sa[908] = -0.21868935f;
      sa[909] = 0.03307827f;
      sa[910] = 0.01793098f;
      sa[911] = -0.12653561f;
      sa[912] = -0.09123636f;
      sa[913] = -0.038344733f;
      sa[914] = -0.24718101f;
      sa[915] = -0.050760053f;
      sa[916] = 0.075031035f;
      sa[917] = -0.05680194f;
      sa[918] = 0.2430802f;
      sa[919] = -0.025559764f;
      sa[920] = 0.076359995f;
      sa[921] = -0.13548319f;
      sa[922] = -0.17567219f;
      sa[923] = -0.21542874f;
      sa[924] = -0.1403422f;
      sa[925] = -0.20450224f;
      sa[926] = 0.12103083f;
      sa[927] = -0.19220597f;
      sa[928] = 0.1467244f;
      sa[929] = 0.044039574f;
      sa[930] = 0.050103694f;
      sa[931] = -0.11206105f;
      sa[932] = 0.21076241f;
      sa[933] = -0.07715927f;
      sa[934] = 0.24551705f;
      sa[935] = -0.14776796f;
      sa[936] = 0.06511556f;
      sa[937] = 0.21389405f;
      sa[938] = -0.029730406f;
      sa[939] = -0.098096974f;
      sa[940] = -0.030012205f;
      sa[941] = -0.30118746f;
      sa[942] = -0.23907453f;
      sa[943] = -0.12025871f;
      sa[944] = -0.23168612f;
      sa[945] = 0.084807366f;
      sa[946] = 0.124975175f;
      sa[947] = 0.222885f;
      sa[948] = 0.07805481f;
      sa[949] = -0.19826034f;
      sa[950] = 0.065516256f;
      sa[951] = -0.053422403f;
      sa[952] = -0.16072638f;
      sa[953] = -0.14794889f;
      sa[954] = -0.24447595f;
      sa[955] = 0.061696682f;
      sa[956] = -0.005286135f;
      sa[957] = 0.06455381f;
      sa[958] = 0.093419164f;
      sa[959] = -0.1016488f;
      sa[960] = 0.33545145f;
      sa[961] = -0.13443968f;
      sa[962] = -0.008466987f;
      sa[963] = 0.009739762f;
      sa[964] = -0.14796534f;
      sa[965] = 0.27879524f;
      sa[966] = -0.07383447f;
      sa[967] = -0.21282142f;
      sa[968] = 0.11135633f;
      sa[969] = 0.092706084f;
      sa[970] = 0.27830386f;
      sa[971] = 0.022860955f;
      sa[972] = -0.18620169f;
      sa[973] = -0.24828175f;
      sa[974] = -0.39560616f;
      sa[975] = -0.20735419f;
      sa[976] = -0.13313037f;
      sa[977] = 3.9477088E-4f;
      sa[978] = -0.11875378f;
      sa[979] = 0.06957558f;
      sa[980] = 0.07571203f;
      sa[981] = -0.23803903f;
      sa[982] = 0.11383694f;
      sa[983] = -0.058537636f;
      sa[984] = -0.3010701f;
      sa[985] = 0.026189534f;
      sa[986] = -0.2711636f;
      sa[987] = 0.00778558f;
      sa[988] = 0.09735398f;
      sa[989] = 0.17825651f;
      sa[990] = 0.3199685f;
      sa[991] = -0.18267079f;
      sa[992] = -0.24294959f;
      sa[993] = -0.09784159f;
      sa[994] = -0.18775254f;
      sa[995] = -0.3341171f;
      sa[996] = 0.15982065f;
      sa[997] = 0.16676424f;
      sa[998] = 0.112101845f;
      sa[999] = 0.15080802f;
      sa[1000] = -0.026801273f;
      sa[1001] = 0.17457666f;
      sa[1002] = 0.20513138f;
      sa[1003] = -0.176662f;
      sa[1004] = 0.18249285f;
      sa[1005] = -0.24969603f;
      sa[1006] = -0.07174728f;
      sa[1007] = 0.055888847f;
      sa[1008] = 0.19673415f;
      sa[1009] = 0.06412194f;
      sa[1010] = 0.017532948f;
      sa[1011] = 0.31769112f;
      sa[1012] = -0.039411265f;
      sa[1013] = 0.17530087f;
      sa[1014] = 0.31052828f;
      sa[1015] = -0.22985527f;
      sa[1016] = 0.29611424f;
      sa[1017] = 0.0576282f;
      sa[1018] = -0.06685086f;
      sa[1019] = 0.101748854f;
      sa[1020] = -0.19247417f;
      sa[1021] = 0.11351907f;
      sa[1022] = 0.28333935f;
      sa[1023] = 0.1445399f;
      sa[1024] = 0.017697051f;
      sa[1025] = 0.11326669f;
      sa[1026] = 0.1552492f;
      sa[1027] = 0.20221359f;
      sa[1028] = 0.32552913f;
      sa[1029] = 0.027555328f;
      sa[1030] = -0.12486042f;
      sa[1031] = 0.038788173f;
      sa[1032] = -0.2573198f;
      sa[1033] = 0.021823652f;
      sa[1034] = -0.06530845f;
      sa[1035] = -0.2578859f;
      sa[1036] = 0.28068194f;
      sa[1037] = 0.04596838f;
      sa[1038] = -0.18557104f;
      sa[1039] = 0.27986482f;
      sa[1040] = 0.0024502608f;
      sa[1041] = 0.14700061f;
      sa[1042] = -0.24947858f;
      sa[1043] = -0.09479968f;
      sa[1044] = 0.22691634f;
      sa[1045] = 0.1978178f;
      sa[1046] = -0.2964172f;
      sa[1047] = -0.13576064f;
      sa[1048] = 0.09241157f;
      sa[1049] = -0.16359188f;
      sa[1050] = 0.015629588f;
      sa[1051] = -0.27402034f;
      sa[1052] = 0.1743712f;
      sa[1053] = 0.23954055f;
      sa[1054] = 0.19484696f;
      sa[1055] = 0.010147596f;
      sa[1056] = 0.23592898f;
      sa[1057] = -0.24195679f;
      sa[1058] = 0.20219651f;
      sa[1059] = -0.24323525f;
      sa[1060] = -0.3464079f;
      sa[1061] = -0.03354525f;
      sa[1062] = 0.2710723f;
      sa[1063] = -0.054527726f;
      sa[1064] = 0.0845083f;
      sa[1065] = -0.054573167f;
      sa[1066] = 0.16708483f;
      sa[1067] = -0.37266406f;
      sa[1068] = -0.34576914f;
      sa[1069] = 0.17533062f;
      sa[1070] = 0.1233166f;
      sa[1071] = 0.10136836f;
      sa[1072] = -0.27612838f;
      sa[1073] = 0.056103602f;
      sa[1074] = 0.046989206f;
      sa[1075] = -0.25043195f;
      sa[1076] = -0.1706751f;
      sa[1077] = -0.0038288755f;
      sa[1078] = 0.11719248f;
      sa[1079] = 0.105087176f;
      sa[1080] = 0.20652182f;
      sa[1081] = 0.16942897f;
      sa[1082] = -0.28353032f;
      sa[1083] = -0.17437169f;
      sa[1084] = 0.24541196f;
      sa[1085] = -0.20261528f;
      sa[1086] = -0.2478173f;
      sa[1087] = -0.20553961f;
      sa[1088] = -0.191997f;
      sa[1089] = 0.06286393f;
      sa[1090] = -0.25294328f;
      sa[1091] = 0.11144658f;
      sa[1092] = -0.2482667f;
      sa[1093] = -0.2659327f;
      sa[1094] = 0.00554365f;
      sa[1095] = -0.21531035f;
      sa[1096] = 0.046145603f;
      sa[1097] = -0.12416689f;
      sa[1098] = 0.07852299f;
      sa[1099] = -0.03204278f;
      sa[1100] = -0.13643777f;
      sa[1101] = 0.13266386f;
      sa[1102] = -0.14227197f;
      sa[1103] = 0.24800943f;
      sa[1104] = -0.2301355f;
      sa[1105] = -0.13242714f;
      sa[1106] = -0.01543219f;
      sa[1107] = 0.15750836f;
      sa[1108] = -0.19676067f;
      sa[1109] = 0.23708662f;
      sa[1110] = 0.16397919f;
      sa[1111] = -0.24127065f;
      sa[1112] = 0.302256f;
      sa[1113] = 0.3115962f;
      sa[1114] = -0.16439275f;
      sa[1115] = -0.08277043f;
      sa[1116] = -0.05717077f;
      sa[1117] = -0.17486286f;
      sa[1118] = -0.19732021f;
      sa[1119] = 0.013114667f;
      sa[1120] = 0.21346541f;
      sa[1121] = 0.06609565f;
      sa[1122] = 0.26680088f;
      sa[1123] = 0.2823575f;
      sa[1124] = 0.03559878f;
      sa[1125] = -0.061935425f;
      sa[1126] = 0.17674527f;
      sa[1127] = 0.18263535f;
      sa[1128] = 0.026075808f;
      sa[1129] = -0.112907514f;
      sa[1130] = 0.22421454f;
      sa[1131] = 0.31079534f;
      sa[1132] = -0.17721556f;
      sa[1133] = -0.16649075f;
      sa[1134] = 0.2741097f;
      sa[1135] = -0.42684126f;
      sa[1136] = -0.013531377f;
      sa[1137] = 0.23148295f;
      sa[1138] = -0.054197002f;
      sa[1139] = 0.14796636f;
      sa[1140] = 0.1756084f;
      sa[1141] = -0.28077006f;
      sa[1142] = 0.06043879f;
      sa[1143] = 0.008809373f;
      sa[1144] = -0.26862958f;
      sa[1145] = 0.16494712f;
      sa[1146] = 0.20155619f;
      sa[1147] = -0.042654518f;
      sa[1148] = 0.014233198f;
      sa[1149] = 0.011670309f;
      sa[1150] = -0.2330074f;
      sa[1151] = -0.21205722f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_12_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_12_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.23313f;
      sa[1] = -0.13766704f;
      sa[2] = -0.60383046f;
      sa[3] = -0.97844326f;
      sa[4] = 0.068178944f;
      sa[5] = 0.23090695f;
      sa[6] = 1.2745053f;
      sa[7] = -0.68976074f;
      sa[8] = -0.9530654f;
      sa[9] = 0.7177349f;
      sa[10] = -0.1285617f;
      sa[11] = 0.42429906f;
      sa[12] = 0.14961015f;
      sa[13] = -0.0018097912f;
      sa[14] = -1.3184856f;
      sa[15] = 1.1617323f;
      sa[16] = 1.5639764f;
      sa[17] = -0.45069388f;
      sa[18] = 0.032440826f;
      sa[19] = -0.45630816f;
      sa[20] = 1.1628098f;
      sa[21] = 0.049612682f;
      sa[22] = -0.9578258f;
      sa[23] = 0.759011f;
      sa[24] = -1.3881629f;
      sa[25] = 0.45396188f;
      sa[26] = -0.24222788f;
      sa[27] = 1.5049206f;
      sa[28] = -1.376168f;
      sa[29] = -0.47810528f;
      sa[30] = 0.42339948f;
      sa[31] = -0.6233845f;
      sa[32] = -1.1726738f;
      sa[33] = -1.482351f;
      sa[34] = 0.019658951f;
      sa[35] = 1.3905385f;
      sa[36] = -0.3004199f;
      sa[37] = -0.035516936f;
      sa[38] = 0.21451357f;
      sa[39] = 0.7810022f;
      sa[40] = -0.74791336f;
      sa[41] = -1.346503f;
      sa[42] = -1.061329f;
      sa[43] = -1.4673368f;
      sa[44] = 0.030425949f;
      sa[45] = -1.3439962f;
      sa[46] = 1.1717185f;
      sa[47] = 1.2972771f;
      sa[48] = -1.3295275f;
      sa[49] = -1.0804939f;
      sa[50] = 0.4288552f;
      sa[51] = -0.32086477f;
      sa[52] = 0.81723154f;
      sa[53] = 0.8897644f;
      sa[54] = -0.21514298f;
      sa[55] = 1.1445632f;
      sa[56] = -1.0157192f;
      sa[57] = -1.1223668f;
      sa[58] = 0.12890027f;
      sa[59] = -0.20383053f;
      sa[60] = 1.3887374f;
      sa[61] = -0.6028718f;
      sa[62] = -0.33398268f;
      sa[63] = 0.69795054f;
      sa[64] = 1.4977173f;
      sa[65] = -0.61797404f;
      sa[66] = 0.68445027f;
      sa[67] = 1.6214418f;
      sa[68] = 0.72658545f;
      sa[69] = -1.0884297f;
      sa[70] = -1.7358508f;
      sa[71] = -0.40674207f;
      sa[72] = -1.3103769f;
      sa[73] = 1.1349136f;
      sa[74] = 1.307939f;
      sa[75] = -0.09308704f;
      sa[76] = 0.94773245f;
      sa[77] = 0.5491912f;
      sa[78] = -1.2548178f;
      sa[79] = 0.9590406f;
      sa[80] = -0.80820197f;
      sa[81] = 0.30214715f;
      sa[82] = 0.78613406f;
      sa[83] = -0.664455f;
      sa[84] = -1.6239719f;
      sa[85] = -1.2960006f;
      sa[86] = 0.21071783f;
      sa[87] = 1.2322968f;
      sa[88] = -1.5594088f;
      sa[89] = -0.519641f;
      sa[90] = -1.0362597f;
      sa[91] = 1.4906971f;
      sa[92] = -0.31051657f;
      sa[93] = 0.2345892f;
      sa[94] = -1.5973352f;
      sa[95] = -0.28121468f;
      sa[96] = -1.1876264f;
      sa[97] = 0.15551314f;
      sa[98] = -0.107775785f;
      sa[99] = 0.2814478f;
      sa[100] = -1.3857715f;
      sa[101] = -0.4559747f;
      sa[102] = 1.2480134f;
      sa[103] = 0.07217791f;
      sa[104] = -0.16704896f;
      sa[105] = -0.59261924f;
      sa[106] = 1.4809407f;
      sa[107] = 1.1875178f;
      sa[108] = 0.6530246f;
      sa[109] = 0.06466459f;
      sa[110] = 0.6681724f;
      sa[111] = -0.7947344f;
      sa[112] = -1.1586351f;
      sa[113] = 0.20350347f;
      sa[114] = 0.16724372f;
      sa[115] = -0.34248662f;
      sa[116] = 1.1571747f;
      sa[117] = 0.026394969f;
      sa[118] = -1.3954556f;
      sa[119] = -0.86948174f;
      sa[120] = -0.34806412f;
      sa[121] = 1.0742484f;
      sa[122] = -0.062318947f;
      sa[123] = 0.3261902f;
      sa[124] = -0.7936117f;
      sa[125] = 0.79639065f;
      sa[126] = -0.98669887f;
      sa[127] = 0.43571573f;
      sa[128] = -0.8331622f;
      sa[129] = 0.7684073f;
      sa[130] = -0.34408185f;
      sa[131] = 0.9166189f;
      sa[132] = 0.49944088f;
      sa[133] = 0.6443205f;
      sa[134] = 0.41994736f;
      sa[135] = -1.1144301f;
      sa[136] = 0.5602022f;
      sa[137] = -0.6391352f;
      sa[138] = -0.32258207f;
      sa[139] = 1.201456f;
      sa[140] = -0.40650922f;
      sa[141] = 0.04041183f;
      sa[142] = 0.3465181f;
      sa[143] = -0.7752167f;
      sa[144] = 1.0089746f;
      sa[145] = -0.794014f;
      sa[146] = 0.029011749f;
      sa[147] = -0.26286536f;
      sa[148] = -0.8390135f;
      sa[149] = 1.0708908f;
      sa[150] = -1.1954072f;
      sa[151] = -1.5236574f;
      sa[152] = 1.6474781f;
      sa[153] = -0.5926318f;
      sa[154] = 1.3268753f;
      sa[155] = -1.5056843f;
      sa[156] = -1.5250924f;
      sa[157] = -1.1006974f;
      sa[158] = -0.22046837f;
      sa[159] = -0.65038097f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_12_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_12_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_12_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


