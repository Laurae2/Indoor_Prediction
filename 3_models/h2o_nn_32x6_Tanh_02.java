/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:06:54.307+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_02

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_02 > h2o_nn_32x6_Tanh_02.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_02.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_02", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_02 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_02_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_02_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_02_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_02_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_02_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_02_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_02_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_02_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_02_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_02.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_02_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_02() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(4413618735812554432L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_02_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_02_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_02_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_02_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_02_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_02_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_02_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_02_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_02_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.04055630515870532;
      sa[1] = 0.03182297714228305;
      sa[2] = -0.04869042533538688;
      sa[3] = -0.07834397610531496;
      sa[4] = -0.05205544219117698;
      sa[5] = 0.018675866881528856;
      sa[6] = 0.026449668025282917;
      sa[7] = 0.01125132431797006;
      sa[8] = 0.01715342596028967;
      sa[9] = -0.0022565481353646203;
      sa[10] = -0.004066166713414974;
      sa[11] = 0.024802186846717422;
      sa[12] = 0.025031746682965185;
      sa[13] = -0.046141489197904166;
      sa[14] = -0.04104701003384271;
      sa[15] = -0.010419767899260145;
      sa[16] = 0.019618485661530762;
      sa[17] = 0.0202790118039079;
      sa[18] = -0.04538278163622426;
      sa[19] = 0.02778932542106694;
      sa[20] = 0.08406251142757784;
      sa[21] = 0.002861106092849809;
      sa[22] = -0.024748075462765497;
      sa[23] = 0.06235626549856341;
      sa[24] = -0.036942011423195024;
      sa[25] = 0.06161100861024487;
      sa[26] = -0.015524671729835675;
      sa[27] = 0.04528387487951818;
      sa[28] = -0.004669165855929259;
      sa[29] = 0.02973826183943357;
      sa[30] = 0.023770502920641378;
      sa[31] = 0.058924583820266684;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_02_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_02_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.02714852412667191;
      sa[1] = -0.011006649778393052;
      sa[2] = -0.04254406283703771;
      sa[3] = 0.03290799599153406;
      sa[4] = -0.04399400012862194;
    }
  }
}
class h2o_nn_32x6_Tanh_02_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_02_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_02_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.048433073f;
      sa[1] = 0.18793023f;
      sa[2] = 0.077828355f;
      sa[3] = 0.18958752f;
      sa[4] = -0.17658155f;
      sa[5] = -0.17577447f;
      sa[6] = -0.03141369f;
      sa[7] = 0.18839686f;
      sa[8] = 0.12528902f;
      sa[9] = -0.18181808f;
      sa[10] = -0.1653588f;
      sa[11] = -0.14384127f;
      sa[12] = 0.07711829f;
      sa[13] = -0.25489384f;
      sa[14] = -0.15830648f;
      sa[15] = -0.033702094f;
      sa[16] = 0.072617434f;
      sa[17] = 0.11800198f;
      sa[18] = -0.19966382f;
      sa[19] = 0.1442902f;
      sa[20] = 0.2154189f;
      sa[21] = -0.311191f;
      sa[22] = 0.22856484f;
      sa[23] = -0.19228202f;
      sa[24] = 0.21202768f;
      sa[25] = 0.14131205f;
      sa[26] = -0.24875286f;
      sa[27] = 0.21530527f;
      sa[28] = 0.21272452f;
      sa[29] = -0.291184f;
      sa[30] = -0.18112549f;
      sa[31] = 0.12172383f;
      sa[32] = 0.21202812f;
      sa[33] = -0.21665128f;
      sa[34] = 0.090242505f;
      sa[35] = -0.1385625f;
      sa[36] = 0.07712541f;
      sa[37] = 0.2337561f;
      sa[38] = -0.055839717f;
      sa[39] = 0.10503344f;
      sa[40] = 0.04007838f;
      sa[41] = -0.08756478f;
      sa[42] = -0.14013755f;
      sa[43] = 0.01529565f;
      sa[44] = 0.2243826f;
      sa[45] = -0.2634211f;
      sa[46] = 0.07220297f;
      sa[47] = -0.03687671f;
      sa[48] = 0.22771789f;
      sa[49] = 0.23423806f;
      sa[50] = 0.18775138f;
      sa[51] = -0.28387606f;
      sa[52] = -0.104333326f;
      sa[53] = 0.21874936f;
      sa[54] = 0.20363143f;
      sa[55] = 0.10582083f;
      sa[56] = -0.13701317f;
      sa[57] = -0.24733512f;
      sa[58] = 0.27024737f;
      sa[59] = -0.14741054f;
      sa[60] = -0.22528647f;
      sa[61] = 0.21275726f;
      sa[62] = 0.1176624f;
      sa[63] = 0.048589993f;
      sa[64] = 0.15206298f;
      sa[65] = 0.14171182f;
      sa[66] = 0.022206834f;
      sa[67] = 0.14374115f;
      sa[68] = -0.112488136f;
      sa[69] = 0.08034708f;
      sa[70] = -0.052141894f;
      sa[71] = 0.3402228f;
      sa[72] = -0.13139027f;
      sa[73] = 0.22327363f;
      sa[74] = -0.19350043f;
      sa[75] = 0.0789599f;
      sa[76] = -0.20481241f;
      sa[77] = -0.08599054f;
      sa[78] = -0.08411746f;
      sa[79] = 0.119664f;
      sa[80] = -0.20344782f;
      sa[81] = -0.060607407f;
      sa[82] = -0.032605916f;
      sa[83] = 0.098781444f;
      sa[84] = -0.020654354f;
      sa[85] = -0.18321474f;
      sa[86] = 0.12806362f;
      sa[87] = 0.23556978f;
      sa[88] = 0.24148642f;
      sa[89] = 0.091160834f;
      sa[90] = -0.13426198f;
      sa[91] = 0.14145486f;
      sa[92] = 0.10775033f;
      sa[93] = -0.1965284f;
      sa[94] = -0.1709107f;
      sa[95] = -0.23587319f;
      sa[96] = 0.0988813f;
      sa[97] = 0.020129059f;
      sa[98] = 0.18258256f;
      sa[99] = -0.10240032f;
      sa[100] = -0.046915736f;
      sa[101] = -0.1856084f;
      sa[102] = -0.25483456f;
      sa[103] = -0.077854775f;
      sa[104] = -0.02170254f;
      sa[105] = -0.13976878f;
      sa[106] = -0.18378657f;
      sa[107] = 0.14797382f;
      sa[108] = 0.14766265f;
      sa[109] = -0.17950433f;
      sa[110] = -0.15578909f;
      sa[111] = 0.12552702f;
      sa[112] = 0.093115754f;
      sa[113] = 0.007880221f;
      sa[114] = -0.17795941f;
      sa[115] = -0.05170087f;
      sa[116] = -0.24048181f;
      sa[117] = 0.030524872f;
      sa[118] = -0.26660362f;
      sa[119] = -0.20116428f;
      sa[120] = 0.19083077f;
      sa[121] = 0.19261469f;
      sa[122] = 0.26132485f;
      sa[123] = 0.24856095f;
      sa[124] = 0.28019646f;
      sa[125] = 0.30998853f;
      sa[126] = -0.28365555f;
      sa[127] = -0.20252582f;
      sa[128] = 0.06388801f;
      sa[129] = 0.13618074f;
      sa[130] = -0.13310257f;
      sa[131] = 0.28460318f;
      sa[132] = 0.1869354f;
      sa[133] = -0.2953101f;
      sa[134] = 0.054183066f;
      sa[135] = -0.12967671f;
      sa[136] = -0.2656538f;
      sa[137] = -0.036871262f;
      sa[138] = 0.09786361f;
      sa[139] = -0.07703886f;
      sa[140] = -0.122217976f;
      sa[141] = -0.19420026f;
      sa[142] = 0.19152462f;
      sa[143] = -0.18304011f;
      sa[144] = 0.24904616f;
      sa[145] = -0.14875887f;
      sa[146] = -0.29748183f;
      sa[147] = 0.20107888f;
      sa[148] = 0.1505762f;
      sa[149] = 0.17588991f;
      sa[150] = 0.27398401f;
      sa[151] = -0.26214647f;
      sa[152] = 0.02578862f;
      sa[153] = 0.27075607f;
      sa[154] = 0.2078111f;
      sa[155] = -0.1428983f;
      sa[156] = 0.11766807f;
      sa[157] = -0.18522489f;
      sa[158] = 0.078686334f;
      sa[159] = 0.073263995f;
      sa[160] = 0.07407837f;
      sa[161] = 0.21854457f;
      sa[162] = -0.14428605f;
      sa[163] = -0.0917598f;
      sa[164] = 0.21210633f;
      sa[165] = -0.044355605f;
      sa[166] = -0.07406567f;
      sa[167] = -0.09370881f;
      sa[168] = 0.16004606f;
      sa[169] = 0.28108945f;
      sa[170] = 0.0324577f;
      sa[171] = -0.049088303f;
      sa[172] = -0.07107113f;
      sa[173] = -0.15547538f;
      sa[174] = -0.028098576f;
      sa[175] = -0.24647066f;
      sa[176] = -0.017356595f;
      sa[177] = -0.010760105f;
      sa[178] = -0.04560558f;
      sa[179] = 0.099691965f;
      sa[180] = -0.06110126f;
      sa[181] = -0.27495804f;
      sa[182] = -0.10011439f;
      sa[183] = 0.050032604f;
      sa[184] = 0.28309602f;
      sa[185] = 0.1800154f;
      sa[186] = -0.27739012f;
      sa[187] = 0.095521584f;
      sa[188] = -0.03350554f;
      sa[189] = 0.18510692f;
      sa[190] = 0.066193834f;
      sa[191] = -0.044572588f;
      sa[192] = -0.124016695f;
      sa[193] = 0.23080043f;
      sa[194] = 0.085576504f;
      sa[195] = 0.25983238f;
      sa[196] = 0.25496843f;
      sa[197] = -0.029938165f;
      sa[198] = 0.1309219f;
      sa[199] = -0.094818294f;
      sa[200] = 0.012653782f;
      sa[201] = -0.27137044f;
      sa[202] = 0.12026994f;
      sa[203] = -0.019486101f;
      sa[204] = -0.13983114f;
      sa[205] = 0.24933304f;
      sa[206] = 0.23022346f;
      sa[207] = 0.18842548f;
      sa[208] = -0.25440022f;
      sa[209] = -0.0710475f;
      sa[210] = -0.2627976f;
      sa[211] = -0.23882598f;
      sa[212] = 0.23438837f;
      sa[213] = -0.2508379f;
      sa[214] = -0.119365364f;
      sa[215] = 0.05859818f;
      sa[216] = 0.092090525f;
      sa[217] = 0.14864498f;
      sa[218] = -0.1416491f;
      sa[219] = 0.21775782f;
      sa[220] = -0.20274784f;
      sa[221] = 0.04707742f;
      sa[222] = 0.22392865f;
      sa[223] = 0.0768761f;
      sa[224] = 0.09623269f;
      sa[225] = 0.2562531f;
      sa[226] = -0.19180053f;
      sa[227] = 0.2777755f;
      sa[228] = 0.110403806f;
      sa[229] = 0.087253645f;
      sa[230] = 0.25392148f;
      sa[231] = -0.23625693f;
      sa[232] = -0.234078f;
      sa[233] = 0.04879603f;
      sa[234] = 0.16994837f;
      sa[235] = -0.28704318f;
      sa[236] = -0.0389812f;
      sa[237] = -0.21570693f;
      sa[238] = -0.21001922f;
      sa[239] = 0.14150502f;
      sa[240] = 0.024644159f;
      sa[241] = -0.19217236f;
      sa[242] = -0.052967172f;
      sa[243] = -0.21435313f;
      sa[244] = -0.1998973f;
      sa[245] = -0.116701156f;
      sa[246] = -0.25004646f;
      sa[247] = -0.04567682f;
      sa[248] = 0.26140437f;
      sa[249] = 0.24789122f;
      sa[250] = -0.23003854f;
      sa[251] = -0.13115872f;
      sa[252] = -0.25813463f;
      sa[253] = -0.24101663f;
      sa[254] = -0.21449119f;
      sa[255] = 0.22270316f;
      sa[256] = -0.18129784f;
      sa[257] = 0.26170486f;
      sa[258] = -0.24518974f;
      sa[259] = -0.08561397f;
      sa[260] = -0.2009459f;
      sa[261] = -0.08524986f;
      sa[262] = -0.16922563f;
      sa[263] = 0.2760112f;
      sa[264] = -0.15003482f;
      sa[265] = 0.059339963f;
      sa[266] = -0.2663021f;
      sa[267] = -0.19489437f;
      sa[268] = 0.16371952f;
      sa[269] = -0.16751128f;
      sa[270] = -0.03955956f;
      sa[271] = 0.10660988f;
      sa[272] = -0.09300226f;
      sa[273] = -0.12981433f;
      sa[274] = 0.10418838f;
      sa[275] = -0.032729015f;
      sa[276] = 0.05412962f;
      sa[277] = -0.26876312f;
      sa[278] = -0.14071263f;
      sa[279] = 0.16542535f;
      sa[280] = -0.16586857f;
      sa[281] = 0.26477236f;
      sa[282] = -0.09139005f;
      sa[283] = -0.027298575f;
      sa[284] = 0.015667029f;
      sa[285] = -0.11914931f;
      sa[286] = 0.19248018f;
      sa[287] = 0.12255517f;
      sa[288] = -0.19117895f;
      sa[289] = -0.13950942f;
      sa[290] = -0.03751548f;
      sa[291] = -0.029793536f;
      sa[292] = 0.13054328f;
      sa[293] = -0.09194315f;
      sa[294] = 0.06986355f;
      sa[295] = 0.12829727f;
      sa[296] = 0.21014339f;
      sa[297] = 0.21285765f;
      sa[298] = -0.0074788374f;
      sa[299] = -0.08996523f;
      sa[300] = 1.5032679E-6f;
      sa[301] = -0.05976853f;
      sa[302] = 0.15615013f;
      sa[303] = 0.04100727f;
      sa[304] = -0.18779378f;
      sa[305] = -0.0052601164f;
      sa[306] = 0.18404175f;
      sa[307] = -0.10381843f;
      sa[308] = 0.09271436f;
      sa[309] = 0.16187012f;
      sa[310] = 0.28154132f;
      sa[311] = 0.30731577f;
      sa[312] = -0.14651558f;
      sa[313] = -0.12914778f;
      sa[314] = -0.16853037f;
      sa[315] = 0.035210285f;
      sa[316] = -0.0120523255f;
      sa[317] = -0.06932706f;
      sa[318] = 0.09306893f;
      sa[319] = 0.278345f;
      sa[320] = -0.09109785f;
      sa[321] = 0.071630634f;
      sa[322] = 0.22428408f;
      sa[323] = -0.11649216f;
      sa[324] = -0.0067626135f;
      sa[325] = 0.24354589f;
      sa[326] = -0.33468062f;
      sa[327] = 0.039396405f;
      sa[328] = -0.0527661f;
      sa[329] = 0.23483303f;
      sa[330] = -0.16243818f;
      sa[331] = -0.03954674f;
      sa[332] = -0.24734375f;
      sa[333] = 0.101132736f;
      sa[334] = -0.10091449f;
      sa[335] = 0.26252374f;
      sa[336] = -0.14718714f;
      sa[337] = -0.1482024f;
      sa[338] = 0.26662827f;
      sa[339] = -0.21881399f;
      sa[340] = -0.31471545f;
      sa[341] = -0.2644522f;
      sa[342] = 0.17603761f;
      sa[343] = -0.08294908f;
      sa[344] = -0.16291535f;
      sa[345] = 0.18925878f;
      sa[346] = 0.20272993f;
      sa[347] = -0.17570353f;
      sa[348] = 0.22322348f;
      sa[349] = -0.302558f;
      sa[350] = -0.2143262f;
      sa[351] = 0.05271959f;
      sa[352] = 0.18563256f;
      sa[353] = -0.043551385f;
      sa[354] = 0.07917025f;
      sa[355] = 0.094319336f;
      sa[356] = -0.10660935f;
      sa[357] = 0.26194283f;
      sa[358] = -0.251901f;
      sa[359] = -0.0058633047f;
      sa[360] = 0.10415521f;
      sa[361] = -0.07594579f;
      sa[362] = -0.18363021f;
      sa[363] = 0.15245986f;
      sa[364] = -0.107047535f;
      sa[365] = -0.23325898f;
      sa[366] = -0.011993413f;
      sa[367] = -0.30610582f;
      sa[368] = -0.15870064f;
      sa[369] = 0.27006832f;
      sa[370] = -0.20483704f;
      sa[371] = 0.032527536f;
      sa[372] = -0.0026614896f;
      sa[373] = 0.26094407f;
      sa[374] = -0.13514574f;
      sa[375] = -0.2765451f;
      sa[376] = -0.29762006f;
      sa[377] = -0.19672865f;
      sa[378] = 0.26622656f;
      sa[379] = 0.16900225f;
      sa[380] = -0.07806324f;
      sa[381] = -0.046669062f;
      sa[382] = -0.009319365f;
      sa[383] = -0.06328701f;
      sa[384] = -0.17766105f;
      sa[385] = 0.07177262f;
      sa[386] = -0.25095585f;
      sa[387] = -0.18438259f;
      sa[388] = 0.10455803f;
      sa[389] = 0.025593402f;
      sa[390] = -0.0020567116f;
      sa[391] = -0.08249802f;
      sa[392] = 0.19045785f;
      sa[393] = 0.11726976f;
      sa[394] = 0.056788016f;
      sa[395] = 0.3197212f;
      sa[396] = 0.27752835f;
      sa[397] = -0.29404512f;
      sa[398] = 0.15266576f;
      sa[399] = 0.0482884f;
      sa[400] = 0.1986295f;
      sa[401] = 0.23014419f;
      sa[402] = -0.12038753f;
      sa[403] = 0.067642115f;
      sa[404] = 0.23058312f;
      sa[405] = -0.2457793f;
      sa[406] = -0.026725033f;
      sa[407] = 0.10610388f;
      sa[408] = -0.19538856f;
      sa[409] = -0.24350236f;
      sa[410] = -0.10735065f;
      sa[411] = 0.16199866f;
      sa[412] = -0.1635269f;
      sa[413] = 0.09977995f;
      sa[414] = 0.13982591f;
      sa[415] = 0.3286526f;
      sa[416] = -0.14526387f;
      sa[417] = 0.062079005f;
      sa[418] = 0.0180711f;
      sa[419] = 0.2983435f;
      sa[420] = 0.21937925f;
      sa[421] = 0.2875406f;
      sa[422] = 0.23092422f;
      sa[423] = -0.0030925034f;
      sa[424] = 0.12422147f;
      sa[425] = -0.03411794f;
      sa[426] = -0.26346278f;
      sa[427] = 0.20819561f;
      sa[428] = -0.034912843f;
      sa[429] = -0.16196086f;
      sa[430] = 0.19231017f;
      sa[431] = -0.023525642f;
      sa[432] = -0.027142692f;
      sa[433] = 0.11987308f;
      sa[434] = 0.21737592f;
      sa[435] = 0.037746556f;
      sa[436] = -0.24049656f;
      sa[437] = -0.24534012f;
      sa[438] = 0.0060111154f;
      sa[439] = -0.01729215f;
      sa[440] = 0.29753914f;
      sa[441] = -0.27530682f;
      sa[442] = 0.085607514f;
      sa[443] = 0.03112514f;
      sa[444] = -0.20394085f;
      sa[445] = 0.053255294f;
      sa[446] = 0.21734294f;
      sa[447] = 0.06779358f;
      sa[448] = 0.17912038f;
      sa[449] = 0.2345912f;
      sa[450] = -0.1064959f;
      sa[451] = 0.12114389f;
      sa[452] = 0.18881178f;
      sa[453] = -0.02468928f;
      sa[454] = -0.13768485f;
      sa[455] = -0.036881186f;
      sa[456] = -0.07476289f;
      sa[457] = 0.07664401f;
      sa[458] = -0.21471953f;
      sa[459] = 0.23784678f;
      sa[460] = 0.22673547f;
      sa[461] = 0.28807804f;
      sa[462] = 0.055667274f;
      sa[463] = 0.22126631f;
      sa[464] = -0.27793345f;
      sa[465] = 0.21014483f;
      sa[466] = 0.04204748f;
      sa[467] = 0.11888384f;
      sa[468] = 0.10400369f;
      sa[469] = 0.24705781f;
      sa[470] = 0.13642746f;
      sa[471] = 0.046019692f;
      sa[472] = 0.0045110844f;
      sa[473] = -0.1269861f;
      sa[474] = -0.018331924f;
      sa[475] = 0.037081636f;
      sa[476] = 0.2528034f;
      sa[477] = -0.18389903f;
      sa[478] = 0.0868035f;
      sa[479] = -0.16256405f;
      sa[480] = -0.28662956f;
      sa[481] = -0.21429983f;
      sa[482] = -0.25181714f;
      sa[483] = 0.17592669f;
      sa[484] = 0.18879554f;
      sa[485] = 0.104091056f;
      sa[486] = -0.02286189f;
      sa[487] = -0.109050594f;
      sa[488] = -0.17958057f;
      sa[489] = 0.08779075f;
      sa[490] = 0.0011145982f;
      sa[491] = -0.2125693f;
      sa[492] = 0.16813666f;
      sa[493] = 0.22258252f;
      sa[494] = -0.21833159f;
      sa[495] = 0.13681522f;
      sa[496] = -0.0046658544f;
      sa[497] = 0.05509124f;
      sa[498] = 0.1458826f;
      sa[499] = 0.1371857f;
      sa[500] = -0.04934639f;
      sa[501] = 0.057191096f;
      sa[502] = 0.29172516f;
      sa[503] = 0.04669772f;
      sa[504] = -0.172212f;
      sa[505] = -0.19171682f;
      sa[506] = 0.23500316f;
      sa[507] = -0.08094067f;
      sa[508] = 0.054511283f;
      sa[509] = 0.18389261f;
      sa[510] = 0.12716138f;
      sa[511] = 0.0061722724f;
      sa[512] = 0.054240193f;
      sa[513] = -0.07654618f;
      sa[514] = 0.26380974f;
      sa[515] = -0.25821388f;
      sa[516] = -0.0019869f;
      sa[517] = 0.06244066f;
      sa[518] = 0.10449949f;
      sa[519] = -0.10273257f;
      sa[520] = 0.21653013f;
      sa[521] = 0.13194008f;
      sa[522] = 0.078338526f;
      sa[523] = 0.19043644f;
      sa[524] = 0.1587276f;
      sa[525] = 0.13068442f;
      sa[526] = -0.03469837f;
      sa[527] = -0.12053376f;
      sa[528] = 0.024170391f;
      sa[529] = 0.13758565f;
      sa[530] = -0.1880978f;
      sa[531] = 0.13180387f;
      sa[532] = 0.113529555f;
      sa[533] = 0.096844465f;
      sa[534] = 0.10207189f;
      sa[535] = -0.10336599f;
      sa[536] = 0.06690628f;
      sa[537] = -0.23189305f;
      sa[538] = 0.17970815f;
      sa[539] = 0.3027219f;
      sa[540] = -0.2385204f;
      sa[541] = -0.15055908f;
      sa[542] = -0.13557652f;
      sa[543] = -0.21358623f;
      sa[544] = 0.12932432f;
      sa[545] = 0.12451547f;
      sa[546] = 0.09514242f;
      sa[547] = 0.16434883f;
      sa[548] = 0.06688104f;
      sa[549] = 0.1429335f;
      sa[550] = -0.023114407f;
      sa[551] = -0.04101481f;
      sa[552] = 0.035612904f;
      sa[553] = -0.03757017f;
      sa[554] = -0.13236f;
      sa[555] = -0.14824139f;
      sa[556] = -0.16250329f;
      sa[557] = -0.23703615f;
      sa[558] = -0.18377785f;
      sa[559] = 0.062173866f;
      sa[560] = -0.3165379f;
      sa[561] = -0.121252604f;
      sa[562] = 0.17110121f;
      sa[563] = -0.114737995f;
      sa[564] = 0.21809159f;
      sa[565] = 0.0067036743f;
      sa[566] = 0.2717723f;
      sa[567] = -0.046257768f;
      sa[568] = -0.09533035f;
      sa[569] = -0.0054591303f;
      sa[570] = -0.029374834f;
      sa[571] = -0.08532892f;
      sa[572] = -0.10132666f;
      sa[573] = 0.16392714f;
      sa[574] = 0.19859767f;
      sa[575] = -0.27122897f;
      sa[576] = -0.08948628f;
      sa[577] = 0.017127112f;
      sa[578] = 0.09689155f;
      sa[579] = -0.043789763f;
      sa[580] = 0.114412196f;
      sa[581] = -0.105732135f;
      sa[582] = 0.11639369f;
      sa[583] = 0.0116769895f;
      sa[584] = 0.12382876f;
      sa[585] = 0.16039568f;
      sa[586] = -0.18935302f;
      sa[587] = -0.07371829f;
      sa[588] = 0.09240143f;
      sa[589] = 0.1492418f;
      sa[590] = 0.008251858f;
      sa[591] = 0.032767277f;
      sa[592] = -0.31208193f;
      sa[593] = -0.18571317f;
      sa[594] = -0.059720654f;
      sa[595] = -0.021312734f;
      sa[596] = 0.25515944f;
      sa[597] = -0.011792745f;
      sa[598] = 0.2308285f;
      sa[599] = 0.048832595f;
      sa[600] = -0.27445465f;
      sa[601] = 0.25276387f;
      sa[602] = -0.052059706f;
      sa[603] = 0.22418518f;
      sa[604] = 0.22855085f;
      sa[605] = 0.17671272f;
      sa[606] = 0.21774612f;
      sa[607] = 0.04880282f;
      sa[608] = 0.03860852f;
      sa[609] = 0.11206291f;
      sa[610] = 0.11447431f;
      sa[611] = -0.08212069f;
      sa[612] = -0.07766761f;
      sa[613] = 0.04548676f;
      sa[614] = 0.01936677f;
      sa[615] = 0.0036666933f;
      sa[616] = 0.059443373f;
      sa[617] = -0.30875784f;
      sa[618] = -0.1520859f;
      sa[619] = -0.19428703f;
      sa[620] = -0.0420568f;
      sa[621] = -0.21418522f;
      sa[622] = -0.3025667f;
      sa[623] = -0.31603095f;
      sa[624] = -0.04684342f;
      sa[625] = 0.21577106f;
      sa[626] = -0.012289233f;
      sa[627] = 0.2396029f;
      sa[628] = -0.28620666f;
      sa[629] = -0.067816585f;
      sa[630] = -0.13657731f;
      sa[631] = 0.24920653f;
      sa[632] = 0.11528695f;
      sa[633] = -0.12874883f;
      sa[634] = -0.18906368f;
      sa[635] = 0.17803714f;
      sa[636] = -0.22565381f;
      sa[637] = -0.06496808f;
      sa[638] = -0.096095376f;
      sa[639] = -0.10154466f;
      sa[640] = -0.124157414f;
      sa[641] = -0.26479983f;
      sa[642] = 0.17291297f;
      sa[643] = -0.30225194f;
      sa[644] = -0.065450706f;
      sa[645] = -0.2089791f;
      sa[646] = 0.36048245f;
      sa[647] = -0.24017297f;
      sa[648] = -0.040993325f;
      sa[649] = -0.03143051f;
      sa[650] = 0.039727002f;
      sa[651] = -0.11595395f;
      sa[652] = 0.059687383f;
      sa[653] = -0.17348826f;
      sa[654] = -0.17451786f;
      sa[655] = -0.17272654f;
      sa[656] = 0.083420835f;
      sa[657] = 0.15883622f;
      sa[658] = -0.25215384f;
      sa[659] = -0.23297599f;
      sa[660] = -0.24249391f;
      sa[661] = -0.12872194f;
      sa[662] = -0.29560745f;
      sa[663] = 0.14259568f;
      sa[664] = -0.17518608f;
      sa[665] = 0.27811944f;
      sa[666] = -0.019918578f;
      sa[667] = -0.25440174f;
      sa[668] = 0.25502166f;
      sa[669] = -0.13109906f;
      sa[670] = 0.121149465f;
      sa[671] = 0.036905345f;
      sa[672] = -0.28642792f;
      sa[673] = 0.13866952f;
      sa[674] = 0.22833264f;
      sa[675] = -0.2648421f;
      sa[676] = -0.10021503f;
      sa[677] = -0.21352103f;
      sa[678] = 0.16974655f;
      sa[679] = -0.07955728f;
      sa[680] = 0.062051654f;
      sa[681] = 0.10018839f;
      sa[682] = 0.06281207f;
      sa[683] = -0.089567356f;
      sa[684] = -0.035817247f;
      sa[685] = 0.049568035f;
      sa[686] = -0.11351915f;
      sa[687] = -0.20904964f;
      sa[688] = -0.28036693f;
      sa[689] = -0.22955349f;
      sa[690] = -0.03740042f;
      sa[691] = 0.11540496f;
      sa[692] = -0.15797043f;
      sa[693] = -0.17778288f;
      sa[694] = 0.27910155f;
      sa[695] = -0.040159255f;
      sa[696] = -0.08939524f;
      sa[697] = -0.13087432f;
      sa[698] = -0.16833279f;
      sa[699] = 0.2940087f;
      sa[700] = 0.1653926f;
      sa[701] = 0.10636455f;
      sa[702] = 0.17779812f;
      sa[703] = -0.030867318f;
      sa[704] = -0.2697769f;
      sa[705] = -0.048665054f;
      sa[706] = -0.14581394f;
      sa[707] = 0.008021917f;
      sa[708] = 0.028146917f;
      sa[709] = -0.24855365f;
      sa[710] = 0.25183648f;
      sa[711] = -0.07516636f;
      sa[712] = 0.030985992f;
      sa[713] = 0.13787192f;
      sa[714] = 0.18505396f;
      sa[715] = 0.07478518f;
      sa[716] = 0.051380582f;
      sa[717] = 0.16180176f;
      sa[718] = -0.09709806f;
      sa[719] = 0.077132344f;
      sa[720] = -0.25091478f;
      sa[721] = 0.22402804f;
      sa[722] = -0.10035179f;
      sa[723] = -0.008556785f;
      sa[724] = 0.08371003f;
      sa[725] = -0.24734102f;
      sa[726] = -0.17238368f;
      sa[727] = -0.23308192f;
      sa[728] = -0.12368627f;
      sa[729] = -0.052429307f;
      sa[730] = 0.13281542f;
      sa[731] = -0.26103026f;
      sa[732] = 0.16863419f;
      sa[733] = 0.2370558f;
      sa[734] = -0.11276637f;
      sa[735] = 0.3035215f;
      sa[736] = 0.020928217f;
      sa[737] = 0.15041742f;
      sa[738] = -0.18279351f;
      sa[739] = -0.2912528f;
      sa[740] = -0.2735596f;
      sa[741] = -0.27999392f;
      sa[742] = 0.0935149f;
      sa[743] = 0.0432292f;
      sa[744] = 0.07632997f;
      sa[745] = -0.20730504f;
      sa[746] = 0.118257135f;
      sa[747] = -0.13241403f;
      sa[748] = -0.14455281f;
      sa[749] = -0.1636702f;
      sa[750] = 0.2063928f;
      sa[751] = 0.25810117f;
      sa[752] = -0.053501226f;
      sa[753] = 0.18251349f;
      sa[754] = -0.0020641205f;
      sa[755] = 0.14134076f;
      sa[756] = -0.18935104f;
      sa[757] = 0.27733177f;
      sa[758] = -0.12006561f;
      sa[759] = -0.14991114f;
      sa[760] = -0.100145325f;
      sa[761] = 0.050372943f;
      sa[762] = -0.10785618f;
      sa[763] = 0.18032677f;
      sa[764] = 0.06256852f;
      sa[765] = -0.050367508f;
      sa[766] = -0.20130587f;
      sa[767] = 0.107401215f;
      sa[768] = -0.17648366f;
      sa[769] = -0.26712942f;
      sa[770] = -0.013063382f;
      sa[771] = 0.019691676f;
      sa[772] = 0.051835783f;
      sa[773] = -0.25090763f;
      sa[774] = -0.017079534f;
      sa[775] = 0.24867675f;
      sa[776] = -0.0721098f;
      sa[777] = 0.0450337f;
      sa[778] = 0.149015f;
      sa[779] = -0.1536769f;
      sa[780] = 0.01600496f;
      sa[781] = -0.03434259f;
      sa[782] = 0.1260703f;
      sa[783] = -0.12096698f;
      sa[784] = -0.1459545f;
      sa[785] = -0.11552015f;
      sa[786] = -0.0852132f;
      sa[787] = -0.22563434f;
      sa[788] = -0.27918148f;
      sa[789] = 0.15233995f;
      sa[790] = -0.15776196f;
      sa[791] = -0.07300373f;
      sa[792] = 0.18801562f;
      sa[793] = -0.1253722f;
      sa[794] = -0.24848562f;
      sa[795] = 4.5866432E-4f;
      sa[796] = 0.21254992f;
      sa[797] = -0.2038645f;
      sa[798] = -0.26975265f;
      sa[799] = -0.18730438f;
      sa[800] = 0.19434902f;
      sa[801] = 0.06124441f;
      sa[802] = 0.229359f;
      sa[803] = 0.08324677f;
      sa[804] = 0.22196901f;
      sa[805] = 0.28364182f;
      sa[806] = 0.2772301f;
      sa[807] = 0.20197529f;
      sa[808] = -0.054592814f;
      sa[809] = -0.22167495f;
      sa[810] = 0.087101705f;
      sa[811] = 0.1682896f;
      sa[812] = 0.15402874f;
      sa[813] = -0.29660222f;
      sa[814] = 0.07652883f;
      sa[815] = -0.18466684f;
      sa[816] = -0.12656038f;
      sa[817] = -0.17634012f;
      sa[818] = -6.870942E-4f;
      sa[819] = -0.092209496f;
      sa[820] = -0.28675407f;
      sa[821] = -0.21269596f;
      sa[822] = -0.27559093f;
      sa[823] = 0.05284692f;
      sa[824] = 0.108872384f;
      sa[825] = 0.31606808f;
      sa[826] = -0.26423508f;
      sa[827] = -0.25776443f;
      sa[828] = 0.120546326f;
      sa[829] = -0.077721745f;
      sa[830] = 0.12897143f;
      sa[831] = 0.15466213f;
      sa[832] = 0.15461585f;
      sa[833] = 0.10560381f;
      sa[834] = 0.21547434f;
      sa[835] = -0.06657789f;
      sa[836] = 0.19535477f;
      sa[837] = -0.14262116f;
      sa[838] = 0.14484863f;
      sa[839] = -0.22127357f;
      sa[840] = 0.19543357f;
      sa[841] = 0.12871769f;
      sa[842] = 0.17612055f;
      sa[843] = 0.047465995f;
      sa[844] = 0.042590737f;
      sa[845] = 0.14478593f;
      sa[846] = -0.24093613f;
      sa[847] = -0.080674f;
      sa[848] = 0.20087837f;
      sa[849] = 0.23890093f;
      sa[850] = -0.004437578f;
      sa[851] = 0.10131818f;
      sa[852] = 0.24995969f;
      sa[853] = 0.13998295f;
      sa[854] = 0.2495272f;
      sa[855] = 0.13939263f;
      sa[856] = 0.09240616f;
      sa[857] = -0.14931963f;
      sa[858] = 0.15104024f;
      sa[859] = 0.08167133f;
      sa[860] = 0.25766015f;
      sa[861] = -0.20785384f;
      sa[862] = -0.08609989f;
      sa[863] = 0.05975748f;
      sa[864] = -0.18624374f;
      sa[865] = 0.22783186f;
      sa[866] = -0.14187428f;
      sa[867] = 6.712817E-4f;
      sa[868] = -0.19277607f;
      sa[869] = 0.1834918f;
      sa[870] = -0.065216444f;
      sa[871] = 0.13191828f;
      sa[872] = 0.24977145f;
      sa[873] = -0.056130406f;
      sa[874] = -0.02046266f;
      sa[875] = -0.24063146f;
      sa[876] = -0.23005562f;
      sa[877] = -0.22189258f;
      sa[878] = 0.019373516f;
      sa[879] = 0.17512369f;
      sa[880] = -0.12144431f;
      sa[881] = -0.102746196f;
      sa[882] = 0.16476953f;
      sa[883] = 0.20503691f;
      sa[884] = -0.12936293f;
      sa[885] = -0.13225682f;
      sa[886] = 0.08433818f;
      sa[887] = -0.056822933f;
      sa[888] = -0.08268762f;
      sa[889] = 0.045114417f;
      sa[890] = -0.31070668f;
      sa[891] = 0.34481728f;
      sa[892] = 0.16178064f;
      sa[893] = 0.2511808f;
      sa[894] = 0.027206536f;
      sa[895] = 0.20587282f;
      sa[896] = -0.18023518f;
      sa[897] = 0.22406863f;
      sa[898] = -0.08512198f;
      sa[899] = 0.18410595f;
      sa[900] = -0.13599454f;
      sa[901] = 0.12707794f;
      sa[902] = -0.2703502f;
      sa[903] = -0.109903194f;
      sa[904] = 0.1944658f;
      sa[905] = 0.18154484f;
      sa[906] = -0.22492799f;
      sa[907] = -0.24247295f;
      sa[908] = -0.23425403f;
      sa[909] = 0.03799999f;
      sa[910] = 0.040296655f;
      sa[911] = -0.13369063f;
      sa[912] = -0.0012676718f;
      sa[913] = 0.04936819f;
      sa[914] = -0.16995619f;
      sa[915] = 0.057743337f;
      sa[916] = 0.19144972f;
      sa[917] = 0.0060738036f;
      sa[918] = 0.18345483f;
      sa[919] = -0.009547471f;
      sa[920] = 0.15972625f;
      sa[921] = -0.050927702f;
      sa[922] = -0.10626768f;
      sa[923] = -0.09608853f;
      sa[924] = -0.14693679f;
      sa[925] = -0.19156569f;
      sa[926] = 0.10226186f;
      sa[927] = -0.10498238f;
      sa[928] = 0.25048256f;
      sa[929] = 0.14553934f;
      sa[930] = 0.1511844f;
      sa[931] = 0.0053666984f;
      sa[932] = 0.25513944f;
      sa[933] = 0.017340437f;
      sa[934] = 0.23392068f;
      sa[935] = -0.24704444f;
      sa[936] = 0.06754184f;
      sa[937] = 0.19833f;
      sa[938] = -0.082174614f;
      sa[939] = -0.041465066f;
      sa[940] = -0.055399477f;
      sa[941] = -0.2957558f;
      sa[942] = -0.24385673f;
      sa[943] = -0.1585294f;
      sa[944] = -0.22090474f;
      sa[945] = 0.053578988f;
      sa[946] = 0.051100407f;
      sa[947] = 0.24061055f;
      sa[948] = 0.08640487f;
      sa[949] = -0.17614663f;
      sa[950] = 0.081813104f;
      sa[951] = -0.082097575f;
      sa[952] = -0.21077868f;
      sa[953] = -0.1751236f;
      sa[954] = -0.23382896f;
      sa[955] = 0.053453363f;
      sa[956] = -0.019302035f;
      sa[957] = 0.030334076f;
      sa[958] = 0.08620276f;
      sa[959] = -0.1524615f;
      sa[960] = 0.3370761f;
      sa[961] = -0.115531676f;
      sa[962] = -0.03275614f;
      sa[963] = -0.029767081f;
      sa[964] = -0.17071022f;
      sa[965] = 0.2482729f;
      sa[966] = -0.08631721f;
      sa[967] = -0.2590808f;
      sa[968] = 0.0979954f;
      sa[969] = 0.028801855f;
      sa[970] = 0.26370138f;
      sa[971] = 0.021423453f;
      sa[972] = -0.17534004f;
      sa[973] = -0.22959298f;
      sa[974] = -0.3513788f;
      sa[975] = -0.25788674f;
      sa[976] = -0.059148755f;
      sa[977] = 0.04658039f;
      sa[978] = -0.0727442f;
      sa[979] = 0.14197603f;
      sa[980] = 0.077860035f;
      sa[981] = -0.21601784f;
      sa[982] = 0.13827816f;
      sa[983] = -0.08661064f;
      sa[984] = -0.26687685f;
      sa[985] = 0.057852685f;
      sa[986] = -0.25089133f;
      sa[987] = 0.08289293f;
      sa[988] = 0.14559752f;
      sa[989] = 0.20796287f;
      sa[990] = 0.29179874f;
      sa[991] = -0.22613512f;
      sa[992] = -0.18705674f;
      sa[993] = -0.022471972f;
      sa[994] = -0.13434058f;
      sa[995] = -0.25180638f;
      sa[996] = 0.13484985f;
      sa[997] = 0.15086623f;
      sa[998] = 0.1389716f;
      sa[999] = 0.20122442f;
      sa[1000] = 0.03358045f;
      sa[1001] = 0.24171717f;
      sa[1002] = 0.26213053f;
      sa[1003] = -0.06433778f;
      sa[1004] = 0.18768907f;
      sa[1005] = -0.21593192f;
      sa[1006] = -0.029913612f;
      sa[1007] = 0.054616824f;
      sa[1008] = 0.19813287f;
      sa[1009] = 0.0340609f;
      sa[1010] = 2.1240342E-4f;
      sa[1011] = 0.29149112f;
      sa[1012] = -0.087608755f;
      sa[1013] = 0.14380583f;
      sa[1014] = 0.25442302f;
      sa[1015] = -0.26413703f;
      sa[1016] = 0.26812863f;
      sa[1017] = 0.06452366f;
      sa[1018] = -0.052122448f;
      sa[1019] = 0.09066778f;
      sa[1020] = -0.24140428f;
      sa[1021] = 0.07663089f;
      sa[1022] = 0.22836831f;
      sa[1023] = 0.0876583f;
      sa[1024] = -0.047078185f;
      sa[1025] = 0.08536975f;
      sa[1026] = 0.15926354f;
      sa[1027] = 0.18114069f;
      sa[1028] = 0.27160993f;
      sa[1029] = -0.056066018f;
      sa[1030] = -0.17432767f;
      sa[1031] = -0.045199674f;
      sa[1032] = -0.21873139f;
      sa[1033] = -0.008812092f;
      sa[1034] = -0.03227865f;
      sa[1035] = -0.2708437f;
      sa[1036] = 0.2369089f;
      sa[1037] = -0.0027097792f;
      sa[1038] = -0.21723334f;
      sa[1039] = 0.23256539f;
      sa[1040] = -0.031127542f;
      sa[1041] = 0.10186346f;
      sa[1042] = -0.27738446f;
      sa[1043] = -0.040234324f;
      sa[1044] = 0.20128858f;
      sa[1045] = 0.21894754f;
      sa[1046] = -0.2320554f;
      sa[1047] = -0.20624532f;
      sa[1048] = 0.1746596f;
      sa[1049] = -0.10313161f;
      sa[1050] = 0.054641217f;
      sa[1051] = -0.16828239f;
      sa[1052] = 0.15041174f;
      sa[1053] = 0.26861227f;
      sa[1054] = 0.21943145f;
      sa[1055] = -0.073717736f;
      sa[1056] = 0.27468705f;
      sa[1057] = -0.20202872f;
      sa[1058] = 0.22507942f;
      sa[1059] = -0.14939216f;
      sa[1060] = -0.28652248f;
      sa[1061] = 0.037018877f;
      sa[1062] = 0.22983044f;
      sa[1063] = -0.006275611f;
      sa[1064] = 0.13772495f;
      sa[1065] = 0.018078145f;
      sa[1066] = 0.21108545f;
      sa[1067] = -0.25738934f;
      sa[1068] = -0.34531397f;
      sa[1069] = 0.18110225f;
      sa[1070] = 0.12143204f;
      sa[1071] = 0.19530599f;
      sa[1072] = -0.21142891f;
      sa[1073] = 0.14760464f;
      sa[1074] = 0.122167416f;
      sa[1075] = -0.14233594f;
      sa[1076] = -0.12524602f;
      sa[1077] = 0.11576656f;
      sa[1078] = 0.019683605f;
      sa[1079] = 0.040116746f;
      sa[1080] = 0.1937736f;
      sa[1081] = 0.23221892f;
      sa[1082] = -0.2927089f;
      sa[1083] = -0.17507216f;
      sa[1084] = 0.24540003f;
      sa[1085] = -0.1818643f;
      sa[1086] = -0.23809807f;
      sa[1087] = -0.21714613f;
      sa[1088] = -0.20262583f;
      sa[1089] = 0.05354164f;
      sa[1090] = -0.24133258f;
      sa[1091] = 0.18387185f;
      sa[1092] = -0.23519726f;
      sa[1093] = -0.22692783f;
      sa[1094] = 0.021072716f;
      sa[1095] = -0.20491613f;
      sa[1096] = 0.103155635f;
      sa[1097] = -0.1428804f;
      sa[1098] = -0.001535488f;
      sa[1099] = -0.09670077f;
      sa[1100] = -0.13515884f;
      sa[1101] = 0.12353009f;
      sa[1102] = -0.13730939f;
      sa[1103] = 0.22021946f;
      sa[1104] = -0.23322438f;
      sa[1105] = -0.10660801f;
      sa[1106] = -0.09809851f;
      sa[1107] = 0.19652563f;
      sa[1108] = -0.1973479f;
      sa[1109] = 0.23028065f;
      sa[1110] = 0.1821846f;
      sa[1111] = -0.2459996f;
      sa[1112] = 0.16542493f;
      sa[1113] = 0.24158159f;
      sa[1114] = 0.050065916f;
      sa[1115] = 0.21082015f;
      sa[1116] = -0.086125635f;
      sa[1117] = -0.19323103f;
      sa[1118] = -0.15560128f;
      sa[1119] = -0.10136585f;
      sa[1120] = 0.19733533f;
      sa[1121] = 0.079808176f;
      sa[1122] = 0.24548104f;
      sa[1123] = 0.29604232f;
      sa[1124] = 0.010022159f;
      sa[1125] = -0.07736367f;
      sa[1126] = 0.22926158f;
      sa[1127] = 0.11829203f;
      sa[1128] = 0.019679643f;
      sa[1129] = -0.10185151f;
      sa[1130] = 0.21051812f;
      sa[1131] = 0.29653734f;
      sa[1132] = -0.17774004f;
      sa[1133] = -0.17138618f;
      sa[1134] = 0.23773038f;
      sa[1135] = -0.30497324f;
      sa[1136] = -0.026049502f;
      sa[1137] = 0.19942051f;
      sa[1138] = -0.069487154f;
      sa[1139] = 0.1533949f;
      sa[1140] = 0.24085194f;
      sa[1141] = -0.26742727f;
      sa[1142] = 0.10081154f;
      sa[1143] = -0.0034340196f;
      sa[1144] = -0.26105592f;
      sa[1145] = 0.1755007f;
      sa[1146] = 0.22623551f;
      sa[1147] = -0.053270858f;
      sa[1148] = 0.009627413f;
      sa[1149] = 0.0033065535f;
      sa[1150] = -0.29259303f;
      sa[1151] = -0.25121233f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_02_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_02_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2347045f;
      sa[1] = -0.113030106f;
      sa[2] = -0.5602813f;
      sa[3] = -0.91618f;
      sa[4] = 0.08612529f;
      sa[5] = 0.26815262f;
      sa[6] = 1.2705004f;
      sa[7] = -0.64399934f;
      sa[8] = -0.9137287f;
      sa[9] = 0.7251243f;
      sa[10] = -0.09833757f;
      sa[11] = 0.43986028f;
      sa[12] = 0.11901371f;
      sa[13] = 0.033076867f;
      sa[14] = -1.3103216f;
      sa[15] = 1.1400476f;
      sa[16] = 1.5553343f;
      sa[17] = -0.47379968f;
      sa[18] = 0.08673971f;
      sa[19] = -0.40490216f;
      sa[20] = 1.1233364f;
      sa[21] = 0.019216245f;
      sa[22] = -0.9294495f;
      sa[23] = 0.74553865f;
      sa[24] = -1.4921663f;
      sa[25] = 0.50594693f;
      sa[26] = -0.21967609f;
      sa[27] = 1.4864738f;
      sa[28] = -1.3280973f;
      sa[29] = -0.47408184f;
      sa[30] = 0.4141683f;
      sa[31] = -0.61872995f;
      sa[32] = -1.1559036f;
      sa[33] = -1.4552107f;
      sa[34] = 0.0847504f;
      sa[35] = 1.3651748f;
      sa[36] = -0.29894286f;
      sa[37] = -0.03806405f;
      sa[38] = 0.26130375f;
      sa[39] = 0.8152904f;
      sa[40] = -0.7899917f;
      sa[41] = -1.2766372f;
      sa[42] = -1.0442079f;
      sa[43] = -1.4880302f;
      sa[44] = 0.05486655f;
      sa[45] = -1.3167559f;
      sa[46] = 1.1372178f;
      sa[47] = 1.2221091f;
      sa[48] = -1.3691403f;
      sa[49] = -1.0992285f;
      sa[50] = 0.38584408f;
      sa[51] = -0.30059373f;
      sa[52] = 0.853363f;
      sa[53] = 0.90321785f;
      sa[54] = -0.23924978f;
      sa[55] = 1.1153486f;
      sa[56] = -1.0129193f;
      sa[57] = -1.1428084f;
      sa[58] = 0.1700458f;
      sa[59] = -0.20002665f;
      sa[60] = 1.3783481f;
      sa[61] = -0.60446274f;
      sa[62] = -0.35246783f;
      sa[63] = 0.6980941f;
      sa[64] = 1.4390881f;
      sa[65] = -0.635286f;
      sa[66] = 0.62334484f;
      sa[67] = 1.6044718f;
      sa[68] = 0.71391594f;
      sa[69] = -1.0295135f;
      sa[70] = -1.5134479f;
      sa[71] = -0.40184164f;
      sa[72] = -1.2726874f;
      sa[73] = 1.187881f;
      sa[74] = 1.3801513f;
      sa[75] = -0.13217552f;
      sa[76] = 0.8868935f;
      sa[77] = 0.49431947f;
      sa[78] = -1.2932019f;
      sa[79] = 0.9752111f;
      sa[80] = -0.7895213f;
      sa[81] = 0.31462774f;
      sa[82] = 0.85283107f;
      sa[83] = -0.6064939f;
      sa[84] = -1.5851929f;
      sa[85] = -1.2703279f;
      sa[86] = 0.26472452f;
      sa[87] = 1.2112052f;
      sa[88] = -1.549703f;
      sa[89] = -0.487127f;
      sa[90] = -1.0289207f;
      sa[91] = 1.4876367f;
      sa[92] = -0.3063406f;
      sa[93] = 0.2679134f;
      sa[94] = -1.4998325f;
      sa[95] = -0.24286029f;
      sa[96] = -1.0814852f;
      sa[97] = 0.1672305f;
      sa[98] = -0.07886197f;
      sa[99] = 0.32237825f;
      sa[100] = -1.2510989f;
      sa[101] = -0.4156315f;
      sa[102] = 1.2847904f;
      sa[103] = 0.011088583f;
      sa[104] = -0.15242203f;
      sa[105] = -0.63151926f;
      sa[106] = 1.4203707f;
      sa[107] = 1.2252958f;
      sa[108] = 0.75692624f;
      sa[109] = 0.13474174f;
      sa[110] = 0.72014326f;
      sa[111] = -0.7487444f;
      sa[112] = -1.1022657f;
      sa[113] = 0.20384084f;
      sa[114] = 0.18675736f;
      sa[115] = -0.31359625f;
      sa[116] = 1.165571f;
      sa[117] = 0.06038775f;
      sa[118] = -1.31684f;
      sa[119] = -0.76626635f;
      sa[120] = -0.28371754f;
      sa[121] = 1.0783398f;
      sa[122] = -0.08637089f;
      sa[123] = 0.34895837f;
      sa[124] = -0.73233f;
      sa[125] = 0.79743713f;
      sa[126] = -0.9807375f;
      sa[127] = 0.42785043f;
      sa[128] = -0.8255662f;
      sa[129] = 0.7489443f;
      sa[130] = -0.36851114f;
      sa[131] = 0.8659545f;
      sa[132] = 0.4579956f;
      sa[133] = 0.64399856f;
      sa[134] = 0.645969f;
      sa[135] = -1.0875013f;
      sa[136] = 0.5188949f;
      sa[137] = -0.63308936f;
      sa[138] = -0.13397798f;
      sa[139] = 1.2053801f;
      sa[140] = -0.42691484f;
      sa[141] = 0.037367683f;
      sa[142] = 0.31306526f;
      sa[143] = -0.7702746f;
      sa[144] = 0.98663193f;
      sa[145] = -0.7768985f;
      sa[146] = 0.048221022f;
      sa[147] = -0.30274943f;
      sa[148] = -0.8229569f;
      sa[149] = 1.0992754f;
      sa[150] = -1.1103715f;
      sa[151] = -1.5528418f;
      sa[152] = 1.6016897f;
      sa[153] = -0.6077535f;
      sa[154] = 1.3299052f;
      sa[155] = -1.4631275f;
      sa[156] = -1.4559902f;
      sa[157] = -1.1055772f;
      sa[158] = -0.22113943f;
      sa[159] = -0.6634613f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_02 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_02_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_02_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_02_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_02_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


