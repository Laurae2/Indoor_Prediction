/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:08:40.021+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_09

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_09 > h2o_nn_32x6_Tanh_09.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_09.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_09", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_09 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_09_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_09_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_09_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_09_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_09_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_09_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_09_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_09_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_09_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_09.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_09_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_09() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-3511804147230448256L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_09_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_09_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_09_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_09_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_09_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_09_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_09_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_09_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_09_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.08670570041786854;
      sa[1] = 0.0997192608249451;
      sa[2] = -0.013156378678479429;
      sa[3] = -0.20548627953793702;
      sa[4] = -0.010508248830490464;
      sa[5] = 0.08718256640429697;
      sa[6] = 0.35952054001038924;
      sa[7] = -0.15456121599613945;
      sa[8] = -0.12277422451253671;
      sa[9] = 0.020621167902332954;
      sa[10] = -0.0774444330079085;
      sa[11] = 0.0701365168200334;
      sa[12] = 0.056839003095200576;
      sa[13] = 0.10047839773722109;
      sa[14] = -0.11797808510687788;
      sa[15] = 0.031704562991614865;
      sa[16] = 0.06847302869283306;
      sa[17] = 0.014163010023004066;
      sa[18] = -0.05198478899087378;
      sa[19] = 0.06187916770384454;
      sa[20] = 0.15416845626010148;
      sa[21] = -0.029187858291755922;
      sa[22] = -0.4108217764468044;
      sa[23] = 0.007231346161417838;
      sa[24] = -0.10543562081199233;
      sa[25] = 0.17819846559497882;
      sa[26] = -0.021580189174584395;
      sa[27] = 0.11331228292548184;
      sa[28] = -0.2589918773881661;
      sa[29] = 0.006364933845297959;
      sa[30] = 0.2606410342965284;
      sa[31] = -0.1278000394919584;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_09_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_09_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.12919037490738103;
      sa[1] = -0.1807106670075089;
      sa[2] = -0.1330368667412425;
      sa[3] = -0.010571689617459811;
      sa[4] = -0.07436556516081443;
      sa[5] = -0.06190316336666902;
    }
  }
}
class h2o_nn_32x6_Tanh_09_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_09_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_09_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.054226052f;
      sa[1] = 0.08222689f;
      sa[2] = 0.041748796f;
      sa[3] = -0.0067537036f;
      sa[4] = -0.23023112f;
      sa[5] = -0.16356461f;
      sa[6] = -0.11969555f;
      sa[7] = 0.25803986f;
      sa[8] = 0.022969425f;
      sa[9] = -0.12424428f;
      sa[10] = -0.14714128f;
      sa[11] = -0.114933565f;
      sa[12] = 0.071424656f;
      sa[13] = -0.23170944f;
      sa[14] = -0.21380746f;
      sa[15] = 0.02929369f;
      sa[16] = -0.052845404f;
      sa[17] = 0.13877419f;
      sa[18] = -0.23855363f;
      sa[19] = 0.11395446f;
      sa[20] = 0.17999156f;
      sa[21] = -0.36198765f;
      sa[22] = 0.15144734f;
      sa[23] = -0.18538792f;
      sa[24] = 0.2380762f;
      sa[25] = -0.044759016f;
      sa[26] = -0.12821272f;
      sa[27] = 0.38310862f;
      sa[28] = 0.24883956f;
      sa[29] = -0.24480926f;
      sa[30] = -0.1071911f;
      sa[31] = 0.27773356f;
      sa[32] = 0.23491704f;
      sa[33] = -0.09523601f;
      sa[34] = -0.037580017f;
      sa[35] = -0.14840099f;
      sa[36] = 0.24292378f;
      sa[37] = 0.17906484f;
      sa[38] = -0.3098331f;
      sa[39] = 0.22563602f;
      sa[40] = -0.10221869f;
      sa[41] = -0.06923669f;
      sa[42] = -0.17749459f;
      sa[43] = -0.16816822f;
      sa[44] = 0.32560787f;
      sa[45] = -0.4005554f;
      sa[46] = 0.07720513f;
      sa[47] = 0.09580595f;
      sa[48] = 0.122909866f;
      sa[49] = 0.25614372f;
      sa[50] = 0.15738972f;
      sa[51] = -0.46423396f;
      sa[52] = -0.21003653f;
      sa[53] = 0.08617175f;
      sa[54] = 0.16993225f;
      sa[55] = 0.038963776f;
      sa[56] = -0.34293833f;
      sa[57] = -0.4872974f;
      sa[58] = 0.1740591f;
      sa[59] = -0.40133566f;
      sa[60] = -0.48307166f;
      sa[61] = 0.2553657f;
      sa[62] = 0.11154621f;
      sa[63] = -0.04462449f;
      sa[64] = -0.029552191f;
      sa[65] = -0.062572725f;
      sa[66] = -0.05324258f;
      sa[67] = -0.104267135f;
      sa[68] = -0.21732983f;
      sa[69] = 0.05881798f;
      sa[70] = 0.0075344536f;
      sa[71] = 0.36528727f;
      sa[72] = -0.3358025f;
      sa[73] = 0.3305898f;
      sa[74] = -0.071014665f;
      sa[75] = -0.11823004f;
      sa[76] = -0.09951583f;
      sa[77] = -0.0077204397f;
      sa[78] = -0.0483532f;
      sa[79] = 0.38936964f;
      sa[80] = -0.3400224f;
      sa[81] = 0.04438003f;
      sa[82] = -0.09348636f;
      sa[83] = 0.10002162f;
      sa[84] = 0.1070674f;
      sa[85] = 0.0060638897f;
      sa[86] = 0.21866351f;
      sa[87] = 0.56118727f;
      sa[88] = 0.3357697f;
      sa[89] = 0.14222415f;
      sa[90] = -0.19546962f;
      sa[91] = 0.10218346f;
      sa[92] = 0.22114022f;
      sa[93] = -0.07978117f;
      sa[94] = -0.08223061f;
      sa[95] = -0.04123577f;
      sa[96] = 0.24899809f;
      sa[97] = -0.103014275f;
      sa[98] = 0.23976378f;
      sa[99] = 0.08824837f;
      sa[100] = 0.10781748f;
      sa[101] = -0.019570507f;
      sa[102] = -0.08042496f;
      sa[103] = 0.18309495f;
      sa[104] = -0.05405644f;
      sa[105] = -0.104624845f;
      sa[106] = -0.2235982f;
      sa[107] = 0.12713502f;
      sa[108] = 0.17460386f;
      sa[109] = -0.02924715f;
      sa[110] = -0.1058181f;
      sa[111] = 0.1645479f;
      sa[112] = 0.11150094f;
      sa[113] = 0.0041733114f;
      sa[114] = -0.05347489f;
      sa[115] = 0.018115759f;
      sa[116] = -0.1714967f;
      sa[117] = -0.07720143f;
      sa[118] = -0.3601185f;
      sa[119] = 0.093155876f;
      sa[120] = 0.28115532f;
      sa[121] = 0.31310296f;
      sa[122] = 0.43503794f;
      sa[123] = 0.5724716f;
      sa[124] = 0.3062729f;
      sa[125] = 0.17388058f;
      sa[126] = -0.31104055f;
      sa[127] = -0.45663863f;
      sa[128] = 0.12291204f;
      sa[129] = 0.19086209f;
      sa[130] = 0.007668432f;
      sa[131] = 0.35671726f;
      sa[132] = 0.20471518f;
      sa[133] = -0.24012412f;
      sa[134] = -0.073922426f;
      sa[135] = -0.44486532f;
      sa[136] = -0.2967299f;
      sa[137] = -0.09071659f;
      sa[138] = 0.0023573798f;
      sa[139] = -0.23141345f;
      sa[140] = -0.101430945f;
      sa[141] = -0.14703362f;
      sa[142] = 0.1895198f;
      sa[143] = -0.26320964f;
      sa[144] = 0.09440122f;
      sa[145] = -0.25154302f;
      sa[146] = -0.43702972f;
      sa[147] = -0.074847095f;
      sa[148] = 0.12939525f;
      sa[149] = 0.10848246f;
      sa[150] = 0.19767542f;
      sa[151] = -0.22411229f;
      sa[152] = -0.08331368f;
      sa[153] = 0.28937232f;
      sa[154] = 0.12107123f;
      sa[155] = -0.08642875f;
      sa[156] = 0.1310149f;
      sa[157] = -0.21949476f;
      sa[158] = 0.05413916f;
      sa[159] = 0.14123985f;
      sa[160] = -0.076788984f;
      sa[161] = 0.13540849f;
      sa[162] = 0.0020806047f;
      sa[163] = -0.3763374f;
      sa[164] = 0.1971815f;
      sa[165] = -0.06731699f;
      sa[166] = -0.11039918f;
      sa[167] = -0.029087435f;
      sa[168] = 0.13202988f;
      sa[169] = 0.114342585f;
      sa[170] = 0.20341566f;
      sa[171] = 0.1468848f;
      sa[172] = -0.08568922f;
      sa[173] = -0.16140698f;
      sa[174] = -0.07695317f;
      sa[175] = -0.13295051f;
      sa[176] = 0.003030478f;
      sa[177] = 0.056320947f;
      sa[178] = -0.122682065f;
      sa[179] = 0.11695696f;
      sa[180] = -0.12115631f;
      sa[181] = -0.4038756f;
      sa[182] = -0.24712475f;
      sa[183] = 0.20080549f;
      sa[184] = 0.29954633f;
      sa[185] = 0.11051266f;
      sa[186] = -0.3363441f;
      sa[187] = -0.020468978f;
      sa[188] = -0.14617096f;
      sa[189] = 0.2169817f;
      sa[190] = 0.036444545f;
      sa[191] = -0.2772908f;
      sa[192] = -0.23105502f;
      sa[193] = 0.068414494f;
      sa[194] = -0.042219132f;
      sa[195] = 0.084091894f;
      sa[196] = 0.14077334f;
      sa[197] = 0.009277058f;
      sa[198] = 0.3573525f;
      sa[199] = -0.10091451f;
      sa[200] = -0.03369386f;
      sa[201] = -0.28186783f;
      sa[202] = 0.050076608f;
      sa[203] = -0.14237621f;
      sa[204] = -0.37454888f;
      sa[205] = 0.24175753f;
      sa[206] = 0.43069246f;
      sa[207] = 0.11236945f;
      sa[208] = -0.33933112f;
      sa[209] = -0.12056842f;
      sa[210] = -0.4455122f;
      sa[211] = -0.3968746f;
      sa[212] = 0.29579455f;
      sa[213] = -0.2323647f;
      sa[214] = -0.040714815f;
      sa[215] = 0.121011175f;
      sa[216] = 0.12075725f;
      sa[217] = 0.0738288f;
      sa[218] = -0.13953955f;
      sa[219] = 0.2541982f;
      sa[220] = -0.120463885f;
      sa[221] = 0.106050946f;
      sa[222] = 0.19491321f;
      sa[223] = 0.048013616f;
      sa[224] = 0.11026188f;
      sa[225] = 0.35824546f;
      sa[226] = -0.12448225f;
      sa[227] = -0.11402211f;
      sa[228] = 0.101676986f;
      sa[229] = 0.07064879f;
      sa[230] = 0.18214269f;
      sa[231] = -0.33930132f;
      sa[232] = -0.27866352f;
      sa[233] = 0.21229975f;
      sa[234] = 0.33577073f;
      sa[235] = -0.120852485f;
      sa[236] = 0.024007823f;
      sa[237] = -0.13180162f;
      sa[238] = -0.2577164f;
      sa[239] = 0.15261158f;
      sa[240] = 0.06850914f;
      sa[241] = -0.1957424f;
      sa[242] = 0.11784341f;
      sa[243] = -0.17421836f;
      sa[244] = -0.033506915f;
      sa[245] = 0.07769075f;
      sa[246] = -0.09286001f;
      sa[247] = 0.06997496f;
      sa[248] = 0.18399839f;
      sa[249] = 0.10535618f;
      sa[250] = -0.122204244f;
      sa[251] = -0.044294823f;
      sa[252] = -0.12634097f;
      sa[253] = -0.14301127f;
      sa[254] = -0.03374623f;
      sa[255] = 0.39716196f;
      sa[256] = -0.13635455f;
      sa[257] = 0.27389753f;
      sa[258] = -0.14888048f;
      sa[259] = -0.13084519f;
      sa[260] = -0.053271107f;
      sa[261] = -0.10719911f;
      sa[262] = -0.11120528f;
      sa[263] = 0.29535383f;
      sa[264] = -0.1333876f;
      sa[265] = 0.057938553f;
      sa[266] = -0.20973536f;
      sa[267] = -0.2380018f;
      sa[268] = 0.24619412f;
      sa[269] = -0.13971113f;
      sa[270] = -0.09634475f;
      sa[271] = 0.31550497f;
      sa[272] = -0.04381694f;
      sa[273] = -0.05966294f;
      sa[274] = 0.19014071f;
      sa[275] = -0.005462738f;
      sa[276] = 0.11219371f;
      sa[277] = -0.12412019f;
      sa[278] = -0.2732614f;
      sa[279] = 0.03780844f;
      sa[280] = -0.17347482f;
      sa[281] = 0.2488709f;
      sa[282] = -0.11676098f;
      sa[283] = -0.14338593f;
      sa[284] = 0.060765374f;
      sa[285] = -0.17225358f;
      sa[286] = 0.2199977f;
      sa[287] = 0.072192974f;
      sa[288] = -0.29565826f;
      sa[289] = -0.16258137f;
      sa[290] = -0.16213559f;
      sa[291] = -0.108860016f;
      sa[292] = 0.10746507f;
      sa[293] = -0.1732102f;
      sa[294] = -0.0412141f;
      sa[295] = 0.09113294f;
      sa[296] = 0.025998283f;
      sa[297] = 0.26278496f;
      sa[298] = -0.04015039f;
      sa[299] = -0.23708044f;
      sa[300] = -0.048227478f;
      sa[301] = -0.14946273f;
      sa[302] = 0.031176133f;
      sa[303] = -0.037518464f;
      sa[304] = -0.14818856f;
      sa[305] = 0.058612414f;
      sa[306] = 0.34074777f;
      sa[307] = -0.10781628f;
      sa[308] = 0.07554341f;
      sa[309] = 0.1503827f;
      sa[310] = 0.21558793f;
      sa[311] = 0.34261546f;
      sa[312] = -0.13219127f;
      sa[313] = -0.19315936f;
      sa[314] = -0.034656707f;
      sa[315] = 0.15509975f;
      sa[316] = 4.7826893E-6f;
      sa[317] = -0.03812346f;
      sa[318] = 0.100468874f;
      sa[319] = 0.35093394f;
      sa[320] = -0.16994837f;
      sa[321] = 0.062777966f;
      sa[322] = 0.37503007f;
      sa[323] = 0.018537577f;
      sa[324] = 0.092599615f;
      sa[325] = 0.1922248f;
      sa[326] = -0.39576367f;
      sa[327] = 0.03640573f;
      sa[328] = -0.15562612f;
      sa[329] = 0.24696003f;
      sa[330] = -0.20592125f;
      sa[331] = -0.03149824f;
      sa[332] = -0.13025787f;
      sa[333] = 0.019462591f;
      sa[334] = -0.04992601f;
      sa[335] = 0.44242105f;
      sa[336] = -0.17918523f;
      sa[337] = -0.11599767f;
      sa[338] = 0.26098457f;
      sa[339] = -0.19188157f;
      sa[340] = -0.47383016f;
      sa[341] = -0.37698948f;
      sa[342] = 0.06338565f;
      sa[343] = -0.13983324f;
      sa[344] = -0.25108847f;
      sa[345] = 0.06896996f;
      sa[346] = 0.13603856f;
      sa[347] = -0.31730273f;
      sa[348] = 0.12772955f;
      sa[349] = -0.26089785f;
      sa[350] = -0.29743823f;
      sa[351] = 0.08313399f;
      sa[352] = 0.053756624f;
      sa[353] = -0.20944175f;
      sa[354] = -0.0023797392f;
      sa[355] = -0.0125849005f;
      sa[356] = -0.106583215f;
      sa[357] = 0.3403767f;
      sa[358] = -0.35225293f;
      sa[359] = -0.042606525f;
      sa[360] = 0.28348142f;
      sa[361] = 0.0395338f;
      sa[362] = -0.17233194f;
      sa[363] = 0.07557532f;
      sa[364] = -0.23069115f;
      sa[365] = -0.14591637f;
      sa[366] = -0.02289982f;
      sa[367] = -0.23050006f;
      sa[368] = -0.024392916f;
      sa[369] = 0.1812097f;
      sa[370] = -0.1479305f;
      sa[371] = 0.26768604f;
      sa[372] = 0.016878616f;
      sa[373] = 0.37544248f;
      sa[374] = -0.08650821f;
      sa[375] = -0.17961031f;
      sa[376] = -0.21473408f;
      sa[377] = -0.3122747f;
      sa[378] = 0.051799f;
      sa[379] = 0.118351094f;
      sa[380] = -0.13550209f;
      sa[381] = -0.15580803f;
      sa[382] = -0.042839374f;
      sa[383] = -0.11696045f;
      sa[384] = -0.07022225f;
      sa[385] = 0.112160765f;
      sa[386] = -0.45609346f;
      sa[387] = -0.09766839f;
      sa[388] = 0.09417269f;
      sa[389] = -0.03171704f;
      sa[390] = 0.09516244f;
      sa[391] = -0.0267123f;
      sa[392] = 0.12543862f;
      sa[393] = 0.12495463f;
      sa[394] = 0.016434556f;
      sa[395] = 0.27556622f;
      sa[396] = 0.41460106f;
      sa[397] = -0.32070267f;
      sa[398] = -0.08886633f;
      sa[399] = -0.107528426f;
      sa[400] = 0.10212965f;
      sa[401] = 0.26179478f;
      sa[402] = -0.19080459f;
      sa[403] = 0.010955341f;
      sa[404] = 0.29600447f;
      sa[405] = -0.37452242f;
      sa[406] = -0.030880032f;
      sa[407] = 0.06658793f;
      sa[408] = -0.28535017f;
      sa[409] = -0.20331681f;
      sa[410] = -0.16743341f;
      sa[411] = 0.0977869f;
      sa[412] = -0.17366613f;
      sa[413] = 0.0155691635f;
      sa[414] = 0.1201753f;
      sa[415] = 0.38578743f;
      sa[416] = -0.26234236f;
      sa[417] = -0.0787771f;
      sa[418] = -0.08981333f;
      sa[419] = 0.13917087f;
      sa[420] = 0.14464791f;
      sa[421] = 0.25392818f;
      sa[422] = 0.31869936f;
      sa[423] = 0.110705554f;
      sa[424] = 0.03452613f;
      sa[425] = -0.11112515f;
      sa[426] = -0.2419392f;
      sa[427] = 0.18590996f;
      sa[428] = -0.15700336f;
      sa[429] = -0.29044235f;
      sa[430] = 0.29442108f;
      sa[431] = 0.071193896f;
      sa[432] = 0.026080221f;
      sa[433] = 0.21460404f;
      sa[434] = 0.40019074f;
      sa[435] = -0.108565375f;
      sa[436] = -0.23894435f;
      sa[437] = -0.15558226f;
      sa[438] = 0.015012394f;
      sa[439] = 0.13098444f;
      sa[440] = 0.3492641f;
      sa[441] = -0.23411891f;
      sa[442] = 0.11321617f;
      sa[443] = 0.08118332f;
      sa[444] = -0.11314368f;
      sa[445] = 0.21020971f;
      sa[446] = 0.28516296f;
      sa[447] = 0.23068036f;
      sa[448] = 0.28835264f;
      sa[449] = 0.28450572f;
      sa[450] = -0.3251209f;
      sa[451] = 0.21334572f;
      sa[452] = 0.22120804f;
      sa[453] = -0.016448986f;
      sa[454] = -0.12008808f;
      sa[455] = 0.04842705f;
      sa[456] = 0.09400972f;
      sa[457] = 0.009572903f;
      sa[458] = -0.25694412f;
      sa[459] = 0.37566686f;
      sa[460] = 0.35101464f;
      sa[461] = 0.3970916f;
      sa[462] = 0.24953823f;
      sa[463] = 0.42602283f;
      sa[464] = -0.3237283f;
      sa[465] = 0.2074891f;
      sa[466] = -0.034954958f;
      sa[467] = 0.06987442f;
      sa[468] = 0.05459944f;
      sa[469] = 0.27688712f;
      sa[470] = 0.106568955f;
      sa[471] = -0.1401466f;
      sa[472] = -0.04106621f;
      sa[473] = -0.056623433f;
      sa[474] = -0.056106016f;
      sa[475] = 0.15739012f;
      sa[476] = 0.1544051f;
      sa[477] = -0.17639935f;
      sa[478] = 0.08840846f;
      sa[479] = -0.13720733f;
      sa[480] = -0.2493513f;
      sa[481] = -0.12321087f;
      sa[482] = -0.24976163f;
      sa[483] = 0.27606612f;
      sa[484] = 0.21439122f;
      sa[485] = 0.09333593f;
      sa[486] = -0.1327028f;
      sa[487] = -0.15983662f;
      sa[488] = -0.20367628f;
      sa[489] = 0.026755186f;
      sa[490] = -0.040485155f;
      sa[491] = -0.19827005f;
      sa[492] = 0.24353518f;
      sa[493] = 0.15051058f;
      sa[494] = -0.15451555f;
      sa[495] = 0.2633943f;
      sa[496] = 0.051593166f;
      sa[497] = 0.10741362f;
      sa[498] = 0.2454938f;
      sa[499] = 0.3066216f;
      sa[500] = -0.15545513f;
      sa[501] = 0.058610115f;
      sa[502] = 0.3030446f;
      sa[503] = 0.06215218f;
      sa[504] = -0.10233528f;
      sa[505] = -0.10407883f;
      sa[506] = 0.3329958f;
      sa[507] = 0.024794633f;
      sa[508] = 0.1798093f;
      sa[509] = 0.19884722f;
      sa[510] = 0.2536617f;
      sa[511] = 0.021347733f;
      sa[512] = 0.10488053f;
      sa[513] = -0.030776469f;
      sa[514] = 0.18962209f;
      sa[515] = -0.36566386f;
      sa[516] = 0.056633957f;
      sa[517] = 0.062687315f;
      sa[518] = 0.18416356f;
      sa[519] = -0.10580275f;
      sa[520] = 0.46137115f;
      sa[521] = 0.20727095f;
      sa[522] = 0.14592616f;
      sa[523] = 0.26672125f;
      sa[524] = 0.26496473f;
      sa[525] = 0.27621853f;
      sa[526] = 0.111515015f;
      sa[527] = 0.046935473f;
      sa[528] = 0.13292561f;
      sa[529] = 0.2100524f;
      sa[530] = -0.25746235f;
      sa[531] = 0.033436734f;
      sa[532] = 0.16884023f;
      sa[533] = 0.16121086f;
      sa[534] = 0.11944121f;
      sa[535] = -0.08811419f;
      sa[536] = 0.024929516f;
      sa[537] = -0.47090468f;
      sa[538] = 0.29607514f;
      sa[539] = 0.382173f;
      sa[540] = -0.3686869f;
      sa[541] = -0.17318441f;
      sa[542] = 0.012113957f;
      sa[543] = -0.15459675f;
      sa[544] = 0.21561931f;
      sa[545] = 0.08771043f;
      sa[546] = 0.088846296f;
      sa[547] = 0.21958874f;
      sa[548] = -0.03339364f;
      sa[549] = 0.3071913f;
      sa[550] = -0.044294618f;
      sa[551] = -0.09540524f;
      sa[552] = 0.036301777f;
      sa[553] = -0.12827334f;
      sa[554] = -0.16905738f;
      sa[555] = -0.16193138f;
      sa[556] = -0.22751568f;
      sa[557] = -0.10909147f;
      sa[558] = -0.119753785f;
      sa[559] = -0.020955546f;
      sa[560] = -0.24809904f;
      sa[561] = -0.011875569f;
      sa[562] = 0.18819332f;
      sa[563] = 0.0044690915f;
      sa[564] = 0.22299345f;
      sa[565] = -0.02288335f;
      sa[566] = 0.2960614f;
      sa[567] = -0.11973067f;
      sa[568] = -0.049536858f;
      sa[569] = 0.06945197f;
      sa[570] = -0.058133982f;
      sa[571] = -0.04398466f;
      sa[572] = 0.15784587f;
      sa[573] = 0.3134045f;
      sa[574] = -0.048196197f;
      sa[575] = -0.45205474f;
      sa[576] = -0.16333525f;
      sa[577] = -0.10426147f;
      sa[578] = -0.10566064f;
      sa[579] = 0.010300338f;
      sa[580] = 0.03020018f;
      sa[581] = -0.16098037f;
      sa[582] = -0.01727239f;
      sa[583] = -0.3188942f;
      sa[584] = 0.026175091f;
      sa[585] = 0.14718007f;
      sa[586] = -0.15865633f;
      sa[587] = -0.16820668f;
      sa[588] = -0.07194436f;
      sa[589] = 8.637952E-4f;
      sa[590] = -0.17370506f;
      sa[591] = -0.4978415f;
      sa[592] = -0.4315697f;
      sa[593] = -0.20109157f;
      sa[594] = 0.03436346f;
      sa[595] = -0.0909994f;
      sa[596] = 0.09320957f;
      sa[597] = -0.17217062f;
      sa[598] = 0.046243735f;
      sa[599] = -0.23267622f;
      sa[600] = -0.5247361f;
      sa[601] = 0.23330587f;
      sa[602] = 0.09862565f;
      sa[603] = 0.35085386f;
      sa[604] = 0.07899358f;
      sa[605] = 0.054036643f;
      sa[606] = 0.019700173f;
      sa[607] = -0.23733439f;
      sa[608] = -0.0020468654f;
      sa[609] = 0.11976419f;
      sa[610] = 0.1311381f;
      sa[611] = 0.003422026f;
      sa[612] = 0.048760977f;
      sa[613] = 0.14871252f;
      sa[614] = 0.09894793f;
      sa[615] = -0.09830137f;
      sa[616] = -0.038620666f;
      sa[617] = -0.23015444f;
      sa[618] = -0.1662175f;
      sa[619] = -0.10942288f;
      sa[620] = 0.063053645f;
      sa[621] = -0.28046128f;
      sa[622] = -0.24672806f;
      sa[623] = -0.12762831f;
      sa[624] = -0.0055632386f;
      sa[625] = 0.34984386f;
      sa[626] = 0.041084107f;
      sa[627] = 0.34657663f;
      sa[628] = -0.19896841f;
      sa[629] = -0.1364486f;
      sa[630] = -0.39487165f;
      sa[631] = 0.24135603f;
      sa[632] = 0.07821396f;
      sa[633] = -0.21301714f;
      sa[634] = -0.21028751f;
      sa[635] = 0.15776812f;
      sa[636] = -0.084113546f;
      sa[637] = -0.020556575f;
      sa[638] = -0.24294738f;
      sa[639] = -0.0040624863f;
      sa[640] = -0.09700606f;
      sa[641] = -0.26738834f;
      sa[642] = 0.32714525f;
      sa[643] = -0.20097919f;
      sa[644] = -0.15416165f;
      sa[645] = -0.24259195f;
      sa[646] = 0.3083211f;
      sa[647] = -0.26685268f;
      sa[648] = 0.072409034f;
      sa[649] = 0.0039566467f;
      sa[650] = 0.103995435f;
      sa[651] = -0.018361682f;
      sa[652] = 0.056280196f;
      sa[653] = -0.099854745f;
      sa[654] = -0.036219265f;
      sa[655] = -0.15261367f;
      sa[656] = 0.3203314f;
      sa[657] = -0.05022445f;
      sa[658] = -0.27736723f;
      sa[659] = 0.038841292f;
      sa[660] = -0.19232741f;
      sa[661] = -0.0074445945f;
      sa[662] = -0.13295622f;
      sa[663] = 0.23106244f;
      sa[664] = -0.22096403f;
      sa[665] = 0.09116619f;
      sa[666] = -0.18742652f;
      sa[667] = -0.37540895f;
      sa[668] = 0.25211444f;
      sa[669] = -0.14346915f;
      sa[670] = 0.20525825f;
      sa[671] = 0.003898193f;
      sa[672] = -0.31681582f;
      sa[673] = 0.21647193f;
      sa[674] = 0.06362957f;
      sa[675] = -0.40281707f;
      sa[676] = -0.18343203f;
      sa[677] = -0.32065433f;
      sa[678] = 0.09920618f;
      sa[679] = -0.20269853f;
      sa[680] = 0.13069588f;
      sa[681] = 0.14935489f;
      sa[682] = -0.09879119f;
      sa[683] = -0.23857336f;
      sa[684] = -0.16068383f;
      sa[685] = -0.060096912f;
      sa[686] = -0.17548858f;
      sa[687] = -0.17583759f;
      sa[688] = -0.13717173f;
      sa[689] = -0.27208248f;
      sa[690] = -0.08493334f;
      sa[691] = 0.0932811f;
      sa[692] = -0.32194996f;
      sa[693] = -0.04159892f;
      sa[694] = 0.24022935f;
      sa[695] = -0.43387237f;
      sa[696] = -0.14548847f;
      sa[697] = -0.25553715f;
      sa[698] = -0.30051476f;
      sa[699] = 0.19682397f;
      sa[700] = 0.19277863f;
      sa[701] = 0.27998325f;
      sa[702] = 0.48272082f;
      sa[703] = -2.9070562E-4f;
      sa[704] = -0.22526178f;
      sa[705] = 0.09978198f;
      sa[706] = -0.17395717f;
      sa[707] = 0.12850405f;
      sa[708] = 0.02908963f;
      sa[709] = -0.3448363f;
      sa[710] = 0.46391454f;
      sa[711] = -0.041708577f;
      sa[712] = 0.13373326f;
      sa[713] = 0.33270898f;
      sa[714] = 0.21954082f;
      sa[715] = 0.20973532f;
      sa[716] = 0.04692265f;
      sa[717] = 0.1107055f;
      sa[718] = 0.027305657f;
      sa[719] = 0.18439507f;
      sa[720] = -0.06452693f;
      sa[721] = 0.26046035f;
      sa[722] = 0.016670702f;
      sa[723] = 0.22574882f;
      sa[724] = 0.16855669f;
      sa[725] = -0.22572222f;
      sa[726] = -0.17990558f;
      sa[727] = -0.3255218f;
      sa[728] = -0.0127127655f;
      sa[729] = 8.274554E-4f;
      sa[730] = 0.20500702f;
      sa[731] = -0.45169365f;
      sa[732] = 0.10454103f;
      sa[733] = 0.16780676f;
      sa[734] = -0.19928388f;
      sa[735] = 0.15801218f;
      sa[736] = 0.050161026f;
      sa[737] = 0.30356386f;
      sa[738] = -0.18994863f;
      sa[739] = -0.0516476f;
      sa[740] = -0.26842228f;
      sa[741] = -0.24785383f;
      sa[742] = 0.06461657f;
      sa[743] = -0.04951372f;
      sa[744] = 0.021933481f;
      sa[745] = 0.003567069f;
      sa[746] = 0.004210673f;
      sa[747] = -0.22214234f;
      sa[748] = -0.13213366f;
      sa[749] = -0.099148974f;
      sa[750] = 0.2491468f;
      sa[751] = 0.13286978f;
      sa[752] = -0.004568566f;
      sa[753] = 0.10472726f;
      sa[754] = -0.0010364878f;
      sa[755] = 0.15063944f;
      sa[756] = -0.22251561f;
      sa[757] = 0.19406384f;
      sa[758] = -0.19561931f;
      sa[759] = 0.0082113985f;
      sa[760] = -0.06392843f;
      sa[761] = 0.0055164755f;
      sa[762] = -0.08770482f;
      sa[763] = 0.08460666f;
      sa[764] = 0.023406146f;
      sa[765] = -0.065111846f;
      sa[766] = -0.2110747f;
      sa[767] = -0.010972752f;
      sa[768] = -0.21828626f;
      sa[769] = -0.34899896f;
      sa[770] = -0.039994884f;
      sa[771] = -0.08823932f;
      sa[772] = 0.014407122f;
      sa[773] = -0.2517831f;
      sa[774] = 0.20421281f;
      sa[775] = 0.27836066f;
      sa[776] = -0.07807694f;
      sa[777] = 0.06262632f;
      sa[778] = 0.15247075f;
      sa[779] = -0.20920153f;
      sa[780] = -0.105769776f;
      sa[781] = 0.06099366f;
      sa[782] = 0.18063162f;
      sa[783] = -0.22918355f;
      sa[784] = -0.24066742f;
      sa[785] = -0.19435406f;
      sa[786] = -0.22259472f;
      sa[787] = -0.3759828f;
      sa[788] = -0.248788f;
      sa[789] = 0.0931563f;
      sa[790] = -0.031046117f;
      sa[791] = -0.021564456f;
      sa[792] = 0.032798253f;
      sa[793] = -0.027680581f;
      sa[794] = -0.081323065f;
      sa[795] = -0.19378634f;
      sa[796] = 0.18181884f;
      sa[797] = -0.2685527f;
      sa[798] = -0.28648183f;
      sa[799] = -0.08892979f;
      sa[800] = 0.10436256f;
      sa[801] = 0.13924114f;
      sa[802] = 0.12195376f;
      sa[803] = 0.2373133f;
      sa[804] = 0.321256f;
      sa[805] = 0.29058892f;
      sa[806] = 0.3176342f;
      sa[807] = 0.410391f;
      sa[808] = 0.023597416f;
      sa[809] = -0.20282458f;
      sa[810] = 0.037976988f;
      sa[811] = 0.10252924f;
      sa[812] = 0.19862656f;
      sa[813] = -0.2535816f;
      sa[814] = 0.10371409f;
      sa[815] = -0.025768606f;
      sa[816] = 0.105684884f;
      sa[817] = -0.42741737f;
      sa[818] = 0.006313049f;
      sa[819] = -0.015272593f;
      sa[820] = -0.22871885f;
      sa[821] = -0.18162338f;
      sa[822] = -0.28642023f;
      sa[823] = 0.21980722f;
      sa[824] = 0.21977432f;
      sa[825] = 0.42105502f;
      sa[826] = -0.425161f;
      sa[827] = -0.40881056f;
      sa[828] = 0.0869921f;
      sa[829] = -0.05325351f;
      sa[830] = 0.30836302f;
      sa[831] = 0.26216576f;
      sa[832] = 0.1793666f;
      sa[833] = 0.093067035f;
      sa[834] = 0.22817011f;
      sa[835] = -0.02713367f;
      sa[836] = 0.2116743f;
      sa[837] = -0.09080778f;
      sa[838] = 0.1617542f;
      sa[839] = -0.14374474f;
      sa[840] = 0.21849513f;
      sa[841] = 0.119522244f;
      sa[842] = 0.19921634f;
      sa[843] = 0.11058021f;
      sa[844] = 0.059446882f;
      sa[845] = 0.17927709f;
      sa[846] = -0.30876508f;
      sa[847] = -0.023538576f;
      sa[848] = 0.24455333f;
      sa[849] = 0.2896509f;
      sa[850] = 0.031354412f;
      sa[851] = 0.15133832f;
      sa[852] = 0.27087027f;
      sa[853] = 0.15787092f;
      sa[854] = 0.13210285f;
      sa[855] = -0.010185618f;
      sa[856] = 0.11279279f;
      sa[857] = -0.12828538f;
      sa[858] = 0.13763858f;
      sa[859] = 0.04989558f;
      sa[860] = 0.45210433f;
      sa[861] = -0.10814828f;
      sa[862] = -0.33462793f;
      sa[863] = -0.1763384f;
      sa[864] = -0.27429593f;
      sa[865] = 0.17508571f;
      sa[866] = -0.31184363f;
      sa[867] = -0.13457504f;
      sa[868] = -0.21128753f;
      sa[869] = 0.12656628f;
      sa[870] = -0.11835975f;
      sa[871] = 0.10651273f;
      sa[872] = 0.09853783f;
      sa[873] = -0.06812879f;
      sa[874] = -0.08877588f;
      sa[875] = -0.32816663f;
      sa[876] = -0.24957868f;
      sa[877] = -0.26977184f;
      sa[878] = -0.037031673f;
      sa[879] = 0.13927115f;
      sa[880] = -0.13038719f;
      sa[881] = -0.11750288f;
      sa[882] = 0.31642967f;
      sa[883] = 0.097583294f;
      sa[884] = -0.14343645f;
      sa[885] = -0.14318457f;
      sa[886] = 0.050715383f;
      sa[887] = -0.024817865f;
      sa[888] = -0.09334539f;
      sa[889] = -0.027253684f;
      sa[890] = -0.16533303f;
      sa[891] = 0.49314067f;
      sa[892] = 0.15811981f;
      sa[893] = 0.2573812f;
      sa[894] = 0.013958847f;
      sa[895] = 0.27234694f;
      sa[896] = -0.26696363f;
      sa[897] = 0.20939767f;
      sa[898] = 0.06469118f;
      sa[899] = 0.3598125f;
      sa[900] = -0.04580558f;
      sa[901] = 0.13574193f;
      sa[902] = -0.2505259f;
      sa[903] = -0.17127597f;
      sa[904] = 0.13784277f;
      sa[905] = 0.2510576f;
      sa[906] = -0.3573201f;
      sa[907] = -0.21373107f;
      sa[908] = -0.22073409f;
      sa[909] = 0.1241676f;
      sa[910] = 0.15935418f;
      sa[911] = -0.33894494f;
      sa[912] = -0.087651044f;
      sa[913] = 0.0740356f;
      sa[914] = -0.29260913f;
      sa[915] = -0.031614006f;
      sa[916] = 0.275722f;
      sa[917] = 0.14497662f;
      sa[918] = 0.05651536f;
      sa[919] = 0.3123074f;
      sa[920] = 0.07777902f;
      sa[921] = -0.16363154f;
      sa[922] = -0.23448175f;
      sa[923] = -0.16304052f;
      sa[924] = -0.08493596f;
      sa[925] = -0.15480141f;
      sa[926] = 0.116955124f;
      sa[927] = 0.14962873f;
      sa[928] = 0.27945083f;
      sa[929] = 0.20739648f;
      sa[930] = 0.26795337f;
      sa[931] = 0.11048102f;
      sa[932] = 0.17155024f;
      sa[933] = -0.04107667f;
      sa[934] = 0.30346686f;
      sa[935] = -0.16264346f;
      sa[936] = 0.046006408f;
      sa[937] = 0.11725786f;
      sa[938] = -0.2519757f;
      sa[939] = 0.051922455f;
      sa[940] = -0.057014164f;
      sa[941] = -0.34452093f;
      sa[942] = -0.23932981f;
      sa[943] = -0.26311243f;
      sa[944] = -0.26543042f;
      sa[945] = -0.038239222f;
      sa[946] = 0.002960412f;
      sa[947] = 0.17499311f;
      sa[948] = 0.044344313f;
      sa[949] = -0.2501687f;
      sa[950] = 0.059327327f;
      sa[951] = -0.18972698f;
      sa[952] = -0.27374956f;
      sa[953] = -0.25763714f;
      sa[954] = -0.029878883f;
      sa[955] = 0.0016879373f;
      sa[956] = -0.042071123f;
      sa[957] = 0.019195516f;
      sa[958] = 0.08351068f;
      sa[959] = -0.22656383f;
      sa[960] = 0.16052696f;
      sa[961] = -0.08981274f;
      sa[962] = 0.06255194f;
      sa[963] = -0.099774286f;
      sa[964] = -0.2649773f;
      sa[965] = 0.16673665f;
      sa[966] = -0.20548148f;
      sa[967] = -0.43098617f;
      sa[968] = 0.07030384f;
      sa[969] = -0.011068952f;
      sa[970] = 0.39861977f;
      sa[971] = 0.11660996f;
      sa[972] = -0.085835926f;
      sa[973] = -0.2049657f;
      sa[974] = -0.29421493f;
      sa[975] = -0.1886454f;
      sa[976] = -0.10643123f;
      sa[977] = 0.102727674f;
      sa[978] = -0.0738653f;
      sa[979] = 0.16144958f;
      sa[980] = 0.18587005f;
      sa[981] = -0.2105094f;
      sa[982] = 0.21058314f;
      sa[983] = 0.054534853f;
      sa[984] = -0.29185677f;
      sa[985] = 0.106018156f;
      sa[986] = -0.24781778f;
      sa[987] = 0.10373531f;
      sa[988] = 0.12477573f;
      sa[989] = 0.2252458f;
      sa[990] = 0.12316262f;
      sa[991] = -0.17782249f;
      sa[992] = -0.25930253f;
      sa[993] = -0.11616473f;
      sa[994] = -0.19307196f;
      sa[995] = -0.33468595f;
      sa[996] = 0.107319325f;
      sa[997] = 0.20878671f;
      sa[998] = -0.020808248f;
      sa[999] = 0.17094922f;
      sa[1000] = -0.007687895f;
      sa[1001] = 0.18537518f;
      sa[1002] = 0.273549f;
      sa[1003] = -0.13286892f;
      sa[1004] = 0.20186661f;
      sa[1005] = -0.16953517f;
      sa[1006] = -0.17353481f;
      sa[1007] = -0.03628621f;
      sa[1008] = 0.08577851f;
      sa[1009] = 0.13712533f;
      sa[1010] = 0.23786162f;
      sa[1011] = 0.3207574f;
      sa[1012] = -0.017467482f;
      sa[1013] = 0.08649173f;
      sa[1014] = 0.31764168f;
      sa[1015] = -0.223951f;
      sa[1016] = 0.22449765f;
      sa[1017] = 0.14615268f;
      sa[1018] = -0.04843263f;
      sa[1019] = 0.050906446f;
      sa[1020] = -0.1940699f;
      sa[1021] = 0.03131418f;
      sa[1022] = 0.2772555f;
      sa[1023] = 0.13430998f;
      sa[1024] = 0.10338844f;
      sa[1025] = 0.16163924f;
      sa[1026] = 0.13957642f;
      sa[1027] = 0.2890081f;
      sa[1028] = 0.38306913f;
      sa[1029] = 0.08363664f;
      sa[1030] = -0.0736171f;
      sa[1031] = 0.15195413f;
      sa[1032] = -0.06528846f;
      sa[1033] = 0.039991185f;
      sa[1034] = -0.16190219f;
      sa[1035] = -0.3296601f;
      sa[1036] = 0.30043358f;
      sa[1037] = 0.07108387f;
      sa[1038] = -0.22362538f;
      sa[1039] = 0.2644248f;
      sa[1040] = 0.03859867f;
      sa[1041] = 0.11302059f;
      sa[1042] = -0.29645342f;
      sa[1043] = -0.09102704f;
      sa[1044] = 0.35195357f;
      sa[1045] = 0.3587672f;
      sa[1046] = -0.05955166f;
      sa[1047] = -0.10955106f;
      sa[1048] = 0.11212617f;
      sa[1049] = 0.007903377f;
      sa[1050] = 0.118993625f;
      sa[1051] = -0.09243582f;
      sa[1052] = 0.2908171f;
      sa[1053] = 0.20453125f;
      sa[1054] = 0.3157252f;
      sa[1055] = 0.20507263f;
      sa[1056] = 0.32345572f;
      sa[1057] = -0.028831007f;
      sa[1058] = 0.3448415f;
      sa[1059] = -0.035746105f;
      sa[1060] = -0.16604574f;
      sa[1061] = -0.0222786f;
      sa[1062] = -0.116505146f;
      sa[1063] = 0.13629863f;
      sa[1064] = 0.08781048f;
      sa[1065] = -0.0793547f;
      sa[1066] = 0.22242272f;
      sa[1067] = -0.35584238f;
      sa[1068] = -0.19924165f;
      sa[1069] = 0.31627825f;
      sa[1070] = -0.09690183f;
      sa[1071] = 0.08320327f;
      sa[1072] = -0.21752287f;
      sa[1073] = 0.09280871f;
      sa[1074] = 0.20560674f;
      sa[1075] = -0.18087167f;
      sa[1076] = -0.16844216f;
      sa[1077] = 0.102345794f;
      sa[1078] = -0.029580574f;
      sa[1079] = -0.058036752f;
      sa[1080] = 0.1485387f;
      sa[1081] = 0.03825416f;
      sa[1082] = -0.3913765f;
      sa[1083] = 0.011605673f;
      sa[1084] = 0.2957276f;
      sa[1085] = -0.19457223f;
      sa[1086] = -0.25525436f;
      sa[1087] = -0.3806513f;
      sa[1088] = -0.25981277f;
      sa[1089] = 0.084510975f;
      sa[1090] = -0.23351707f;
      sa[1091] = -0.044798706f;
      sa[1092] = -0.3307918f;
      sa[1093] = -0.36355984f;
      sa[1094] = -0.09436811f;
      sa[1095] = -0.5389889f;
      sa[1096] = -0.03397518f;
      sa[1097] = -0.070567235f;
      sa[1098] = 0.19470464f;
      sa[1099] = -0.103860624f;
      sa[1100] = -0.15214474f;
      sa[1101] = 0.12525518f;
      sa[1102] = -0.20266423f;
      sa[1103] = 0.13346156f;
      sa[1104] = -0.4161428f;
      sa[1105] = -0.08586058f;
      sa[1106] = 0.075044945f;
      sa[1107] = 0.06631907f;
      sa[1108] = -0.2556068f;
      sa[1109] = 0.21137662f;
      sa[1110] = 0.044768576f;
      sa[1111] = -0.41044283f;
      sa[1112] = 0.2285346f;
      sa[1113] = 0.22236522f;
      sa[1114] = 0.037628617f;
      sa[1115] = 0.2193748f;
      sa[1116] = 0.08008785f;
      sa[1117] = -0.09299148f;
      sa[1118] = 0.039464217f;
      sa[1119] = 0.15967852f;
      sa[1120] = 0.20470048f;
      sa[1121] = 0.11885955f;
      sa[1122] = 0.35369012f;
      sa[1123] = 0.2984902f;
      sa[1124] = 0.16609937f;
      sa[1125] = -0.11429552f;
      sa[1126] = 0.28045094f;
      sa[1127] = 0.22152962f;
      sa[1128] = 0.040606715f;
      sa[1129] = -0.047245275f;
      sa[1130] = 0.31500608f;
      sa[1131] = 0.34501573f;
      sa[1132] = 0.018227918f;
      sa[1133] = -0.16593671f;
      sa[1134] = 0.10116459f;
      sa[1135] = -0.07293741f;
      sa[1136] = -0.015409751f;
      sa[1137] = 0.21234772f;
      sa[1138] = -0.009597603f;
      sa[1139] = 0.12954818f;
      sa[1140] = 0.3075823f;
      sa[1141] = -0.12573095f;
      sa[1142] = -0.1316164f;
      sa[1143] = -0.42220262f;
      sa[1144] = -0.2848633f;
      sa[1145] = 0.11723042f;
      sa[1146] = 0.22628474f;
      sa[1147] = -0.21632512f;
      sa[1148] = -0.0055675446f;
      sa[1149] = -0.07157085f;
      sa[1150] = -0.2544931f;
      sa[1151] = -0.329309f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_09_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_09_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2379609f;
      sa[1] = 0.026714873f;
      sa[2] = -0.6131304f;
      sa[3] = -1.3192955f;
      sa[4] = 0.14712435f;
      sa[5] = 0.53688234f;
      sa[6] = 1.3290552f;
      sa[7] = -0.71337306f;
      sa[8] = -0.9186002f;
      sa[9] = 0.77396995f;
      sa[10] = -0.0704864f;
      sa[11] = 0.45558658f;
      sa[12] = 0.09091823f;
      sa[13] = 0.0047437735f;
      sa[14] = -1.3886102f;
      sa[15] = 1.1447629f;
      sa[16] = 1.6698658f;
      sa[17] = -0.5201049f;
      sa[18] = 0.14760257f;
      sa[19] = -0.2804882f;
      sa[20] = 1.1757262f;
      sa[21] = 0.06050064f;
      sa[22] = -0.9529456f;
      sa[23] = 0.73570055f;
      sa[24] = -1.2826196f;
      sa[25] = 0.5527683f;
      sa[26] = -0.26641977f;
      sa[27] = 1.6337478f;
      sa[28] = -1.3239557f;
      sa[29] = -0.42068174f;
      sa[30] = 0.53602374f;
      sa[31] = -0.62099737f;
      sa[32] = -1.0598693f;
      sa[33] = -1.6130247f;
      sa[34] = 0.08774576f;
      sa[35] = 1.3924655f;
      sa[36] = -0.34949797f;
      sa[37] = -0.067290984f;
      sa[38] = 0.23195882f;
      sa[39] = 0.7781268f;
      sa[40] = -0.74549705f;
      sa[41] = -1.4032081f;
      sa[42] = -0.98402584f;
      sa[43] = -1.555452f;
      sa[44] = 0.030793414f;
      sa[45] = -1.329712f;
      sa[46] = 1.2679963f;
      sa[47] = 1.2310357f;
      sa[48] = -1.408767f;
      sa[49] = -1.1067084f;
      sa[50] = 0.50877845f;
      sa[51] = -0.33299744f;
      sa[52] = 0.78390944f;
      sa[53] = 0.81393886f;
      sa[54] = -0.17553002f;
      sa[55] = 1.1702282f;
      sa[56] = -1.1125877f;
      sa[57] = -1.0866808f;
      sa[58] = 0.021687763f;
      sa[59] = -0.2748654f;
      sa[60] = 1.5742209f;
      sa[61] = -0.6503955f;
      sa[62] = -0.4082157f;
      sa[63] = 0.6764696f;
      sa[64] = 1.3832728f;
      sa[65] = -0.65824723f;
      sa[66] = 0.6535555f;
      sa[67] = 1.6160572f;
      sa[68] = 0.6372357f;
      sa[69] = -1.1823882f;
      sa[70] = -1.4653715f;
      sa[71] = -0.41549987f;
      sa[72] = -1.3370781f;
      sa[73] = 1.3859892f;
      sa[74] = 1.37295f;
      sa[75] = -0.27026883f;
      sa[76] = 0.9951046f;
      sa[77] = 0.44257632f;
      sa[78] = -1.4605403f;
      sa[79] = 0.9965581f;
      sa[80] = -0.8238968f;
      sa[81] = 0.26742604f;
      sa[82] = 0.9127175f;
      sa[83] = -0.8378549f;
      sa[84] = -1.5803016f;
      sa[85] = -1.144761f;
      sa[86] = 0.58407027f;
      sa[87] = 1.1376858f;
      sa[88] = -1.5527363f;
      sa[89] = -0.86034864f;
      sa[90] = -0.9343016f;
      sa[91] = 1.4296561f;
      sa[92] = -0.2999416f;
      sa[93] = 0.30536142f;
      sa[94] = -1.5303178f;
      sa[95] = -0.13579698f;
      sa[96] = -0.9315204f;
      sa[97] = 0.2116284f;
      sa[98] = -0.05713983f;
      sa[99] = 0.5135741f;
      sa[100] = -1.2681876f;
      sa[101] = -0.78451306f;
      sa[102] = 1.0501101f;
      sa[103] = 0.19489934f;
      sa[104] = -0.3358037f;
      sa[105] = -0.8837433f;
      sa[106] = 1.3462514f;
      sa[107] = 1.3126068f;
      sa[108] = 1.0168153f;
      sa[109] = 0.31576237f;
      sa[110] = 0.90016466f;
      sa[111] = -0.986166f;
      sa[112] = -1.2953441f;
      sa[113] = 0.3901344f;
      sa[114] = 0.005256113f;
      sa[115] = -0.53035504f;
      sa[116] = 1.1985881f;
      sa[117] = -0.02355054f;
      sa[118] = -1.4209101f;
      sa[119] = -0.6405849f;
      sa[120] = -0.5468974f;
      sa[121] = 0.9962046f;
      sa[122] = -0.041241072f;
      sa[123] = 0.03280331f;
      sa[124] = -0.65995413f;
      sa[125] = 0.83320355f;
      sa[126] = -1.2433796f;
      sa[127] = 0.3515646f;
      sa[128] = -1.025505f;
      sa[129] = 0.914642f;
      sa[130] = -0.44521952f;
      sa[131] = 0.8692603f;
      sa[132] = 0.50555235f;
      sa[133] = 0.8885602f;
      sa[134] = 0.687176f;
      sa[135] = -0.9631655f;
      sa[136] = 0.65338904f;
      sa[137] = -0.5532549f;
      sa[138] = -0.004510838f;
      sa[139] = 1.2094221f;
      sa[140] = -0.704491f;
      sa[141] = -0.10145838f;
      sa[142] = 0.27858466f;
      sa[143] = -0.7509304f;
      sa[144] = 1.0824525f;
      sa[145] = -0.7496539f;
      sa[146] = 0.09632846f;
      sa[147] = -0.17388459f;
      sa[148] = -0.848036f;
      sa[149] = 1.3742251f;
      sa[150] = -1.1777138f;
      sa[151] = -2.0192504f;
      sa[152] = 1.7188109f;
      sa[153] = -0.5419728f;
      sa[154] = 1.5809819f;
      sa[155] = -1.3926175f;
      sa[156] = -1.7063696f;
      sa[157] = -1.1022723f;
      sa[158] = 0.16363917f;
      sa[159] = -0.6833579f;
      sa[160] = 1.4151052f;
      sa[161] = -1.2556944f;
      sa[162] = 1.7956469f;
      sa[163] = -0.8026581f;
      sa[164] = 0.7654717f;
      sa[165] = -0.51605093f;
      sa[166] = 1.2823149f;
      sa[167] = -1.4180995f;
      sa[168] = 1.0901579f;
      sa[169] = -1.5533717f;
      sa[170] = 1.0405046f;
      sa[171] = 0.8649268f;
      sa[172] = 1.5847079f;
      sa[173] = 1.5743896f;
      sa[174] = -0.05904893f;
      sa[175] = 0.06446616f;
      sa[176] = -0.8179415f;
      sa[177] = -0.07380745f;
      sa[178] = -1.1588581f;
      sa[179] = 0.021363761f;
      sa[180] = -1.0992877f;
      sa[181] = -0.9946056f;
      sa[182] = 0.29387388f;
      sa[183] = -0.988859f;
      sa[184] = 1.5917323f;
      sa[185] = 1.3790393f;
      sa[186] = -0.5135199f;
      sa[187] = -0.8601805f;
      sa[188] = -0.58159643f;
      sa[189] = -0.8284963f;
      sa[190] = -1.449558f;
      sa[191] = -1.1290962f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_09 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_09_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_09_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_09_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_09_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


