/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:09:29.902+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_12

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_12 > h2o_nn_32x6_Tanh_12.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_12.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_12", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_12 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_12_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_12_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_12_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_12_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_12_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_12_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_12_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_12_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_12_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_12.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_12_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2864864864864865,0.13513513513513514,0.14594594594594595,0.2864864864864865,0.14594594594594595};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_12() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(4215347805970875648L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_12_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_12_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_12_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_12_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_12_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_12_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_12_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_12_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_12_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.029548489831928926;
      sa[1] = 0.04121817525184418;
      sa[2] = -0.012467724183400985;
      sa[3] = -0.06286811132519152;
      sa[4] = 0.03317956746683574;
      sa[5] = 0.013759559689855353;
      sa[6] = 0.10553132619018689;
      sa[7] = -0.11613060997992943;
      sa[8] = -0.04447398529616711;
      sa[9] = 0.034052953693373446;
      sa[10] = 0.028850381682380345;
      sa[11] = 0.06164806533485483;
      sa[12] = 0.010780184926639564;
      sa[13] = 0.04168105068932544;
      sa[14] = -0.0940791233079171;
      sa[15] = 0.04109710139019395;
      sa[16] = 0.11146704161659163;
      sa[17] = -0.01852903099369258;
      sa[18] = -0.08598482085813354;
      sa[19] = 0.017175700162338558;
      sa[20] = 0.05521978777352008;
      sa[21] = -0.03385392831769717;
      sa[22] = 1.6644670724203555E-4;
      sa[23] = 0.05083967798791628;
      sa[24] = -0.07755187250595055;
      sa[25] = 0.06153154516339299;
      sa[26] = -0.026742618395407924;
      sa[27] = 0.07297485478014794;
      sa[28] = -0.07612059376434024;
      sa[29] = -0.03981024901957993;
      sa[30] = 0.08774822679465738;
      sa[31] = -0.06004070976824332;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_12_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_12_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.04505893724317702;
      sa[1] = -0.061443878041565675;
      sa[2] = -0.036883045475205496;
      sa[3] = -0.03605946609626195;
      sa[4] = -0.019458913199353237;
    }
  }
}
class h2o_nn_32x6_Tanh_12_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_12_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_12_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.035088666f;
      sa[1] = 0.19864687f;
      sa[2] = 0.11547197f;
      sa[3] = 0.18851079f;
      sa[4] = -0.22872771f;
      sa[5] = -0.16514356f;
      sa[6] = -0.056288958f;
      sa[7] = 0.13838144f;
      sa[8] = 0.118881986f;
      sa[9] = -0.20104043f;
      sa[10] = -0.13991727f;
      sa[11] = -0.13068463f;
      sa[12] = 0.074197f;
      sa[13] = -0.22173399f;
      sa[14] = -0.15284371f;
      sa[15] = -0.08569948f;
      sa[16] = 0.06284813f;
      sa[17] = 0.12671465f;
      sa[18] = -0.2368277f;
      sa[19] = 0.26830298f;
      sa[20] = 0.19303384f;
      sa[21] = -0.3459054f;
      sa[22] = 0.20342304f;
      sa[23] = -0.266953f;
      sa[24] = 0.25999588f;
      sa[25] = 0.17249641f;
      sa[26] = -0.26959252f;
      sa[27] = 0.14904241f;
      sa[28] = 0.20130356f;
      sa[29] = -0.31640095f;
      sa[30] = -0.18696961f;
      sa[31] = 0.033654712f;
      sa[32] = 0.19862238f;
      sa[33] = -0.26388782f;
      sa[34] = 0.026749222f;
      sa[35] = -0.132282f;
      sa[36] = 0.07597707f;
      sa[37] = 0.21507697f;
      sa[38] = -0.1315153f;
      sa[39] = 0.038930915f;
      sa[40] = 0.011544524f;
      sa[41] = -0.103665955f;
      sa[42] = -0.18126363f;
      sa[43] = 0.016358921f;
      sa[44] = 0.17984653f;
      sa[45] = -0.25554323f;
      sa[46] = 0.08248612f;
      sa[47] = -0.055938892f;
      sa[48] = 0.17898212f;
      sa[49] = 0.20467906f;
      sa[50] = 0.13348576f;
      sa[51] = -0.32363582f;
      sa[52] = -0.13568185f;
      sa[53] = 0.16666888f;
      sa[54] = 0.21121672f;
      sa[55] = 0.09672668f;
      sa[56] = -0.18100458f;
      sa[57] = -0.28251338f;
      sa[58] = 0.23110837f;
      sa[59] = -0.15319067f;
      sa[60] = -0.22545037f;
      sa[61] = 0.17492004f;
      sa[62] = 0.15115467f;
      sa[63] = 0.049695034f;
      sa[64] = 0.120014936f;
      sa[65] = 0.11845135f;
      sa[66] = 0.0057995343f;
      sa[67] = 0.12522355f;
      sa[68] = -0.14959098f;
      sa[69] = 0.027101394f;
      sa[70] = -0.056529384f;
      sa[71] = 0.35991177f;
      sa[72] = -0.11173492f;
      sa[73] = 0.33525124f;
      sa[74] = -0.15634353f;
      sa[75] = 0.15700883f;
      sa[76] = -0.18059702f;
      sa[77] = 0.001908008f;
      sa[78] = -0.0142129855f;
      sa[79] = 0.11017135f;
      sa[80] = -0.18318865f;
      sa[81] = -0.076977015f;
      sa[82] = -0.05234235f;
      sa[83] = 0.19071743f;
      sa[84] = 0.048721477f;
      sa[85] = -0.05725613f;
      sa[86] = 0.20283462f;
      sa[87] = 0.31307077f;
      sa[88] = 0.33399257f;
      sa[89] = 0.12822875f;
      sa[90] = -0.21962088f;
      sa[91] = 0.1457403f;
      sa[92] = 0.15642843f;
      sa[93] = -0.16990979f;
      sa[94] = -0.1282303f;
      sa[95] = -0.26112828f;
      sa[96] = 0.10519928f;
      sa[97] = 0.030331185f;
      sa[98] = 0.09955363f;
      sa[99] = -0.1456386f;
      sa[100] = -0.0050137676f;
      sa[101] = -0.15141346f;
      sa[102] = -0.16938479f;
      sa[103] = -0.062190223f;
      sa[104] = -0.096923545f;
      sa[105] = -0.23429978f;
      sa[106] = -0.07359499f;
      sa[107] = 0.20577496f;
      sa[108] = 0.16689202f;
      sa[109] = -0.10087773f;
      sa[110] = -0.09238683f;
      sa[111] = 0.14627154f;
      sa[112] = 0.15553617f;
      sa[113] = 0.07927651f;
      sa[114] = -0.11532339f;
      sa[115] = 0.042699497f;
      sa[116] = -0.21532619f;
      sa[117] = 0.05342288f;
      sa[118] = -0.24833395f;
      sa[119] = -0.14528619f;
      sa[120] = 0.26237085f;
      sa[121] = 0.2815219f;
      sa[122] = 0.32884312f;
      sa[123] = 0.3872952f;
      sa[124] = 0.37525794f;
      sa[125] = 0.38851333f;
      sa[126] = -0.37343627f;
      sa[127] = -0.24474789f;
      sa[128] = 0.12966292f;
      sa[129] = 0.20146428f;
      sa[130] = -0.082143754f;
      sa[131] = 0.36608616f;
      sa[132] = 0.1730474f;
      sa[133] = -0.2790986f;
      sa[134] = -0.03352282f;
      sa[135] = -0.013300989f;
      sa[136] = -0.18439028f;
      sa[137] = 0.04193208f;
      sa[138] = 0.19057186f;
      sa[139] = 0.039083265f;
      sa[140] = -0.15787603f;
      sa[141] = -0.18839149f;
      sa[142] = 0.27093953f;
      sa[143] = -0.09773192f;
      sa[144] = 0.19065318f;
      sa[145] = -0.08596949f;
      sa[146] = -0.18815158f;
      sa[147] = 0.11509303f;
      sa[148] = 0.17331119f;
      sa[149] = 0.25497738f;
      sa[150] = 0.2875299f;
      sa[151] = -0.19819626f;
      sa[152] = -0.025681786f;
      sa[153] = 0.28563958f;
      sa[154] = 0.28061026f;
      sa[155] = -0.16833082f;
      sa[156] = 0.14593521f;
      sa[157] = -0.11314713f;
      sa[158] = 0.100183934f;
      sa[159] = 0.13930698f;
      sa[160] = 0.17235927f;
      sa[161] = 0.27124652f;
      sa[162] = -0.23679076f;
      sa[163] = 0.06994683f;
      sa[164] = 0.2261372f;
      sa[165] = -0.038842667f;
      sa[166] = -0.07801069f;
      sa[167] = -0.065985404f;
      sa[168] = 0.27103063f;
      sa[169] = 0.32942632f;
      sa[170] = 0.009460307f;
      sa[171] = -0.010743974f;
      sa[172] = -0.008015202f;
      sa[173] = -0.09330904f;
      sa[174] = 0.06629868f;
      sa[175] = -0.17554146f;
      sa[176] = -0.017701507f;
      sa[177] = 0.0044418112f;
      sa[178] = -0.08007681f;
      sa[179] = 0.040832747f;
      sa[180] = -0.073447116f;
      sa[181] = -0.32086125f;
      sa[182] = -0.023855107f;
      sa[183] = -0.026738f;
      sa[184] = 0.30482265f;
      sa[185] = 0.15066226f;
      sa[186] = -0.3019053f;
      sa[187] = 0.1391352f;
      sa[188] = -0.06105456f;
      sa[189] = 0.23708898f;
      sa[190] = 0.12611474f;
      sa[191] = -0.12070685f;
      sa[192] = -0.15366675f;
      sa[193] = 0.16810916f;
      sa[194] = 0.03072846f;
      sa[195] = 0.27622035f;
      sa[196] = 0.23585977f;
      sa[197] = 0.012745593f;
      sa[198] = 0.13625652f;
      sa[199] = -0.0617979f;
      sa[200] = 0.0074303793f;
      sa[201] = -0.24950309f;
      sa[202] = 0.11187545f;
      sa[203] = 0.045935776f;
      sa[204] = -0.11246081f;
      sa[205] = 0.26417005f;
      sa[206] = 0.26076043f;
      sa[207] = 0.24501751f;
      sa[208] = -0.2543991f;
      sa[209] = -0.049315225f;
      sa[210] = -0.27140084f;
      sa[211] = -0.17364143f;
      sa[212] = 0.2783537f;
      sa[213] = -0.1613118f;
      sa[214] = -0.17121729f;
      sa[215] = 0.026335489f;
      sa[216] = 0.092043534f;
      sa[217] = 0.023243392f;
      sa[218] = -0.2676113f;
      sa[219] = 0.20919786f;
      sa[220] = -0.18360677f;
      sa[221] = -0.01971578f;
      sa[222] = 0.20586795f;
      sa[223] = 0.080808826f;
      sa[224] = 0.087332554f;
      sa[225] = 0.22338325f;
      sa[226] = -0.24630298f;
      sa[227] = 0.19120501f;
      sa[228] = 0.07967152f;
      sa[229] = -0.008527373f;
      sa[230] = 0.21408197f;
      sa[231] = -0.31030357f;
      sa[232] = -0.3975634f;
      sa[233] = -0.02292224f;
      sa[234] = 0.2877521f;
      sa[235] = -0.40803602f;
      sa[236] = -0.036213845f;
      sa[237] = -0.19142053f;
      sa[238] = -0.18760473f;
      sa[239] = 0.17867194f;
      sa[240] = -0.015138642f;
      sa[241] = -0.24517277f;
      sa[242] = 0.058351673f;
      sa[243] = -0.20723447f;
      sa[244] = -0.2264412f;
      sa[245] = -0.12809213f;
      sa[246] = -0.32760274f;
      sa[247] = -0.07278631f;
      sa[248] = 0.31590116f;
      sa[249] = 0.2961568f;
      sa[250] = -0.27760383f;
      sa[251] = -0.14669555f;
      sa[252] = -0.21940693f;
      sa[253] = -0.23710658f;
      sa[254] = -0.24945964f;
      sa[255] = 0.30090266f;
      sa[256] = -0.1688236f;
      sa[257] = 0.24693461f;
      sa[258] = -0.21636075f;
      sa[259] = -0.11797615f;
      sa[260] = -0.1357922f;
      sa[261] = -0.08873232f;
      sa[262] = -0.19950604f;
      sa[263] = 0.32435325f;
      sa[264] = -0.13828136f;
      sa[265] = 0.04553162f;
      sa[266] = -0.23996456f;
      sa[267] = -0.19721182f;
      sa[268] = 0.12353644f;
      sa[269] = -0.17148201f;
      sa[270] = 0.024583846f;
      sa[271] = 0.049141075f;
      sa[272] = -0.0742641f;
      sa[273] = -0.10624577f;
      sa[274] = 0.13228527f;
      sa[275] = -0.03482552f;
      sa[276] = 0.033833675f;
      sa[277] = -0.23947322f;
      sa[278] = -0.1452888f;
      sa[279] = 0.13911504f;
      sa[280] = -0.18227692f;
      sa[281] = 0.24457163f;
      sa[282] = -0.120661564f;
      sa[283] = -0.05094632f;
      sa[284] = 0.05155009f;
      sa[285] = -0.10778605f;
      sa[286] = 0.24535261f;
      sa[287] = 0.11423723f;
      sa[288] = -0.19636622f;
      sa[289] = -0.1339907f;
      sa[290] = -0.031116327f;
      sa[291] = -0.13696882f;
      sa[292] = 0.14961351f;
      sa[293] = -0.11736131f;
      sa[294] = 0.04123794f;
      sa[295] = 0.17731808f;
      sa[296] = 0.19303808f;
      sa[297] = 0.26276606f;
      sa[298] = 0.030668853f;
      sa[299] = -0.13092156f;
      sa[300] = -0.037685975f;
      sa[301] = -0.116689034f;
      sa[302] = 0.08424462f;
      sa[303] = 0.052660108f;
      sa[304] = -0.174614f;
      sa[305] = -0.0011666323f;
      sa[306] = 0.18436702f;
      sa[307] = -0.15819076f;
      sa[308] = 0.08668458f;
      sa[309] = 0.16950336f;
      sa[310] = 0.27155578f;
      sa[311] = 0.3519064f;
      sa[312] = -0.16367784f;
      sa[313] = -0.13917582f;
      sa[314] = -0.14355247f;
      sa[315] = 0.08904499f;
      sa[316] = -0.014481888f;
      sa[317] = -0.060413856f;
      sa[318] = 0.09127013f;
      sa[319] = 0.33018395f;
      sa[320] = -0.106545515f;
      sa[321] = 0.09890158f;
      sa[322] = 0.28544745f;
      sa[323] = -0.08831767f;
      sa[324] = -0.023781013f;
      sa[325] = 0.24230719f;
      sa[326] = -0.32158944f;
      sa[327] = 0.011053932f;
      sa[328] = -0.110294916f;
      sa[329] = 0.22930448f;
      sa[330] = -0.20613877f;
      sa[331] = -0.092101686f;
      sa[332] = -0.27100652f;
      sa[333] = 0.08619658f;
      sa[334] = -0.06742187f;
      sa[335] = 0.2639349f;
      sa[336] = -0.17342936f;
      sa[337] = -0.14088428f;
      sa[338] = 0.24781881f;
      sa[339] = -0.28590044f;
      sa[340] = -0.33990207f;
      sa[341] = -0.26958993f;
      sa[342] = 0.14128724f;
      sa[343] = 0.0060637523f;
      sa[344] = -0.21324763f;
      sa[345] = 0.12137449f;
      sa[346] = 0.15249786f;
      sa[347] = -0.2517156f;
      sa[348] = 0.27180645f;
      sa[349] = -0.26519766f;
      sa[350] = -0.24803425f;
      sa[351] = -0.0057739993f;
      sa[352] = 0.14776711f;
      sa[353] = -0.08949611f;
      sa[354] = 0.056781366f;
      sa[355] = -0.034117922f;
      sa[356] = -0.13886717f;
      sa[357] = 0.16904846f;
      sa[358] = -0.28780502f;
      sa[359] = 0.015251202f;
      sa[360] = 0.12359356f;
      sa[361] = -0.05364078f;
      sa[362] = -0.242548f;
      sa[363] = 0.14403524f;
      sa[364] = -0.14566429f;
      sa[365] = -0.22383305f;
      sa[366] = -0.029303726f;
      sa[367] = -0.38111094f;
      sa[368] = -0.15374647f;
      sa[369] = 0.23617174f;
      sa[370] = -0.2028932f;
      sa[371] = 0.11320517f;
      sa[372] = -0.02302961f;
      sa[373] = 0.269909f;
      sa[374] = -0.14567594f;
      sa[375] = -0.37288195f;
      sa[376] = -0.3523586f;
      sa[377] = -0.25728458f;
      sa[378] = 0.29047856f;
      sa[379] = 0.13677543f;
      sa[380] = -0.11164794f;
      sa[381] = -0.10482041f;
      sa[382] = -0.039905593f;
      sa[383] = -0.17394544f;
      sa[384] = -0.15882595f;
      sa[385] = 0.060291998f;
      sa[386] = -0.24659401f;
      sa[387] = -0.26168615f;
      sa[388] = 0.069817856f;
      sa[389] = -0.026499785f;
      sa[390] = -0.020321319f;
      sa[391] = -0.17404376f;
      sa[392] = 0.11450091f;
      sa[393] = -0.056659583f;
      sa[394] = 0.12592275f;
      sa[395] = 0.44224474f;
      sa[396] = 0.2940842f;
      sa[397] = -0.3205796f;
      sa[398] = 0.054077674f;
      sa[399] = -0.030758357f;
      sa[400] = 0.16895714f;
      sa[401] = 0.21533589f;
      sa[402] = -0.14728642f;
      sa[403] = 0.054076437f;
      sa[404] = 0.2083718f;
      sa[405] = -0.24676597f;
      sa[406] = -0.036963083f;
      sa[407] = 0.06573927f;
      sa[408] = -0.24600235f;
      sa[409] = -0.27700856f;
      sa[410] = -0.14564675f;
      sa[411] = 0.10948547f;
      sa[412] = -0.22872663f;
      sa[413] = 0.04692952f;
      sa[414] = 0.17678313f;
      sa[415] = 0.3310794f;
      sa[416] = -0.18721056f;
      sa[417] = 0.029269347f;
      sa[418] = -0.013661981f;
      sa[419] = 0.2880172f;
      sa[420] = 0.22940198f;
      sa[421] = 0.23453268f;
      sa[422] = 0.2826358f;
      sa[423] = 0.015058408f;
      sa[424] = 0.082093626f;
      sa[425] = -0.062417768f;
      sa[426] = -0.29300442f;
      sa[427] = 0.1768294f;
      sa[428] = -0.092713535f;
      sa[429] = -0.27615017f;
      sa[430] = 0.21444716f;
      sa[431] = 0.036139667f;
      sa[432] = -0.0110147f;
      sa[433] = 0.11890128f;
      sa[434] = 0.14747632f;
      sa[435] = 0.10677038f;
      sa[436] = -0.28507015f;
      sa[437] = -0.24672744f;
      sa[438] = -0.0029085944f;
      sa[439] = -0.08347688f;
      sa[440] = 0.32497343f;
      sa[441] = -0.32452932f;
      sa[442] = 0.03118503f;
      sa[443] = 0.10467924f;
      sa[444] = -0.20379455f;
      sa[445] = 0.075078115f;
      sa[446] = 0.23549674f;
      sa[447] = 0.016454903f;
      sa[448] = 0.13776293f;
      sa[449] = 0.16801566f;
      sa[450] = -0.08082173f;
      sa[451] = 0.10485026f;
      sa[452] = 0.16791645f;
      sa[453] = -0.072255164f;
      sa[454] = -0.152647f;
      sa[455] = -0.11970568f;
      sa[456] = -0.10950594f;
      sa[457] = 0.040445548f;
      sa[458] = -0.22748663f;
      sa[459] = 0.16701737f;
      sa[460] = 0.19529347f;
      sa[461] = 0.23330659f;
      sa[462] = 0.028916992f;
      sa[463] = 0.11504903f;
      sa[464] = -0.31045708f;
      sa[465] = 0.1290006f;
      sa[466] = 0.062865816f;
      sa[467] = 0.1496817f;
      sa[468] = 0.101427406f;
      sa[469] = 0.2665247f;
      sa[470] = 0.13449554f;
      sa[471] = 0.009750933f;
      sa[472] = -0.012965611f;
      sa[473] = -0.10437548f;
      sa[474] = -0.03410716f;
      sa[475] = 0.028539894f;
      sa[476] = 0.23792243f;
      sa[477] = -0.1847442f;
      sa[478] = 0.11054348f;
      sa[479] = -0.14799108f;
      sa[480] = -0.29853237f;
      sa[481] = -0.19336428f;
      sa[482] = -0.25914365f;
      sa[483] = 0.1322974f;
      sa[484] = 0.1771389f;
      sa[485] = 0.093691744f;
      sa[486] = -0.029171294f;
      sa[487] = -0.1116076f;
      sa[488] = -0.20264387f;
      sa[489] = 0.040531408f;
      sa[490] = -0.023065588f;
      sa[491] = -0.29880267f;
      sa[492] = 0.23539083f;
      sa[493] = 0.22312781f;
      sa[494] = -0.19939664f;
      sa[495] = 0.07051304f;
      sa[496] = -0.010648877f;
      sa[497] = 0.04713133f;
      sa[498] = 0.16281715f;
      sa[499] = 0.10978205f;
      sa[500] = -0.13446715f;
      sa[501] = -0.11796656f;
      sa[502] = 0.29348493f;
      sa[503] = 0.1144386f;
      sa[504] = -0.15023237f;
      sa[505] = -0.18547255f;
      sa[506] = 0.2004407f;
      sa[507] = -0.06556256f;
      sa[508] = 0.1051208f;
      sa[509] = 0.18213394f;
      sa[510] = 0.16040885f;
      sa[511] = 0.052408133f;
      sa[512] = 0.07321126f;
      sa[513] = -0.062107302f;
      sa[514] = 0.22449295f;
      sa[515] = -0.24974565f;
      sa[516] = 0.016245903f;
      sa[517] = 0.049831856f;
      sa[518] = 0.11809777f;
      sa[519] = -0.035629485f;
      sa[520] = 0.22622575f;
      sa[521] = 0.13823788f;
      sa[522] = 0.106082104f;
      sa[523] = 0.12441627f;
      sa[524] = 0.20117217f;
      sa[525] = 0.19433595f;
      sa[526] = 0.011261051f;
      sa[527] = -0.034688413f;
      sa[528] = -0.023627182f;
      sa[529] = 0.098116726f;
      sa[530] = -0.17809586f;
      sa[531] = 0.2143994f;
      sa[532] = 0.1395851f;
      sa[533] = 0.13480446f;
      sa[534] = 0.11785042f;
      sa[535] = 4.0319492E-4f;
      sa[536] = 0.06758105f;
      sa[537] = -0.1896215f;
      sa[538] = 0.27585182f;
      sa[539] = 0.34507594f;
      sa[540] = -0.24603376f;
      sa[541] = -0.16120511f;
      sa[542] = -0.05211492f;
      sa[543] = -0.12133246f;
      sa[544] = 0.13613103f;
      sa[545] = 0.1402422f;
      sa[546] = 0.11567867f;
      sa[547] = 0.15075362f;
      sa[548] = 0.08209873f;
      sa[549] = 0.14191781f;
      sa[550] = -0.05676153f;
      sa[551] = -0.036659535f;
      sa[552] = 0.07701563f;
      sa[553] = 0.0026404168f;
      sa[554] = -0.08056432f;
      sa[555] = -0.12969476f;
      sa[556] = -0.1609974f;
      sa[557] = -0.19637571f;
      sa[558] = -0.19562945f;
      sa[559] = 0.09808824f;
      sa[560] = -0.29646373f;
      sa[561] = -0.119292036f;
      sa[562] = 0.18563841f;
      sa[563] = -0.1326904f;
      sa[564] = 0.22901814f;
      sa[565] = 0.029559486f;
      sa[566] = 0.25112993f;
      sa[567] = -0.099320166f;
      sa[568] = -0.07451117f;
      sa[569] = 0.0015242139f;
      sa[570] = -0.014512878f;
      sa[571] = -0.11416154f;
      sa[572] = -0.030544119f;
      sa[573] = 0.24388196f;
      sa[574] = 0.10943121f;
      sa[575] = -0.3296055f;
      sa[576] = -0.12257038f;
      sa[577] = -0.01662967f;
      sa[578] = 0.09876805f;
      sa[579] = -0.14269161f;
      sa[580] = 0.094158076f;
      sa[581] = -0.11968013f;
      sa[582] = 0.08104905f;
      sa[583] = 0.026977355f;
      sa[584] = 0.1035186f;
      sa[585] = 0.15951093f;
      sa[586] = -0.17002986f;
      sa[587] = -0.18376f;
      sa[588] = 0.05440748f;
      sa[589] = 0.1161704f;
      sa[590] = -0.028651804f;
      sa[591] = -0.010483661f;
      sa[592] = -0.33121297f;
      sa[593] = -0.17904627f;
      sa[594] = -0.047559015f;
      sa[595] = 0.06022415f;
      sa[596] = 0.22982037f;
      sa[597] = -0.036070276f;
      sa[598] = 0.19078848f;
      sa[599] = 0.06002114f;
      sa[600] = -0.24453348f;
      sa[601] = 0.22769405f;
      sa[602] = 0.020799313f;
      sa[603] = 0.2757862f;
      sa[604] = 0.22540514f;
      sa[605] = 0.18050295f;
      sa[606] = 0.21267255f;
      sa[607] = 0.060676232f;
      sa[608] = 0.040513966f;
      sa[609] = 0.14309919f;
      sa[610] = -0.010296978f;
      sa[611] = -0.16770771f;
      sa[612] = -0.06879883f;
      sa[613] = 0.05734415f;
      sa[614] = -0.04489407f;
      sa[615] = 0.026978845f;
      sa[616] = -0.010680949f;
      sa[617] = -0.3285707f;
      sa[618] = -0.19744246f;
      sa[619] = -0.26608115f;
      sa[620] = -0.032796f;
      sa[621] = -0.24781288f;
      sa[622] = -0.31192663f;
      sa[623] = -0.25420746f;
      sa[624] = -0.08225587f;
      sa[625] = 0.20711319f;
      sa[626] = -0.035216823f;
      sa[627] = 0.15320225f;
      sa[628] = -0.35018224f;
      sa[629] = -0.11231875f;
      sa[630] = -0.1188875f;
      sa[631] = 0.24892683f;
      sa[632] = 0.06279211f;
      sa[633] = -0.2053612f;
      sa[634] = -0.230708f;
      sa[635] = 0.074114144f;
      sa[636] = -0.22632149f;
      sa[637] = -0.07581506f;
      sa[638] = -0.12310577f;
      sa[639] = -0.16630465f;
      sa[640] = -0.18750887f;
      sa[641] = -0.3494085f;
      sa[642] = 0.12089262f;
      sa[643] = -0.4542322f;
      sa[644] = -0.11944748f;
      sa[645] = -0.38634798f;
      sa[646] = 0.3757247f;
      sa[647] = -0.17896155f;
      sa[648] = -0.028792826f;
      sa[649] = 0.08189812f;
      sa[650] = 0.12415048f;
      sa[651] = 0.055728566f;
      sa[652] = 0.07027096f;
      sa[653] = -0.109477624f;
      sa[654] = -0.11942717f;
      sa[655] = -0.17435211f;
      sa[656] = 0.102967836f;
      sa[657] = 0.19509329f;
      sa[658] = -0.27613238f;
      sa[659] = -0.14133771f;
      sa[660] = -0.18618111f;
      sa[661] = -0.03518428f;
      sa[662] = -0.21637659f;
      sa[663] = 0.21101223f;
      sa[664] = -0.056795053f;
      sa[665] = 0.38725948f;
      sa[666] = -0.107167155f;
      sa[667] = -0.28444722f;
      sa[668] = 0.2840799f;
      sa[669] = -0.12241705f;
      sa[670] = 0.14114137f;
      sa[671] = 0.010248965f;
      sa[672] = -0.28506723f;
      sa[673] = 0.16067694f;
      sa[674] = 0.14800256f;
      sa[675] = -0.30231053f;
      sa[676] = -0.059791896f;
      sa[677] = -0.19268501f;
      sa[678] = 0.22268705f;
      sa[679] = -0.067590475f;
      sa[680] = 0.051212676f;
      sa[681] = 0.068881236f;
      sa[682] = 0.094261564f;
      sa[683] = -0.11322657f;
      sa[684] = -0.023367409f;
      sa[685] = -0.008868357f;
      sa[686] = -0.14086321f;
      sa[687] = -0.23145853f;
      sa[688] = -0.24137539f;
      sa[689] = -0.2491015f;
      sa[690] = -0.022797031f;
      sa[691] = 0.1615831f;
      sa[692] = -0.15002206f;
      sa[693] = -0.16417913f;
      sa[694] = 0.26761064f;
      sa[695] = -0.083167255f;
      sa[696] = -0.096132256f;
      sa[697] = -0.17743187f;
      sa[698] = -0.18781361f;
      sa[699] = 0.33806786f;
      sa[700] = 0.12534855f;
      sa[701] = 0.092802316f;
      sa[702] = 0.24850936f;
      sa[703] = -0.1547207f;
      sa[704] = -0.24787286f;
      sa[705] = -0.0037473256f;
      sa[706] = -0.11749124f;
      sa[707] = 0.07690693f;
      sa[708] = -0.00292568f;
      sa[709] = -0.27059087f;
      sa[710] = 0.3058637f;
      sa[711] = -0.016736388f;
      sa[712] = 0.03700885f;
      sa[713] = 0.15849891f;
      sa[714] = 0.17374279f;
      sa[715] = 0.16562465f;
      sa[716] = 0.07419361f;
      sa[717] = 0.21219476f;
      sa[718] = -0.084250346f;
      sa[719] = 0.07698803f;
      sa[720] = -0.18544902f;
      sa[721] = 0.09862418f;
      sa[722] = -0.19916911f;
      sa[723] = 0.079687044f;
      sa[724] = 0.062639f;
      sa[725] = -0.32298586f;
      sa[726] = -0.19467178f;
      sa[727] = -0.30022365f;
      sa[728] = -0.09844732f;
      sa[729] = -0.057121083f;
      sa[730] = 0.03602428f;
      sa[731] = -0.2712712f;
      sa[732] = 0.14049909f;
      sa[733] = 0.15005316f;
      sa[734] = -0.13984294f;
      sa[735] = 0.23165597f;
      sa[736] = -0.16012582f;
      sa[737] = 0.10022609f;
      sa[738] = -0.036823776f;
      sa[739] = -0.44280034f;
      sa[740] = -0.28548208f;
      sa[741] = -0.28306386f;
      sa[742] = 0.10469625f;
      sa[743] = 0.014205123f;
      sa[744] = 8.702539E-4f;
      sa[745] = -0.25912923f;
      sa[746] = 0.18103227f;
      sa[747] = -0.2769356f;
      sa[748] = -0.19981885f;
      sa[749] = -0.21857184f;
      sa[750] = 0.11819565f;
      sa[751] = 0.17910364f;
      sa[752] = 0.005297213f;
      sa[753] = 0.25395003f;
      sa[754] = -0.06350602f;
      sa[755] = 0.11257901f;
      sa[756] = -0.20425318f;
      sa[757] = 0.2493606f;
      sa[758] = -0.06266487f;
      sa[759] = -0.1697725f;
      sa[760] = -0.059470963f;
      sa[761] = 0.03174128f;
      sa[762] = -0.09708068f;
      sa[763] = 0.24544792f;
      sa[764] = 0.04602624f;
      sa[765] = -0.021198241f;
      sa[766] = -0.18710588f;
      sa[767] = 0.061721288f;
      sa[768] = -0.17845282f;
      sa[769] = -0.30470902f;
      sa[770] = -0.030025875f;
      sa[771] = 0.08428023f;
      sa[772] = 0.07200088f;
      sa[773] = -0.21269535f;
      sa[774] = -0.004594459f;
      sa[775] = 0.20123114f;
      sa[776] = -0.04910043f;
      sa[777] = 0.093234934f;
      sa[778] = 0.16927135f;
      sa[779] = -0.06599443f;
      sa[780] = 0.0073006074f;
      sa[781] = -0.042370938f;
      sa[782] = 0.15306377f;
      sa[783] = -0.054511886f;
      sa[784] = -0.1265297f;
      sa[785] = -0.0806229f;
      sa[786] = -0.079344064f;
      sa[787] = -0.13063464f;
      sa[788] = -0.22274932f;
      sa[789] = 0.28406465f;
      sa[790] = -0.1632772f;
      sa[791] = -0.10620897f;
      sa[792] = 0.20106024f;
      sa[793] = -0.039210334f;
      sa[794] = -0.07500417f;
      sa[795] = 0.1259826f;
      sa[796] = 0.24074234f;
      sa[797] = -0.072564945f;
      sa[798] = -0.19804475f;
      sa[799] = -0.17090692f;
      sa[800] = 0.22768088f;
      sa[801] = 0.07412787f;
      sa[802] = 0.2263642f;
      sa[803] = 0.16318825f;
      sa[804] = 0.2965502f;
      sa[805] = 0.46459287f;
      sa[806] = 0.3769797f;
      sa[807] = 0.2882082f;
      sa[808] = 0.083527975f;
      sa[809] = -0.16837661f;
      sa[810] = 0.014967448f;
      sa[811] = 0.21687004f;
      sa[812] = 0.18264887f;
      sa[813] = -0.28993803f;
      sa[814] = 0.10233378f;
      sa[815] = -0.20076427f;
      sa[816] = -0.10951321f;
      sa[817] = -0.13298622f;
      sa[818] = -0.07690535f;
      sa[819] = -0.12896393f;
      sa[820] = -0.24073367f;
      sa[821] = -0.18842715f;
      sa[822] = -0.20235597f;
      sa[823] = 0.070166275f;
      sa[824] = 0.1296305f;
      sa[825] = 0.3124283f;
      sa[826] = -0.32251132f;
      sa[827] = -0.35779214f;
      sa[828] = 0.11945849f;
      sa[829] = -0.076429024f;
      sa[830] = 0.17485349f;
      sa[831] = 0.27517438f;
      sa[832] = 0.13185044f;
      sa[833] = 0.107386164f;
      sa[834] = 0.2241985f;
      sa[835] = -0.117429554f;
      sa[836] = 0.21572572f;
      sa[837] = -0.16350105f;
      sa[838] = 0.08753549f;
      sa[839] = -0.14468057f;
      sa[840] = 0.23423257f;
      sa[841] = 0.16938141f;
      sa[842] = 0.22699739f;
      sa[843] = 0.047389563f;
      sa[844] = 0.05367954f;
      sa[845] = 0.16590138f;
      sa[846] = -0.2563514f;
      sa[847] = -0.067331985f;
      sa[848] = 0.20798945f;
      sa[849] = 0.21841148f;
      sa[850] = -0.0015540746f;
      sa[851] = 0.05441644f;
      sa[852] = 0.2352071f;
      sa[853] = 0.1467808f;
      sa[854] = 0.21590388f;
      sa[855] = 0.067104615f;
      sa[856] = 0.09773818f;
      sa[857] = -0.16396926f;
      sa[858] = 0.14953662f;
      sa[859] = 0.030501505f;
      sa[860] = 0.31826648f;
      sa[861] = -0.15112202f;
      sa[862] = -0.16622815f;
      sa[863] = -0.014671671f;
      sa[864] = -0.19231026f;
      sa[865] = 0.26887128f;
      sa[866] = -0.102735f;
      sa[867] = -0.100736044f;
      sa[868] = -0.1663545f;
      sa[869] = 0.18317083f;
      sa[870] = -0.068933405f;
      sa[871] = 0.1930973f;
      sa[872] = 0.22563507f;
      sa[873] = -0.009313104f;
      sa[874] = 0.032554787f;
      sa[875] = -0.2709358f;
      sa[876] = -0.25548676f;
      sa[877] = -0.24917714f;
      sa[878] = -0.031351283f;
      sa[879] = 0.20778073f;
      sa[880] = -0.07522163f;
      sa[881] = -0.057095207f;
      sa[882] = 0.1269595f;
      sa[883] = 0.1937785f;
      sa[884] = -0.12811387f;
      sa[885] = -0.1139747f;
      sa[886] = 0.0831416f;
      sa[887] = -0.011690699f;
      sa[888] = -0.08315488f;
      sa[889] = 0.04396157f;
      sa[890] = -0.2977303f;
      sa[891] = 0.40927392f;
      sa[892] = 0.17237252f;
      sa[893] = 0.27179372f;
      sa[894] = 0.042794578f;
      sa[895] = 0.2624884f;
      sa[896] = -0.18666913f;
      sa[897] = 0.26224345f;
      sa[898] = -0.033053014f;
      sa[899] = 0.20542452f;
      sa[900] = -0.10828274f;
      sa[901] = 0.08609345f;
      sa[902] = -0.35103676f;
      sa[903] = -0.109798886f;
      sa[904] = 0.13774824f;
      sa[905] = 0.12423312f;
      sa[906] = -0.27981472f;
      sa[907] = -0.36119813f;
      sa[908] = -0.23572524f;
      sa[909] = 0.018789414f;
      sa[910] = -0.009188116f;
      sa[911] = -0.1386244f;
      sa[912] = -0.05907912f;
      sa[913] = -0.013933134f;
      sa[914] = -0.22351463f;
      sa[915] = -0.08620412f;
      sa[916] = 0.08044313f;
      sa[917] = -0.060264573f;
      sa[918] = 0.27693617f;
      sa[919] = -0.030811092f;
      sa[920] = 0.10899575f;
      sa[921] = -0.10268806f;
      sa[922] = -0.1444382f;
      sa[923] = -0.1879875f;
      sa[924] = -0.15550599f;
      sa[925] = -0.22256021f;
      sa[926] = 0.1650251f;
      sa[927] = -0.27339023f;
      sa[928] = 0.17839776f;
      sa[929] = 0.073200345f;
      sa[930] = 0.07336828f;
      sa[931] = -0.12138398f;
      sa[932] = 0.22278436f;
      sa[933] = -0.035255034f;
      sa[934] = 0.24960949f;
      sa[935] = -0.14552893f;
      sa[936] = 0.064243004f;
      sa[937] = 0.20452723f;
      sa[938] = -0.019195989f;
      sa[939] = -0.123230234f;
      sa[940] = -0.01656504f;
      sa[941] = -0.2976734f;
      sa[942] = -0.23774049f;
      sa[943] = -0.08281859f;
      sa[944] = -0.23698501f;
      sa[945] = 0.10298913f;
      sa[946] = 0.104260735f;
      sa[947] = 0.19515514f;
      sa[948] = 0.0758727f;
      sa[949] = -0.21214963f;
      sa[950] = 0.05644256f;
      sa[951] = -0.029047279f;
      sa[952] = -0.17147422f;
      sa[953] = -0.11162293f;
      sa[954] = -0.2544391f;
      sa[955] = 0.043617938f;
      sa[956] = -0.0047832676f;
      sa[957] = 0.0677647f;
      sa[958] = 0.09768584f;
      sa[959] = -0.08872934f;
      sa[960] = 0.33620554f;
      sa[961] = -0.11478643f;
      sa[962] = -0.016279617f;
      sa[963] = 0.036067624f;
      sa[964] = -0.150742f;
      sa[965] = 0.280168f;
      sa[966] = -0.069746025f;
      sa[967] = -0.17992117f;
      sa[968] = 0.11049422f;
      sa[969] = 0.09067542f;
      sa[970] = 0.27776998f;
      sa[971] = 0.020534797f;
      sa[972] = -0.17200576f;
      sa[973] = -0.28268427f;
      sa[974] = -0.3977082f;
      sa[975] = -0.19869964f;
      sa[976] = -0.12315381f;
      sa[977] = 0.023953002f;
      sa[978] = -0.099875666f;
      sa[979] = 0.058063712f;
      sa[980] = 0.08698129f;
      sa[981] = -0.24744251f;
      sa[982] = 0.113365285f;
      sa[983] = -0.0587593f;
      sa[984] = -0.27976286f;
      sa[985] = 0.056287277f;
      sa[986] = -0.24400201f;
      sa[987] = 0.0022046033f;
      sa[988] = 0.077833846f;
      sa[989] = 0.1327716f;
      sa[990] = 0.32986343f;
      sa[991] = -0.15018523f;
      sa[992] = -0.21716675f;
      sa[993] = -0.07170263f;
      sa[994] = -0.16393438f;
      sa[995] = -0.32835016f;
      sa[996] = 0.15706483f;
      sa[997] = 0.16472073f;
      sa[998] = 0.1262731f;
      sa[999] = 0.1380127f;
      sa[1000] = -8.615554E-4f;
      sa[1001] = 0.19686042f;
      sa[1002] = 0.21575129f;
      sa[1003] = -0.16133574f;
      sa[1004] = 0.16121186f;
      sa[1005] = -0.2857852f;
      sa[1006] = -0.06924315f;
      sa[1007] = 0.061739143f;
      sa[1008] = 0.19905767f;
      sa[1009] = 0.07180263f;
      sa[1010] = 0.025930353f;
      sa[1011] = 0.34773403f;
      sa[1012] = -0.059214074f;
      sa[1013] = 0.15697943f;
      sa[1014] = 0.28801072f;
      sa[1015] = -0.25865597f;
      sa[1016] = 0.2961006f;
      sa[1017] = 0.05707136f;
      sa[1018] = -0.05172875f;
      sa[1019] = 0.11997852f;
      sa[1020] = -0.21251412f;
      sa[1021] = 0.1093262f;
      sa[1022] = 0.26385668f;
      sa[1023] = 0.123043895f;
      sa[1024] = 0.020163083f;
      sa[1025] = 0.11138348f;
      sa[1026] = 0.12646897f;
      sa[1027] = 0.18953414f;
      sa[1028] = 0.30550322f;
      sa[1029] = -0.01628361f;
      sa[1030] = -0.14042237f;
      sa[1031] = -0.01405456f;
      sa[1032] = -0.24481663f;
      sa[1033] = 0.03833846f;
      sa[1034] = -0.081915736f;
      sa[1035] = -0.27904046f;
      sa[1036] = 0.2570526f;
      sa[1037] = 0.023691965f;
      sa[1038] = -0.2062355f;
      sa[1039] = 0.25049576f;
      sa[1040] = 0.011246025f;
      sa[1041] = 0.12326835f;
      sa[1042] = -0.25625262f;
      sa[1043] = -0.092503294f;
      sa[1044] = 0.2395179f;
      sa[1045] = 0.20171374f;
      sa[1046] = -0.28847837f;
      sa[1047] = -0.13731366f;
      sa[1048] = 0.11346647f;
      sa[1049] = -0.14450596f;
      sa[1050] = 0.02673857f;
      sa[1051] = -0.25761896f;
      sa[1052] = 0.18870473f;
      sa[1053] = 0.2287273f;
      sa[1054] = 0.19440973f;
      sa[1055] = 0.0036200082f;
      sa[1056] = 0.2438207f;
      sa[1057] = -0.22306773f;
      sa[1058] = 0.2146471f;
      sa[1059] = -0.23426609f;
      sa[1060] = -0.34484753f;
      sa[1061] = -0.03110852f;
      sa[1062] = 0.27730706f;
      sa[1063] = -0.06679011f;
      sa[1064] = 0.09830441f;
      sa[1065] = -0.040079046f;
      sa[1066] = 0.18689266f;
      sa[1067] = -0.35023803f;
      sa[1068] = -0.36589283f;
      sa[1069] = 0.17184463f;
      sa[1070] = 0.1143484f;
      sa[1071] = 0.121141054f;
      sa[1072] = -0.28047732f;
      sa[1073] = 0.062508635f;
      sa[1074] = 0.05241598f;
      sa[1075] = -0.29351297f;
      sa[1076] = -0.17473432f;
      sa[1077] = 0.0095017515f;
      sa[1078] = 0.103229485f;
      sa[1079] = 0.12472915f;
      sa[1080] = 0.1852848f;
      sa[1081] = 0.15055148f;
      sa[1082] = -0.28855613f;
      sa[1083] = -0.19552825f;
      sa[1084] = 0.25663778f;
      sa[1085] = -0.21098484f;
      sa[1086] = -0.24703467f;
      sa[1087] = -0.18218732f;
      sa[1088] = -0.21427019f;
      sa[1089] = 0.070397384f;
      sa[1090] = -0.2352486f;
      sa[1091] = 0.07170994f;
      sa[1092] = -0.26460218f;
      sa[1093] = -0.2888729f;
      sa[1094] = -0.009716131f;
      sa[1095] = -0.21544978f;
      sa[1096] = 0.0394313f;
      sa[1097] = -0.12216764f;
      sa[1098] = 0.05767872f;
      sa[1099] = -0.05065356f;
      sa[1100] = -0.14759827f;
      sa[1101] = 0.1344926f;
      sa[1102] = -0.13910905f;
      sa[1103] = 0.26862517f;
      sa[1104] = -0.23812962f;
      sa[1105] = -0.1134834f;
      sa[1106] = -0.028032854f;
      sa[1107] = 0.24244526f;
      sa[1108] = -0.2046206f;
      sa[1109] = 0.231664f;
      sa[1110] = 0.14567518f;
      sa[1111] = -0.24059376f;
      sa[1112] = 0.25559765f;
      sa[1113] = 0.32533944f;
      sa[1114] = -0.110086426f;
      sa[1115] = 0.096213795f;
      sa[1116] = -0.013427001f;
      sa[1117] = -0.2247158f;
      sa[1118] = -0.21190606f;
      sa[1119] = 0.0057884417f;
      sa[1120] = 0.19092838f;
      sa[1121] = 0.047584992f;
      sa[1122] = 0.268266f;
      sa[1123] = 0.2439243f;
      sa[1124] = 0.050103392f;
      sa[1125] = -0.08674219f;
      sa[1126] = 0.16334471f;
      sa[1127] = 0.18139555f;
      sa[1128] = 0.019443365f;
      sa[1129] = -0.1296321f;
      sa[1130] = 0.23127924f;
      sa[1131] = 0.28466147f;
      sa[1132] = -0.2294259f;
      sa[1133] = -0.20595582f;
      sa[1134] = 0.33510748f;
      sa[1135] = -0.41532603f;
      sa[1136] = -0.026492191f;
      sa[1137] = 0.1967806f;
      sa[1138] = -0.058738403f;
      sa[1139] = 0.1139856f;
      sa[1140] = 0.17516506f;
      sa[1141] = -0.2811231f;
      sa[1142] = 0.0946144f;
      sa[1143] = -0.06812661f;
      sa[1144] = -0.29395998f;
      sa[1145] = 0.13856135f;
      sa[1146] = 0.17874962f;
      sa[1147] = -0.082627274f;
      sa[1148] = 0.022111228f;
      sa[1149] = 0.011659308f;
      sa[1150] = -0.2225933f;
      sa[1151] = -0.23313771f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_12_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_12_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2388012f;
      sa[1] = -0.13664483f;
      sa[2] = -0.5721611f;
      sa[3] = -1.0739566f;
      sa[4] = 0.057435196f;
      sa[5] = 0.24088919f;
      sa[6] = 1.431423f;
      sa[7] = -0.6735801f;
      sa[8] = -0.95883805f;
      sa[9] = 0.79068625f;
      sa[10] = 0.039055996f;
      sa[11] = 0.45595318f;
      sa[12] = 0.14477047f;
      sa[13] = -0.009682698f;
      sa[14] = -1.4831543f;
      sa[15] = 1.2002276f;
      sa[16] = 1.5520515f;
      sa[17] = -0.43533766f;
      sa[18] = 0.083580986f;
      sa[19] = -0.37605244f;
      sa[20] = 1.1644287f;
      sa[21] = 0.16545258f;
      sa[22] = -0.7990487f;
      sa[23] = 0.73999536f;
      sa[24] = -1.4410359f;
      sa[25] = 0.48349658f;
      sa[26] = -0.24636254f;
      sa[27] = 1.5128231f;
      sa[28] = -1.3041545f;
      sa[29] = -0.4665463f;
      sa[30] = 0.39850494f;
      sa[31] = -0.58719856f;
      sa[32] = -1.1563913f;
      sa[33] = -1.4886355f;
      sa[34] = 0.02315034f;
      sa[35] = 1.4079795f;
      sa[36] = -0.30704123f;
      sa[37] = -0.03327158f;
      sa[38] = 0.24335173f;
      sa[39] = 0.7520659f;
      sa[40] = -0.73378736f;
      sa[41] = -1.3409772f;
      sa[42] = -1.0835541f;
      sa[43] = -1.5951875f;
      sa[44] = 0.061895028f;
      sa[45] = -1.3340425f;
      sa[46] = 0.9815948f;
      sa[47] = 1.1748018f;
      sa[48] = -1.320692f;
      sa[49] = -1.1501911f;
      sa[50] = 0.5681176f;
      sa[51] = -0.326529f;
      sa[52] = 0.87652826f;
      sa[53] = 0.849524f;
      sa[54] = -0.15706481f;
      sa[55] = 1.1665857f;
      sa[56] = -1.0186f;
      sa[57] = -1.1294361f;
      sa[58] = 0.13773815f;
      sa[59] = -0.32228768f;
      sa[60] = 1.4498882f;
      sa[61] = -0.61767226f;
      sa[62] = -0.31511867f;
      sa[63] = 0.7001387f;
      sa[64] = 1.5318954f;
      sa[65] = -0.6101982f;
      sa[66] = 0.7244549f;
      sa[67] = 1.6803098f;
      sa[68] = 0.7429093f;
      sa[69] = -1.0920278f;
      sa[70] = -1.582362f;
      sa[71] = -0.35231736f;
      sa[72] = -1.3685769f;
      sa[73] = 1.1268842f;
      sa[74] = 1.3444147f;
      sa[75] = -0.099866144f;
      sa[76] = 1.0041553f;
      sa[77] = 0.58315086f;
      sa[78] = -1.2310311f;
      sa[79] = 0.9204115f;
      sa[80] = -0.8399255f;
      sa[81] = 0.34143916f;
      sa[82] = 0.76195383f;
      sa[83] = -0.6648205f;
      sa[84] = -1.6426731f;
      sa[85] = -1.2711052f;
      sa[86] = 0.22130898f;
      sa[87] = 1.2224795f;
      sa[88] = -1.5945597f;
      sa[89] = -0.5030632f;
      sa[90] = -0.9963735f;
      sa[91] = 1.4624996f;
      sa[92] = -0.27312443f;
      sa[93] = 0.22530484f;
      sa[94] = -1.582018f;
      sa[95] = -0.34917083f;
      sa[96] = -1.1516665f;
      sa[97] = 0.23381616f;
      sa[98] = -0.09227156f;
      sa[99] = 0.32142758f;
      sa[100] = -1.3575526f;
      sa[101] = -0.43866765f;
      sa[102] = 1.2461523f;
      sa[103] = 0.25428444f;
      sa[104] = -0.10433354f;
      sa[105] = -0.5856698f;
      sa[106] = 1.6744894f;
      sa[107] = 1.2727703f;
      sa[108] = 0.6908494f;
      sa[109] = 0.13238966f;
      sa[110] = 0.8379416f;
      sa[111] = -0.7527988f;
      sa[112] = -1.1203525f;
      sa[113] = 0.30968782f;
      sa[114] = 0.17760457f;
      sa[115] = -0.34323224f;
      sa[116] = 1.1849537f;
      sa[117] = 0.041071646f;
      sa[118] = -1.4731125f;
      sa[119] = -0.90132225f;
      sa[120] = -0.30645317f;
      sa[121] = 1.0983261f;
      sa[122] = -0.010093348f;
      sa[123] = 0.4035962f;
      sa[124] = -1.0074401f;
      sa[125] = 0.94308746f;
      sa[126] = -0.91000503f;
      sa[127] = 0.47214288f;
      sa[128] = -0.7509276f;
      sa[129] = 0.72877467f;
      sa[130] = -0.36695027f;
      sa[131] = 0.90039593f;
      sa[132] = 0.52646476f;
      sa[133] = 0.66178626f;
      sa[134] = 0.58379257f;
      sa[135] = -1.1503637f;
      sa[136] = 0.5235493f;
      sa[137] = -0.67659724f;
      sa[138] = -0.19478549f;
      sa[139] = 1.1959872f;
      sa[140] = -0.36269662f;
      sa[141] = 0.11150891f;
      sa[142] = 0.38975102f;
      sa[143] = -0.77091354f;
      sa[144] = 1.002285f;
      sa[145] = -0.8942747f;
      sa[146] = -0.049379624f;
      sa[147] = -0.26908454f;
      sa[148] = -0.8292935f;
      sa[149] = 1.0762568f;
      sa[150] = -1.1505f;
      sa[151] = -1.5171802f;
      sa[152] = 1.6609353f;
      sa[153] = -0.61062855f;
      sa[154] = 1.3441983f;
      sa[155] = -1.4593953f;
      sa[156] = -1.5720246f;
      sa[157] = -1.1114628f;
      sa[158] = -0.20819096f;
      sa[159] = -0.729655f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_12_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_12_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_12_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


